MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.04 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.04 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0IIB4PK 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0IIB4PK new;
MPRINT(EM_DIAGRAM):   run;
349983     filename emflow
349983   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring AUTONEURAL24_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
349984     *------------------------------------------------------------*;
349985     * Ensmbl48: Scoring AUTONEURAL24_TRAIN data;
349986     *------------------------------------------------------------*;
349987     data EMWS8.Ensmbl48_TRAIN
349988     / view=EMWS8.Ensmbl48_TRAIN
349989     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl48_TRAIN / view=EMWS8.Ensmbl48_TRAIN ;
349990     set EMWS8.AutoNeural24_TRAIN
349991     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural24_TRAIN ;
349992     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\EMFLOWSCORE.sas.
349993    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
349994    +* Ensmbl48: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Combine model for DepVar;
349995    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
349996    +* Ensmbl48: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 1 of 7;
349997    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
349998    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
349999    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
350000    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
350001    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
350002    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350003    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350004    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
350005    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
350006    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
350007    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350008    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350009    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
350010    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
350011    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
350012    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350013    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350014    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
350015    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
350016    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
350017    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350018    +
350019    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
350020    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
350020   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
350021    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
350022    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
350023    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
350024    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
350025    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
350026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350027    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
350028    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
350029    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
350030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350032    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
350033    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350034    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
350035    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
350036    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
350037    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350038    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
350039    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
350040    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
350041    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350043    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
350044    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
350045    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
350046    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350047    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
350048    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
350049    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
350050    +
350051    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350052    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
350053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350054    +LABEL GRP_AcceptedCmp5 =
350055    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
350056    +
350057    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
350058    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
350059    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
350060    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
350061    +end;
MPRINT(EM_DIAGRAM):   end;
350062    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
350063    +if (_UFORMAT eq '0'
350064    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
350065    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
350066    +end;
MPRINT(EM_DIAGRAM):   end;
350067    +else
350068    +if (_UFORMAT eq '1'
350069    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
350070    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
350071    +end;
MPRINT(EM_DIAGRAM):   end;
350072    +else do;
MPRINT(EM_DIAGRAM):   else do;
350073    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
350074    +end;
MPRINT(EM_DIAGRAM):   end;
350075    +end;
MPRINT(EM_DIAGRAM):   end;
350076    +
350077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350078    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
350079    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350080    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
350081    +
350082    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
350083    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
350084    +end;
MPRINT(EM_DIAGRAM):   end;
350085    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
350086    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
350087    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
350088    +end;
MPRINT(EM_DIAGRAM):   end;
350089    +else
350090    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
350091    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
350092    +end;
MPRINT(EM_DIAGRAM):   end;
350093    +else
350094    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
350095    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
350096    +end;
MPRINT(EM_DIAGRAM):   end;
350097    +else
350098    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
350099    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
350100    +end;
MPRINT(EM_DIAGRAM):   end;
350101    +end;
MPRINT(EM_DIAGRAM):   end;
350102    +
350103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350104    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
350105    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350106    +LABEL GRP_Income =
350107    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
350108    +
350109    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
350110    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
350111    +end;
MPRINT(EM_DIAGRAM):   end;
350112    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
350113    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
350114    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
350115    +end;
MPRINT(EM_DIAGRAM):   end;
350116    +else
350117    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
350118    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
350119    +end;
MPRINT(EM_DIAGRAM):   end;
350120    +else
350121    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
350122    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
350123    +end;
MPRINT(EM_DIAGRAM):   end;
350124    +else
350125    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
350126    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
350127    +end;
MPRINT(EM_DIAGRAM):   end;
350128    +end;
MPRINT(EM_DIAGRAM):   end;
350129    +
350130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350131    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
350132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350133    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
350134    +
350135    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
350136    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
350137    +end;
MPRINT(EM_DIAGRAM):   end;
350138    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
350139    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
350140    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
350141    +end;
MPRINT(EM_DIAGRAM):   end;
350142    +else
350143    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
350144    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
350145    +end;
MPRINT(EM_DIAGRAM):   end;
350146    +else
350147    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
350148    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
350149    +end;
MPRINT(EM_DIAGRAM):   end;
350150    +else
350151    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
350152    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
350153    +end;
MPRINT(EM_DIAGRAM):   end;
350154    +end;
MPRINT(EM_DIAGRAM):   end;
350155    +
350156    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350157    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
350158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350159    +LABEL GRP_MntFishProducts =
350160    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
350161    +
350162    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
350163    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
350164    +end;
MPRINT(EM_DIAGRAM):   end;
350165    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
350166    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
350167    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
350168    +end;
MPRINT(EM_DIAGRAM):   end;
350169    +else
350170    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
350171    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
350172    +end;
MPRINT(EM_DIAGRAM):   end;
350173    +else
350174    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
350175    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
350176    +end;
MPRINT(EM_DIAGRAM):   end;
350177    +else
350178    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
350179    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
350180    +end;
MPRINT(EM_DIAGRAM):   end;
350181    +end;
MPRINT(EM_DIAGRAM):   end;
350182    +
350183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350184    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
350185    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350186    +LABEL GRP_MntGoldProds =
350187    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
350188    +
350189    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
350190    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
350191    +end;
MPRINT(EM_DIAGRAM):   end;
350192    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
350193    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
350194    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
350195    +end;
MPRINT(EM_DIAGRAM):   end;
350196    +else
350197    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
350198    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
350199    +end;
MPRINT(EM_DIAGRAM):   end;
350200    +else
350201    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
350202    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
350203    +end;
MPRINT(EM_DIAGRAM):   end;
350204    +else
350205    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
350206    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
350207    +end;
MPRINT(EM_DIAGRAM):   end;
350208    +end;
MPRINT(EM_DIAGRAM):   end;
350209    +
350210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350211    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
350212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350213    +LABEL GRP_MntMeatProducts =
350214    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
350215    +
350216    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
350217    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
350218    +end;
MPRINT(EM_DIAGRAM):   end;
350219    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
350220    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
350221    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
350222    +end;
MPRINT(EM_DIAGRAM):   end;
350223    +else
350224    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
350225    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
350226    +end;
MPRINT(EM_DIAGRAM):   end;
350227    +else
350228    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
350229    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
350230    +end;
MPRINT(EM_DIAGRAM):   end;
350231    +else
350232    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
350233    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
350234    +end;
MPRINT(EM_DIAGRAM):   end;
350235    +end;
MPRINT(EM_DIAGRAM):   end;
350236    +
350237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350238    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
350239    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350240    +LABEL GRP_MntWines =
350241    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
350242    +
350243    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
350244    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
350245    +end;
MPRINT(EM_DIAGRAM):   end;
350246    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
350247    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
350248    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
350249    +end;
MPRINT(EM_DIAGRAM):   end;
350250    +else
350251    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
350252    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
350253    +end;
MPRINT(EM_DIAGRAM):   end;
350254    +else
350255    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
350256    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
350257    +end;
MPRINT(EM_DIAGRAM):   end;
350258    +else
350259    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
350260    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
350261    +end;
MPRINT(EM_DIAGRAM):   end;
350262    +end;
MPRINT(EM_DIAGRAM):   end;
350263    +
350264    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350265    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
350266    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350267    +LABEL GRP_NumCatalogPurchases =
350268    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
350269    +
350270    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
350271    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
350272    +end;
MPRINT(EM_DIAGRAM):   end;
350273    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
350274    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
350275    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
350276    +end;
MPRINT(EM_DIAGRAM):   end;
350277    +else
350278    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
350279    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
350280    +end;
MPRINT(EM_DIAGRAM):   end;
350281    +else
350282    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
350283    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
350284    +end;
MPRINT(EM_DIAGRAM):   end;
350285    +else
350286    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
350287    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
350288    +end;
MPRINT(EM_DIAGRAM):   end;
350289    +end;
MPRINT(EM_DIAGRAM):   end;
350290    +
350291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350292    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
350293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350294    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
350295    +
350296    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
350297    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
350298    +end;
MPRINT(EM_DIAGRAM):   end;
350299    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
350300    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
350301    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
350302    +end;
MPRINT(EM_DIAGRAM):   end;
350303    +else
350304    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
350305    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
350306    +end;
MPRINT(EM_DIAGRAM):   end;
350307    +else
350308    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
350309    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
350310    +end;
MPRINT(EM_DIAGRAM):   end;
350311    +else
350312    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
350313    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
350314    +end;
MPRINT(EM_DIAGRAM):   end;
350315    +end;
MPRINT(EM_DIAGRAM):   end;
350316    +
350317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350318    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
350319    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350320    +LABEL GRP_NumWebPurchases =
350321    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
350322    +
350323    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
350324    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
350325    +end;
MPRINT(EM_DIAGRAM):   end;
350326    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
350327    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
350328    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
350329    +end;
MPRINT(EM_DIAGRAM):   end;
350330    +else
350331    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
350332    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
350333    +end;
MPRINT(EM_DIAGRAM):   end;
350334    +else
350335    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
350336    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
350337    +end;
MPRINT(EM_DIAGRAM):   end;
350338    +else
350339    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
350340    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
350341    +end;
MPRINT(EM_DIAGRAM):   end;
350342    +end;
MPRINT(EM_DIAGRAM):   end;
350343    +
350344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350345    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
350346    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350347    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
350348    +
350349    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
350350    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
350351    +end;
MPRINT(EM_DIAGRAM):   end;
350352    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
350353    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
350354    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
350355    +end;
MPRINT(EM_DIAGRAM):   end;
350356    +else
350357    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
350358    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
350359    +end;
MPRINT(EM_DIAGRAM):   end;
350360    +else
350361    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
350362    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
350363    +end;
MPRINT(EM_DIAGRAM):   end;
350364    +else
350365    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
350366    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
350367    +end;
MPRINT(EM_DIAGRAM):   end;
350368    +end;
MPRINT(EM_DIAGRAM):   end;
350369    +
350370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350371    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
350372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350373    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
350374    +
350375    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
350376    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
350377    +end;
MPRINT(EM_DIAGRAM):   end;
350378    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
350379    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
350380    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
350381    +end;
MPRINT(EM_DIAGRAM):   end;
350382    +else
350383    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
350384    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
350385    +end;
MPRINT(EM_DIAGRAM):   end;
350386    +else
350387    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
350388    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
350389    +end;
MPRINT(EM_DIAGRAM):   end;
350390    +else
350391    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
350392    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
350393    +end;
MPRINT(EM_DIAGRAM):   end;
350394    +end;
MPRINT(EM_DIAGRAM):   end;
350395    +
350396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350397    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
350398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350399    +LABEL GRP_Recency =
350400    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
350401    +
350402    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
350403    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
350404    +end;
MPRINT(EM_DIAGRAM):   end;
350405    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
350406    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
350407    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
350408    +end;
MPRINT(EM_DIAGRAM):   end;
350409    +else
350410    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
350411    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
350412    +end;
MPRINT(EM_DIAGRAM):   end;
350413    +else
350414    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
350415    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
350416    +end;
MPRINT(EM_DIAGRAM):   end;
350417    +else
350418    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
350419    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
350420    +end;
MPRINT(EM_DIAGRAM):   end;
350421    +end;
MPRINT(EM_DIAGRAM):   end;
350422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350423    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
350424    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
350425    +* NODE: AutoNeural24;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural24;
350426    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
350427    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
350428    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
350429    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
350430    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
350431    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
350432    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
350433    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
350434    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
350435    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
350436    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
350437    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
350438    +LENGTH _WARN_ $4
350439    +      F_DepVar  $ 12
350440    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
350441    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
350442    +
350443    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
350444    +
350445    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
350446    +
350447    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
350448    +
350449    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
350450    +
350451    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
350452    +
350453    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
350454    +
350455    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
350456    +
350457    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
350458    +
350459    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
350460    +
350461    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
350462    +
350463    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
350464    +
350465    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
350466    +
350467    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
350468    +
350469    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
350470    +
350471    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
350472    +
350473    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
350474    +
350475    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
350476    +
350477    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
350478    +
350479    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
350480    +
350481    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
350482    +
350483    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
350484    +
350485    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
350486    +
350487    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
350488    +
350489    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
350490    +
350491    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
350492    +
350493    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
350494    +
350495    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
350496    +
350497    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
350498    +
350499    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
350500    +
350501    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
350502    +
350503    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
350504    +
350505    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
350506    +
350507    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
350508    +
350509    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
350510    +
350511    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
350512    +
350513    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
350514    +
350515    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
350516    +
350517    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
350518    +
350519    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
350520    +
350521    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
350522    +
350523    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
350524    +
350525    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
350526    +
350527    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
350528    +
350529    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
350530    +
350531    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
350532    +
350533    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
350534    +
350535    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
350536    +
350537    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
350538    +
350539    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
350540    +
350541    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
350542    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
350543    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
350544    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
350545    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350546    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350547    +end;
MPRINT(EM_DIAGRAM):   end;
350548    +else do;
MPRINT(EM_DIAGRAM):   else do;
350549    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350550    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
350551    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350552    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
350553    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
350554    +   end;
MPRINT(EM_DIAGRAM):   end;
350555    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
350556    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
350557    +   end;
MPRINT(EM_DIAGRAM):   end;
350558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350559    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
350560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350562    +   end;
MPRINT(EM_DIAGRAM):   end;
350563    +end;
MPRINT(EM_DIAGRAM):   end;
350564    +
350565    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
350566    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
350567    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
350568    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
350569    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
350570    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
350571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350573    +end;
MPRINT(EM_DIAGRAM):   end;
350574    +else do;
MPRINT(EM_DIAGRAM):   else do;
350575    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350576    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
350577    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350578    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
350579    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
350580    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
350581    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
350582    +   end;
MPRINT(EM_DIAGRAM):   end;
350583    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
350584    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
350585    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
350586    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
350587    +   end;
MPRINT(EM_DIAGRAM):   end;
350588    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350589    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
350590    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
350591    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
350592    +   end;
MPRINT(EM_DIAGRAM):   end;
350593    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350594    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
350595    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
350596    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
350597    +   end;
MPRINT(EM_DIAGRAM):   end;
350598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350599    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
350600    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
350601    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
350602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350604    +   end;
MPRINT(EM_DIAGRAM):   end;
350605    +end;
MPRINT(EM_DIAGRAM):   end;
350606    +
350607    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
350608    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
350609    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
350610    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
350611    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
350612    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
350613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350615    +end;
MPRINT(EM_DIAGRAM):   end;
350616    +else do;
MPRINT(EM_DIAGRAM):   else do;
350617    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350618    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
350619    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350620    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
350621    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
350622    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
350623    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
350624    +   end;
MPRINT(EM_DIAGRAM):   end;
350625    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350626    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
350627    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
350628    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
350629    +   end;
MPRINT(EM_DIAGRAM):   end;
350630    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
350631    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
350632    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
350633    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
350634    +   end;
MPRINT(EM_DIAGRAM):   end;
350635    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350636    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
350637    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
350638    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
350639    +   end;
MPRINT(EM_DIAGRAM):   end;
350640    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350641    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
350642    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
350643    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
350644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350646    +   end;
MPRINT(EM_DIAGRAM):   end;
350647    +end;
MPRINT(EM_DIAGRAM):   end;
350648    +
350649    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
350650    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
350651    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
350652    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
350653    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
350654    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
350655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350657    +end;
MPRINT(EM_DIAGRAM):   end;
350658    +else do;
MPRINT(EM_DIAGRAM):   else do;
350659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350660    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
350661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350662    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
350663    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
350664    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
350665    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
350666    +   end;
MPRINT(EM_DIAGRAM):   end;
350667    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350668    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
350669    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
350670    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
350671    +   end;
MPRINT(EM_DIAGRAM):   end;
350672    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350673    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
350674    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
350675    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
350676    +   end;
MPRINT(EM_DIAGRAM):   end;
350677    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350678    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
350679    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
350680    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
350681    +   end;
MPRINT(EM_DIAGRAM):   end;
350682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350683    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
350684    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
350685    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
350686    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350687    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350688    +   end;
MPRINT(EM_DIAGRAM):   end;
350689    +end;
MPRINT(EM_DIAGRAM):   end;
350690    +
350691    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
350692    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
350693    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
350694    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
350695    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
350696    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
350697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350699    +end;
MPRINT(EM_DIAGRAM):   end;
350700    +else do;
MPRINT(EM_DIAGRAM):   else do;
350701    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350702    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
350703    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350704    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
350705    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
350706    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
350707    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
350708    +   end;
MPRINT(EM_DIAGRAM):   end;
350709    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350710    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
350711    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
350712    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
350713    +   end;
MPRINT(EM_DIAGRAM):   end;
350714    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350715    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
350716    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
350717    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
350718    +   end;
MPRINT(EM_DIAGRAM):   end;
350719    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350720    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
350721    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
350722    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
350723    +   end;
MPRINT(EM_DIAGRAM):   end;
350724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350725    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
350726    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
350727    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
350728    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350729    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350730    +   end;
MPRINT(EM_DIAGRAM):   end;
350731    +end;
MPRINT(EM_DIAGRAM):   end;
350732    +
350733    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
350734    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
350735    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
350736    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
350737    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
350738    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
350739    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350740    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350741    +end;
MPRINT(EM_DIAGRAM):   end;
350742    +else do;
MPRINT(EM_DIAGRAM):   else do;
350743    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350744    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
350745    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350746    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
350747    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
350748    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
350749    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
350750    +   end;
MPRINT(EM_DIAGRAM):   end;
350751    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350752    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
350753    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
350754    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
350755    +   end;
MPRINT(EM_DIAGRAM):   end;
350756    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350757    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
350758    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
350759    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
350760    +   end;
MPRINT(EM_DIAGRAM):   end;
350761    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350762    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
350763    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
350764    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
350765    +   end;
MPRINT(EM_DIAGRAM):   end;
350766    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350767    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
350768    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
350769    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
350770    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350771    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350772    +   end;
MPRINT(EM_DIAGRAM):   end;
350773    +end;
MPRINT(EM_DIAGRAM):   end;
350774    +
350775    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
350776    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
350777    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
350778    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
350779    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
350780    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
350781    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350782    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350783    +end;
MPRINT(EM_DIAGRAM):   end;
350784    +else do;
MPRINT(EM_DIAGRAM):   else do;
350785    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350786    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
350787    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350788    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
350789    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
350790    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
350791    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
350792    +   end;
MPRINT(EM_DIAGRAM):   end;
350793    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350794    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
350795    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
350796    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
350797    +   end;
MPRINT(EM_DIAGRAM):   end;
350798    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350799    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
350800    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
350801    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
350802    +   end;
MPRINT(EM_DIAGRAM):   end;
350803    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350804    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
350805    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
350806    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
350807    +   end;
MPRINT(EM_DIAGRAM):   end;
350808    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350809    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
350810    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
350811    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
350812    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350813    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350814    +   end;
MPRINT(EM_DIAGRAM):   end;
350815    +end;
MPRINT(EM_DIAGRAM):   end;
350816    +
350817    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
350818    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
350819    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
350820    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
350821    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
350822    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
350823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350825    +end;
MPRINT(EM_DIAGRAM):   end;
350826    +else do;
MPRINT(EM_DIAGRAM):   else do;
350827    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350828    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
350829    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350830    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
350831    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
350832    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
350833    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
350834    +   end;
MPRINT(EM_DIAGRAM):   end;
350835    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350836    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
350837    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
350838    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
350839    +   end;
MPRINT(EM_DIAGRAM):   end;
350840    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350841    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
350842    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
350843    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
350844    +   end;
MPRINT(EM_DIAGRAM):   end;
350845    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350846    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
350847    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
350848    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
350849    +   end;
MPRINT(EM_DIAGRAM):   end;
350850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350851    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
350852    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
350853    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
350854    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350855    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350856    +   end;
MPRINT(EM_DIAGRAM):   end;
350857    +end;
MPRINT(EM_DIAGRAM):   end;
350858    +
350859    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
350860    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
350861    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
350862    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
350863    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
350864    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350865    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350866    +end;
MPRINT(EM_DIAGRAM):   end;
350867    +else do;
MPRINT(EM_DIAGRAM):   else do;
350868    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350869    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
350870    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350871    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
350872    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
350873    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
350874    +   end;
MPRINT(EM_DIAGRAM):   end;
350875    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350876    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
350877    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
350878    +   end;
MPRINT(EM_DIAGRAM):   end;
350879    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350880    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
350881    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
350882    +   end;
MPRINT(EM_DIAGRAM):   end;
350883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350884    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
350885    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
350886    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350887    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350888    +   end;
MPRINT(EM_DIAGRAM):   end;
350889    +end;
MPRINT(EM_DIAGRAM):   end;
350890    +
350891    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
350892    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
350893    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
350894    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
350895    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
350896    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
350897    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350898    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350899    +end;
MPRINT(EM_DIAGRAM):   end;
350900    +else do;
MPRINT(EM_DIAGRAM):   else do;
350901    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350902    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
350903    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350904    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
350905    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
350906    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
350907    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
350908    +   end;
MPRINT(EM_DIAGRAM):   end;
350909    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350910    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
350911    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
350912    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
350913    +   end;
MPRINT(EM_DIAGRAM):   end;
350914    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350915    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
350916    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
350917    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
350918    +   end;
MPRINT(EM_DIAGRAM):   end;
350919    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
350920    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
350921    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
350922    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
350923    +   end;
MPRINT(EM_DIAGRAM):   end;
350924    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350925    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
350926    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
350927    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
350928    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350929    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350930    +   end;
MPRINT(EM_DIAGRAM):   end;
350931    +end;
MPRINT(EM_DIAGRAM):   end;
350932    +
350933    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
350934    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
350935    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
350936    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
350937    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
350938    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
350939    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350940    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350941    +end;
MPRINT(EM_DIAGRAM):   end;
350942    +else do;
MPRINT(EM_DIAGRAM):   else do;
350943    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350944    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
350945    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350946    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
350947    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
350948    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
350949    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
350950    +   end;
MPRINT(EM_DIAGRAM):   end;
350951    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350952    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
350953    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
350954    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
350955    +   end;
MPRINT(EM_DIAGRAM):   end;
350956    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
350957    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
350958    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
350959    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
350960    +   end;
MPRINT(EM_DIAGRAM):   end;
350961    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
350962    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
350963    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
350964    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
350965    +   end;
MPRINT(EM_DIAGRAM):   end;
350966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350967    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
350968    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
350969    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
350970    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
350971    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350972    +   end;
MPRINT(EM_DIAGRAM):   end;
350973    +end;
MPRINT(EM_DIAGRAM):   end;
350974    +
350975    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
350976    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
350977    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
350978    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
350979    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
350980    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
350981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
350982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
350983    +end;
MPRINT(EM_DIAGRAM):   end;
350984    +else do;
MPRINT(EM_DIAGRAM):   else do;
350985    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
350986    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
350987    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350988    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
350989    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
350990    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
350991    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
350992    +   end;
MPRINT(EM_DIAGRAM):   end;
350993    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
350994    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
350995    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
350996    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
350997    +   end;
MPRINT(EM_DIAGRAM):   end;
350998    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
350999    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
351000    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
351001    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
351002    +   end;
MPRINT(EM_DIAGRAM):   end;
351003    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351004    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
351005    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
351006    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
351007    +   end;
MPRINT(EM_DIAGRAM):   end;
351008    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351009    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
351010    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
351011    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
351012    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351013    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351014    +   end;
MPRINT(EM_DIAGRAM):   end;
351015    +end;
MPRINT(EM_DIAGRAM):   end;
351016    +
351017    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
351018    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
351019    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
351020    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
351021    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
351022    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
351023    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351024    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351025    +end;
MPRINT(EM_DIAGRAM):   end;
351026    +else do;
MPRINT(EM_DIAGRAM):   else do;
351027    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351028    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
351029    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351030    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351031    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
351032    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
351033    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
351034    +   end;
MPRINT(EM_DIAGRAM):   end;
351035    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351036    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
351037    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
351038    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
351039    +   end;
MPRINT(EM_DIAGRAM):   end;
351040    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351041    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
351042    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
351043    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
351044    +   end;
MPRINT(EM_DIAGRAM):   end;
351045    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351046    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
351047    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
351048    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
351049    +   end;
MPRINT(EM_DIAGRAM):   end;
351050    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351051    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
351052    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
351053    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
351054    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351055    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351056    +   end;
MPRINT(EM_DIAGRAM):   end;
351057    +end;
MPRINT(EM_DIAGRAM):   end;
351058    +
351059    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
351060    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
351061    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
351062    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
351063    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
351064    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
351065    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351066    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351067    +end;
MPRINT(EM_DIAGRAM):   end;
351068    +else do;
MPRINT(EM_DIAGRAM):   else do;
351069    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351070    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
351071    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351072    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
351073    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
351074    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
351075    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
351076    +   end;
MPRINT(EM_DIAGRAM):   end;
351077    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351078    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
351079    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
351080    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
351081    +   end;
MPRINT(EM_DIAGRAM):   end;
351082    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
351083    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
351084    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
351085    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
351086    +   end;
MPRINT(EM_DIAGRAM):   end;
351087    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351088    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
351089    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
351090    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
351091    +   end;
MPRINT(EM_DIAGRAM):   end;
351092    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351093    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
351094    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
351095    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
351096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351098    +   end;
MPRINT(EM_DIAGRAM):   end;
351099    +end;
MPRINT(EM_DIAGRAM):   end;
351100    +
351101    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351102    +*** Checking missing input Interval
351103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
351104    +
351105    +IF NMISS(
351106    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
351107    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
351108    +
351109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351110    +END;
MPRINT(EM_DIAGRAM):   END;
351111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351112    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
351113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351114    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
351115    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
351116    +END;
MPRINT(EM_DIAGRAM):   END;
351117    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
351118    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
351119    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
351120    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
351121    +END;
MPRINT(EM_DIAGRAM):   END;
351122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351123    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
351124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351126    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
351127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351128    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
351129    +   H1x1_1  =    -1.98556205049158 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.98556205049158 * S_Year_Birth ;
351130    +   H1x1_2  =     2.65003203246915 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.65003203246915 * S_Year_Birth ;
351131    +   H1x1_1  = H1x1_1  +    -0.05712043872213 * GRP_AcceptedCmp52
351132    +          +     1.04378756398945 * GRP_Frq2  +     1.53971794568749 * GRP_Frq3
351133    +          +     1.46006856973709 * GRP_Frq4  +    -0.56202924907336 *
351134    +        GRP_Income2  +     4.72191701616365 * GRP_Income3
351135    +          +    -2.66170280222507 * GRP_Income4  +     0.01753317277737 *
351136    +        GRP_Mnt2  +    -3.49161842568046 * GRP_Mnt3  +    -2.05166246350112 *
351137    +        GRP_Mnt4  +     3.42363704603021 * GRP_MntFishProducts2
351138    +          +     4.07177263196201 * GRP_MntFishProducts3
351139    +          +    -0.95758193346069 * GRP_MntFishProducts4
351140    +          +     0.27642218349221 * GRP_MntGoldProds2
351141    +          +    -1.85260255304992 * GRP_MntGoldProds3
351142    +          +      0.0084996256166 * GRP_MntGoldProds4
351143    +          +     1.78769069128312 * GRP_MntMeatProducts2
351144    +          +    -5.09868822425716 * GRP_MntMeatProducts3
351145    +          +     -1.2944400003238 * GRP_MntMeatProducts4
351146    +          +     2.16310510520522 * GRP_MntWines2  +    -0.98848869719513 *
351147    +        GRP_MntWines3  +     0.37628412350279 * GRP_MntWines4
351148    +          +    -0.18399160398973 * GRP_NumCatalogPurchases3
351149    +          +     2.78149370347513 * GRP_NumCatalogPurchases4
351150    +          +    -1.92842775798726 * GRP_NumDistPurchases2
351151    +          +     1.36617128431309 * GRP_NumDistPurchases3
351152    +          +    -5.04459399151701 * GRP_NumDistPurchases4
351153    +          +    -3.10131336282255 * GRP_NumWebPurchases2
351154    +          +    -1.70853531086832 * GRP_NumWebPurchases3
351155    +          +    -1.81576465350843 * GRP_NumWebPurchases4
351156    +          +     0.97448188440932 * GRP_RFMstat2  +    -1.74164713551138 *
351157    +        GRP_RFMstat3  +    -1.61869970889612 * GRP_RFMstat4
351158    +          +     0.94148483345045 * GRP_RMntFrq2  +    -4.61928796757469 *
351159    +        GRP_RMntFrq3  +    -0.29552475494224 * GRP_RMntFrq4
351160    +          +     0.59385679636573 * GRP_Recency2  +    -0.70804337284842 *
351161    +        GRP_Recency3  +     2.46935358022796 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05712043872213 * GRP_AcceptedCmp52 + 
1.04378756398945 * GRP_Frq2 + 1.53971794568749 * GRP_Frq3 + 1.46006856973709 * GRP_Frq4 + 
-0.56202924907336 * GRP_Income2 + 4.72191701616365 * GRP_Income3 + -2.66170280222507 * 
GRP_Income4 + 0.01753317277737 * GRP_Mnt2 + -3.49161842568046 * GRP_Mnt3 + -2.05166246350112 * 
GRP_Mnt4 + 3.42363704603021 * GRP_MntFishProducts2 + 4.07177263196201 * GRP_MntFishProducts3 + 
-0.95758193346069 * GRP_MntFishProducts4 + 0.27642218349221 * GRP_MntGoldProds2 + 
-1.85260255304992 * GRP_MntGoldProds3 + 0.0084996256166 * GRP_MntGoldProds4 + 1.78769069128312 
* GRP_MntMeatProducts2 + -5.09868822425716 * GRP_MntMeatProducts3 + -1.2944400003238 * 
GRP_MntMeatProducts4 + 2.16310510520522 * GRP_MntWines2 + -0.98848869719513 * GRP_MntWines3 + 
0.37628412350279 * GRP_MntWines4 + -0.18399160398973 * GRP_NumCatalogPurchases3 + 
2.78149370347513 * GRP_NumCatalogPurchases4 + -1.92842775798726 * GRP_NumDistPurchases2 + 
1.36617128431309 * GRP_NumDistPurchases3 + -5.04459399151701 * GRP_NumDistPurchases4 + 
-3.10131336282255 * GRP_NumWebPurchases2 + -1.70853531086832 * GRP_NumWebPurchases3 + 
-1.81576465350843 * GRP_NumWebPurchases4 + 0.97448188440932 * GRP_RFMstat2 + -1.74164713551138 
* GRP_RFMstat3 + -1.61869970889612 * GRP_RFMstat4 + 0.94148483345045 * GRP_RMntFrq2 + 
-4.61928796757469 * GRP_RMntFrq3 + -0.29552475494224 * GRP_RMntFrq4 + 0.59385679636573 * 
GRP_Recency2 + -0.70804337284842 * GRP_Recency3 + 2.46935358022796 * GRP_Recency4 ;
351162    +   H1x1_2  = H1x1_2  +    -2.86061192932804 * GRP_AcceptedCmp52
351163    +          +    -2.37847197829836 * GRP_Frq2  +     3.04126084255177 * GRP_Frq3
351164    +          +    -2.25316213708692 * GRP_Frq4  +    -2.15230505920585 *
351165    +        GRP_Income2  +     0.22423161350469 * GRP_Income3
351166    +          +     1.82470653064149 * GRP_Income4  +     0.91426377324604 *
351167    +        GRP_Mnt2  +    -2.52824414988744 * GRP_Mnt3  +     1.25821903076482 *
351168    +        GRP_Mnt4  +     2.48215495303599 * GRP_MntFishProducts2
351169    +          +    -2.53912545896945 * GRP_MntFishProducts3
351170    +          +    -1.24420085467004 * GRP_MntFishProducts4
351171    +          +     0.87589074104426 * GRP_MntGoldProds2
351172    +          +     2.05825939506076 * GRP_MntGoldProds3
351173    +          +     4.54187777951066 * GRP_MntGoldProds4
351174    +          +     1.73194182769876 * GRP_MntMeatProducts2
351175    +          +    -0.50494075731675 * GRP_MntMeatProducts3
351176    +          +    -1.24502732975278 * GRP_MntMeatProducts4
351177    +          +     1.29208460321632 * GRP_MntWines2  +     0.29717301998256 *
351178    +        GRP_MntWines3  +    -0.62672710631427 * GRP_MntWines4
351179    +          +     1.35492499749641 * GRP_NumCatalogPurchases3
351180    +          +    -0.16024517906179 * GRP_NumCatalogPurchases4
351181    +          +     1.86677407552405 * GRP_NumDistPurchases2
351182    +          +     -0.7331940643207 * GRP_NumDistPurchases3
351183    +          +     1.69990326910684 * GRP_NumDistPurchases4
351184    +          +     2.43176299986254 * GRP_NumWebPurchases2
351185    +          +    -2.13772911466858 * GRP_NumWebPurchases3
351186    +          +    -4.73478753166791 * GRP_NumWebPurchases4
351187    +          +     2.64399780173577 * GRP_RFMstat2  +    -3.62336346056054 *
351188    +        GRP_RFMstat3  +    -3.18363324824984 * GRP_RFMstat4
351189    +          +     3.46796006062254 * GRP_RMntFrq2  +    -0.59973905875633 *
351190    +        GRP_RMntFrq3  +    -1.07300094897005 * GRP_RMntFrq4
351191    +          +     1.65131957040649 * GRP_Recency2  +     2.60583794046673 *
351192    +        GRP_Recency3  +    -1.61296974687132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.86061192932804 * GRP_AcceptedCmp52 + 
-2.37847197829836 * GRP_Frq2 + 3.04126084255177 * GRP_Frq3 + -2.25316213708692 * GRP_Frq4 + 
-2.15230505920585 * GRP_Income2 + 0.22423161350469 * GRP_Income3 + 1.82470653064149 * 
GRP_Income4 + 0.91426377324604 * GRP_Mnt2 + -2.52824414988744 * GRP_Mnt3 + 1.25821903076482 * 
GRP_Mnt4 + 2.48215495303599 * GRP_MntFishProducts2 + -2.53912545896945 * GRP_MntFishProducts3 
+ -1.24420085467004 * GRP_MntFishProducts4 + 0.87589074104426 * GRP_MntGoldProds2 + 
2.05825939506076 * GRP_MntGoldProds3 + 4.54187777951066 * GRP_MntGoldProds4 + 1.73194182769876 
* GRP_MntMeatProducts2 + -0.50494075731675 * GRP_MntMeatProducts3 + -1.24502732975278 * 
GRP_MntMeatProducts4 + 1.29208460321632 * GRP_MntWines2 + 0.29717301998256 * GRP_MntWines3 + 
-0.62672710631427 * GRP_MntWines4 + 1.35492499749641 * GRP_NumCatalogPurchases3 + 
-0.16024517906179 * GRP_NumCatalogPurchases4 + 1.86677407552405 * GRP_NumDistPurchases2 + 
-0.7331940643207 * GRP_NumDistPurchases3 + 1.69990326910684 * GRP_NumDistPurchases4 + 
2.43176299986254 * GRP_NumWebPurchases2 + -2.13772911466858 * GRP_NumWebPurchases3 + 
-4.73478753166791 * GRP_NumWebPurchases4 + 2.64399780173577 * GRP_RFMstat2 + -3.62336346056054 
* GRP_RFMstat3 + -3.18363324824984 * GRP_RFMstat4 + 3.46796006062254 * GRP_RMntFrq2 + 
-0.59973905875633 * GRP_RMntFrq3 + -1.07300094897005 * GRP_RMntFrq4 + 1.65131957040649 * 
GRP_Recency2 + 2.60583794046673 * GRP_Recency3 + -1.61296974687132 * GRP_Recency4 ;
351193    +   H1x1_1  =     2.45115906330524 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.45115906330524 + H1x1_1 ;
351194    +   H1x1_2  =     4.73081202118604 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 4.73081202118604 + H1x1_2 ;
351195    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
351196    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
351197    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
351198    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
351199    +END;
MPRINT(EM_DIAGRAM):   END;
351200    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
351201    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
351202    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
351203    +END;
MPRINT(EM_DIAGRAM):   END;
351204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351205    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
351206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351207    +
351208    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
351209    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
351210    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
351211    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
351212    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
351213    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351214    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
351215    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
351216    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
351217    +end;
MPRINT(EM_DIAGRAM):   end;
351218    +else do;
MPRINT(EM_DIAGRAM):   else do;
351219    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
351220    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
351221    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
351222    +   end;
MPRINT(EM_DIAGRAM):   end;
351223    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
351224    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
351225    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
351226    +   end;
MPRINT(EM_DIAGRAM):   end;
351227    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351228    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
351229    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
351230    +   end;
MPRINT(EM_DIAGRAM):   end;
351231    +end;
MPRINT(EM_DIAGRAM):   end;
351232    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
351233    +   P_DepVar1  =      4.0196958449291 * H1x1_1  +    -3.12785763420985 * H1x1_2
351234    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0196958449291 * H1x1_1 + -3.12785763420985 * H1x1_2 ;
351235    +   P_DepVar1  =    -2.56231918790427 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.56231918790427 + P_DepVar1 ;
351236    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
351237    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
351238    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
351239    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
351240    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
351241    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
351242    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
351243    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
351244    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
351245    +END;
MPRINT(EM_DIAGRAM):   END;
351246    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
351247    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
351248    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
351249    +END;
MPRINT(EM_DIAGRAM):   END;
351250    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
351251    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
351252    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
351253    +END;
MPRINT(EM_DIAGRAM):   END;
351254    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
351255    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
351256    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
351257    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
351258    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
351259    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
351260    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
351261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351262    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
351263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351264    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
351265    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
351266    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
351267    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
351268    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
351269    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
351270    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
351271    +END;
MPRINT(EM_DIAGRAM):   END;
351272    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
351273    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
351274    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
351275    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
351276    +* Renaming variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural24;
351277    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351278    +* Renaming Posterior variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural24;
351279    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351280    +drop AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar1;
351281    +AutoNeural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar1 = P_DepVar1;
351282    +drop AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar0;
351283    +AutoNeural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar0 = P_DepVar0;
351284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351285    +* Renaming _WARN_ variable for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural24;
351286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351287    +length AutoNeural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural24_WARN_ $4;
351288    +drop AutoNeural24_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_WARN_;
351289    +AutoNeural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural24_WARN_ = _WARN_;
351290    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351291    +* Ensmbl48: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 2 of 7;
351292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351294    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
351295    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
351296    +* NODE: AutoNeural22;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural22;
351297    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
351298    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
351299    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
351300    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
351301    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
351302    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
351303    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
351304    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
351305    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
351306    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
351307    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
351308    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
351309    +LENGTH _WARN_ $4
351310    +      F_DepVar  $ 12
351311    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
351312    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
351313    +
351314    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
351315    +
351316    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
351317    +
351318    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
351319    +
351320    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
351321    +
351322    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
351323    +
351324    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
351325    +
351326    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
351327    +
351328    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
351329    +
351330    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
351331    +
351332    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
351333    +
351334    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
351335    +
351336    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
351337    +
351338    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
351339    +
351340    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
351341    +
351342    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
351343    +
351344    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
351345    +
351346    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
351347    +
351348    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
351349    +
351350    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
351351    +
351352    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
351353    +
351354    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
351355    +
351356    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
351357    +
351358    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
351359    +
351360    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
351361    +
351362    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
351363    +
351364    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
351365    +
351366    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
351367    +
351368    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
351369    +
351370    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
351371    +
351372    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
351373    +
351374    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
351375    +
351376    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
351377    +
351378    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
351379    +
351380    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
351381    +
351382    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
351383    +
351384    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
351385    +
351386    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
351387    +
351388    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
351389    +
351390    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
351391    +
351392    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
351393    +
351394    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
351395    +
351396    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
351397    +
351398    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
351399    +
351400    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
351401    +
351402    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
351403    +
351404    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
351405    +
351406    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
351407    +
351408    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
351409    +
351410    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
351411    +
351412    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
351413    +
351414    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
351415    +
351416    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
351417    +
351418    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
351419    +
351420    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
351421    +
351422    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
351423    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
351424    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
351425    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
351426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351428    +end;
MPRINT(EM_DIAGRAM):   end;
351429    +else do;
MPRINT(EM_DIAGRAM):   else do;
351430    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351431    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
351432    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351433    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
351434    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
351435    +   end;
MPRINT(EM_DIAGRAM):   end;
351436    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
351437    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
351438    +   end;
MPRINT(EM_DIAGRAM):   end;
351439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351440    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
351441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351443    +   end;
MPRINT(EM_DIAGRAM):   end;
351444    +end;
MPRINT(EM_DIAGRAM):   end;
351445    +
351446    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
351447    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
351448    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
351449    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
351450    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
351451    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
351452    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351453    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351454    +end;
MPRINT(EM_DIAGRAM):   end;
351455    +else do;
MPRINT(EM_DIAGRAM):   else do;
351456    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351457    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
351458    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351459    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
351460    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
351461    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
351462    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
351463    +   end;
MPRINT(EM_DIAGRAM):   end;
351464    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
351465    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
351466    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
351467    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
351468    +   end;
MPRINT(EM_DIAGRAM):   end;
351469    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351470    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
351471    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
351472    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
351473    +   end;
MPRINT(EM_DIAGRAM):   end;
351474    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351475    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
351476    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
351477    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
351478    +   end;
MPRINT(EM_DIAGRAM):   end;
351479    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351480    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
351481    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
351482    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
351483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351485    +   end;
MPRINT(EM_DIAGRAM):   end;
351486    +end;
MPRINT(EM_DIAGRAM):   end;
351487    +
351488    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
351489    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
351490    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
351491    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
351492    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
351493    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
351494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351496    +end;
MPRINT(EM_DIAGRAM):   end;
351497    +else do;
MPRINT(EM_DIAGRAM):   else do;
351498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351499    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
351500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351501    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
351502    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
351503    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
351504    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
351505    +   end;
MPRINT(EM_DIAGRAM):   end;
351506    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351507    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
351508    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
351509    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
351510    +   end;
MPRINT(EM_DIAGRAM):   end;
351511    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
351512    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
351513    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
351514    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
351515    +   end;
MPRINT(EM_DIAGRAM):   end;
351516    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351517    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
351518    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
351519    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
351520    +   end;
MPRINT(EM_DIAGRAM):   end;
351521    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351522    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
351523    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
351524    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
351525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351527    +   end;
MPRINT(EM_DIAGRAM):   end;
351528    +end;
MPRINT(EM_DIAGRAM):   end;
351529    +
351530    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
351531    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
351532    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
351533    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
351534    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
351535    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
351536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351538    +end;
MPRINT(EM_DIAGRAM):   end;
351539    +else do;
MPRINT(EM_DIAGRAM):   else do;
351540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351541    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
351542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351543    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351544    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
351545    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
351546    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
351547    +   end;
MPRINT(EM_DIAGRAM):   end;
351548    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351549    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
351550    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
351551    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
351552    +   end;
MPRINT(EM_DIAGRAM):   end;
351553    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351554    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
351555    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
351556    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
351557    +   end;
MPRINT(EM_DIAGRAM):   end;
351558    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351559    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
351560    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
351561    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
351562    +   end;
MPRINT(EM_DIAGRAM):   end;
351563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351564    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
351565    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
351566    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
351567    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351568    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351569    +   end;
MPRINT(EM_DIAGRAM):   end;
351570    +end;
MPRINT(EM_DIAGRAM):   end;
351571    +
351572    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
351573    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
351574    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
351575    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
351576    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
351577    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
351578    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351579    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351580    +end;
MPRINT(EM_DIAGRAM):   end;
351581    +else do;
MPRINT(EM_DIAGRAM):   else do;
351582    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351583    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
351584    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351585    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351586    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
351587    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
351588    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
351589    +   end;
MPRINT(EM_DIAGRAM):   end;
351590    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351591    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
351592    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
351593    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
351594    +   end;
MPRINT(EM_DIAGRAM):   end;
351595    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351596    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
351597    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
351598    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
351599    +   end;
MPRINT(EM_DIAGRAM):   end;
351600    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351601    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
351602    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
351603    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
351604    +   end;
MPRINT(EM_DIAGRAM):   end;
351605    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351606    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
351607    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
351608    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
351609    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351610    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351611    +   end;
MPRINT(EM_DIAGRAM):   end;
351612    +end;
MPRINT(EM_DIAGRAM):   end;
351613    +
351614    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
351615    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
351616    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
351617    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
351618    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
351619    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
351620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351622    +end;
MPRINT(EM_DIAGRAM):   end;
351623    +else do;
MPRINT(EM_DIAGRAM):   else do;
351624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351625    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
351626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351627    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351628    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
351629    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
351630    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
351631    +   end;
MPRINT(EM_DIAGRAM):   end;
351632    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351633    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
351634    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
351635    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
351636    +   end;
MPRINT(EM_DIAGRAM):   end;
351637    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351638    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
351639    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
351640    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
351641    +   end;
MPRINT(EM_DIAGRAM):   end;
351642    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351643    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
351644    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
351645    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
351646    +   end;
MPRINT(EM_DIAGRAM):   end;
351647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351648    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
351649    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
351650    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
351651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351653    +   end;
MPRINT(EM_DIAGRAM):   end;
351654    +end;
MPRINT(EM_DIAGRAM):   end;
351655    +
351656    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
351657    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
351658    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
351659    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
351660    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
351661    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
351662    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351663    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351664    +end;
MPRINT(EM_DIAGRAM):   end;
351665    +else do;
MPRINT(EM_DIAGRAM):   else do;
351666    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351667    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
351668    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351669    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351670    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
351671    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
351672    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
351673    +   end;
MPRINT(EM_DIAGRAM):   end;
351674    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351675    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
351676    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
351677    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
351678    +   end;
MPRINT(EM_DIAGRAM):   end;
351679    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351680    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
351681    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
351682    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
351683    +   end;
MPRINT(EM_DIAGRAM):   end;
351684    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351685    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
351686    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
351687    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
351688    +   end;
MPRINT(EM_DIAGRAM):   end;
351689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351690    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
351691    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
351692    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
351693    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351694    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351695    +   end;
MPRINT(EM_DIAGRAM):   end;
351696    +end;
MPRINT(EM_DIAGRAM):   end;
351697    +
351698    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
351699    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
351700    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
351701    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
351702    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
351703    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
351704    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351706    +end;
MPRINT(EM_DIAGRAM):   end;
351707    +else do;
MPRINT(EM_DIAGRAM):   else do;
351708    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351709    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
351710    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351711    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351712    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
351713    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
351714    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
351715    +   end;
MPRINT(EM_DIAGRAM):   end;
351716    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351717    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
351718    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
351719    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
351720    +   end;
MPRINT(EM_DIAGRAM):   end;
351721    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351722    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
351723    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
351724    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
351725    +   end;
MPRINT(EM_DIAGRAM):   end;
351726    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351727    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
351728    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
351729    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
351730    +   end;
MPRINT(EM_DIAGRAM):   end;
351731    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351732    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
351733    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
351734    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
351735    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351736    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351737    +   end;
MPRINT(EM_DIAGRAM):   end;
351738    +end;
MPRINT(EM_DIAGRAM):   end;
351739    +
351740    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
351741    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
351742    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
351743    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
351744    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
351745    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351746    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351747    +end;
MPRINT(EM_DIAGRAM):   end;
351748    +else do;
MPRINT(EM_DIAGRAM):   else do;
351749    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351750    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
351751    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351752    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351753    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
351754    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
351755    +   end;
MPRINT(EM_DIAGRAM):   end;
351756    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351757    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
351758    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
351759    +   end;
MPRINT(EM_DIAGRAM):   end;
351760    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351761    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
351762    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
351763    +   end;
MPRINT(EM_DIAGRAM):   end;
351764    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351765    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
351766    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
351767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351769    +   end;
MPRINT(EM_DIAGRAM):   end;
351770    +end;
MPRINT(EM_DIAGRAM):   end;
351771    +
351772    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
351773    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
351774    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
351775    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
351776    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
351777    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
351778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351780    +end;
MPRINT(EM_DIAGRAM):   end;
351781    +else do;
MPRINT(EM_DIAGRAM):   else do;
351782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351783    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
351784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351785    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
351786    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
351787    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
351788    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
351789    +   end;
MPRINT(EM_DIAGRAM):   end;
351790    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351791    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
351792    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
351793    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
351794    +   end;
MPRINT(EM_DIAGRAM):   end;
351795    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351796    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
351797    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
351798    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
351799    +   end;
MPRINT(EM_DIAGRAM):   end;
351800    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
351801    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
351802    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
351803    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
351804    +   end;
MPRINT(EM_DIAGRAM):   end;
351805    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351806    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
351807    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
351808    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
351809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351811    +   end;
MPRINT(EM_DIAGRAM):   end;
351812    +end;
MPRINT(EM_DIAGRAM):   end;
351813    +
351814    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
351815    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
351816    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
351817    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
351818    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
351819    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
351820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351822    +end;
MPRINT(EM_DIAGRAM):   end;
351823    +else do;
MPRINT(EM_DIAGRAM):   else do;
351824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351825    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
351826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351827    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351828    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
351829    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
351830    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
351831    +   end;
MPRINT(EM_DIAGRAM):   end;
351832    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351833    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
351834    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
351835    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
351836    +   end;
MPRINT(EM_DIAGRAM):   end;
351837    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351838    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
351839    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
351840    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
351841    +   end;
MPRINT(EM_DIAGRAM):   end;
351842    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351843    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
351844    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
351845    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
351846    +   end;
MPRINT(EM_DIAGRAM):   end;
351847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351848    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
351849    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
351850    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
351851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351853    +   end;
MPRINT(EM_DIAGRAM):   end;
351854    +end;
MPRINT(EM_DIAGRAM):   end;
351855    +
351856    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
351857    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
351858    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
351859    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
351860    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
351861    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
351862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351864    +end;
MPRINT(EM_DIAGRAM):   end;
351865    +else do;
MPRINT(EM_DIAGRAM):   else do;
351866    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351867    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
351868    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351869    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
351870    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
351871    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
351872    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
351873    +   end;
MPRINT(EM_DIAGRAM):   end;
351874    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
351875    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
351876    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
351877    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
351878    +   end;
MPRINT(EM_DIAGRAM):   end;
351879    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351880    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
351881    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
351882    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
351883    +   end;
MPRINT(EM_DIAGRAM):   end;
351884    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351885    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
351886    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
351887    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
351888    +   end;
MPRINT(EM_DIAGRAM):   end;
351889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351890    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
351891    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
351892    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
351893    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351894    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351895    +   end;
MPRINT(EM_DIAGRAM):   end;
351896    +end;
MPRINT(EM_DIAGRAM):   end;
351897    +
351898    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
351899    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
351900    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
351901    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
351902    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
351903    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
351904    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351906    +end;
MPRINT(EM_DIAGRAM):   end;
351907    +else do;
MPRINT(EM_DIAGRAM):   else do;
351908    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351909    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
351910    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351911    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
351912    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
351913    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
351914    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
351915    +   end;
MPRINT(EM_DIAGRAM):   end;
351916    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
351917    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
351918    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
351919    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
351920    +   end;
MPRINT(EM_DIAGRAM):   end;
351921    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351922    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
351923    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
351924    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
351925    +   end;
MPRINT(EM_DIAGRAM):   end;
351926    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351927    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
351928    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
351929    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
351930    +   end;
MPRINT(EM_DIAGRAM):   end;
351931    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351932    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
351933    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
351934    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
351935    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351936    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351937    +   end;
MPRINT(EM_DIAGRAM):   end;
351938    +end;
MPRINT(EM_DIAGRAM):   end;
351939    +
351940    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
351941    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
351942    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
351943    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
351944    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
351945    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
351946    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
351947    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351948    +end;
MPRINT(EM_DIAGRAM):   end;
351949    +else do;
MPRINT(EM_DIAGRAM):   else do;
351950    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
351951    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
351952    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
351953    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
351954    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
351955    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
351956    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
351957    +   end;
MPRINT(EM_DIAGRAM):   end;
351958    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
351959    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
351960    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
351961    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
351962    +   end;
MPRINT(EM_DIAGRAM):   end;
351963    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
351964    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
351965    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
351966    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
351967    +   end;
MPRINT(EM_DIAGRAM):   end;
351968    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
351969    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
351970    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
351971    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
351972    +   end;
MPRINT(EM_DIAGRAM):   end;
351973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
351974    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
351975    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
351976    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
351977    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
351978    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351979    +   end;
MPRINT(EM_DIAGRAM):   end;
351980    +end;
MPRINT(EM_DIAGRAM):   end;
351981    +
351982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351983    +*** Checking missing input Interval
351984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
351985    +
351986    +IF NMISS(
351987    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
351988    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
351989    +
351990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
351991    +END;
MPRINT(EM_DIAGRAM):   END;
351992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351993    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
351994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
351995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
351996    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
351997    +END;
MPRINT(EM_DIAGRAM):   END;
351998    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
351999    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
352000    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
352001    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
352002    +END;
MPRINT(EM_DIAGRAM):   END;
352003    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352004    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
352005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352007    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
352008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352009    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
352010    +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
352011    +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
352012    +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
352013    +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
352014    +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
352015    +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
352016    +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
352017    +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
352018    +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
352019    +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
352020    +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
352021    +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
352022    +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
352023    +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
352024    +          +    -2.14876852259668 * GRP_MntFishProducts3
352025    +          +     1.83260002021024 * GRP_MntFishProducts4
352026    +          +     0.51096990118592 * GRP_MntGoldProds2
352027    +          +     0.50696068122006 * GRP_MntGoldProds3
352028    +          +     0.74230349643824 * GRP_MntGoldProds4
352029    +          +     1.49045716090612 * GRP_MntMeatProducts2
352030    +          +    -0.61254307122158 * GRP_MntMeatProducts3
352031    +          +     1.56999187930143 * GRP_MntMeatProducts4
352032    +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
352033    +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
352034    +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
352035    +          +     1.58785113957128 * GRP_NumCatalogPurchases4
352036    +          +    -0.62454988809727 * GRP_NumDistPurchases2
352037    +          +     1.37295312356584 * GRP_NumDistPurchases3
352038    +          +      1.5440119795954 * GRP_NumDistPurchases4
352039    +          +    -0.26547715068585 * GRP_NumWebPurchases2
352040    +          +     2.62305554684179 * GRP_NumWebPurchases3
352041    +          +     0.91247524672275 * GRP_NumWebPurchases4
352042    +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
352043    +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
352044    +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
352045    +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
352046    +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
352047    +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
352048    +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
352049    +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
352050    +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
352051    +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
352052    +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
352053    +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
352054    +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
352055    +          +    -1.03235983303498 * GRP_MntFishProducts3
352056    +          +     1.43737242782063 * GRP_MntFishProducts4
352057    +          +    -0.10286834037331 * GRP_MntGoldProds2
352058    +          +     0.74054061895326 * GRP_MntGoldProds3
352059    +          +     0.27916388015938 * GRP_MntGoldProds4
352060    +          +     0.12775665160956 * GRP_MntMeatProducts2
352061    +          +     1.94239791535409 * GRP_MntMeatProducts3
352062    +          +      2.8604089986372 * GRP_MntMeatProducts4
352063    +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
352064    +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
352065    +          +     0.80335076525252 * GRP_NumCatalogPurchases3
352066    +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
352067    +          +    -0.87650147959772 * GRP_NumDistPurchases2
352068    +          +     1.12706069993787 * GRP_NumDistPurchases3
352069    +          +    -1.96498929641584 * GRP_NumDistPurchases4
352070    +          +     1.06875251220076 * GRP_NumWebPurchases2
352071    +          +     1.19584362733739 * GRP_NumWebPurchases3
352072    +          +    -0.75462993535725 * GRP_NumWebPurchases4
352073    +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
352074    +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
352075    +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
352076    +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
352077    +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
352078    +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
352079    +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
352080    +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
352081    +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
352082    +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
352083    +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
352084    +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
352085    +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
352086    +          +    -0.11485741469493 * GRP_MntFishProducts3
352087    +          +     1.45721315298108 * GRP_MntFishProducts4
352088    +          +     0.26086838482974 * GRP_MntGoldProds2
352089    +          +    -0.13326700912822 * GRP_MntGoldProds3
352090    +          +    -0.31998514458297 * GRP_MntGoldProds4
352091    +          +     0.87003612251325 * GRP_MntMeatProducts2
352092    +          +    -0.25985022264915 * GRP_MntMeatProducts3
352093    +          +    -0.87011310494619 * GRP_MntMeatProducts4
352094    +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
352095    +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
352096    +          +     1.20111821881337 * GRP_NumCatalogPurchases3
352097    +          +     1.02378241927709 * GRP_NumCatalogPurchases4
352098    +          +      1.0835984835482 * GRP_NumDistPurchases2
352099    +          +     1.45339482543591 * GRP_NumDistPurchases3
352100    +          +     0.28792255375632 * GRP_NumDistPurchases4
352101    +          +     1.88871344284328 * GRP_NumWebPurchases2
352102    +          +     1.61086784930132 * GRP_NumWebPurchases3
352103    +          +     0.49767560191528 * GRP_NumWebPurchases4
352104    +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
352105    +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
352106    +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
352107    +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
352108    +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
352109    +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
352110    +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
352111    +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
352112    +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
352113    +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
352114    +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
352115    +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
352116    +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
352117    +          +    -0.00259407262353 * GRP_MntFishProducts3
352118    +          +     0.26637234051452 * GRP_MntFishProducts4
352119    +          +     1.23072457246487 * GRP_MntGoldProds2
352120    +          +     0.27789879553199 * GRP_MntGoldProds3
352121    +          +    -1.84318316043809 * GRP_MntGoldProds4
352122    +          +    -0.37980618439099 * GRP_MntMeatProducts2
352123    +          +    -0.29547725841338 * GRP_MntMeatProducts3
352124    +          +      1.3351420752995 * GRP_MntMeatProducts4
352125    +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
352126    +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
352127    +          +     1.64715242240489 * GRP_NumCatalogPurchases3
352128    +          +     0.01013329918753 * GRP_NumCatalogPurchases4
352129    +          +      0.0553124072484 * GRP_NumDistPurchases2
352130    +          +     0.76354979572241 * GRP_NumDistPurchases3
352131    +          +     0.88878742575161 * GRP_NumDistPurchases4
352132    +          +    -0.02629928898859 * GRP_NumWebPurchases2
352133    +          +     1.58583162640849 * GRP_NumWebPurchases3
352134    +          +    -0.90266287490405 * GRP_NumWebPurchases4
352135    +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
352136    +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
352137    +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
352138    +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
352139    +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
352140    +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
352141    +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
352142    +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
352143    +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
352144    +        GRP_Income2  +     2.20143802199151 * GRP_Income3
352145    +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
352146    +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
352147    +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
352148    +          +    -1.66553508839843 * GRP_MntFishProducts3
352149    +          +     3.34099127472134 * GRP_MntFishProducts4
352150    +          +    -3.77620930649926 * GRP_MntGoldProds2
352151    +          +     2.75980592823208 * GRP_MntGoldProds3
352152    +          +    -0.90664928399655 * GRP_MntGoldProds4
352153    +          +    -1.27778215433985 * GRP_MntMeatProducts2
352154    +          +    -0.38584098789626 * GRP_MntMeatProducts3
352155    +          +      0.8642940393434 * GRP_MntMeatProducts4
352156    +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
352157    +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
352158    +          +     0.54374663319998 * GRP_NumCatalogPurchases3
352159    +          +     0.84217480467185 * GRP_NumCatalogPurchases4
352160    +          +    -0.04373645189331 * GRP_NumDistPurchases2
352161    +          +    -3.26167594790936 * GRP_NumDistPurchases3
352162    +          +    -1.17302893253955 * GRP_NumDistPurchases4
352163    +          +     1.08907656354379 * GRP_NumWebPurchases2
352164    +          +    -1.23512651413063 * GRP_NumWebPurchases3
352165    +          +     1.21540059785356 * GRP_NumWebPurchases4
352166    +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
352167    +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
352168    +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
352169    +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
352170    +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
352171    +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
352172    +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
352173    +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
352174    +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
352175    +        GRP_Income2  +     2.31528209254516 * GRP_Income3
352176    +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
352177    +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
352178    +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
352179    +          +    -2.67281939906452 * GRP_MntFishProducts3
352180    +          +     0.40242786465667 * GRP_MntFishProducts4
352181    +          +     1.21530608953831 * GRP_MntGoldProds2
352182    +          +      1.3503878333604 * GRP_MntGoldProds3
352183    +          +    -0.90580344196397 * GRP_MntGoldProds4
352184    +          +    -1.45763540546851 * GRP_MntMeatProducts2
352185    +          +     -1.1437696213546 * GRP_MntMeatProducts3
352186    +          +    -0.95836970043212 * GRP_MntMeatProducts4
352187    +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
352188    +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
352189    +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
352190    +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
352191    +          +     0.41629563300233 * GRP_NumDistPurchases2
352192    +          +     2.64707563295858 * GRP_NumDistPurchases3
352193    +          +    -2.61014123917694 * GRP_NumDistPurchases4
352194    +          +     1.31436489534812 * GRP_NumWebPurchases2
352195    +          +    -0.44152222308186 * GRP_NumWebPurchases3
352196    +          +     1.72168992115176 * GRP_NumWebPurchases4
352197    +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
352198    +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
352199    +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
352200    +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
352201    +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
352202    +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
352203    +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
352204    +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
352205    +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
352206    +        GRP_Income2  +     1.14246001493098 * GRP_Income3
352207    +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
352208    +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
352209    +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
352210    +          +      -0.152562533802 * GRP_MntFishProducts3
352211    +          +     0.16800852501402 * GRP_MntFishProducts4
352212    +          +    -0.43436913890783 * GRP_MntGoldProds2
352213    +          +    -0.36427695823088 * GRP_MntGoldProds3
352214    +          +    -0.70562605444874 * GRP_MntGoldProds4
352215    +          +      1.1896868399991 * GRP_MntMeatProducts2
352216    +          +    -3.25683109762258 * GRP_MntMeatProducts3
352217    +          +     1.07082922763777 * GRP_MntMeatProducts4
352218    +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
352219    +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
352220    +          +     2.86401269707592 * GRP_NumCatalogPurchases3
352221    +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
352222    +          +     1.70072621341351 * GRP_NumDistPurchases2
352223    +          +    -0.01744947613595 * GRP_NumDistPurchases3
352224    +          +    -2.08742260039568 * GRP_NumDistPurchases4
352225    +          +    -1.04444309037822 * GRP_NumWebPurchases2
352226    +          +    -3.12746125340209 * GRP_NumWebPurchases3
352227    +          +    -0.71369198142362 * GRP_NumWebPurchases4
352228    +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
352229    +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
352230    +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
352231    +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
352232    +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
352233    +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
352234    +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
352235    +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
352236    +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
352237    +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
352238    +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
352239    +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
352240    +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
352241    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
352242    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
352243    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
352244    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
352245    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
352246    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
352247    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
352248    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
352249    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
352250    +END;
MPRINT(EM_DIAGRAM):   END;
352251    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
352252    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
352253    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
352254    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
352255    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
352256    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
352257    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
352258    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
352259    +END;
MPRINT(EM_DIAGRAM):   END;
352260    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352261    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
352262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352263    +
352264    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
352265    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
352266    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
352267    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
352268    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
352269    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352270    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
352271    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
352272    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
352273    +end;
MPRINT(EM_DIAGRAM):   end;
352274    +else do;
MPRINT(EM_DIAGRAM):   else do;
352275    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
352276    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
352277    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
352278    +   end;
MPRINT(EM_DIAGRAM):   end;
352279    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
352280    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
352281    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
352282    +   end;
MPRINT(EM_DIAGRAM):   end;
352283    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352284    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
352285    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
352286    +   end;
MPRINT(EM_DIAGRAM):   end;
352287    +end;
MPRINT(EM_DIAGRAM):   end;
352288    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
352289    +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
352290    +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
352291    +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
352292    +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
352293    +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
352294    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
352295    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
352296    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
352297    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
352298    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
352299    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
352300    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
352301    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
352302    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
352303    +END;
MPRINT(EM_DIAGRAM):   END;
352304    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
352305    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
352306    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
352307    +END;
MPRINT(EM_DIAGRAM):   END;
352308    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
352309    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
352310    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
352311    +END;
MPRINT(EM_DIAGRAM):   END;
352312    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
352313    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
352314    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
352315    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
352316    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
352317    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
352318    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
352319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352320    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
352321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
352322    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
352323    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
352324    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
352325    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
352326    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
352327    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
352328    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
352329    +END;
MPRINT(EM_DIAGRAM):   END;
352330    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
352331    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
352332    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
352333    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
352334    +* Renaming variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural22;
352335    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352336    +* Renaming Posterior variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural22;
352337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352338    +drop AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar1;
352339    +AutoNeural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar1 = P_DepVar1;
352340    +drop AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar0;
352341    +AutoNeural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar0 = P_DepVar0;
352342    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352343    +* Renaming _WARN_ variable for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural22;
352344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352345    +length AutoNeural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural22_WARN_ $4;
352346    +drop AutoNeural22_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_WARN_;
352347    +AutoNeural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural22_WARN_ = _WARN_;
352348    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352349    +* Ensmbl48: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 3 of 7;
352350    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352352    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
352353    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
352354    +* NODE: AutoNeural21;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural21;
352355    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
352356    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
352357    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
352358    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
352359    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
352360    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
352361    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
352362    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
352363    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
352364    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
352365    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
352366    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
352367    +LENGTH _WARN_ $4
352368    +      F_DepVar  $ 12
352369    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
352370    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
352371    +
352372    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
352373    +
352374    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
352375    +
352376    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
352377    +
352378    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
352379    +
352380    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
352381    +
352382    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
352383    +
352384    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
352385    +
352386    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
352387    +
352388    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
352389    +
352390    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
352391    +
352392    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
352393    +
352394    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
352395    +
352396    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
352397    +
352398    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
352399    +
352400    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
352401    +
352402    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
352403    +
352404    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
352405    +
352406    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
352407    +
352408    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
352409    +
352410    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
352411    +
352412    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
352413    +
352414    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
352415    +
352416    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
352417    +
352418    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
352419    +
352420    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
352421    +
352422    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
352423    +
352424    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
352425    +
352426    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
352427    +
352428    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
352429    +
352430    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
352431    +
352432    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
352433    +
352434    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
352435    +
352436    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
352437    +
352438    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
352439    +
352440    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
352441    +
352442    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
352443    +
352444    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
352445    +
352446    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
352447    +
352448    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
352449    +
352450    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
352451    +
352452    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
352453    +
352454    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
352455    +
352456    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
352457    +
352458    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
352459    +
352460    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
352461    +
352462    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
352463    +
352464    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
352465    +
352466    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
352467    +
352468    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
352469    +
352470    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
352471    +
352472    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
352473    +
352474    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
352475    +
352476    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
352477    +
352478    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
352479    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
352480    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
352481    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
352482    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352483    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352484    +end;
MPRINT(EM_DIAGRAM):   end;
352485    +else do;
MPRINT(EM_DIAGRAM):   else do;
352486    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352487    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
352488    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352489    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
352490    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
352491    +   end;
MPRINT(EM_DIAGRAM):   end;
352492    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
352493    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
352494    +   end;
MPRINT(EM_DIAGRAM):   end;
352495    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352496    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
352497    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352498    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352499    +   end;
MPRINT(EM_DIAGRAM):   end;
352500    +end;
MPRINT(EM_DIAGRAM):   end;
352501    +
352502    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
352503    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
352504    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
352505    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
352506    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
352507    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
352508    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352509    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352510    +end;
MPRINT(EM_DIAGRAM):   end;
352511    +else do;
MPRINT(EM_DIAGRAM):   else do;
352512    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352513    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
352514    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352515    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
352516    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
352517    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
352518    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
352519    +   end;
MPRINT(EM_DIAGRAM):   end;
352520    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
352521    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
352522    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
352523    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
352524    +   end;
MPRINT(EM_DIAGRAM):   end;
352525    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352526    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
352527    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
352528    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
352529    +   end;
MPRINT(EM_DIAGRAM):   end;
352530    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352531    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
352532    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
352533    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
352534    +   end;
MPRINT(EM_DIAGRAM):   end;
352535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352536    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
352537    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
352538    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
352539    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352540    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352541    +   end;
MPRINT(EM_DIAGRAM):   end;
352542    +end;
MPRINT(EM_DIAGRAM):   end;
352543    +
352544    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
352545    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
352546    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
352547    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
352548    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
352549    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
352550    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352551    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352552    +end;
MPRINT(EM_DIAGRAM):   end;
352553    +else do;
MPRINT(EM_DIAGRAM):   else do;
352554    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352555    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
352556    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352557    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
352558    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
352559    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
352560    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
352561    +   end;
MPRINT(EM_DIAGRAM):   end;
352562    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352563    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
352564    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
352565    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
352566    +   end;
MPRINT(EM_DIAGRAM):   end;
352567    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
352568    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
352569    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
352570    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
352571    +   end;
MPRINT(EM_DIAGRAM):   end;
352572    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352573    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
352574    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
352575    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
352576    +   end;
MPRINT(EM_DIAGRAM):   end;
352577    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352578    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
352579    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
352580    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
352581    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352582    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352583    +   end;
MPRINT(EM_DIAGRAM):   end;
352584    +end;
MPRINT(EM_DIAGRAM):   end;
352585    +
352586    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
352587    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
352588    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
352589    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
352590    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
352591    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
352592    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352593    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352594    +end;
MPRINT(EM_DIAGRAM):   end;
352595    +else do;
MPRINT(EM_DIAGRAM):   else do;
352596    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352597    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
352598    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352599    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352600    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
352601    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
352602    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
352603    +   end;
MPRINT(EM_DIAGRAM):   end;
352604    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352605    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
352606    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
352607    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
352608    +   end;
MPRINT(EM_DIAGRAM):   end;
352609    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352610    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
352611    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
352612    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
352613    +   end;
MPRINT(EM_DIAGRAM):   end;
352614    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352615    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
352616    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
352617    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
352618    +   end;
MPRINT(EM_DIAGRAM):   end;
352619    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352620    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
352621    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
352622    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
352623    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352624    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352625    +   end;
MPRINT(EM_DIAGRAM):   end;
352626    +end;
MPRINT(EM_DIAGRAM):   end;
352627    +
352628    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
352629    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
352630    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
352631    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
352632    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
352633    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
352634    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352635    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352636    +end;
MPRINT(EM_DIAGRAM):   end;
352637    +else do;
MPRINT(EM_DIAGRAM):   else do;
352638    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352639    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
352640    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352641    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352642    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
352643    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
352644    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
352645    +   end;
MPRINT(EM_DIAGRAM):   end;
352646    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352647    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
352648    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
352649    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
352650    +   end;
MPRINT(EM_DIAGRAM):   end;
352651    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352652    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
352653    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
352654    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
352655    +   end;
MPRINT(EM_DIAGRAM):   end;
352656    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352657    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
352658    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
352659    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
352660    +   end;
MPRINT(EM_DIAGRAM):   end;
352661    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352662    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
352663    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
352664    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
352665    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352666    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352667    +   end;
MPRINT(EM_DIAGRAM):   end;
352668    +end;
MPRINT(EM_DIAGRAM):   end;
352669    +
352670    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
352671    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
352672    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
352673    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
352674    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
352675    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
352676    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352677    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352678    +end;
MPRINT(EM_DIAGRAM):   end;
352679    +else do;
MPRINT(EM_DIAGRAM):   else do;
352680    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352681    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
352682    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352683    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352684    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
352685    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
352686    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
352687    +   end;
MPRINT(EM_DIAGRAM):   end;
352688    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352689    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
352690    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
352691    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
352692    +   end;
MPRINT(EM_DIAGRAM):   end;
352693    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352694    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
352695    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
352696    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
352697    +   end;
MPRINT(EM_DIAGRAM):   end;
352698    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352699    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
352700    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
352701    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
352702    +   end;
MPRINT(EM_DIAGRAM):   end;
352703    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352704    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
352705    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
352706    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
352707    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352708    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352709    +   end;
MPRINT(EM_DIAGRAM):   end;
352710    +end;
MPRINT(EM_DIAGRAM):   end;
352711    +
352712    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
352713    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
352714    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
352715    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
352716    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
352717    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
352718    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352719    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352720    +end;
MPRINT(EM_DIAGRAM):   end;
352721    +else do;
MPRINT(EM_DIAGRAM):   else do;
352722    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352723    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
352724    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352725    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352726    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
352727    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
352728    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
352729    +   end;
MPRINT(EM_DIAGRAM):   end;
352730    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352731    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
352732    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
352733    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
352734    +   end;
MPRINT(EM_DIAGRAM):   end;
352735    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352736    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
352737    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
352738    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
352739    +   end;
MPRINT(EM_DIAGRAM):   end;
352740    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352741    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
352742    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
352743    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
352744    +   end;
MPRINT(EM_DIAGRAM):   end;
352745    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352746    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
352747    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
352748    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
352749    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352750    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352751    +   end;
MPRINT(EM_DIAGRAM):   end;
352752    +end;
MPRINT(EM_DIAGRAM):   end;
352753    +
352754    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
352755    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
352756    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
352757    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
352758    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
352759    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
352760    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352761    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352762    +end;
MPRINT(EM_DIAGRAM):   end;
352763    +else do;
MPRINT(EM_DIAGRAM):   else do;
352764    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352765    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
352766    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352767    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352768    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
352769    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
352770    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
352771    +   end;
MPRINT(EM_DIAGRAM):   end;
352772    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352773    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
352774    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
352775    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
352776    +   end;
MPRINT(EM_DIAGRAM):   end;
352777    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352778    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
352779    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
352780    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
352781    +   end;
MPRINT(EM_DIAGRAM):   end;
352782    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352783    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
352784    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
352785    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
352786    +   end;
MPRINT(EM_DIAGRAM):   end;
352787    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352788    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
352789    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
352790    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
352791    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352792    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352793    +   end;
MPRINT(EM_DIAGRAM):   end;
352794    +end;
MPRINT(EM_DIAGRAM):   end;
352795    +
352796    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
352797    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
352798    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
352799    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
352800    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
352801    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352802    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352803    +end;
MPRINT(EM_DIAGRAM):   end;
352804    +else do;
MPRINT(EM_DIAGRAM):   else do;
352805    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352806    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
352807    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352808    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352809    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
352810    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
352811    +   end;
MPRINT(EM_DIAGRAM):   end;
352812    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352813    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
352814    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
352815    +   end;
MPRINT(EM_DIAGRAM):   end;
352816    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352817    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
352818    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
352819    +   end;
MPRINT(EM_DIAGRAM):   end;
352820    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352821    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
352822    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
352823    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352824    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352825    +   end;
MPRINT(EM_DIAGRAM):   end;
352826    +end;
MPRINT(EM_DIAGRAM):   end;
352827    +
352828    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
352829    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
352830    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
352831    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
352832    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
352833    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
352834    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352835    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352836    +end;
MPRINT(EM_DIAGRAM):   end;
352837    +else do;
MPRINT(EM_DIAGRAM):   else do;
352838    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352839    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
352840    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352841    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
352842    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
352843    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
352844    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
352845    +   end;
MPRINT(EM_DIAGRAM):   end;
352846    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352847    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
352848    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
352849    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
352850    +   end;
MPRINT(EM_DIAGRAM):   end;
352851    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352852    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
352853    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
352854    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
352855    +   end;
MPRINT(EM_DIAGRAM):   end;
352856    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
352857    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
352858    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
352859    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
352860    +   end;
MPRINT(EM_DIAGRAM):   end;
352861    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352862    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
352863    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
352864    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
352865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352867    +   end;
MPRINT(EM_DIAGRAM):   end;
352868    +end;
MPRINT(EM_DIAGRAM):   end;
352869    +
352870    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
352871    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
352872    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
352873    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
352874    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
352875    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
352876    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352877    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352878    +end;
MPRINT(EM_DIAGRAM):   end;
352879    +else do;
MPRINT(EM_DIAGRAM):   else do;
352880    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352881    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
352882    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352883    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352884    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
352885    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
352886    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
352887    +   end;
MPRINT(EM_DIAGRAM):   end;
352888    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352889    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
352890    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
352891    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
352892    +   end;
MPRINT(EM_DIAGRAM):   end;
352893    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352894    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
352895    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
352896    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
352897    +   end;
MPRINT(EM_DIAGRAM):   end;
352898    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352899    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
352900    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
352901    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
352902    +   end;
MPRINT(EM_DIAGRAM):   end;
352903    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352904    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
352905    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
352906    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
352907    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352908    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352909    +   end;
MPRINT(EM_DIAGRAM):   end;
352910    +end;
MPRINT(EM_DIAGRAM):   end;
352911    +
352912    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
352913    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
352914    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
352915    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
352916    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
352917    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
352918    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352919    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352920    +end;
MPRINT(EM_DIAGRAM):   end;
352921    +else do;
MPRINT(EM_DIAGRAM):   else do;
352922    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352923    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
352924    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352925    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
352926    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
352927    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
352928    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
352929    +   end;
MPRINT(EM_DIAGRAM):   end;
352930    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
352931    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
352932    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
352933    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
352934    +   end;
MPRINT(EM_DIAGRAM):   end;
352935    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352936    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
352937    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
352938    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
352939    +   end;
MPRINT(EM_DIAGRAM):   end;
352940    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352941    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
352942    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
352943    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
352944    +   end;
MPRINT(EM_DIAGRAM):   end;
352945    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352946    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
352947    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
352948    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
352949    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352950    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352951    +   end;
MPRINT(EM_DIAGRAM):   end;
352952    +end;
MPRINT(EM_DIAGRAM):   end;
352953    +
352954    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
352955    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
352956    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
352957    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
352958    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
352959    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
352960    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
352961    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352962    +end;
MPRINT(EM_DIAGRAM):   end;
352963    +else do;
MPRINT(EM_DIAGRAM):   else do;
352964    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
352965    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
352966    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
352967    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
352968    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
352969    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
352970    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
352971    +   end;
MPRINT(EM_DIAGRAM):   end;
352972    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
352973    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
352974    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
352975    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
352976    +   end;
MPRINT(EM_DIAGRAM):   end;
352977    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
352978    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
352979    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
352980    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
352981    +   end;
MPRINT(EM_DIAGRAM):   end;
352982    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
352983    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
352984    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
352985    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
352986    +   end;
MPRINT(EM_DIAGRAM):   end;
352987    +   else do;
MPRINT(EM_DIAGRAM):   else do;
352988    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
352989    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
352990    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
352991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
352992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
352993    +   end;
MPRINT(EM_DIAGRAM):   end;
352994    +end;
MPRINT(EM_DIAGRAM):   end;
352995    +
352996    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
352997    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
352998    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
352999    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
353000    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
353001    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
353002    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353003    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353004    +end;
MPRINT(EM_DIAGRAM):   end;
353005    +else do;
MPRINT(EM_DIAGRAM):   else do;
353006    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353007    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
353008    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353009    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
353010    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
353011    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
353012    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
353013    +   end;
MPRINT(EM_DIAGRAM):   end;
353014    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353015    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
353016    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
353017    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
353018    +   end;
MPRINT(EM_DIAGRAM):   end;
353019    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
353020    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
353021    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
353022    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
353023    +   end;
MPRINT(EM_DIAGRAM):   end;
353024    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353025    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
353026    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
353027    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
353028    +   end;
MPRINT(EM_DIAGRAM):   end;
353029    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353030    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
353031    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
353032    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
353033    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353034    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353035    +   end;
MPRINT(EM_DIAGRAM):   end;
353036    +end;
MPRINT(EM_DIAGRAM):   end;
353037    +
353038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353039    +*** Checking missing input Interval
353040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
353041    +
353042    +IF NMISS(
353043    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
353044    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
353045    +
353046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353047    +END;
MPRINT(EM_DIAGRAM):   END;
353048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353049    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
353050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353051    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
353052    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
353053    +END;
MPRINT(EM_DIAGRAM):   END;
353054    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
353055    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
353056    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
353057    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
353058    +END;
MPRINT(EM_DIAGRAM):   END;
353059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353060    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
353061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353063    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
353064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353065    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
353066    +   H1x1_1  =     1.28407338963657 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.28407338963657 * S_Year_Birth ;
353067    +   H1x1_2  =     2.38810822597472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.38810822597472 * S_Year_Birth ;
353068    +   H1x1_3  =     -0.7204801808304 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.7204801808304 * S_Year_Birth ;
353069    +   H1x1_4  =    -0.06539124294592 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.06539124294592 * S_Year_Birth ;
353070    +   H1x1_5  =     0.03236440118268 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.03236440118268 * S_Year_Birth ;
353071    +   H1x1_1  = H1x1_1  +     2.33808165856563 * GRP_AcceptedCmp52
353072    +          +    -0.22986949765805 * GRP_Frq2  +     0.35082837363653 * GRP_Frq3
353073    +          +    -0.81539338849938 * GRP_Frq4  +     0.02220909701196 *
353074    +        GRP_Income2  +    -0.13099501713971 * GRP_Income3
353075    +          +     -0.0804536656406 * GRP_Income4  +    -1.59663744670427 *
353076    +        GRP_Mnt2  +    -0.75210072607852 * GRP_Mnt3  +     2.54348518711375 *
353077    +        GRP_Mnt4  +    -1.10495982071076 * GRP_MntFishProducts2
353078    +          +     0.01777635572399 * GRP_MntFishProducts3
353079    +          +     0.64964482065317 * GRP_MntFishProducts4
353080    +          +    -1.04611988857835 * GRP_MntGoldProds2
353081    +          +    -0.78605743432786 * GRP_MntGoldProds3
353082    +          +    -0.66472335544579 * GRP_MntGoldProds4
353083    +          +     1.30740864871492 * GRP_MntMeatProducts2
353084    +          +     2.64958489779167 * GRP_MntMeatProducts3
353085    +          +    -0.07163049651484 * GRP_MntMeatProducts4
353086    +          +     0.25422937257394 * GRP_MntWines2  +     4.96131673300801 *
353087    +        GRP_MntWines3  +     1.19639467926964 * GRP_MntWines4
353088    +          +     1.95336043181706 * GRP_NumCatalogPurchases3
353089    +          +    -1.04651597352668 * GRP_NumCatalogPurchases4
353090    +          +     2.10673800243141 * GRP_NumDistPurchases2
353091    +          +     1.49840431617564 * GRP_NumDistPurchases3
353092    +          +     2.97897302921808 * GRP_NumDistPurchases4
353093    +          +    -0.06881799061639 * GRP_NumWebPurchases2
353094    +          +     2.06509459645382 * GRP_NumWebPurchases3
353095    +          +     2.82361840359249 * GRP_NumWebPurchases4
353096    +          +    -0.22785891000012 * GRP_RFMstat2  +     0.11731067369321 *
353097    +        GRP_RFMstat3  +      2.1473773933678 * GRP_RFMstat4
353098    +          +    -0.84256952222829 * GRP_RMntFrq2  +     0.14220513090593 *
353099    +        GRP_RMntFrq3  +    -0.12372171572674 * GRP_RMntFrq4
353100    +          +    -0.31743815181215 * GRP_Recency2  +    -1.98918978493071 *
353101    +        GRP_Recency3  +    -0.65545972977238 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.33808165856563 * GRP_AcceptedCmp52 + 
-0.22986949765805 * GRP_Frq2 + 0.35082837363653 * GRP_Frq3 + -0.81539338849938 * GRP_Frq4 + 
0.02220909701196 * GRP_Income2 + -0.13099501713971 * GRP_Income3 + -0.0804536656406 * 
GRP_Income4 + -1.59663744670427 * GRP_Mnt2 + -0.75210072607852 * GRP_Mnt3 + 2.54348518711375 * 
GRP_Mnt4 + -1.10495982071076 * GRP_MntFishProducts2 + 0.01777635572399 * GRP_MntFishProducts3 
+ 0.64964482065317 * GRP_MntFishProducts4 + -1.04611988857835 * GRP_MntGoldProds2 + 
-0.78605743432786 * GRP_MntGoldProds3 + -0.66472335544579 * GRP_MntGoldProds4 + 
1.30740864871492 * GRP_MntMeatProducts2 + 2.64958489779167 * GRP_MntMeatProducts3 + 
-0.07163049651484 * GRP_MntMeatProducts4 + 0.25422937257394 * GRP_MntWines2 + 4.96131673300801 
* GRP_MntWines3 + 1.19639467926964 * GRP_MntWines4 + 1.95336043181706 * 
GRP_NumCatalogPurchases3 + -1.04651597352668 * GRP_NumCatalogPurchases4 + 2.10673800243141 * 
GRP_NumDistPurchases2 + 1.49840431617564 * GRP_NumDistPurchases3 + 2.97897302921808 * 
GRP_NumDistPurchases4 + -0.06881799061639 * GRP_NumWebPurchases2 + 2.06509459645382 * 
GRP_NumWebPurchases3 + 2.82361840359249 * GRP_NumWebPurchases4 + -0.22785891000012 * 
GRP_RFMstat2 + 0.11731067369321 * GRP_RFMstat3 + 2.1473773933678 * GRP_RFMstat4 + 
-0.84256952222829 * GRP_RMntFrq2 + 0.14220513090593 * GRP_RMntFrq3 + -0.12372171572674 * 
GRP_RMntFrq4 + -0.31743815181215 * GRP_Recency2 + -1.98918978493071 * GRP_Recency3 + 
-0.65545972977238 * GRP_Recency4 ;
353102    +   H1x1_2  = H1x1_2  +     0.33200444555787 * GRP_AcceptedCmp52
353103    +          +     -0.8934566312976 * GRP_Frq2  +    -0.00243983936395 * GRP_Frq3
353104    +          +     0.63648993363629 * GRP_Frq4  +     0.05197343322571 *
353105    +        GRP_Income2  +     0.68177129296873 * GRP_Income3
353106    +          +     1.16889856198675 * GRP_Income4  +     0.52345733778819 *
353107    +        GRP_Mnt2  +     0.86891568330214 * GRP_Mnt3  +    -1.01013818778187 *
353108    +        GRP_Mnt4  +     0.01260306109505 * GRP_MntFishProducts2
353109    +          +     0.36267476732712 * GRP_MntFishProducts3
353110    +          +     -0.0117944700646 * GRP_MntFishProducts4
353111    +          +    -2.60247007794362 * GRP_MntGoldProds2
353112    +          +     1.49175629619075 * GRP_MntGoldProds3
353113    +          +     1.15735621033648 * GRP_MntGoldProds4
353114    +          +     -0.8857925625722 * GRP_MntMeatProducts2
353115    +          +    -1.11977905267757 * GRP_MntMeatProducts3
353116    +          +     0.89317411392862 * GRP_MntMeatProducts4
353117    +          +     1.08362434913444 * GRP_MntWines2  +    -2.34573154102981 *
353118    +        GRP_MntWines3  +    -1.04821908065864 * GRP_MntWines4
353119    +          +    -1.24280966967211 * GRP_NumCatalogPurchases3
353120    +          +      3.0326089053041 * GRP_NumCatalogPurchases4
353121    +          +     0.04779959574354 * GRP_NumDistPurchases2
353122    +          +     1.71017115843439 * GRP_NumDistPurchases3
353123    +          +     0.53628643929359 * GRP_NumDistPurchases4
353124    +          +     0.89950827667194 * GRP_NumWebPurchases2
353125    +          +    -0.92684592689592 * GRP_NumWebPurchases3
353126    +          +     2.96876986636503 * GRP_NumWebPurchases4
353127    +          +     0.63124526160033 * GRP_RFMstat2  +     1.50566150377083 *
353128    +        GRP_RFMstat3  +     1.62201671855053 * GRP_RFMstat4
353129    +          +     1.20404881746786 * GRP_RMntFrq2  +    -0.61586201148662 *
353130    +        GRP_RMntFrq3  +    -1.45102172370413 * GRP_RMntFrq4
353131    +          +     0.89969425569035 * GRP_Recency2  +     0.72245574147873 *
353132    +        GRP_Recency3  +     2.83083807801553 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.33200444555787 * GRP_AcceptedCmp52 + 
-0.8934566312976 * GRP_Frq2 + -0.00243983936395 * GRP_Frq3 + 0.63648993363629 * GRP_Frq4 + 
0.05197343322571 * GRP_Income2 + 0.68177129296873 * GRP_Income3 + 1.16889856198675 * 
GRP_Income4 + 0.52345733778819 * GRP_Mnt2 + 0.86891568330214 * GRP_Mnt3 + -1.01013818778187 * 
GRP_Mnt4 + 0.01260306109505 * GRP_MntFishProducts2 + 0.36267476732712 * GRP_MntFishProducts3 + 
-0.0117944700646 * GRP_MntFishProducts4 + -2.60247007794362 * GRP_MntGoldProds2 + 
1.49175629619075 * GRP_MntGoldProds3 + 1.15735621033648 * GRP_MntGoldProds4 + -0.8857925625722 
* GRP_MntMeatProducts2 + -1.11977905267757 * GRP_MntMeatProducts3 + 0.89317411392862 * 
GRP_MntMeatProducts4 + 1.08362434913444 * GRP_MntWines2 + -2.34573154102981 * GRP_MntWines3 + 
-1.04821908065864 * GRP_MntWines4 + -1.24280966967211 * GRP_NumCatalogPurchases3 + 
3.0326089053041 * GRP_NumCatalogPurchases4 + 0.04779959574354 * GRP_NumDistPurchases2 + 
1.71017115843439 * GRP_NumDistPurchases3 + 0.53628643929359 * GRP_NumDistPurchases4 + 
0.89950827667194 * GRP_NumWebPurchases2 + -0.92684592689592 * GRP_NumWebPurchases3 + 
2.96876986636503 * GRP_NumWebPurchases4 + 0.63124526160033 * GRP_RFMstat2 + 1.50566150377083 * 
GRP_RFMstat3 + 1.62201671855053 * GRP_RFMstat4 + 1.20404881746786 * GRP_RMntFrq2 + 
-0.61586201148662 * GRP_RMntFrq3 + -1.45102172370413 * GRP_RMntFrq4 + 0.89969425569035 * 
GRP_Recency2 + 0.72245574147873 * GRP_Recency3 + 2.83083807801553 * GRP_Recency4 ;
353133    +   H1x1_3  = H1x1_3  +    -0.49052681984122 * GRP_AcceptedCmp52
353134    +          +     0.05710791956099 * GRP_Frq2  +     1.88983418164026 * GRP_Frq3
353135    +          +     0.23283788572694 * GRP_Frq4  +    -0.80169095220425 *
353136    +        GRP_Income2  +    -1.74093887199998 * GRP_Income3
353137    +          +    -0.35184466623661 * GRP_Income4  +     0.02791690171447 *
353138    +        GRP_Mnt2  +    -2.20424160961867 * GRP_Mnt3  +     0.50765331628654 *
353139    +        GRP_Mnt4  +     0.29403246554661 * GRP_MntFishProducts2
353140    +          +    -0.83380418052364 * GRP_MntFishProducts3
353141    +          +    -1.82543627661138 * GRP_MntFishProducts4
353142    +          +     0.39365380396703 * GRP_MntGoldProds2
353143    +          +     0.03998618589682 * GRP_MntGoldProds3
353144    +          +    -1.56455277750616 * GRP_MntGoldProds4
353145    +          +     0.07220994129439 * GRP_MntMeatProducts2
353146    +          +     1.10999034367361 * GRP_MntMeatProducts3
353147    +          +     0.63528886514116 * GRP_MntMeatProducts4
353148    +          +    -1.82455352991516 * GRP_MntWines2  +    -0.37467219689144 *
353149    +        GRP_MntWines3  +     0.51071844252207 * GRP_MntWines4
353150    +          +    -0.21422031720258 * GRP_NumCatalogPurchases3
353151    +          +    -3.11364867963994 * GRP_NumCatalogPurchases4
353152    +          +    -0.08758432252505 * GRP_NumDistPurchases2
353153    +          +    -0.24735131829279 * GRP_NumDistPurchases3
353154    +          +     1.22135970166178 * GRP_NumDistPurchases4
353155    +          +     0.57769775812299 * GRP_NumWebPurchases2
353156    +          +     4.20512829375782 * GRP_NumWebPurchases3
353157    +          +    -0.77892811708123 * GRP_NumWebPurchases4
353158    +          +    -1.48591575907258 * GRP_RFMstat2  +    -0.02715745890283 *
353159    +        GRP_RFMstat3  +    -1.82753253216976 * GRP_RFMstat4
353160    +          +     0.63517164755033 * GRP_RMntFrq2  +     3.41625861410136 *
353161    +        GRP_RMntFrq3  +    -1.06016238729643 * GRP_RMntFrq4
353162    +          +     0.96560069161334 * GRP_Recency2  +     2.60413272119793 *
353163    +        GRP_Recency3  +    -1.02278922860839 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.49052681984122 * GRP_AcceptedCmp52 + 
0.05710791956099 * GRP_Frq2 + 1.88983418164026 * GRP_Frq3 + 0.23283788572694 * GRP_Frq4 + 
-0.80169095220425 * GRP_Income2 + -1.74093887199998 * GRP_Income3 + -0.35184466623661 * 
GRP_Income4 + 0.02791690171447 * GRP_Mnt2 + -2.20424160961867 * GRP_Mnt3 + 0.50765331628654 * 
GRP_Mnt4 + 0.29403246554661 * GRP_MntFishProducts2 + -0.83380418052364 * GRP_MntFishProducts3 
+ -1.82543627661138 * GRP_MntFishProducts4 + 0.39365380396703 * GRP_MntGoldProds2 + 
0.03998618589682 * GRP_MntGoldProds3 + -1.56455277750616 * GRP_MntGoldProds4 + 
0.07220994129439 * GRP_MntMeatProducts2 + 1.10999034367361 * GRP_MntMeatProducts3 + 
0.63528886514116 * GRP_MntMeatProducts4 + -1.82455352991516 * GRP_MntWines2 + 
-0.37467219689144 * GRP_MntWines3 + 0.51071844252207 * GRP_MntWines4 + -0.21422031720258 * 
GRP_NumCatalogPurchases3 + -3.11364867963994 * GRP_NumCatalogPurchases4 + -0.08758432252505 * 
GRP_NumDistPurchases2 + -0.24735131829279 * GRP_NumDistPurchases3 + 1.22135970166178 * 
GRP_NumDistPurchases4 + 0.57769775812299 * GRP_NumWebPurchases2 + 4.20512829375782 * 
GRP_NumWebPurchases3 + -0.77892811708123 * GRP_NumWebPurchases4 + -1.48591575907258 * 
GRP_RFMstat2 + -0.02715745890283 * GRP_RFMstat3 + -1.82753253216976 * GRP_RFMstat4 + 
0.63517164755033 * GRP_RMntFrq2 + 3.41625861410136 * GRP_RMntFrq3 + -1.06016238729643 * 
GRP_RMntFrq4 + 0.96560069161334 * GRP_Recency2 + 2.60413272119793 * GRP_Recency3 + 
-1.02278922860839 * GRP_Recency4 ;
353164    +   H1x1_4  = H1x1_4  +    -3.02372554661072 * GRP_AcceptedCmp52
353165    +          +     1.03599850000215 * GRP_Frq2  +     2.24242470356718 * GRP_Frq3
353166    +          +      3.4718187916521 * GRP_Frq4  +     1.28707236613409 *
353167    +        GRP_Income2  +    -1.54838965127225 * GRP_Income3
353168    +          +     2.52665199719571 * GRP_Income4  +    -2.14598289769275 *
353169    +        GRP_Mnt2  +    -1.04082723723167 * GRP_Mnt3  +    -1.68747662808983 *
353170    +        GRP_Mnt4  +     -0.8736100922486 * GRP_MntFishProducts2
353171    +          +     0.12779836724514 * GRP_MntFishProducts3
353172    +          +     0.60216313416651 * GRP_MntFishProducts4
353173    +          +     0.68165487174749 * GRP_MntGoldProds2
353174    +          +    -0.89672475622939 * GRP_MntGoldProds3
353175    +          +    -1.77795912962804 * GRP_MntGoldProds4
353176    +          +    -0.74193637631708 * GRP_MntMeatProducts2
353177    +          +    -3.00981763564253 * GRP_MntMeatProducts3
353178    +          +    -0.98818439514034 * GRP_MntMeatProducts4
353179    +          +    -0.81552449599254 * GRP_MntWines2  +    -1.24481835102021 *
353180    +        GRP_MntWines3  +     0.58877118654504 * GRP_MntWines4
353181    +          +    -0.10424789545355 * GRP_NumCatalogPurchases3
353182    +          +    -1.76322947168567 * GRP_NumCatalogPurchases4
353183    +          +     0.28024987640988 * GRP_NumDistPurchases2
353184    +          +    -0.26195842187994 * GRP_NumDistPurchases3
353185    +          +     1.27465783090106 * GRP_NumDistPurchases4
353186    +          +     0.56044035795721 * GRP_NumWebPurchases2
353187    +          +     -1.0019608410124 * GRP_NumWebPurchases3
353188    +          +    -1.00438490557229 * GRP_NumWebPurchases4
353189    +          +      0.1961165620509 * GRP_RFMstat2  +    -0.64166582924081 *
353190    +        GRP_RFMstat3  +     1.80597898183848 * GRP_RFMstat4
353191    +          +       0.012135091764 * GRP_RMntFrq2  +     -1.6713653901367 *
353192    +        GRP_RMntFrq3  +    -0.99155260811599 * GRP_RMntFrq4
353193    +          +    -1.41207701933445 * GRP_Recency2  +    -1.44162495285758 *
353194    +        GRP_Recency3  +    -1.33328278459656 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -3.02372554661072 * GRP_AcceptedCmp52 + 
1.03599850000215 * GRP_Frq2 + 2.24242470356718 * GRP_Frq3 + 3.4718187916521 * GRP_Frq4 + 
1.28707236613409 * GRP_Income2 + -1.54838965127225 * GRP_Income3 + 2.52665199719571 * 
GRP_Income4 + -2.14598289769275 * GRP_Mnt2 + -1.04082723723167 * GRP_Mnt3 + -1.68747662808983 
* GRP_Mnt4 + -0.8736100922486 * GRP_MntFishProducts2 + 0.12779836724514 * GRP_MntFishProducts3 
+ 0.60216313416651 * GRP_MntFishProducts4 + 0.68165487174749 * GRP_MntGoldProds2 + 
-0.89672475622939 * GRP_MntGoldProds3 + -1.77795912962804 * GRP_MntGoldProds4 + 
-0.74193637631708 * GRP_MntMeatProducts2 + -3.00981763564253 * GRP_MntMeatProducts3 + 
-0.98818439514034 * GRP_MntMeatProducts4 + -0.81552449599254 * GRP_MntWines2 + 
-1.24481835102021 * GRP_MntWines3 + 0.58877118654504 * GRP_MntWines4 + -0.10424789545355 * 
GRP_NumCatalogPurchases3 + -1.76322947168567 * GRP_NumCatalogPurchases4 + 0.28024987640988 * 
GRP_NumDistPurchases2 + -0.26195842187994 * GRP_NumDistPurchases3 + 1.27465783090106 * 
GRP_NumDistPurchases4 + 0.56044035795721 * GRP_NumWebPurchases2 + -1.0019608410124 * 
GRP_NumWebPurchases3 + -1.00438490557229 * GRP_NumWebPurchases4 + 0.1961165620509 * 
GRP_RFMstat2 + -0.64166582924081 * GRP_RFMstat3 + 1.80597898183848 * GRP_RFMstat4 + 
0.012135091764 * GRP_RMntFrq2 + -1.6713653901367 * GRP_RMntFrq3 + -0.99155260811599 * 
GRP_RMntFrq4 + -1.41207701933445 * GRP_Recency2 + -1.44162495285758 * GRP_Recency3 + 
-1.33328278459656 * GRP_Recency4 ;
353195    +   H1x1_5  = H1x1_5  +    -2.91353005427803 * GRP_AcceptedCmp52
353196    +          +    -0.01308096407334 * GRP_Frq2  +    -0.45559322170718 * GRP_Frq3
353197    +          +    -0.49751279425547 * GRP_Frq4  +     0.02860594561374 *
353198    +        GRP_Income2  +     1.41758925806391 * GRP_Income3
353199    +          +     0.03726548596251 * GRP_Income4  +    -1.57900147909252 *
353200    +        GRP_Mnt2  +      2.3511697752438 * GRP_Mnt3  +     0.88048248424859 *
353201    +        GRP_Mnt4  +    -0.56545409501904 * GRP_MntFishProducts2
353202    +          +    -3.10608760567335 * GRP_MntFishProducts3
353203    +          +     1.06400320622897 * GRP_MntFishProducts4
353204    +          +     2.68670541844486 * GRP_MntGoldProds2
353205    +          +     0.07232195736653 * GRP_MntGoldProds3
353206    +          +     1.85531703888295 * GRP_MntGoldProds4
353207    +          +    -1.87162230531925 * GRP_MntMeatProducts2
353208    +          +    -1.13875662802599 * GRP_MntMeatProducts3
353209    +          +    -0.24099135606782 * GRP_MntMeatProducts4
353210    +          +    -0.13235213570702 * GRP_MntWines2  +    -0.50193070898101 *
353211    +        GRP_MntWines3  +     -0.1999771853027 * GRP_MntWines4
353212    +          +    -1.59837823433046 * GRP_NumCatalogPurchases3
353213    +          +    -3.92043146311091 * GRP_NumCatalogPurchases4
353214    +          +    -0.99805577329855 * GRP_NumDistPurchases2
353215    +          +     -2.4067364238872 * GRP_NumDistPurchases3
353216    +          +     0.25924131471222 * GRP_NumDistPurchases4
353217    +          +     0.70743157783391 * GRP_NumWebPurchases2
353218    +          +    -2.55740259562506 * GRP_NumWebPurchases3
353219    +          +     1.49837454147543 * GRP_NumWebPurchases4
353220    +          +     0.02282459900932 * GRP_RFMstat2  +     2.49823188893146 *
353221    +        GRP_RFMstat3  +      0.0125770688182 * GRP_RFMstat4
353222    +          +    -0.52646059416986 * GRP_RMntFrq2  +     0.48734306173312 *
353223    +        GRP_RMntFrq3  +     1.20982084491791 * GRP_RMntFrq4
353224    +          +     1.46024730556461 * GRP_Recency2  +     1.39328521843098 *
353225    +        GRP_Recency3  +     0.07072877455933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.91353005427803 * GRP_AcceptedCmp52 + 
-0.01308096407334 * GRP_Frq2 + -0.45559322170718 * GRP_Frq3 + -0.49751279425547 * GRP_Frq4 + 
0.02860594561374 * GRP_Income2 + 1.41758925806391 * GRP_Income3 + 0.03726548596251 * 
GRP_Income4 + -1.57900147909252 * GRP_Mnt2 + 2.3511697752438 * GRP_Mnt3 + 0.88048248424859 * 
GRP_Mnt4 + -0.56545409501904 * GRP_MntFishProducts2 + -3.10608760567335 * GRP_MntFishProducts3 
+ 1.06400320622897 * GRP_MntFishProducts4 + 2.68670541844486 * GRP_MntGoldProds2 + 
0.07232195736653 * GRP_MntGoldProds3 + 1.85531703888295 * GRP_MntGoldProds4 + 
-1.87162230531925 * GRP_MntMeatProducts2 + -1.13875662802599 * GRP_MntMeatProducts3 + 
-0.24099135606782 * GRP_MntMeatProducts4 + -0.13235213570702 * GRP_MntWines2 + 
-0.50193070898101 * GRP_MntWines3 + -0.1999771853027 * GRP_MntWines4 + -1.59837823433046 * 
GRP_NumCatalogPurchases3 + -3.92043146311091 * GRP_NumCatalogPurchases4 + -0.99805577329855 * 
GRP_NumDistPurchases2 + -2.4067364238872 * GRP_NumDistPurchases3 + 0.25924131471222 * 
GRP_NumDistPurchases4 + 0.70743157783391 * GRP_NumWebPurchases2 + -2.55740259562506 * 
GRP_NumWebPurchases3 + 1.49837454147543 * GRP_NumWebPurchases4 + 0.02282459900932 * 
GRP_RFMstat2 + 2.49823188893146 * GRP_RFMstat3 + 0.0125770688182 * GRP_RFMstat4 + 
-0.52646059416986 * GRP_RMntFrq2 + 0.48734306173312 * GRP_RMntFrq3 + 1.20982084491791 * 
GRP_RMntFrq4 + 1.46024730556461 * GRP_Recency2 + 1.39328521843098 * GRP_Recency3 + 
0.07072877455933 * GRP_Recency4 ;
353226    +   H1x1_1  =     2.28517939702199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.28517939702199 + H1x1_1 ;
353227    +   H1x1_2  =      0.8100923065727 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.8100923065727 + H1x1_2 ;
353228    +   H1x1_3  =    -1.33120225377486 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.33120225377486 + H1x1_3 ;
353229    +   H1x1_4  =    -0.45230391783078 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.45230391783078 + H1x1_4 ;
353230    +   H1x1_5  =    -0.40460344381081 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.40460344381081 + H1x1_5 ;
353231    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
353232    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
353233    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
353234    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
353235    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
353236    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
353237    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
353238    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
353239    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
353240    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
353241    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
353242    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
353243    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
353244    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
353245    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
353246    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
353247    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
353248    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
353249    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
353250    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
353251    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
353252    +END;
MPRINT(EM_DIAGRAM):   END;
353253    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
353254    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
353255    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
353256    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
353257    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
353258    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
353259    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
353260    +END;
MPRINT(EM_DIAGRAM):   END;
353261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353262    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
353263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353264    +
353265    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
353266    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
353267    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
353268    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
353269    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
353270    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353271    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
353272    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
353273    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
353274    +end;
MPRINT(EM_DIAGRAM):   end;
353275    +else do;
MPRINT(EM_DIAGRAM):   else do;
353276    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
353277    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
353278    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
353279    +   end;
MPRINT(EM_DIAGRAM):   end;
353280    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
353281    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
353282    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
353283    +   end;
MPRINT(EM_DIAGRAM):   end;
353284    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353285    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
353286    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
353287    +   end;
MPRINT(EM_DIAGRAM):   end;
353288    +end;
MPRINT(EM_DIAGRAM):   end;
353289    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
353290    +   P_DepVar1  =    -2.81431269255211 * H1x1_1  +       3.440967475001 * H1x1_2
353291    +          +     0.80588527631153 * H1x1_3  +    -2.86385782353564 * H1x1_4
353292    +          +     4.10205776026281 * H1x1_5  +    -2.89048426961502 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.81431269255211 * H1x1_1 + 3.440967475001 * H1x1_2 + 
0.80588527631153 * H1x1_3 + -2.86385782353564 * H1x1_4 + 4.10205776026281 * H1x1_5 + 
-2.89048426961502 * H1x1_6 ;
353293    +   P_DepVar1  =    -1.38440437244113 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.38440437244113 + P_DepVar1 ;
353294    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
353295    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
353296    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
353297    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
353298    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
353299    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
353300    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
353301    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
353302    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
353303    +END;
MPRINT(EM_DIAGRAM):   END;
353304    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
353305    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
353306    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
353307    +END;
MPRINT(EM_DIAGRAM):   END;
353308    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
353309    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
353310    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
353311    +END;
MPRINT(EM_DIAGRAM):   END;
353312    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
353313    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
353314    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
353315    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
353316    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
353317    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
353318    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
353319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353320    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
353321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
353322    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
353323    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
353324    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
353325    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
353326    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
353327    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
353328    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
353329    +END;
MPRINT(EM_DIAGRAM):   END;
353330    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
353331    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
353332    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
353333    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
353334    +* Renaming variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural21;
353335    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353336    +* Renaming Posterior variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural21;
353337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353338    +drop AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar1;
353339    +AutoNeural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar1 = P_DepVar1;
353340    +drop AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar0;
353341    +AutoNeural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar0 = P_DepVar0;
353342    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353343    +* Renaming _WARN_ variable for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural21;
353344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353345    +length AutoNeural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural21_WARN_ $4;
353346    +drop AutoNeural21_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_WARN_;
353347    +AutoNeural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural21_WARN_ = _WARN_;
353348    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353349    +* Ensmbl48: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 4 of 7;
353350    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353352    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
353353    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
353354    +* NODE: AutoNeural20;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural20;
353355    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
353356    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
353357    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
353358    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
353359    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
353360    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
353361    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
353362    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
353363    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
353364    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
353365    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
353366    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
353367    +LENGTH _WARN_ $4
353368    +      F_DepVar  $ 12
353369    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
353370    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
353371    +
353372    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
353373    +
353374    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
353375    +
353376    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
353377    +
353378    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
353379    +
353380    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
353381    +
353382    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
353383    +
353384    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
353385    +
353386    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
353387    +
353388    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
353389    +
353390    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
353391    +
353392    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
353393    +
353394    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
353395    +
353396    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
353397    +
353398    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
353399    +
353400    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
353401    +
353402    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
353403    +
353404    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
353405    +
353406    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
353407    +
353408    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
353409    +
353410    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
353411    +
353412    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
353413    +
353414    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
353415    +
353416    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
353417    +
353418    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
353419    +
353420    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
353421    +
353422    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
353423    +
353424    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
353425    +
353426    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
353427    +
353428    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
353429    +
353430    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
353431    +
353432    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
353433    +
353434    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
353435    +
353436    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
353437    +
353438    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
353439    +
353440    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
353441    +
353442    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
353443    +
353444    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
353445    +
353446    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
353447    +
353448    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
353449    +
353450    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
353451    +
353452    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
353453    +
353454    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
353455    +
353456    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
353457    +
353458    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
353459    +
353460    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
353461    +
353462    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
353463    +
353464    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
353465    +
353466    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
353467    +
353468    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
353469    +
353470    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
353471    +
353472    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
353473    +
353474    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
353475    +
353476    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
353477    +
353478    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
353479    +
353480    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
353481    +
353482    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
353483    +
353484    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
353485    +
353486    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
353487    +
353488    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
353489    +
353490    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
353491    +
353492    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
353493    +
353494    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
353495    +
353496    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
353497    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
353498    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
353499    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
353500    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353501    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353502    +end;
MPRINT(EM_DIAGRAM):   end;
353503    +else do;
MPRINT(EM_DIAGRAM):   else do;
353504    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353505    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
353506    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
The SAS System

353507    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
353508    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
353509    +   end;
MPRINT(EM_DIAGRAM):   end;
353510    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
353511    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
353512    +   end;
MPRINT(EM_DIAGRAM):   end;
353513    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353514    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
353515    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353516    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353517    +   end;
MPRINT(EM_DIAGRAM):   end;
353518    +end;
MPRINT(EM_DIAGRAM):   end;
353519    +
353520    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
353521    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
353522    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
353523    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
353524    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
353525    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
353526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353528    +end;
MPRINT(EM_DIAGRAM):   end;
353529    +else do;
MPRINT(EM_DIAGRAM):   else do;
353530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353531    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
353532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353533    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
353534    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
353535    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
353536    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
353537    +   end;
MPRINT(EM_DIAGRAM):   end;
353538    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
353539    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
353540    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
353541    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
353542    +   end;
MPRINT(EM_DIAGRAM):   end;
353543    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353544    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
353545    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
353546    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
353547    +   end;
MPRINT(EM_DIAGRAM):   end;
353548    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353549    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
353550    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
353551    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
353552    +   end;
MPRINT(EM_DIAGRAM):   end;
353553    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353554    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
353555    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
353556    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
353557    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353558    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353559    +   end;
MPRINT(EM_DIAGRAM):   end;
353560    +end;
MPRINT(EM_DIAGRAM):   end;
353561    +
353562    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
353563    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
353564    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
353565    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
353566    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
353567    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
353568    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353569    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353570    +end;
MPRINT(EM_DIAGRAM):   end;
353571    +else do;
MPRINT(EM_DIAGRAM):   else do;
353572    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353573    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
353574    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353575    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
353576    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
353577    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
353578    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
353579    +   end;
MPRINT(EM_DIAGRAM):   end;
353580    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353581    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
353582    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
353583    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
353584    +   end;
MPRINT(EM_DIAGRAM):   end;
353585    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
353586    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
353587    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
353588    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
353589    +   end;
MPRINT(EM_DIAGRAM):   end;
353590    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353591    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
353592    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
353593    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
353594    +   end;
MPRINT(EM_DIAGRAM):   end;
353595    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353596    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
353597    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
353598    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
353599    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353600    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353601    +   end;
MPRINT(EM_DIAGRAM):   end;
353602    +end;
MPRINT(EM_DIAGRAM):   end;
353603    +
353604    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
353605    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
353606    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
353607    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
353608    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
353609    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
353610    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353611    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353612    +end;
MPRINT(EM_DIAGRAM):   end;
353613    +else do;
MPRINT(EM_DIAGRAM):   else do;
353614    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353615    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
353616    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353617    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353618    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
353619    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
353620    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
353621    +   end;
MPRINT(EM_DIAGRAM):   end;
353622    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353623    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
353624    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
353625    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
353626    +   end;
MPRINT(EM_DIAGRAM):   end;
353627    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353628    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
353629    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
353630    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
353631    +   end;
MPRINT(EM_DIAGRAM):   end;
353632    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353633    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
353634    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
353635    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
353636    +   end;
MPRINT(EM_DIAGRAM):   end;
353637    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353638    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
353639    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
353640    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
353641    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353642    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353643    +   end;
MPRINT(EM_DIAGRAM):   end;
353644    +end;
MPRINT(EM_DIAGRAM):   end;
353645    +
353646    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
353647    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
353648    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
353649    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
353650    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
353651    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
353652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353654    +end;
MPRINT(EM_DIAGRAM):   end;
353655    +else do;
MPRINT(EM_DIAGRAM):   else do;
353656    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353657    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
353658    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353659    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353660    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
353661    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
353662    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
353663    +   end;
MPRINT(EM_DIAGRAM):   end;
353664    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353665    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
353666    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
353667    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
353668    +   end;
MPRINT(EM_DIAGRAM):   end;
353669    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353670    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
353671    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
353672    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
353673    +   end;
MPRINT(EM_DIAGRAM):   end;
353674    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353675    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
353676    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
353677    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
353678    +   end;
MPRINT(EM_DIAGRAM):   end;
353679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353680    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
353681    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
353682    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
353683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353685    +   end;
MPRINT(EM_DIAGRAM):   end;
353686    +end;
MPRINT(EM_DIAGRAM):   end;
353687    +
353688    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
353689    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
353690    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
353691    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
353692    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
353693    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
353694    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353696    +end;
MPRINT(EM_DIAGRAM):   end;
353697    +else do;
MPRINT(EM_DIAGRAM):   else do;
353698    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353699    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
353700    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353701    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353702    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
353703    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
353704    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
353705    +   end;
MPRINT(EM_DIAGRAM):   end;
353706    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353707    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
353708    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
353709    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
353710    +   end;
MPRINT(EM_DIAGRAM):   end;
353711    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353712    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
353713    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
353714    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
353715    +   end;
MPRINT(EM_DIAGRAM):   end;
353716    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353717    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
353718    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
353719    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
353720    +   end;
MPRINT(EM_DIAGRAM):   end;
353721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353722    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
353723    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
353724    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
353725    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353726    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353727    +   end;
MPRINT(EM_DIAGRAM):   end;
353728    +end;
MPRINT(EM_DIAGRAM):   end;
353729    +
353730    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
353731    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
353732    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
353733    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
353734    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
353735    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
353736    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353737    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353738    +end;
MPRINT(EM_DIAGRAM):   end;
353739    +else do;
MPRINT(EM_DIAGRAM):   else do;
353740    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353741    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
353742    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353743    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353744    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
353745    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
353746    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
353747    +   end;
MPRINT(EM_DIAGRAM):   end;
353748    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353749    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
353750    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
353751    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
353752    +   end;
MPRINT(EM_DIAGRAM):   end;
353753    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353754    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
353755    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
353756    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
353757    +   end;
MPRINT(EM_DIAGRAM):   end;
353758    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353759    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
353760    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
353761    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
353762    +   end;
MPRINT(EM_DIAGRAM):   end;
353763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353764    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
353765    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
353766    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
353767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353769    +   end;
MPRINT(EM_DIAGRAM):   end;
353770    +end;
MPRINT(EM_DIAGRAM):   end;
353771    +
353772    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
353773    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
353774    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
353775    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
353776    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
353777    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
353778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353780    +end;
MPRINT(EM_DIAGRAM):   end;
353781    +else do;
MPRINT(EM_DIAGRAM):   else do;
353782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353783    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
353784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353785    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353786    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
353787    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
353788    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
353789    +   end;
MPRINT(EM_DIAGRAM):   end;
353790    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353791    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
353792    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
353793    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
353794    +   end;
MPRINT(EM_DIAGRAM):   end;
353795    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353796    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
353797    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
353798    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
353799    +   end;
MPRINT(EM_DIAGRAM):   end;
353800    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353801    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
353802    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
353803    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
353804    +   end;
MPRINT(EM_DIAGRAM):   end;
353805    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353806    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
353807    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
353808    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
353809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353811    +   end;
MPRINT(EM_DIAGRAM):   end;
353812    +end;
MPRINT(EM_DIAGRAM):   end;
353813    +
353814    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
353815    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
353816    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
353817    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
353818    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
353819    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353820    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353821    +end;
MPRINT(EM_DIAGRAM):   end;
353822    +else do;
MPRINT(EM_DIAGRAM):   else do;
353823    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353824    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
353825    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353826    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353827    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
353828    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
353829    +   end;
MPRINT(EM_DIAGRAM):   end;
353830    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353831    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
353832    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
353833    +   end;
MPRINT(EM_DIAGRAM):   end;
353834    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353835    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
353836    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
353837    +   end;
MPRINT(EM_DIAGRAM):   end;
353838    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353839    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
353840    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
353841    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353842    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353843    +   end;
MPRINT(EM_DIAGRAM):   end;
353844    +end;
MPRINT(EM_DIAGRAM):   end;
353845    +
353846    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
353847    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
353848    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
353849    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
353850    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
353851    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
353852    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353853    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353854    +end;
MPRINT(EM_DIAGRAM):   end;
353855    +else do;
MPRINT(EM_DIAGRAM):   else do;
353856    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353857    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
353858    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353859    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
353860    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
353861    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
353862    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
353863    +   end;
MPRINT(EM_DIAGRAM):   end;
353864    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353865    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
353866    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
353867    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
353868    +   end;
MPRINT(EM_DIAGRAM):   end;
353869    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353870    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
353871    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
353872    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
353873    +   end;
MPRINT(EM_DIAGRAM):   end;
353874    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
353875    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
353876    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
353877    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
353878    +   end;
MPRINT(EM_DIAGRAM):   end;
353879    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353880    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
353881    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
353882    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
353883    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353884    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353885    +   end;
MPRINT(EM_DIAGRAM):   end;
353886    +end;
MPRINT(EM_DIAGRAM):   end;
353887    +
353888    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
353889    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
353890    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
353891    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
353892    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
353893    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
353894    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353896    +end;
MPRINT(EM_DIAGRAM):   end;
353897    +else do;
MPRINT(EM_DIAGRAM):   else do;
353898    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353899    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
353900    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353901    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353902    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
353903    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
353904    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
353905    +   end;
MPRINT(EM_DIAGRAM):   end;
353906    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353907    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
353908    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
353909    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
353910    +   end;
MPRINT(EM_DIAGRAM):   end;
353911    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353912    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
353913    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
353914    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
353915    +   end;
MPRINT(EM_DIAGRAM):   end;
353916    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353917    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
353918    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
353919    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
353920    +   end;
MPRINT(EM_DIAGRAM):   end;
353921    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353922    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
353923    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
353924    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
353925    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353926    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353927    +   end;
MPRINT(EM_DIAGRAM):   end;
353928    +end;
MPRINT(EM_DIAGRAM):   end;
353929    +
353930    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
353931    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
353932    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
353933    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
353934    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
353935    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
353936    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353937    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353938    +end;
MPRINT(EM_DIAGRAM):   end;
353939    +else do;
MPRINT(EM_DIAGRAM):   else do;
353940    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353941    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
353942    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353943    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
353944    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
353945    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
353946    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
353947    +   end;
MPRINT(EM_DIAGRAM):   end;
353948    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
353949    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
353950    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
353951    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
353952    +   end;
MPRINT(EM_DIAGRAM):   end;
353953    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353954    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
353955    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
353956    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
353957    +   end;
MPRINT(EM_DIAGRAM):   end;
353958    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
353959    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
353960    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
353961    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
353962    +   end;
MPRINT(EM_DIAGRAM):   end;
353963    +   else do;
MPRINT(EM_DIAGRAM):   else do;
353964    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
353965    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
353966    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
353967    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
353968    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353969    +   end;
MPRINT(EM_DIAGRAM):   end;
353970    +end;
MPRINT(EM_DIAGRAM):   end;
353971    +
353972    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
353973    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
353974    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
353975    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
353976    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
353977    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
353978    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
353979    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
353980    +end;
MPRINT(EM_DIAGRAM):   end;
353981    +else do;
MPRINT(EM_DIAGRAM):   else do;
353982    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
353983    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
353984    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
353985    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
353986    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
353987    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
353988    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
353989    +   end;
MPRINT(EM_DIAGRAM):   end;
353990    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
353991    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
353992    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
353993    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
353994    +   end;
MPRINT(EM_DIAGRAM):   end;
353995    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
353996    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
353997    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
353998    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
353999    +   end;
MPRINT(EM_DIAGRAM):   end;
354000    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354001    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
354002    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
354003    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
354004    +   end;
MPRINT(EM_DIAGRAM):   end;
354005    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354006    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
354007    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
354008    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
354009    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354010    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354011    +   end;
MPRINT(EM_DIAGRAM):   end;
354012    +end;
MPRINT(EM_DIAGRAM):   end;
354013    +
354014    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
354015    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
354016    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
354017    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
354018    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
354019    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
354020    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354021    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354022    +end;
MPRINT(EM_DIAGRAM):   end;
354023    +else do;
MPRINT(EM_DIAGRAM):   else do;
354024    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354025    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
354026    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354027    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
354028    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
354029    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
354030    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
354031    +   end;
MPRINT(EM_DIAGRAM):   end;
354032    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
354033    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
354034    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
354035    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
354036    +   end;
MPRINT(EM_DIAGRAM):   end;
354037    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
354038    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
354039    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
354040    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
354041    +   end;
MPRINT(EM_DIAGRAM):   end;
354042    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354043    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
354044    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
354045    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
354046    +   end;
MPRINT(EM_DIAGRAM):   end;
354047    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354048    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
354049    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
354050    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
354051    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354052    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354053    +   end;
MPRINT(EM_DIAGRAM):   end;
354054    +end;
MPRINT(EM_DIAGRAM):   end;
354055    +
354056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354057    +*** Checking missing input Interval
354058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
354059    +
354060    +IF NMISS(
354061    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
354062    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
354063    +
354064    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354065    +END;
MPRINT(EM_DIAGRAM):   END;
354066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354067    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
354068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354069    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
354070    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
354071    +END;
MPRINT(EM_DIAGRAM):   END;
354072    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
354073    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
354074    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
354075    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
354076    +END;
MPRINT(EM_DIAGRAM):   END;
354077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354078    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
354079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354081    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
354082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354083    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
354084    +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
354085    +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
354086    +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
354087    +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
354088    +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
354089    +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
354090    +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
354091    +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
354092    +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
354093    +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
354094    +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
354095    +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
354096    +          +    -1.92253913417034 * GRP_MntFishProducts3
354097    +          +     0.11236967036572 * GRP_MntFishProducts4
354098    +          +     1.55117451498964 * GRP_MntGoldProds2
354099    +          +    -2.17638819155912 * GRP_MntGoldProds3
354100    +          +     1.12471370225173 * GRP_MntGoldProds4
354101    +          +     0.73773441156548 * GRP_MntMeatProducts2
354102    +          +     2.07738910661633 * GRP_MntMeatProducts3
354103    +          +    -0.64280630173292 * GRP_MntMeatProducts4
354104    +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
354105    +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
354106    +          +     0.27137671258246 * GRP_NumCatalogPurchases3
354107    +          +     1.17769351442984 * GRP_NumCatalogPurchases4
354108    +          +     1.22104662684375 * GRP_NumDistPurchases2
354109    +          +      3.4956187335148 * GRP_NumDistPurchases3
354110    +          +     1.44110988448724 * GRP_NumDistPurchases4
354111    +          +    -0.15910531424988 * GRP_NumWebPurchases2
354112    +          +      2.0651216353476 * GRP_NumWebPurchases3
354113    +          +     1.88264340284474 * GRP_NumWebPurchases4
354114    +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
354115    +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
354116    +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
354117    +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
354118    +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
354119    +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
354120    +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
354121    +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
354122    +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
354123    +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
354124    +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
354125    +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
354126    +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
354127    +          +     0.69185352158005 * GRP_MntFishProducts3
354128    +          +    -0.03493178084029 * GRP_MntFishProducts4
354129    +          +     1.51100187776315 * GRP_MntGoldProds2
354130    +          +     0.06501688279193 * GRP_MntGoldProds3
354131    +          +    -0.39137744731231 * GRP_MntGoldProds4
354132    +          +    -1.71718837423104 * GRP_MntMeatProducts2
354133    +          +    -2.21915390243757 * GRP_MntMeatProducts3
354134    +          +    -0.56748587906854 * GRP_MntMeatProducts4
354135    +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
354136    +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
354137    +          +     1.48903401021544 * GRP_NumCatalogPurchases3
354138    +          +     1.17263293507207 * GRP_NumCatalogPurchases4
354139    +          +     1.51105230747578 * GRP_NumDistPurchases2
354140    +          +     0.77634340058478 * GRP_NumDistPurchases3
354141    +          +    -0.03088809375301 * GRP_NumDistPurchases4
354142    +          +    -0.96601789395554 * GRP_NumWebPurchases2
354143    +          +     0.85040977160083 * GRP_NumWebPurchases3
354144    +          +     2.40308918299781 * GRP_NumWebPurchases4
354145    +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
354146    +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
354147    +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
354148    +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
354149    +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
354150    +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
354151    +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
354152    +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
354153    +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
354154    +        GRP_Income2  +     1.18033291239845 * GRP_Income3
354155    +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
354156    +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
354157    +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
354158    +          +    -0.25133476006515 * GRP_MntFishProducts3
354159    +          +     1.43382012526151 * GRP_MntFishProducts4
354160    +          +      0.6587510367878 * GRP_MntGoldProds2
354161    +          +    -2.29815972364167 * GRP_MntGoldProds3
354162    +          +    -1.17878838514109 * GRP_MntGoldProds4
354163    +          +    -1.45630165039671 * GRP_MntMeatProducts2
354164    +          +    -0.11970663820977 * GRP_MntMeatProducts3
354165    +          +    -0.76333182688138 * GRP_MntMeatProducts4
354166    +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
354167    +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
354168    +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
354169    +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
354170    +          +    -0.83062872942088 * GRP_NumDistPurchases2
354171    +          +      1.2644984519337 * GRP_NumDistPurchases3
354172    +          +     0.62516412515385 * GRP_NumDistPurchases4
354173    +          +    -0.91932392687811 * GRP_NumWebPurchases2
354174    +          +     0.63985001179952 * GRP_NumWebPurchases3
354175    +          +     0.11379774354586 * GRP_NumWebPurchases4
354176    +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
354177    +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
354178    +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
354179    +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
354180    +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
354181    +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
354182    +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
354183    +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
354184    +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
354185    +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
354186    +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
354187    +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
354188    +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
354189    +          +     0.25005234850524 * GRP_MntFishProducts3
354190    +          +    -0.07970714752313 * GRP_MntFishProducts4
354191    +          +     -0.7495440064059 * GRP_MntGoldProds2
354192    +          +     -0.0659148563739 * GRP_MntGoldProds3
354193    +          +    -1.42445075896946 * GRP_MntGoldProds4
354194    +          +      0.1738975461322 * GRP_MntMeatProducts2
354195    +          +    -2.24799164386156 * GRP_MntMeatProducts3
354196    +          +    -1.67754357341899 * GRP_MntMeatProducts4
354197    +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
354198    +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
354199    +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
354200    +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
354201    +          +    -0.48267351716569 * GRP_NumDistPurchases2
354202    +          +     0.93211719554417 * GRP_NumDistPurchases3
354203    +          +      1.1708430486506 * GRP_NumDistPurchases4
354204    +          +     0.03811902892169 * GRP_NumWebPurchases2
354205    +          +    -1.51477371309928 * GRP_NumWebPurchases3
354206    +          +     1.07378297590898 * GRP_NumWebPurchases4
354207    +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
354208    +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
354209    +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
354210    +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
354211    +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
354212    +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
354213    +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
354214    +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
354215    +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
354216    +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
354217    +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
354218    +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
354219    +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
354220    +          +    -1.49559041774587 * GRP_MntFishProducts3
354221    +          +     1.29292270443546 * GRP_MntFishProducts4
354222    +          +     3.28109415592287 * GRP_MntGoldProds2
354223    +          +     0.40523569115651 * GRP_MntGoldProds3
354224    +          +        0.70305704265 * GRP_MntGoldProds4
354225    +          +    -1.85351989681271 * GRP_MntMeatProducts2
354226    +          +    -0.63625311683955 * GRP_MntMeatProducts3
354227    +          +     0.27320544681113 * GRP_MntMeatProducts4
354228    +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
354229    +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
354230    +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
354231    +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
354232    +          +    -1.40970961318877 * GRP_NumDistPurchases2
354233    +          +     -2.5780841761751 * GRP_NumDistPurchases3
354234    +          +    -0.35557998232484 * GRP_NumDistPurchases4
354235    +          +     1.27746944985248 * GRP_NumWebPurchases2
354236    +          +     0.69463977283169 * GRP_NumWebPurchases3
354237    +          +    -0.54397813851169 * GRP_NumWebPurchases4
354238    +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
354239    +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
354240    +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
354241    +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
354242    +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
354243    +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
354244    +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
354245    +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
354246    +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
354247    +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
354248    +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
354249    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
354250    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
354251    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
354252    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
354253    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
354254    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
354255    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
354256    +END;
MPRINT(EM_DIAGRAM):   END;
354257    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
354258    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
354259    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
354260    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
354261    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
354262    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
354263    +END;
MPRINT(EM_DIAGRAM):   END;
354264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354265    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
354266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354267    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
354268    +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
354269    +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
354270    +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
354271    +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
354272    +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
354273    +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
354274    +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
354275    +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
354276    +        GRP_Income2  +      2.4308303101124 * GRP_Income3
354277    +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
354278    +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
354279    +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
354280    +          +     2.51364109656281 * GRP_MntFishProducts3
354281    +          +    -1.42490007484769 * GRP_MntFishProducts4
354282    +          +    -0.45125943648795 * GRP_MntGoldProds2
354283    +          +     2.47102254724134 * GRP_MntGoldProds3
354284    +          +     -1.9039173262792 * GRP_MntGoldProds4
354285    +          +     0.19349291706995 * GRP_MntMeatProducts2
354286    +          +     1.13475826324844 * GRP_MntMeatProducts3
354287    +          +    -0.33642288502432 * GRP_MntMeatProducts4
354288    +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
354289    +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
354290    +          +     0.15659125827236 * GRP_NumCatalogPurchases3
354291    +          +     0.32817066335176 * GRP_NumCatalogPurchases4
354292    +          +    -0.67313821415044 * GRP_NumDistPurchases2
354293    +          +    -0.96239937857546 * GRP_NumDistPurchases3
354294    +          +     0.32058507897383 * GRP_NumDistPurchases4
354295    +          +     0.02503658374779 * GRP_NumWebPurchases2
354296    +          +    -2.42182777667863 * GRP_NumWebPurchases3
354297    +          +     1.09934791830799 * GRP_NumWebPurchases4
354298    +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
354299    +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
354300    +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
354301    +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
354302    +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
354303    +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
354304    +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
354305    +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
354306    +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
354307    +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
354308    +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
354309    +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
354310    +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
354311    +          +    -0.68769529687639 * GRP_MntFishProducts3
354312    +          +     0.91046416847697 * GRP_MntFishProducts4
354313    +          +     1.93581182421904 * GRP_MntGoldProds2
354314    +          +     0.00795466624941 * GRP_MntGoldProds3
354315    +          +    -0.22854189252742 * GRP_MntGoldProds4
354316    +          +     0.51645804440055 * GRP_MntMeatProducts2
354317    +          +    -0.73677565057958 * GRP_MntMeatProducts3
354318    +          +    -3.38222954402665 * GRP_MntMeatProducts4
354319    +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
354320    +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
354321    +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
354322    +          +     0.92868654767551 * GRP_NumCatalogPurchases4
354323    +          +    -0.18642581919214 * GRP_NumDistPurchases2
354324    +          +     0.32117397006136 * GRP_NumDistPurchases3
354325    +          +    -0.59059080451748 * GRP_NumDistPurchases4
354326    +          +    -1.05057528699441 * GRP_NumWebPurchases2
354327    +          +    -0.84936431958655 * GRP_NumWebPurchases3
354328    +          +     0.43322339989668 * GRP_NumWebPurchases4
354329    +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
354330    +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
354331    +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
354332    +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
354333    +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
354334    +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
354335    +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
354336    +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
354337    +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
354338    +        GRP_Income2  +     2.06545795697617 * GRP_Income3
354339    +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
354340    +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
354341    +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
354342    +          +     -0.2747383185488 * GRP_MntFishProducts3
354343    +          +     0.05699547232616 * GRP_MntFishProducts4
354344    +          +     1.78340082221807 * GRP_MntGoldProds2
354345    +          +    -0.21272258173805 * GRP_MntGoldProds3
354346    +          +    -0.63881612523162 * GRP_MntGoldProds4
354347    +          +     0.35743242018534 * GRP_MntMeatProducts2
354348    +          +     0.39288166088974 * GRP_MntMeatProducts3
354349    +          +     0.68623350973697 * GRP_MntMeatProducts4
354350    +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
354351    +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
354352    +          +     0.38349558810511 * GRP_NumCatalogPurchases3
354353    +          +     0.94944817324412 * GRP_NumCatalogPurchases4
354354    +          +     0.87924710032772 * GRP_NumDistPurchases2
354355    +          +     0.54658799433949 * GRP_NumDistPurchases3
354356    +          +     1.85594529989185 * GRP_NumDistPurchases4
354357    +          +    -0.66471569231333 * GRP_NumWebPurchases2
354358    +          +    -0.59461900037355 * GRP_NumWebPurchases3
354359    +          +     0.12806083458682 * GRP_NumWebPurchases4
354360    +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
354361    +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
354362    +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
354363    +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
354364    +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
354365    +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
354366    +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
354367    +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
354368    +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
354369    +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
354370    +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
354371    +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
354372    +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
354373    +          +    -0.50962348735329 * GRP_MntFishProducts3
354374    +          +    -1.75841654964734 * GRP_MntFishProducts4
354375    +          +     2.14839745385174 * GRP_MntGoldProds2
354376    +          +      2.4716387157729 * GRP_MntGoldProds3
354377    +          +     0.61286996367418 * GRP_MntGoldProds4
354378    +          +     1.45427097683349 * GRP_MntMeatProducts2
354379    +          +    -0.34990206215878 * GRP_MntMeatProducts3
354380    +          +     2.25284175811484 * GRP_MntMeatProducts4
354381    +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
354382    +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
354383    +          +     1.02272173939472 * GRP_NumCatalogPurchases3
354384    +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
354385    +          +    -0.44080685652484 * GRP_NumDistPurchases2
354386    +          +     2.40613428385819 * GRP_NumDistPurchases3
354387    +          +     0.26317801067025 * GRP_NumDistPurchases4
354388    +          +     2.34961138802546 * GRP_NumWebPurchases2
354389    +          +     2.35826990005342 * GRP_NumWebPurchases3
354390    +          +     0.18496434892584 * GRP_NumWebPurchases4
354391    +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
354392    +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
354393    +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
354394    +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
354395    +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
354396    +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
354397    +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
354398    +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
354399    +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
354400    +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
354401    +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
354402    +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
354403    +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
354404    +          +     -2.3817205567109 * GRP_MntFishProducts3
354405    +          +      1.4356293091772 * GRP_MntFishProducts4
354406    +          +    -1.03209023546079 * GRP_MntGoldProds2
354407    +          +     1.93949728331263 * GRP_MntGoldProds3
354408    +          +     0.44849194130528 * GRP_MntGoldProds4
354409    +          +     1.34973896956794 * GRP_MntMeatProducts2
354410    +          +     1.40989126474294 * GRP_MntMeatProducts3
354411    +          +     0.74435387703611 * GRP_MntMeatProducts4
354412    +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
354413    +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
354414    +          +     1.65449574071289 * GRP_NumCatalogPurchases3
354415    +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
354416    +          +    -0.76749528874396 * GRP_NumDistPurchases2
354417    +          +     1.83370965910825 * GRP_NumDistPurchases3
354418    +          +    -0.73709156569506 * GRP_NumDistPurchases4
354419    +          +     0.09215124428658 * GRP_NumWebPurchases2
354420    +          +      1.0403096068891 * GRP_NumWebPurchases3
354421    +          +     0.59317560741224 * GRP_NumWebPurchases4
354422    +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
354423    +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
354424    +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
354425    +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
354426    +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
354427    +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
354428    +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
354429    +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
354430    +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
354431    +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
354432    +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
354433    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
354434    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
354435    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
354436    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
354437    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
354438    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
354439    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
354440    +END;
MPRINT(EM_DIAGRAM):   END;
354441    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
354442    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
354443    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
354444    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
354445    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
354446    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
354447    +END;
MPRINT(EM_DIAGRAM):   END;
354448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354449    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
354450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354451    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
354452    +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
354453    +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
354454    +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
354455    +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
354456    +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
354457    +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
354458    +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
354459    +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
354460    +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
354461    +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
354462    +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
354463    +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
354464    +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
354465    +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
354466    +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
354467    +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
354468    +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
354469    +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
354470    +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
354471    +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
354472    +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
354473    +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
354474    +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
354475    +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
354476    +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
354477    +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
354478    +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
354479    +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
354480    +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
354481    +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
354482    +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
354483    +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
354484    +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
354485    +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
354486    +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
354487    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
354488    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
354489    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
354490    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
354491    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
354492    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
354493    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
354494    +END;
MPRINT(EM_DIAGRAM):   END;
354495    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
354496    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
354497    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
354498    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
354499    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
354500    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
354501    +END;
MPRINT(EM_DIAGRAM):   END;
354502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354503    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
354504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354505    +
354506    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
354507    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
354508    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
354509    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
354510    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
354511    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354512    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
354513    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
354514    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
354515    +end;
MPRINT(EM_DIAGRAM):   end;
354516    +else do;
MPRINT(EM_DIAGRAM):   else do;
354517    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
354518    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
354519    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
354520    +   end;
MPRINT(EM_DIAGRAM):   end;
354521    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
354522    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
354523    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
354524    +   end;
MPRINT(EM_DIAGRAM):   end;
354525    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354526    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
354527    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
354528    +   end;
MPRINT(EM_DIAGRAM):   end;
354529    +end;
MPRINT(EM_DIAGRAM):   end;
354530    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
354531    +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
354532    +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
354533    +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
354534    +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
354535    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
354536    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
354537    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
354538    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
354539    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
354540    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
354541    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
354542    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
354543    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
354544    +END;
MPRINT(EM_DIAGRAM):   END;
354545    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
354546    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
354547    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
354548    +END;
MPRINT(EM_DIAGRAM):   END;
354549    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
354550    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
354551    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
354552    +END;
MPRINT(EM_DIAGRAM):   END;
354553    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
354554    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
354555    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
354556    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
354557    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
354558    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
354559    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
354560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354561    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
354562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
354563    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
354564    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
354565    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
354566    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
354567    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
354568    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
354569    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
354570    +END;
MPRINT(EM_DIAGRAM):   END;
354571    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
354572    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
354573    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
354574    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
354575    +* Renaming variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural20;
354576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354577    +* Renaming Posterior variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural20;
354578    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354579    +drop AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar1;
354580    +AutoNeural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar1 = P_DepVar1;
354581    +drop AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar0;
354582    +AutoNeural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar0 = P_DepVar0;
354583    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354584    +* Renaming _WARN_ variable for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural20;
354585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354586    +length AutoNeural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural20_WARN_ $4;
354587    +drop AutoNeural20_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_WARN_;
354588    +AutoNeural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural20_WARN_ = _WARN_;
354589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354590    +* Ensmbl48: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 5 of 7;
354591    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354592    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354593    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
354594    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
354595    +* NODE: AutoNeural26;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural26;
354596    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
354597    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
354598    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
354599    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
354600    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
354601    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
354602    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
354603    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
354604    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
354605    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
354606    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
354607    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
354608    +LENGTH _WARN_ $4
354609    +      F_DepVar  $ 12
354610    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
354611    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
354612    +
354613    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
354614    +
354615    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
354616    +
354617    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
354618    +
354619    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
354620    +
354621    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
354622    +
354623    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
354624    +
354625    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
354626    +
354627    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
354628    +
354629    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
354630    +
354631    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
354632    +
354633    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
354634    +
354635    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
354636    +
354637    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
354638    +
354639    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
354640    +
354641    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
354642    +
354643    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
354644    +
354645    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
354646    +
354647    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
354648    +
354649    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
354650    +
354651    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
354652    +
354653    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
354654    +
354655    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
354656    +
354657    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
354658    +
354659    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
354660    +
354661    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
354662    +
354663    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
354664    +
354665    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
354666    +
354667    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
354668    +
354669    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
354670    +
354671    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
354672    +
354673    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
354674    +
354675    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
354676    +
354677    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
354678    +
354679    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
354680    +
354681    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
354682    +
354683    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
354684    +
354685    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
354686    +
354687    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
354688    +
354689    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
354690    +
354691    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
354692    +
354693    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
354694    +
354695    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
354696    +
354697    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
354698    +
354699    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
354700    +
354701    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
354702    +
354703    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
354704    +
354705    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
354706    +
354707    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
354708    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
354709    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
354710    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
354711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354713    +end;
MPRINT(EM_DIAGRAM):   end;
354714    +else do;
MPRINT(EM_DIAGRAM):   else do;
354715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354716    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
354717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354718    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
354719    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
354720    +   end;
MPRINT(EM_DIAGRAM):   end;
354721    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
354722    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
354723    +   end;
MPRINT(EM_DIAGRAM):   end;
354724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354725    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
354726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354728    +   end;
MPRINT(EM_DIAGRAM):   end;
354729    +end;
MPRINT(EM_DIAGRAM):   end;
354730    +
354731    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
354732    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
354733    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
354734    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
354735    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
354736    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
354737    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354738    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354739    +end;
MPRINT(EM_DIAGRAM):   end;
354740    +else do;
MPRINT(EM_DIAGRAM):   else do;
354741    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354742    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
354743    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354744    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
354745    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
354746    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
354747    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
354748    +   end;
MPRINT(EM_DIAGRAM):   end;
354749    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
354750    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
354751    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
354752    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
354753    +   end;
MPRINT(EM_DIAGRAM):   end;
354754    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
354755    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
354756    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
354757    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
354758    +   end;
MPRINT(EM_DIAGRAM):   end;
354759    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354760    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
354761    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
354762    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
354763    +   end;
MPRINT(EM_DIAGRAM):   end;
354764    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354765    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
354766    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
354767    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
354768    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354769    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354770    +   end;
MPRINT(EM_DIAGRAM):   end;
354771    +end;
MPRINT(EM_DIAGRAM):   end;
354772    +
354773    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
354774    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
354775    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
354776    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
354777    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
354778    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
354779    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354780    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354781    +end;
MPRINT(EM_DIAGRAM):   end;
354782    +else do;
MPRINT(EM_DIAGRAM):   else do;
354783    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354784    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
354785    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354786    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
354787    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
354788    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
354789    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
354790    +   end;
MPRINT(EM_DIAGRAM):   end;
354791    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
354792    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
354793    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
354794    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
354795    +   end;
MPRINT(EM_DIAGRAM):   end;
354796    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
354797    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
354798    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
354799    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
354800    +   end;
MPRINT(EM_DIAGRAM):   end;
354801    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354802    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
354803    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
354804    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
354805    +   end;
MPRINT(EM_DIAGRAM):   end;
354806    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354807    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
354808    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
354809    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
354810    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354811    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354812    +   end;
MPRINT(EM_DIAGRAM):   end;
354813    +end;
MPRINT(EM_DIAGRAM):   end;
354814    +
354815    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
354816    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
354817    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
354818    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
354819    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
354820    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
354821    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354822    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354823    +end;
MPRINT(EM_DIAGRAM):   end;
354824    +else do;
MPRINT(EM_DIAGRAM):   else do;
354825    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354826    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
354827    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354828    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
354829    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
354830    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
354831    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
354832    +   end;
MPRINT(EM_DIAGRAM):   end;
354833    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
354834    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
354835    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
354836    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
354837    +   end;
MPRINT(EM_DIAGRAM):   end;
354838    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
354839    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
354840    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
354841    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
354842    +   end;
MPRINT(EM_DIAGRAM):   end;
354843    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354844    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
354845    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
354846    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
354847    +   end;
MPRINT(EM_DIAGRAM):   end;
354848    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354849    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
354850    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
354851    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
354852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354854    +   end;
MPRINT(EM_DIAGRAM):   end;
354855    +end;
MPRINT(EM_DIAGRAM):   end;
354856    +
354857    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
354858    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
354859    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
354860    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
354861    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
354862    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
354863    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354864    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354865    +end;
MPRINT(EM_DIAGRAM):   end;
354866    +else do;
MPRINT(EM_DIAGRAM):   else do;
354867    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354868    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
354869    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354870    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
354871    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
354872    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
354873    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
354874    +   end;
MPRINT(EM_DIAGRAM):   end;
354875    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
354876    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
354877    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
354878    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
354879    +   end;
MPRINT(EM_DIAGRAM):   end;
354880    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
354881    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
354882    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
354883    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
354884    +   end;
MPRINT(EM_DIAGRAM):   end;
354885    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354886    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
354887    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
354888    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
354889    +   end;
MPRINT(EM_DIAGRAM):   end;
354890    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354891    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
354892    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
354893    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
354894    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354895    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354896    +   end;
MPRINT(EM_DIAGRAM):   end;
354897    +end;
MPRINT(EM_DIAGRAM):   end;
354898    +
354899    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
354900    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
354901    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
354902    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
354903    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
354904    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
354905    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354906    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354907    +end;
MPRINT(EM_DIAGRAM):   end;
354908    +else do;
MPRINT(EM_DIAGRAM):   else do;
354909    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354910    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
354911    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354912    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
354913    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
354914    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
354915    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
354916    +   end;
MPRINT(EM_DIAGRAM):   end;
354917    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
354918    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
354919    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
354920    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
354921    +   end;
MPRINT(EM_DIAGRAM):   end;
354922    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
354923    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
354924    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
354925    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
354926    +   end;
MPRINT(EM_DIAGRAM):   end;
354927    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354928    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
354929    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
354930    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
354931    +   end;
MPRINT(EM_DIAGRAM):   end;
354932    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354933    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
354934    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
354935    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
354936    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354937    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354938    +   end;
MPRINT(EM_DIAGRAM):   end;
354939    +end;
MPRINT(EM_DIAGRAM):   end;
354940    +
354941    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
354942    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
354943    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
354944    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
354945    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
354946    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
354947    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354948    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354949    +end;
MPRINT(EM_DIAGRAM):   end;
354950    +else do;
MPRINT(EM_DIAGRAM):   else do;
354951    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354952    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
354953    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354954    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
354955    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
354956    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
354957    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
354958    +   end;
MPRINT(EM_DIAGRAM):   end;
354959    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
354960    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
354961    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
354962    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
354963    +   end;
MPRINT(EM_DIAGRAM):   end;
354964    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
354965    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
354966    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
354967    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
354968    +   end;
MPRINT(EM_DIAGRAM):   end;
354969    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
354970    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
354971    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
354972    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
354973    +   end;
MPRINT(EM_DIAGRAM):   end;
354974    +   else do;
MPRINT(EM_DIAGRAM):   else do;
354975    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
354976    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
354977    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
354978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
354979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354980    +   end;
MPRINT(EM_DIAGRAM):   end;
354981    +end;
MPRINT(EM_DIAGRAM):   end;
354982    +
354983    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
354984    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
354985    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
354986    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
354987    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
354988    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
354989    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
354990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
354991    +end;
MPRINT(EM_DIAGRAM):   end;
354992    +else do;
MPRINT(EM_DIAGRAM):   else do;
354993    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
354994    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
354995    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
354996    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
354997    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
354998    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
354999    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
355000    +   end;
MPRINT(EM_DIAGRAM):   end;
355001    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355002    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
355003    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
355004    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
355005    +   end;
MPRINT(EM_DIAGRAM):   end;
355006    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355007    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
355008    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
355009    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
355010    +   end;
MPRINT(EM_DIAGRAM):   end;
355011    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355012    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
355013    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
355014    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
355015    +   end;
MPRINT(EM_DIAGRAM):   end;
355016    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355017    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
355018    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
355019    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
355020    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355021    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355022    +   end;
MPRINT(EM_DIAGRAM):   end;
355023    +end;
MPRINT(EM_DIAGRAM):   end;
355024    +
355025    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
355026    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
355027    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
355028    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
355029    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
355030    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355031    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355032    +end;
MPRINT(EM_DIAGRAM):   end;
355033    +else do;
MPRINT(EM_DIAGRAM):   else do;
355034    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355035    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
355036    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355037    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355038    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
355039    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
355040    +   end;
MPRINT(EM_DIAGRAM):   end;
355041    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355042    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
355043    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
355044    +   end;
MPRINT(EM_DIAGRAM):   end;
355045    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355046    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
355047    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
355048    +   end;
MPRINT(EM_DIAGRAM):   end;
355049    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355050    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
355051    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
355052    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355053    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355054    +   end;
MPRINT(EM_DIAGRAM):   end;
355055    +end;
MPRINT(EM_DIAGRAM):   end;
355056    +
355057    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
355058    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
355059    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
355060    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
355061    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
355062    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
355063    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355064    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355065    +end;
MPRINT(EM_DIAGRAM):   end;
355066    +else do;
MPRINT(EM_DIAGRAM):   else do;
355067    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355068    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
355069    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355070    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
355071    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
355072    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
355073    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
355074    +   end;
MPRINT(EM_DIAGRAM):   end;
355075    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355076    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
355077    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
355078    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
355079    +   end;
MPRINT(EM_DIAGRAM):   end;
355080    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355081    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
355082    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
355083    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
355084    +   end;
MPRINT(EM_DIAGRAM):   end;
355085    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355086    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
355087    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
355088    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
355089    +   end;
MPRINT(EM_DIAGRAM):   end;
355090    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355091    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
355092    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
355093    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
355094    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355095    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355096    +   end;
MPRINT(EM_DIAGRAM):   end;
355097    +end;
MPRINT(EM_DIAGRAM):   end;
355098    +
355099    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
355100    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
355101    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
355102    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
355103    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
355104    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
355105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355107    +end;
MPRINT(EM_DIAGRAM):   end;
355108    +else do;
MPRINT(EM_DIAGRAM):   else do;
355109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355110    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
355111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355112    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355113    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
355114    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
355115    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
355116    +   end;
MPRINT(EM_DIAGRAM):   end;
355117    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355118    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
355119    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
355120    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
355121    +   end;
MPRINT(EM_DIAGRAM):   end;
355122    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355123    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
355124    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
355125    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
355126    +   end;
MPRINT(EM_DIAGRAM):   end;
355127    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355128    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
355129    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
355130    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
355131    +   end;
MPRINT(EM_DIAGRAM):   end;
355132    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355133    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
355134    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
355135    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
355136    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355137    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355138    +   end;
MPRINT(EM_DIAGRAM):   end;
355139    +end;
MPRINT(EM_DIAGRAM):   end;
355140    +
355141    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
355142    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
355143    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
355144    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
355145    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
355146    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
355147    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355148    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355149    +end;
MPRINT(EM_DIAGRAM):   end;
355150    +else do;
MPRINT(EM_DIAGRAM):   else do;
355151    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355152    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
355153    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355154    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
355155    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
355156    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
355157    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
355158    +   end;
MPRINT(EM_DIAGRAM):   end;
355159    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355160    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
355161    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
355162    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
355163    +   end;
MPRINT(EM_DIAGRAM):   end;
355164    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355165    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
355166    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
355167    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
355168    +   end;
MPRINT(EM_DIAGRAM):   end;
355169    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355170    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
355171    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
355172    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
355173    +   end;
MPRINT(EM_DIAGRAM):   end;
355174    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355175    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
355176    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
355177    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
355178    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355179    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355180    +   end;
MPRINT(EM_DIAGRAM):   end;
355181    +end;
MPRINT(EM_DIAGRAM):   end;
355182    +
355183    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
355184    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
355185    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
355186    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
355187    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
355188    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
355189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355191    +end;
MPRINT(EM_DIAGRAM):   end;
355192    +else do;
MPRINT(EM_DIAGRAM):   else do;
355193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355194    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
355195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355196    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355197    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
355198    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
355199    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
355200    +   end;
MPRINT(EM_DIAGRAM):   end;
355201    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355202    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
355203    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
355204    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
355205    +   end;
MPRINT(EM_DIAGRAM):   end;
355206    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355207    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
355208    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
355209    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
355210    +   end;
MPRINT(EM_DIAGRAM):   end;
355211    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355212    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
355213    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
355214    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
355215    +   end;
MPRINT(EM_DIAGRAM):   end;
355216    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355217    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
355218    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
355219    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
355220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355222    +   end;
MPRINT(EM_DIAGRAM):   end;
355223    +end;
MPRINT(EM_DIAGRAM):   end;
355224    +
355225    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
355226    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
355227    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
355228    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
355229    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
355230    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
355231    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355232    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355233    +end;
MPRINT(EM_DIAGRAM):   end;
355234    +else do;
MPRINT(EM_DIAGRAM):   else do;
355235    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355236    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
355237    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355238    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
355239    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
355240    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
355241    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
355242    +   end;
MPRINT(EM_DIAGRAM):   end;
355243    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355244    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
355245    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
355246    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
355247    +   end;
MPRINT(EM_DIAGRAM):   end;
355248    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355249    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
355250    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
355251    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
355252    +   end;
MPRINT(EM_DIAGRAM):   end;
355253    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355254    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
355255    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
355256    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
355257    +   end;
MPRINT(EM_DIAGRAM):   end;
355258    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355259    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
355260    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
355261    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
355262    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355263    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355264    +   end;
MPRINT(EM_DIAGRAM):   end;
355265    +end;
MPRINT(EM_DIAGRAM):   end;
355266    +
355267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355268    +*** Checking missing input Interval
355269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
355270    +
355271    +IF NMISS(
355272    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
355273    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
355274    +
355275    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355276    +END;
MPRINT(EM_DIAGRAM):   END;
355277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355278    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
355279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355280    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
355281    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
355282    +END;
MPRINT(EM_DIAGRAM):   END;
355283    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
355284    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
355285    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
355286    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
355287    +END;
MPRINT(EM_DIAGRAM):   END;
355288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355289    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
355290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355292    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
355293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355294    +
355295    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
355296    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
355297    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
355298    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
355299    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
355300    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355301    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
355302    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
355303    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
355304    +end;
MPRINT(EM_DIAGRAM):   end;
355305    +else do;
MPRINT(EM_DIAGRAM):   else do;
355306    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
355307    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
355308    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
355309    +   end;
MPRINT(EM_DIAGRAM):   end;
355310    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
355311    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
355312    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
355313    +   end;
MPRINT(EM_DIAGRAM):   end;
355314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355315    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
355316    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
355317    +   end;
MPRINT(EM_DIAGRAM):   end;
355318    +end;
MPRINT(EM_DIAGRAM):   end;
355319    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
355320    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
355321    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
355322    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
355323    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
355324    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
355325    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
355326    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
355327    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
355328    +          +     0.11895902038445 * GRP_MntFishProducts3
355329    +          +     -0.0194508409368 * GRP_MntFishProducts4
355330    +          +    -0.27172158371684 * GRP_MntGoldProds2
355331    +          +    -0.06617094209943 * GRP_MntGoldProds3
355332    +          +     0.04665050332743 * GRP_MntGoldProds4
355333    +          +    -0.97879858925028 * GRP_MntMeatProducts2
355334    +          +    -0.16953024357929 * GRP_MntMeatProducts3
355335    +          +     0.36702521764699 * GRP_MntMeatProducts4
355336    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
355337    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
355338    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
355339    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
355340    +          +    -1.86131730329435 * GRP_NumDistPurchases2
355341    +          +     -0.1744815262149 * GRP_NumDistPurchases3
355342    +          +     0.29974863559738 * GRP_NumDistPurchases4
355343    +          +     0.08237783693138 * GRP_NumWebPurchases2
355344    +          +     0.08904902237334 * GRP_NumWebPurchases3
355345    +          +     0.01729681908858 * GRP_NumWebPurchases4
355346    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
355347    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
355348    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
355349    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
355350    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
355351    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 + 
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 + 
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 * 
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 * 
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 + 
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 + 
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 + 
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 + 
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708 
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 * 
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 * 
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 * 
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 * 
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 * 
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 + 
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 * 
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 + 
-0.57834308365674 * GRP_Recency4 ;
355352    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
355353    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
355354    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
355355    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
355356    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
355357    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
355358    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
355359    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
355360    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
355361    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
355362    +END;
MPRINT(EM_DIAGRAM):   END;
355363    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
355364    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
355365    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
355366    +END;
MPRINT(EM_DIAGRAM):   END;
355367    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
355368    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
355369    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
355370    +END;
MPRINT(EM_DIAGRAM):   END;
355371    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
355372    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
355373    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
355374    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
355375    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
355376    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
355377    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
355378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355379    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
355380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
355381    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
355382    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
355383    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
355384    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
355385    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
355386    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
355387    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
355388    +END;
MPRINT(EM_DIAGRAM):   END;
355389    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
355390    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
355391    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
355392    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
355393    +* Renaming variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural26;
355394    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355395    +* Renaming Posterior variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural26;
355396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355397    +drop AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar1;
355398    +AutoNeural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar1 = P_DepVar1;
355399    +drop AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar0;
355400    +AutoNeural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar0 = P_DepVar0;
355401    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355402    +* Renaming _WARN_ variable for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural26;
355403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355404    +length AutoNeural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural26_WARN_ $4;
355405    +drop AutoNeural26_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_WARN_;
355406    +AutoNeural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural26_WARN_ = _WARN_;
355407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355408    +* Ensmbl48: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 6 of 7;
355409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355410    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355411    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
355412    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
355413    +* NODE: AutoNeural25;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural25;
355414    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
355415    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
355416    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
355417    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
355418    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
355419    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
355420    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
355421    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
355422    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
355423    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
355424    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
355425    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
355426    +LENGTH _WARN_ $4
355427    +      F_DepVar  $ 12
355428    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
355429    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
355430    +
355431    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
355432    +
355433    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
355434    +
355435    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
355436    +
355437    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
355438    +
355439    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
355440    +
355441    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
355442    +
355443    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
355444    +
355445    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
355446    +
355447    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
355448    +
355449    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
355450    +
355451    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
355452    +
355453    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
355454    +
355455    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
355456    +
355457    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
355458    +
355459    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
355460    +
355461    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
355462    +
355463    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
355464    +
355465    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
355466    +
355467    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
355468    +
355469    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
355470    +
355471    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
355472    +
355473    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
355474    +
355475    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
355476    +
355477    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
355478    +
355479    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
355480    +
355481    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
355482    +
355483    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
355484    +
355485    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
355486    +
355487    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
355488    +
355489    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
355490    +
355491    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
355492    +
355493    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
355494    +
355495    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
355496    +
355497    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
355498    +
355499    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
355500    +
355501    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
355502    +
355503    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
355504    +
355505    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
355506    +
355507    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
355508    +
355509    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
355510    +
355511    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
355512    +
355513    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
355514    +
355515    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
355516    +
355517    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
355518    +
355519    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
355520    +
355521    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
355522    +
355523    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
355524    +
355525    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
355526    +
355527    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
355528    +
355529    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
355530    +
355531    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
355532    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
355533    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
355534    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
355535    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355536    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355537    +end;
MPRINT(EM_DIAGRAM):   end;
355538    +else do;
MPRINT(EM_DIAGRAM):   else do;
355539    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355540    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
355541    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355542    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
355543    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
355544    +   end;
MPRINT(EM_DIAGRAM):   end;
355545    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355546    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
355547    +   end;
MPRINT(EM_DIAGRAM):   end;
355548    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355549    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
355550    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355551    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355552    +   end;
MPRINT(EM_DIAGRAM):   end;
355553    +end;
MPRINT(EM_DIAGRAM):   end;
355554    +
355555    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
355556    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
355557    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
355558    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
355559    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
355560    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
355561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355563    +end;
MPRINT(EM_DIAGRAM):   end;
355564    +else do;
MPRINT(EM_DIAGRAM):   else do;
355565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355566    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
355567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355568    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
355569    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
355570    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
355571    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
355572    +   end;
MPRINT(EM_DIAGRAM):   end;
355573    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355574    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
355575    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
355576    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
355577    +   end;
MPRINT(EM_DIAGRAM):   end;
355578    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355579    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
355580    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
355581    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
355582    +   end;
MPRINT(EM_DIAGRAM):   end;
355583    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355584    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
355585    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
355586    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
355587    +   end;
MPRINT(EM_DIAGRAM):   end;
355588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355589    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
355590    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
355591    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
355592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355594    +   end;
MPRINT(EM_DIAGRAM):   end;
355595    +end;
MPRINT(EM_DIAGRAM):   end;
355596    +
355597    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
355598    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
355599    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
355600    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
355601    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
355602    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
355603    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355604    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355605    +end;
MPRINT(EM_DIAGRAM):   end;
355606    +else do;
MPRINT(EM_DIAGRAM):   else do;
355607    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355608    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
355609    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355610    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
355611    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
355612    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
355613    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
355614    +   end;
MPRINT(EM_DIAGRAM):   end;
355615    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355616    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
355617    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
355618    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
355619    +   end;
MPRINT(EM_DIAGRAM):   end;
355620    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355621    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
355622    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
355623    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
355624    +   end;
MPRINT(EM_DIAGRAM):   end;
355625    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355626    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
355627    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
355628    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
355629    +   end;
MPRINT(EM_DIAGRAM):   end;
355630    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355631    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
355632    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
355633    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
355634    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355635    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355636    +   end;
MPRINT(EM_DIAGRAM):   end;
355637    +end;
MPRINT(EM_DIAGRAM):   end;
355638    +
355639    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
355640    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
355641    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
355642    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
355643    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
355644    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
355645    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355646    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355647    +end;
MPRINT(EM_DIAGRAM):   end;
355648    +else do;
MPRINT(EM_DIAGRAM):   else do;
355649    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355650    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
355651    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355652    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355653    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
355654    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
355655    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
355656    +   end;
MPRINT(EM_DIAGRAM):   end;
355657    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355658    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
355659    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
355660    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
355661    +   end;
MPRINT(EM_DIAGRAM):   end;
355662    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355663    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
355664    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
355665    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
355666    +   end;
MPRINT(EM_DIAGRAM):   end;
355667    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355668    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
355669    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
355670    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
355671    +   end;
MPRINT(EM_DIAGRAM):   end;
355672    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355673    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
355674    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
355675    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
355676    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355677    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355678    +   end;
MPRINT(EM_DIAGRAM):   end;
355679    +end;
MPRINT(EM_DIAGRAM):   end;
355680    +
355681    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
355682    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
355683    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
355684    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
355685    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
355686    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
355687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355689    +end;
MPRINT(EM_DIAGRAM):   end;
355690    +else do;
MPRINT(EM_DIAGRAM):   else do;
355691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355692    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
355693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355694    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355695    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
355696    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
355697    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
355698    +   end;
MPRINT(EM_DIAGRAM):   end;
355699    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355700    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
355701    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
355702    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
355703    +   end;
MPRINT(EM_DIAGRAM):   end;
355704    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355705    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
355706    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
355707    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
355708    +   end;
MPRINT(EM_DIAGRAM):   end;
355709    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355710    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
355711    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
355712    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
355713    +   end;
MPRINT(EM_DIAGRAM):   end;
355714    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355715    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
355716    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
355717    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
355718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355720    +   end;
MPRINT(EM_DIAGRAM):   end;
355721    +end;
MPRINT(EM_DIAGRAM):   end;
355722    +
355723    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
355724    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
355725    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
355726    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
355727    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
355728    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
355729    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355730    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355731    +end;
MPRINT(EM_DIAGRAM):   end;
355732    +else do;
MPRINT(EM_DIAGRAM):   else do;
355733    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355734    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
355735    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355736    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355737    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
355738    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
355739    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
355740    +   end;
MPRINT(EM_DIAGRAM):   end;
355741    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355742    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
355743    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
355744    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
355745    +   end;
MPRINT(EM_DIAGRAM):   end;
355746    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355747    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
355748    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
355749    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
355750    +   end;
MPRINT(EM_DIAGRAM):   end;
355751    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355752    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
355753    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
355754    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
355755    +   end;
MPRINT(EM_DIAGRAM):   end;
355756    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355757    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
355758    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
355759    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
355760    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355761    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355762    +   end;
MPRINT(EM_DIAGRAM):   end;
355763    +end;
MPRINT(EM_DIAGRAM):   end;
355764    +
355765    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
355766    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
355767    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
355768    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
355769    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
355770    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
355771    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355772    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355773    +end;
MPRINT(EM_DIAGRAM):   end;
355774    +else do;
MPRINT(EM_DIAGRAM):   else do;
355775    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355776    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
355777    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355778    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355779    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
355780    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
355781    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
355782    +   end;
MPRINT(EM_DIAGRAM):   end;
355783    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355784    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
355785    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
355786    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
355787    +   end;
MPRINT(EM_DIAGRAM):   end;
355788    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355789    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
355790    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
355791    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
355792    +   end;
MPRINT(EM_DIAGRAM):   end;
355793    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355794    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
355795    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
355796    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
355797    +   end;
MPRINT(EM_DIAGRAM):   end;
355798    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355799    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
355800    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
355801    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
355802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355804    +   end;
MPRINT(EM_DIAGRAM):   end;
355805    +end;
MPRINT(EM_DIAGRAM):   end;
355806    +
355807    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
355808    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
355809    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
355810    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
355811    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
355812    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
355813    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355814    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355815    +end;
MPRINT(EM_DIAGRAM):   end;
355816    +else do;
MPRINT(EM_DIAGRAM):   else do;
355817    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355818    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
355819    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355820    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355821    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
355822    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
355823    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
355824    +   end;
MPRINT(EM_DIAGRAM):   end;
355825    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355826    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
355827    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
355828    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
355829    +   end;
MPRINT(EM_DIAGRAM):   end;
355830    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355831    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
355832    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
355833    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
355834    +   end;
MPRINT(EM_DIAGRAM):   end;
355835    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355836    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
355837    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
355838    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
355839    +   end;
MPRINT(EM_DIAGRAM):   end;
355840    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355841    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
355842    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
355843    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
355844    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355845    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355846    +   end;
MPRINT(EM_DIAGRAM):   end;
355847    +end;
MPRINT(EM_DIAGRAM):   end;
355848    +
355849    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
355850    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
355851    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
355852    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
355853    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
355854    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355855    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355856    +end;
MPRINT(EM_DIAGRAM):   end;
355857    +else do;
MPRINT(EM_DIAGRAM):   else do;
355858    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355859    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
355860    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355861    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355862    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
355863    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
355864    +   end;
MPRINT(EM_DIAGRAM):   end;
355865    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355866    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
355867    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
355868    +   end;
MPRINT(EM_DIAGRAM):   end;
355869    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355870    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
355871    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
355872    +   end;
MPRINT(EM_DIAGRAM):   end;
355873    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355874    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
355875    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
355876    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355877    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355878    +   end;
MPRINT(EM_DIAGRAM):   end;
355879    +end;
MPRINT(EM_DIAGRAM):   end;
355880    +
355881    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
355882    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
355883    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
355884    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
355885    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
355886    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
355887    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355888    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355889    +end;
MPRINT(EM_DIAGRAM):   end;
355890    +else do;
MPRINT(EM_DIAGRAM):   else do;
355891    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355892    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
355893    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355894    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
355895    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
355896    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
355897    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
355898    +   end;
MPRINT(EM_DIAGRAM):   end;
355899    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355900    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
355901    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
355902    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
355903    +   end;
MPRINT(EM_DIAGRAM):   end;
355904    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355905    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
355906    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
355907    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
355908    +   end;
MPRINT(EM_DIAGRAM):   end;
355909    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355910    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
355911    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
355912    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
355913    +   end;
MPRINT(EM_DIAGRAM):   end;
355914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355915    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
355916    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
355917    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
355918    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355919    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355920    +   end;
MPRINT(EM_DIAGRAM):   end;
355921    +end;
MPRINT(EM_DIAGRAM):   end;
355922    +
355923    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
355924    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
355925    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
355926    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
355927    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
355928    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
355929    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355931    +end;
MPRINT(EM_DIAGRAM):   end;
355932    +else do;
MPRINT(EM_DIAGRAM):   else do;
355933    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355934    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
355935    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355936    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
355937    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
355938    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
355939    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
355940    +   end;
MPRINT(EM_DIAGRAM):   end;
355941    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355942    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
355943    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
355944    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
355945    +   end;
MPRINT(EM_DIAGRAM):   end;
355946    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
355947    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
355948    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
355949    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
355950    +   end;
MPRINT(EM_DIAGRAM):   end;
355951    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355952    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
355953    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
355954    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
355955    +   end;
MPRINT(EM_DIAGRAM):   end;
355956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355957    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
355958    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
355959    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
355960    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
355961    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355962    +   end;
MPRINT(EM_DIAGRAM):   end;
355963    +end;
MPRINT(EM_DIAGRAM):   end;
355964    +
355965    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
355966    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
355967    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
355968    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
355969    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
355970    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
355971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
355972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
355973    +end;
MPRINT(EM_DIAGRAM):   end;
355974    +else do;
MPRINT(EM_DIAGRAM):   else do;
355975    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
355976    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
355977    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
355978    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
355979    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
355980    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
355981    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
355982    +   end;
MPRINT(EM_DIAGRAM):   end;
355983    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
355984    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
355985    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
355986    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
355987    +   end;
MPRINT(EM_DIAGRAM):   end;
355988    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
355989    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
355990    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
355991    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
355992    +   end;
MPRINT(EM_DIAGRAM):   end;
355993    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
355994    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
355995    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
355996    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
355997    +   end;
MPRINT(EM_DIAGRAM):   end;
355998    +   else do;
MPRINT(EM_DIAGRAM):   else do;
355999    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
356000    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
356001    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
356002    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356003    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356004    +   end;
MPRINT(EM_DIAGRAM):   end;
356005    +end;
MPRINT(EM_DIAGRAM):   end;
356006    +
356007    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
356008    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
356009    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
356010    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
356011    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
356012    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
356013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356015    +end;
MPRINT(EM_DIAGRAM):   end;
356016    +else do;
MPRINT(EM_DIAGRAM):   else do;
356017    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356018    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
356019    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356020    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356021    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
356022    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
356023    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
356024    +   end;
MPRINT(EM_DIAGRAM):   end;
356025    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356026    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
356027    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
356028    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
356029    +   end;
MPRINT(EM_DIAGRAM):   end;
356030    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356031    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
356032    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
356033    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
356034    +   end;
MPRINT(EM_DIAGRAM):   end;
356035    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356036    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
356037    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
356038    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
356039    +   end;
MPRINT(EM_DIAGRAM):   end;
356040    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356041    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
356042    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
356043    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
356044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356046    +   end;
MPRINT(EM_DIAGRAM):   end;
356047    +end;
MPRINT(EM_DIAGRAM):   end;
356048    +
356049    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
356050    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
356051    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
356052    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
356053    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
356054    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
356055    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356056    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356057    +end;
MPRINT(EM_DIAGRAM):   end;
356058    +else do;
MPRINT(EM_DIAGRAM):   else do;
356059    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356060    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
356061    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356062    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
356063    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
356064    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
356065    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
356066    +   end;
MPRINT(EM_DIAGRAM):   end;
356067    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356068    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
356069    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
356070    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
356071    +   end;
MPRINT(EM_DIAGRAM):   end;
356072    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
356073    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
356074    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
356075    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
356076    +   end;
MPRINT(EM_DIAGRAM):   end;
356077    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356078    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
356079    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
356080    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
356081    +   end;
MPRINT(EM_DIAGRAM):   end;
356082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356083    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
356084    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
356085    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
356086    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356087    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356088    +   end;
MPRINT(EM_DIAGRAM):   end;
356089    +end;
MPRINT(EM_DIAGRAM):   end;
356090    +
356091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356092    +*** Checking missing input Interval
356093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
356094    +
356095    +IF NMISS(
356096    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
356097    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
356098    +
356099    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356100    +END;
MPRINT(EM_DIAGRAM):   END;
356101    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356102    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
356103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356104    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
356105    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
356106    +END;
MPRINT(EM_DIAGRAM):   END;
356107    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
356108    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
356109    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
356110    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
356111    +END;
MPRINT(EM_DIAGRAM):   END;
356112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356113    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
356114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356116    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
356117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356118    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
356119    +   H1x1_1  =     0.38021638611764 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.38021638611764 * S_Year_Birth ;
356120    +   H1x1_2  =      -1.088276895346 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.088276895346 * S_Year_Birth ;
356121    +   H1x1_3  =    -0.21044864474556 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21044864474556 * S_Year_Birth ;
356122    +   H1x1_1  = H1x1_1  +    -1.19598236721657 * GRP_AcceptedCmp52
356123    +          +     0.89556920543007 * GRP_Frq2  +    -1.28633632438875 * GRP_Frq3
356124    +          +     1.09957277812081 * GRP_Frq4  +     1.66129248688789 *
356125    +        GRP_Income2  +    -0.02208859809261 * GRP_Income3
356126    +          +     0.13742442233856 * GRP_Income4  +     -0.8762617114278 *
356127    +        GRP_Mnt2  +     0.14483268386758 * GRP_Mnt3  +     1.46115917633769 *
356128    +        GRP_Mnt4  +     -0.6421408902491 * GRP_MntFishProducts2
356129    +          +      0.1128138472044 * GRP_MntFishProducts3
356130    +          +     1.21562636748698 * GRP_MntFishProducts4
356131    +          +     0.97422300880066 * GRP_MntGoldProds2
356132    +          +    -0.78007036389535 * GRP_MntGoldProds3
356133    +          +    -0.13814365615145 * GRP_MntGoldProds4
356134    +          +     1.35693955555286 * GRP_MntMeatProducts2
356135    +          +    -0.27598973191035 * GRP_MntMeatProducts3
356136    +          +     0.24526165671667 * GRP_MntMeatProducts4
356137    +          +    -2.07253692193163 * GRP_MntWines2  +    -0.82406684176795 *
356138    +        GRP_MntWines3  +     1.33606527822464 * GRP_MntWines4
356139    +          +    -1.54679770016919 * GRP_NumCatalogPurchases3
356140    +          +    -2.28037541698712 * GRP_NumCatalogPurchases4
356141    +          +     0.40979012613952 * GRP_NumDistPurchases2
356142    +          +     0.01840169060266 * GRP_NumDistPurchases3
356143    +          +     0.45490355508206 * GRP_NumDistPurchases4
356144    +          +     -2.5216795172343 * GRP_NumWebPurchases2
356145    +          +    -1.84801006282457 * GRP_NumWebPurchases3
356146    +          +    -1.97644985842889 * GRP_NumWebPurchases4
356147    +          +     1.42008839453911 * GRP_RFMstat2  +    -1.47553685202484 *
356148    +        GRP_RFMstat3  +     0.87098855427631 * GRP_RFMstat4
356149    +          +     1.05400168422125 * GRP_RMntFrq2  +    -0.41630002795032 *
356150    +        GRP_RMntFrq3  +     0.32151577305352 * GRP_RMntFrq4
356151    +          +    -0.40892574480582 * GRP_Recency2  +    -0.38760854674907 *
356152    +        GRP_Recency3  +    -1.01062906861757 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.19598236721657 * GRP_AcceptedCmp52 + 
0.89556920543007 * GRP_Frq2 + -1.28633632438875 * GRP_Frq3 + 1.09957277812081 * GRP_Frq4 + 
1.66129248688789 * GRP_Income2 + -0.02208859809261 * GRP_Income3 + 0.13742442233856 * 
GRP_Income4 + -0.8762617114278 * GRP_Mnt2 + 0.14483268386758 * GRP_Mnt3 + 1.46115917633769 * 
GRP_Mnt4 + -0.6421408902491 * GRP_MntFishProducts2 + 0.1128138472044 * GRP_MntFishProducts3 + 
1.21562636748698 * GRP_MntFishProducts4 + 0.97422300880066 * GRP_MntGoldProds2 + 
-0.78007036389535 * GRP_MntGoldProds3 + -0.13814365615145 * GRP_MntGoldProds4 + 
1.35693955555286 * GRP_MntMeatProducts2 + -0.27598973191035 * GRP_MntMeatProducts3 + 
0.24526165671667 * GRP_MntMeatProducts4 + -2.07253692193163 * GRP_MntWines2 + 
-0.82406684176795 * GRP_MntWines3 + 1.33606527822464 * GRP_MntWines4 + -1.54679770016919 * 
GRP_NumCatalogPurchases3 + -2.28037541698712 * GRP_NumCatalogPurchases4 + 0.40979012613952 * 
GRP_NumDistPurchases2 + 0.01840169060266 * GRP_NumDistPurchases3 + 0.45490355508206 * 
GRP_NumDistPurchases4 + -2.5216795172343 * GRP_NumWebPurchases2 + -1.84801006282457 * 
GRP_NumWebPurchases3 + -1.97644985842889 * GRP_NumWebPurchases4 + 1.42008839453911 * 
GRP_RFMstat2 + -1.47553685202484 * GRP_RFMstat3 + 0.87098855427631 * GRP_RFMstat4 + 
1.05400168422125 * GRP_RMntFrq2 + -0.41630002795032 * GRP_RMntFrq3 + 0.32151577305352 * 
GRP_RMntFrq4 + -0.40892574480582 * GRP_Recency2 + -0.38760854674907 * GRP_Recency3 + 
-1.01062906861757 * GRP_Recency4 ;
356153    +   H1x1_2  = H1x1_2  +    -0.22087092765683 * GRP_AcceptedCmp52
356154    +          +     0.86410922322484 * GRP_Frq2  +     1.63807214492524 * GRP_Frq3
356155    +          +    -1.25641751320277 * GRP_Frq4  +    -2.06319605492297 *
356156    +        GRP_Income2  +    -0.19570512199776 * GRP_Income3
356157    +          +    -1.02783445665559 * GRP_Income4  +     0.15804947667697 *
356158    +        GRP_Mnt2  +    -1.89927129454089 * GRP_Mnt3  +    -2.03683593435912 *
356159    +        GRP_Mnt4  +    -1.52161150732597 * GRP_MntFishProducts2
356160    +          +     1.31452667544583 * GRP_MntFishProducts3
356161    +          +     -1.7257971559668 * GRP_MntFishProducts4
356162    +          +     2.35872511454228 * GRP_MntGoldProds2
356163    +          +    -2.18519280701813 * GRP_MntGoldProds3
356164    +          +     2.11958828863486 * GRP_MntGoldProds4
356165    +          +     0.96289877666679 * GRP_MntMeatProducts2
356166    +          +     0.23432155256273 * GRP_MntMeatProducts3
356167    +          +     1.73039772995976 * GRP_MntMeatProducts4
356168    +          +    -0.42501510787424 * GRP_MntWines2  +    -1.52486822377888 *
356169    +        GRP_MntWines3  +      1.6227654564975 * GRP_MntWines4
356170    +          +    -1.89995561867666 * GRP_NumCatalogPurchases3
356171    +          +     0.67482053398184 * GRP_NumCatalogPurchases4
356172    +          +     0.66331524792021 * GRP_NumDistPurchases2
356173    +          +    -3.51633711874744 * GRP_NumDistPurchases3
356174    +          +    -2.78868266001809 * GRP_NumDistPurchases4
356175    +          +     0.48911700629841 * GRP_NumWebPurchases2
356176    +          +    -2.04233990579849 * GRP_NumWebPurchases3
356177    +          +     0.61493436153841 * GRP_NumWebPurchases4
356178    +          +    -0.04998034532745 * GRP_RFMstat2  +     0.70675221202708 *
356179    +        GRP_RFMstat3  +      1.1835788842441 * GRP_RFMstat4
356180    +          +    -1.59293821911804 * GRP_RMntFrq2  +    -2.00649847294694 *
356181    +        GRP_RMntFrq3  +     1.51867097620424 * GRP_RMntFrq4
356182    +          +     0.80524037758297 * GRP_Recency2  +     0.46947615167497 *
356183    +        GRP_Recency3  +    -0.02984024000355 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22087092765683 * GRP_AcceptedCmp52 + 
0.86410922322484 * GRP_Frq2 + 1.63807214492524 * GRP_Frq3 + -1.25641751320277 * GRP_Frq4 + 
-2.06319605492297 * GRP_Income2 + -0.19570512199776 * GRP_Income3 + -1.02783445665559 * 
GRP_Income4 + 0.15804947667697 * GRP_Mnt2 + -1.89927129454089 * GRP_Mnt3 + -2.03683593435912 * 
GRP_Mnt4 + -1.52161150732597 * GRP_MntFishProducts2 + 1.31452667544583 * GRP_MntFishProducts3 
+ -1.7257971559668 * GRP_MntFishProducts4 + 2.35872511454228 * GRP_MntGoldProds2 + 
-2.18519280701813 * GRP_MntGoldProds3 + 2.11958828863486 * GRP_MntGoldProds4 + 
0.96289877666679 * GRP_MntMeatProducts2 + 0.23432155256273 * GRP_MntMeatProducts3 + 
1.73039772995976 * GRP_MntMeatProducts4 + -0.42501510787424 * GRP_MntWines2 + 
-1.52486822377888 * GRP_MntWines3 + 1.6227654564975 * GRP_MntWines4 + -1.89995561867666 * 
GRP_NumCatalogPurchases3 + 0.67482053398184 * GRP_NumCatalogPurchases4 + 0.66331524792021 * 
GRP_NumDistPurchases2 + -3.51633711874744 * GRP_NumDistPurchases3 + -2.78868266001809 * 
GRP_NumDistPurchases4 + 0.48911700629841 * GRP_NumWebPurchases2 + -2.04233990579849 * 
GRP_NumWebPurchases3 + 0.61493436153841 * GRP_NumWebPurchases4 + -0.04998034532745 * 
GRP_RFMstat2 + 0.70675221202708 * GRP_RFMstat3 + 1.1835788842441 * GRP_RFMstat4 + 
-1.59293821911804 * GRP_RMntFrq2 + -2.00649847294694 * GRP_RMntFrq3 + 1.51867097620424 * 
GRP_RMntFrq4 + 0.80524037758297 * GRP_Recency2 + 0.46947615167497 * GRP_Recency3 + 
-0.02984024000355 * GRP_Recency4 ;
356184    +   H1x1_3  = H1x1_3  +     0.63511799928422 * GRP_AcceptedCmp52
356185    +          +      -2.298606068807 * GRP_Frq2  +     3.16864487857804 * GRP_Frq3
356186    +          +     3.03519261062887 * GRP_Frq4  +    -1.85162718986086 *
356187    +        GRP_Income2  +     0.41526825199627 * GRP_Income3
356188    +          +    -0.80593312350255 * GRP_Income4  +     1.66777476102634 *
356189    +        GRP_Mnt2  +     2.08848488119875 * GRP_Mnt3  +     0.65051244257971 *
356190    +        GRP_Mnt4  +     0.71847095407349 * GRP_MntFishProducts2
356191    +          +    -1.10257815890641 * GRP_MntFishProducts3
356192    +          +     2.17792588671141 * GRP_MntFishProducts4
356193    +          +     2.50223152259939 * GRP_MntGoldProds2
356194    +          +    -1.72156085851201 * GRP_MntGoldProds3
356195    +          +    -3.91709431063923 * GRP_MntGoldProds4
356196    +          +     -1.0779971381482 * GRP_MntMeatProducts2
356197    +          +    -1.47970774146601 * GRP_MntMeatProducts3
356198    +          +     1.27022891132009 * GRP_MntMeatProducts4
356199    +          +     0.48048593774493 * GRP_MntWines2  +     2.90436921022208 *
356200    +        GRP_MntWines3  +    -3.52082955604777 * GRP_MntWines4
356201    +          +    -0.04446993636304 * GRP_NumCatalogPurchases3
356202    +          +     0.63669224655802 * GRP_NumCatalogPurchases4
356203    +          +    -3.14645279004965 * GRP_NumDistPurchases2
356204    +          +    -2.33190469508132 * GRP_NumDistPurchases3
356205    +          +    -0.62827451633899 * GRP_NumDistPurchases4
356206    +          +    -1.01851610127648 * GRP_NumWebPurchases2
356207    +          +    -1.48934390537683 * GRP_NumWebPurchases3
356208    +          +    -0.53741548796796 * GRP_NumWebPurchases4
356209    +          +    -0.75492549718573 * GRP_RFMstat2  +     -0.7937620334965 *
356210    +        GRP_RFMstat3  +     1.16856250505521 * GRP_RFMstat4
356211    +          +     2.45700945744116 * GRP_RMntFrq2  +      2.6192187092108 *
356212    +        GRP_RMntFrq3  +    -0.99545519667238 * GRP_RMntFrq4
356213    +          +     -0.8178492657671 * GRP_Recency2  +     0.13605490470692 *
356214    +        GRP_Recency3  +    -0.93901422840588 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.63511799928422 * GRP_AcceptedCmp52 + -2.298606068807 
* GRP_Frq2 + 3.16864487857804 * GRP_Frq3 + 3.03519261062887 * GRP_Frq4 + -1.85162718986086 * 
GRP_Income2 + 0.41526825199627 * GRP_Income3 + -0.80593312350255 * GRP_Income4 + 
1.66777476102634 * GRP_Mnt2 + 2.08848488119875 * GRP_Mnt3 + 0.65051244257971 * GRP_Mnt4 + 
0.71847095407349 * GRP_MntFishProducts2 + -1.10257815890641 * GRP_MntFishProducts3 + 
2.17792588671141 * GRP_MntFishProducts4 + 2.50223152259939 * GRP_MntGoldProds2 + 
-1.72156085851201 * GRP_MntGoldProds3 + -3.91709431063923 * GRP_MntGoldProds4 + 
-1.0779971381482 * GRP_MntMeatProducts2 + -1.47970774146601 * GRP_MntMeatProducts3 + 
1.27022891132009 * GRP_MntMeatProducts4 + 0.48048593774493 * GRP_MntWines2 + 2.90436921022208 
* GRP_MntWines3 + -3.52082955604777 * GRP_MntWines4 + -0.04446993636304 * 
GRP_NumCatalogPurchases3 + 0.63669224655802 * GRP_NumCatalogPurchases4 + -3.14645279004965 * 
GRP_NumDistPurchases2 + -2.33190469508132 * GRP_NumDistPurchases3 + -0.62827451633899 * 
GRP_NumDistPurchases4 + -1.01851610127648 * GRP_NumWebPurchases2 + -1.48934390537683 * 
GRP_NumWebPurchases3 + -0.53741548796796 * GRP_NumWebPurchases4 + -0.75492549718573 * 
GRP_RFMstat2 + -0.7937620334965 * GRP_RFMstat3 + 1.16856250505521 * GRP_RFMstat4 + 
2.45700945744116 * GRP_RMntFrq2 + 2.6192187092108 * GRP_RMntFrq3 + -0.99545519667238 * 
GRP_RMntFrq4 + -0.8178492657671 * GRP_Recency2 + 0.13605490470692 * GRP_Recency3 + 
-0.93901422840588 * GRP_Recency4 ;
356215    +   H1x1_1  =      1.8884999595718 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.8884999595718 + H1x1_1 ;
356216    +   H1x1_2  =    -0.51989390923325 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.51989390923325 + H1x1_2 ;
356217    +   H1x1_3  =     2.10213347257206 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.10213347257206 + H1x1_3 ;
356218    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
356219    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
356220    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
356221    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
356222    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
356223    +END;
MPRINT(EM_DIAGRAM):   END;
356224    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
356225    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
356226    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
356227    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
356228    +END;
MPRINT(EM_DIAGRAM):   END;
356229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356230    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
356231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356232    +
356233    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
356234    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
356235    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
356236    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
356237    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
356238    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356239    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
356240    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
356241    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
356242    +end;
MPRINT(EM_DIAGRAM):   end;
356243    +else do;
MPRINT(EM_DIAGRAM):   else do;
356244    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
356245    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
356246    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
356247    +   end;
MPRINT(EM_DIAGRAM):   end;
356248    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
356249    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
356250    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
356251    +   end;
MPRINT(EM_DIAGRAM):   end;
356252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356253    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
356254    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
356255    +   end;
MPRINT(EM_DIAGRAM):   end;
356256    +end;
MPRINT(EM_DIAGRAM):   end;
356257    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
356258    +   P_DepVar1  =    -2.62984121710329 * H1x1_1  +    -2.65642038715706 * H1x1_2
356259    +          +    -4.24846513249504 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.62984121710329 * H1x1_1 + -2.65642038715706 * H1x1_2 + 
-4.24846513249504 * H1x1_3 ;
356260    +   P_DepVar1  =     3.19982150134729 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.19982150134729 + P_DepVar1 ;
356261    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
356262    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
356263    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
356264    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
356265    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
356266    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
356267    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
356268    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
356269    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
356270    +END;
MPRINT(EM_DIAGRAM):   END;
356271    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
356272    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
356273    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
356274    +END;
MPRINT(EM_DIAGRAM):   END;
356275    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
356276    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
356277    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
356278    +END;
MPRINT(EM_DIAGRAM):   END;
356279    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
356280    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
356281    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
356282    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
356283    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
356284    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
356285    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
356286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356287    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
356288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
356289    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
356290    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
356291    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
356292    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
356293    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
356294    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
356295    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
356296    +END;
MPRINT(EM_DIAGRAM):   END;
356297    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
356298    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
356299    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
356300    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
356301    +* Renaming variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural25;
356302    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356303    +* Renaming Posterior variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural25;
356304    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356305    +drop AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar1;
356306    +AutoNeural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar1 = P_DepVar1;
356307    +drop AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar0;
356308    +AutoNeural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar0 = P_DepVar0;
356309    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356310    +* Renaming _WARN_ variable for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural25;
356311    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356312    +length AutoNeural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural25_WARN_ $4;
356313    +drop AutoNeural25_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_WARN_;
356314    +AutoNeural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural25_WARN_ = _WARN_;
356315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356316    +* Ensmbl48: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 7 of 7;
356317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356319    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
356320    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
356321    +* NODE: AutoNeural23;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural23;
356322    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
356323    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
356324    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
356325    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
356326    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
356327    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
356328    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
356329    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
356330    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
356331    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
356332    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
356333    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
356334    +LENGTH _WARN_ $4
356335    +      F_DepVar  $ 12
356336    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
356337    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
356338    +
356339    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
356340    +
356341    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
356342    +
356343    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
356344    +
356345    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
356346    +
356347    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
356348    +
356349    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
356350    +
356351    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
356352    +
356353    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
356354    +
356355    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
356356    +
356357    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
356358    +
356359    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
356360    +
356361    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
356362    +
356363    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
356364    +
356365    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
356366    +
356367    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
356368    +
356369    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
356370    +
356371    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
356372    +
356373    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
356374    +
356375    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
356376    +
356377    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
356378    +
356379    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
356380    +
356381    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
356382    +
356383    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
356384    +
356385    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
356386    +
356387    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
356388    +
356389    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
356390    +
356391    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
356392    +
356393    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
356394    +
356395    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
356396    +
356397    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
356398    +
356399    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
356400    +
356401    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
356402    +
356403    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
356404    +
356405    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
356406    +
356407    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
356408    +
356409    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
356410    +
356411    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
356412    +
356413    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
356414    +
356415    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
356416    +
356417    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
356418    +
356419    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
356420    +
356421    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
356422    +
356423    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
356424    +
356425    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
356426    +
356427    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
356428    +
356429    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
356430    +
356431    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
356432    +
356433    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
356434    +
356435    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
356436    +
356437    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
356438    +
356439    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
356440    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
356441    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
356442    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
356443    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356444    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356445    +end;
MPRINT(EM_DIAGRAM):   end;
356446    +else do;
MPRINT(EM_DIAGRAM):   else do;
356447    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356448    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
356449    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356450    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
356451    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
356452    +   end;
MPRINT(EM_DIAGRAM):   end;
356453    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
356454    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
356455    +   end;
MPRINT(EM_DIAGRAM):   end;
356456    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356457    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
356458    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356459    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356460    +   end;
MPRINT(EM_DIAGRAM):   end;
356461    +end;
MPRINT(EM_DIAGRAM):   end;
356462    +
356463    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
356464    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
356465    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
356466    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
356467    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
356468    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
356469    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356470    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356471    +end;
MPRINT(EM_DIAGRAM):   end;
356472    +else do;
MPRINT(EM_DIAGRAM):   else do;
356473    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356474    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
356475    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356476    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
356477    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
356478    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
356479    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
356480    +   end;
MPRINT(EM_DIAGRAM):   end;
356481    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
356482    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
356483    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
356484    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
356485    +   end;
MPRINT(EM_DIAGRAM):   end;
356486    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356487    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
356488    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
356489    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
356490    +   end;
MPRINT(EM_DIAGRAM):   end;
356491    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356492    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
356493    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
356494    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
356495    +   end;
MPRINT(EM_DIAGRAM):   end;
356496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356497    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
356498    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
356499    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
356500    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356501    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356502    +   end;
MPRINT(EM_DIAGRAM):   end;
356503    +end;
MPRINT(EM_DIAGRAM):   end;
356504    +
356505    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
356506    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
356507    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
356508    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
356509    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
356510    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
356511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356513    +end;
MPRINT(EM_DIAGRAM):   end;
356514    +else do;
MPRINT(EM_DIAGRAM):   else do;
356515    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356516    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
356517    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356518    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
356519    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
356520    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
356521    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
356522    +   end;
MPRINT(EM_DIAGRAM):   end;
356523    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356524    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
356525    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
356526    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
356527    +   end;
MPRINT(EM_DIAGRAM):   end;
356528    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
356529    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
356530    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
356531    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
356532    +   end;
MPRINT(EM_DIAGRAM):   end;
356533    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356534    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
356535    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
356536    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
356537    +   end;
MPRINT(EM_DIAGRAM):   end;
356538    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356539    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
356540    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
356541    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
356542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356544    +   end;
MPRINT(EM_DIAGRAM):   end;
356545    +end;
MPRINT(EM_DIAGRAM):   end;
356546    +
356547    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
356548    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
356549    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
356550    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
356551    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
356552    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
356553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356555    +end;
MPRINT(EM_DIAGRAM):   end;
356556    +else do;
MPRINT(EM_DIAGRAM):   else do;
356557    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356558    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
356559    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356560    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356561    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
356562    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
356563    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
356564    +   end;
MPRINT(EM_DIAGRAM):   end;
356565    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356566    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
356567    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
356568    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
356569    +   end;
MPRINT(EM_DIAGRAM):   end;
356570    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356571    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
356572    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
356573    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
356574    +   end;
MPRINT(EM_DIAGRAM):   end;
356575    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356576    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
356577    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
356578    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
356579    +   end;
MPRINT(EM_DIAGRAM):   end;
356580    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356581    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
356582    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
356583    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
356584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356586    +   end;
MPRINT(EM_DIAGRAM):   end;
356587    +end;
MPRINT(EM_DIAGRAM):   end;
356588    +
356589    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
356590    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
356591    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
356592    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
356593    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
356594    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
356595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356597    +end;
MPRINT(EM_DIAGRAM):   end;
356598    +else do;
MPRINT(EM_DIAGRAM):   else do;
356599    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356600    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
356601    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356602    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356603    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
356604    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
356605    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
356606    +   end;
MPRINT(EM_DIAGRAM):   end;
356607    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356608    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
356609    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
356610    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
356611    +   end;
MPRINT(EM_DIAGRAM):   end;
356612    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356613    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
356614    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
356615    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
356616    +   end;
MPRINT(EM_DIAGRAM):   end;
356617    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356618    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
356619    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
356620    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
356621    +   end;
MPRINT(EM_DIAGRAM):   end;
356622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356623    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
356624    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
356625    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
356626    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356627    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356628    +   end;
MPRINT(EM_DIAGRAM):   end;
356629    +end;
MPRINT(EM_DIAGRAM):   end;
356630    +
356631    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
356632    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
356633    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
356634    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
356635    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
356636    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
356637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356639    +end;
MPRINT(EM_DIAGRAM):   end;
356640    +else do;
MPRINT(EM_DIAGRAM):   else do;
356641    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356642    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
356643    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356644    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356645    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
356646    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
356647    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
356648    +   end;
MPRINT(EM_DIAGRAM):   end;
356649    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356650    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
356651    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
356652    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
356653    +   end;
MPRINT(EM_DIAGRAM):   end;
356654    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356655    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
356656    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
356657    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
356658    +   end;
MPRINT(EM_DIAGRAM):   end;
356659    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356660    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
356661    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
356662    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
356663    +   end;
MPRINT(EM_DIAGRAM):   end;
356664    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356665    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
356666    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
356667    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
356668    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356669    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356670    +   end;
MPRINT(EM_DIAGRAM):   end;
356671    +end;
MPRINT(EM_DIAGRAM):   end;
356672    +
356673    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
356674    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
356675    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
356676    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
356677    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
356678    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
356679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356681    +end;
MPRINT(EM_DIAGRAM):   end;
356682    +else do;
MPRINT(EM_DIAGRAM):   else do;
356683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356684    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
356685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356686    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356687    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
356688    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
356689    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
356690    +   end;
MPRINT(EM_DIAGRAM):   end;
356691    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356692    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
356693    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
356694    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
356695    +   end;
MPRINT(EM_DIAGRAM):   end;
356696    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356697    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
356698    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
356699    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
356700    +   end;
MPRINT(EM_DIAGRAM):   end;
356701    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356702    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
356703    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
356704    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
356705    +   end;
MPRINT(EM_DIAGRAM):   end;
356706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356707    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
356708    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
356709    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
356710    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356711    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356712    +   end;
MPRINT(EM_DIAGRAM):   end;
356713    +end;
MPRINT(EM_DIAGRAM):   end;
356714    +
356715    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
356716    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
356717    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
356718    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
356719    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
356720    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
356721    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356722    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356723    +end;
MPRINT(EM_DIAGRAM):   end;
356724    +else do;
MPRINT(EM_DIAGRAM):   else do;
356725    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356726    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
356727    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356728    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356729    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
356730    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
356731    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
356732    +   end;
MPRINT(EM_DIAGRAM):   end;
356733    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356734    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
356735    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
356736    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
356737    +   end;
MPRINT(EM_DIAGRAM):   end;
356738    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356739    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
356740    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
356741    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
356742    +   end;
MPRINT(EM_DIAGRAM):   end;
356743    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356744    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
356745    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
356746    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
356747    +   end;
MPRINT(EM_DIAGRAM):   end;
356748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356749    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
356750    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
356751    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
356752    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356753    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356754    +   end;
MPRINT(EM_DIAGRAM):   end;
356755    +end;
MPRINT(EM_DIAGRAM):   end;
356756    +
356757    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
356758    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
356759    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
356760    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
356761    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
356762    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356763    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356764    +end;
MPRINT(EM_DIAGRAM):   end;
356765    +else do;
MPRINT(EM_DIAGRAM):   else do;
356766    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356767    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
356768    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356769    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356770    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
356771    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
356772    +   end;
MPRINT(EM_DIAGRAM):   end;
356773    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356774    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
356775    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
356776    +   end;
MPRINT(EM_DIAGRAM):   end;
356777    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356778    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
356779    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
356780    +   end;
MPRINT(EM_DIAGRAM):   end;
356781    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356782    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
356783    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
356784    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356785    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356786    +   end;
MPRINT(EM_DIAGRAM):   end;
356787    +end;
MPRINT(EM_DIAGRAM):   end;
356788    +
356789    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
356790    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
356791    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
356792    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
356793    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
356794    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
356795    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356796    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356797    +end;
MPRINT(EM_DIAGRAM):   end;
356798    +else do;
MPRINT(EM_DIAGRAM):   else do;
356799    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356800    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
356801    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356802    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
356803    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
356804    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
356805    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
356806    +   end;
MPRINT(EM_DIAGRAM):   end;
356807    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356808    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
356809    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
356810    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
356811    +   end;
MPRINT(EM_DIAGRAM):   end;
356812    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356813    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
356814    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
356815    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
356816    +   end;
MPRINT(EM_DIAGRAM):   end;
356817    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
356818    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
356819    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
356820    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
356821    +   end;
MPRINT(EM_DIAGRAM):   end;
356822    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356823    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
356824    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
356825    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
356826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356828    +   end;
MPRINT(EM_DIAGRAM):   end;
356829    +end;
MPRINT(EM_DIAGRAM):   end;
356830    +
356831    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
356832    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
356833    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
356834    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
356835    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
356836    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
356837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356839    +end;
MPRINT(EM_DIAGRAM):   end;
356840    +else do;
MPRINT(EM_DIAGRAM):   else do;
356841    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356842    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
356843    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356844    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356845    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
356846    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
356847    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
356848    +   end;
MPRINT(EM_DIAGRAM):   end;
356849    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356850    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
356851    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
356852    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
356853    +   end;
MPRINT(EM_DIAGRAM):   end;
356854    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356855    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
356856    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
356857    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
356858    +   end;
MPRINT(EM_DIAGRAM):   end;
356859    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356860    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
356861    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
356862    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
356863    +   end;
MPRINT(EM_DIAGRAM):   end;
356864    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356865    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
356866    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
356867    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
356868    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356869    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356870    +   end;
MPRINT(EM_DIAGRAM):   end;
356871    +end;
MPRINT(EM_DIAGRAM):   end;
356872    +
356873    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
356874    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
356875    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
356876    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
356877    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
356878    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
356879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356881    +end;
MPRINT(EM_DIAGRAM):   end;
356882    +else do;
MPRINT(EM_DIAGRAM):   else do;
356883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356884    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
356885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356886    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
356887    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
356888    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
356889    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
356890    +   end;
MPRINT(EM_DIAGRAM):   end;
356891    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
356892    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
356893    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
356894    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
356895    +   end;
MPRINT(EM_DIAGRAM):   end;
356896    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356897    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
356898    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
356899    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
356900    +   end;
MPRINT(EM_DIAGRAM):   end;
356901    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356902    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
356903    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
356904    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
356905    +   end;
MPRINT(EM_DIAGRAM):   end;
356906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356907    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
356908    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
356909    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
356910    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356911    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356912    +   end;
MPRINT(EM_DIAGRAM):   end;
356913    +end;
MPRINT(EM_DIAGRAM):   end;
356914    +
356915    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
356916    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
356917    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
356918    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
356919    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
356920    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
356921    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356922    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356923    +end;
MPRINT(EM_DIAGRAM):   end;
356924    +else do;
MPRINT(EM_DIAGRAM):   else do;
356925    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356926    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
356927    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356928    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
356929    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
356930    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
356931    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
356932    +   end;
MPRINT(EM_DIAGRAM):   end;
356933    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
356934    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
356935    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
356936    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
356937    +   end;
MPRINT(EM_DIAGRAM):   end;
356938    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356939    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
356940    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
356941    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
356942    +   end;
MPRINT(EM_DIAGRAM):   end;
356943    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356944    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
356945    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
356946    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
356947    +   end;
MPRINT(EM_DIAGRAM):   end;
356948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356949    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
356950    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
356951    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
356952    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356953    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356954    +   end;
MPRINT(EM_DIAGRAM):   end;
356955    +end;
MPRINT(EM_DIAGRAM):   end;
356956    +
356957    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
356958    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
356959    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
356960    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
356961    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
356962    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
356963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
356964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356965    +end;
MPRINT(EM_DIAGRAM):   end;
356966    +else do;
MPRINT(EM_DIAGRAM):   else do;
356967    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
356968    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
356969    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
356970    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
356971    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
356972    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
356973    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
356974    +   end;
MPRINT(EM_DIAGRAM):   end;
356975    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
356976    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
356977    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
356978    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
356979    +   end;
MPRINT(EM_DIAGRAM):   end;
356980    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
356981    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
356982    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
356983    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
356984    +   end;
MPRINT(EM_DIAGRAM):   end;
356985    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
356986    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
356987    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
356988    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
356989    +   end;
MPRINT(EM_DIAGRAM):   end;
356990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
356991    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
356992    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
356993    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
356994    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
356995    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
356996    +   end;
MPRINT(EM_DIAGRAM):   end;
356997    +end;
MPRINT(EM_DIAGRAM):   end;
356998    +
356999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357000    +*** Checking missing input Interval
357001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
357002    +
357003    +IF NMISS(
357004    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
357005    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
357006    +
357007    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357008    +END;
MPRINT(EM_DIAGRAM):   END;
357009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357010    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
357011    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357012    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
357013    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
357014    +END;
MPRINT(EM_DIAGRAM):   END;
357015    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
357016    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
357017    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
357018    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
357019    +END;
MPRINT(EM_DIAGRAM):   END;
357020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357021    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
357022    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357023    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357024    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
357025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357026    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
357027    +   H1x1_1  =     1.95381025032439 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.95381025032439 * S_Year_Birth ;
357028    +   H1x1_1  = H1x1_1  +     1.14916728016472 * GRP_AcceptedCmp52
357029    +          +    -5.96780006482557 * GRP_Frq2  +     4.49682337069914 * GRP_Frq3
357030    +          +    -1.00084168387427 * GRP_Frq4  +    -4.56848186498493 *
357031    +        GRP_Income2  +    -6.08290839556081 * GRP_Income3
357032    +          +        -1.9523756063 * GRP_Income4  +     2.25453632912582 *
357033    +        GRP_Mnt2  +     0.79226665009331 * GRP_Mnt3  +     4.62693684609359 *
357034    +        GRP_Mnt4  +     4.80720961994346 * GRP_MntFishProducts2
357035    +          +     5.98129040124117 * GRP_MntFishProducts3
357036    +          +    -7.67060692838644 * GRP_MntFishProducts4
357037    +          +    -2.17396725012949 * GRP_MntGoldProds2
357038    +          +     0.85597521158935 * GRP_MntGoldProds3
357039    +          +      2.1173332536462 * GRP_MntGoldProds4
357040    +          +     7.10141475402441 * GRP_MntMeatProducts2
357041    +          +     -4.9090455486088 * GRP_MntMeatProducts3
357042    +          +     2.83142638000959 * GRP_MntMeatProducts4
357043    +          +     3.69328975873193 * GRP_MntWines2  +      2.1695090110711 *
357044    +        GRP_MntWines3  +    -5.30256986722649 * GRP_MntWines4
357045    +          +     0.29736312872725 * GRP_NumCatalogPurchases3
357046    +          +     4.11382044060245 * GRP_NumCatalogPurchases4
357047    +          +    -6.25823764999595 * GRP_NumDistPurchases2
357048    +          +    -0.67901515881598 * GRP_NumDistPurchases3
357049    +          +     7.85932256128371 * GRP_NumDistPurchases4
357050    +          +     3.53767704202566 * GRP_NumWebPurchases2
357051    +          +    -6.48408913826017 * GRP_NumWebPurchases3
357052    +          +     4.25220646709256 * GRP_NumWebPurchases4
357053    +          +     1.52518398177008 * GRP_RFMstat2  +    -8.45537513058681 *
357054    +        GRP_RFMstat3  +      1.7628190243685 * GRP_RFMstat4
357055    +          +    -2.26342656707522 * GRP_RMntFrq2  +     0.15141321171269 *
357056    +        GRP_RMntFrq3  +     4.77478604851781 * GRP_RMntFrq4
357057    +          +     7.94049700164507 * GRP_Recency2  +     6.59302318386937 *
357058    +        GRP_Recency3  +    -1.94583979914797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.14916728016472 * GRP_AcceptedCmp52 + 
-5.96780006482557 * GRP_Frq2 + 4.49682337069914 * GRP_Frq3 + -1.00084168387427 * GRP_Frq4 + 
-4.56848186498493 * GRP_Income2 + -6.08290839556081 * GRP_Income3 + -1.9523756063 * 
GRP_Income4 + 2.25453632912582 * GRP_Mnt2 + 0.79226665009331 * GRP_Mnt3 + 4.62693684609359 * 
GRP_Mnt4 + 4.80720961994346 * GRP_MntFishProducts2 + 5.98129040124117 * GRP_MntFishProducts3 + 
-7.67060692838644 * GRP_MntFishProducts4 + -2.17396725012949 * GRP_MntGoldProds2 + 
0.85597521158935 * GRP_MntGoldProds3 + 2.1173332536462 * GRP_MntGoldProds4 + 7.10141475402441 
* GRP_MntMeatProducts2 + -4.9090455486088 * GRP_MntMeatProducts3 + 2.83142638000959 * 
GRP_MntMeatProducts4 + 3.69328975873193 * GRP_MntWines2 + 2.1695090110711 * GRP_MntWines3 + 
-5.30256986722649 * GRP_MntWines4 + 0.29736312872725 * GRP_NumCatalogPurchases3 + 
4.11382044060245 * GRP_NumCatalogPurchases4 + -6.25823764999595 * GRP_NumDistPurchases2 + 
-0.67901515881598 * GRP_NumDistPurchases3 + 7.85932256128371 * GRP_NumDistPurchases4 + 
3.53767704202566 * GRP_NumWebPurchases2 + -6.48408913826017 * GRP_NumWebPurchases3 + 
4.25220646709256 * GRP_NumWebPurchases4 + 1.52518398177008 * GRP_RFMstat2 + -8.45537513058681 
* GRP_RFMstat3 + 1.7628190243685 * GRP_RFMstat4 + -2.26342656707522 * GRP_RMntFrq2 + 
0.15141321171269 * GRP_RMntFrq3 + 4.77478604851781 * GRP_RMntFrq4 + 7.94049700164507 * 
GRP_Recency2 + 6.59302318386937 * GRP_Recency3 + -1.94583979914797 * GRP_Recency4 ;
357059    +   H1x1_1  =     0.17797650232548 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.17797650232548 + H1x1_1 ;
357060    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
357061    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
357062    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
357063    +END;
MPRINT(EM_DIAGRAM):   END;
357064    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
357065    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
357066    +END;
MPRINT(EM_DIAGRAM):   END;
357067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357068    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
357069    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357070    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
357071    +   H1x2_1  =     -0.4803749248586 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.4803749248586 * S_Year_Birth ;
357072    +   H1x2_1  = H1x2_1  +      -2.709334396045 * GRP_AcceptedCmp52
357073    +          +    -0.72996008627086 * GRP_Frq2  +     1.18917091356785 * GRP_Frq3
357074    +          +    -0.84357839249772 * GRP_Frq4  +    -1.34210240870748 *
357075    +        GRP_Income2  +    -2.49305097670051 * GRP_Income3
357076    +          +     0.47903160451188 * GRP_Income4  +    -0.21389782834045 *
357077    +        GRP_Mnt2  +    -2.96981107340783 * GRP_Mnt3  +     0.25136923781697 *
357078    +        GRP_Mnt4  +    -1.77015468345115 * GRP_MntFishProducts2
357079    +          +    -2.01927730228967 * GRP_MntFishProducts3
357080    +          +    -1.75480602447555 * GRP_MntFishProducts4
357081    +          +     0.42274303160257 * GRP_MntGoldProds2
357082    +          +     1.56137884413542 * GRP_MntGoldProds3
357083    +          +     0.84731732911707 * GRP_MntGoldProds4
357084    +          +     0.81025189254107 * GRP_MntMeatProducts2
357085    +          +     1.96319534444801 * GRP_MntMeatProducts3
357086    +          +     0.96127142865074 * GRP_MntMeatProducts4
357087    +          +    -0.93806166213097 * GRP_MntWines2  +     0.05312243237158 *
357088    +        GRP_MntWines3  +     0.84972126175769 * GRP_MntWines4
357089    +          +    -1.06178615974842 * GRP_NumCatalogPurchases3
357090    +          +     0.40580399494511 * GRP_NumCatalogPurchases4
357091    +          +      0.0678513615184 * GRP_NumDistPurchases2
357092    +          +     0.02437151967393 * GRP_NumDistPurchases3
357093    +          +     0.69402606373719 * GRP_NumDistPurchases4
357094    +          +       0.411121097653 * GRP_NumWebPurchases2
357095    +          +     0.82481677575773 * GRP_NumWebPurchases3
357096    +          +     1.41988866790215 * GRP_NumWebPurchases4
357097    +          +     0.85026610914091 * GRP_RFMstat2  +    -2.24707947369438 *
357098    +        GRP_RFMstat3  +     -1.1790000875996 * GRP_RFMstat4
357099    +          +     0.87106199482984 * GRP_RMntFrq2  +    -0.83130886232946 *
357100    +        GRP_RMntFrq3  +    -0.14994298443333 * GRP_RMntFrq4
357101    +          +      0.4148069318585 * GRP_Recency2  +     1.81524210481359 *
357102    +        GRP_Recency3  +    -0.14279288009067 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.709334396045 * GRP_AcceptedCmp52 + 
-0.72996008627086 * GRP_Frq2 + 1.18917091356785 * GRP_Frq3 + -0.84357839249772 * GRP_Frq4 + 
-1.34210240870748 * GRP_Income2 + -2.49305097670051 * GRP_Income3 + 0.47903160451188 * 
GRP_Income4 + -0.21389782834045 * GRP_Mnt2 + -2.96981107340783 * GRP_Mnt3 + 0.25136923781697 * 
GRP_Mnt4 + -1.77015468345115 * GRP_MntFishProducts2 + -2.01927730228967 * GRP_MntFishProducts3 
+ -1.75480602447555 * GRP_MntFishProducts4 + 0.42274303160257 * GRP_MntGoldProds2 + 
1.56137884413542 * GRP_MntGoldProds3 + 0.84731732911707 * GRP_MntGoldProds4 + 0.81025189254107 
* GRP_MntMeatProducts2 + 1.96319534444801 * GRP_MntMeatProducts3 + 0.96127142865074 * 
GRP_MntMeatProducts4 + -0.93806166213097 * GRP_MntWines2 + 0.05312243237158 * GRP_MntWines3 + 
0.84972126175769 * GRP_MntWines4 + -1.06178615974842 * GRP_NumCatalogPurchases3 + 
0.40580399494511 * GRP_NumCatalogPurchases4 + 0.0678513615184 * GRP_NumDistPurchases2 + 
0.02437151967393 * GRP_NumDistPurchases3 + 0.69402606373719 * GRP_NumDistPurchases4 + 
0.411121097653 * GRP_NumWebPurchases2 + 0.82481677575773 * GRP_NumWebPurchases3 + 
1.41988866790215 * GRP_NumWebPurchases4 + 0.85026610914091 * GRP_RFMstat2 + -2.24707947369438 
* GRP_RFMstat3 + -1.1790000875996 * GRP_RFMstat4 + 0.87106199482984 * GRP_RMntFrq2 + 
-0.83130886232946 * GRP_RMntFrq3 + -0.14994298443333 * GRP_RMntFrq4 + 0.4148069318585 * 
GRP_Recency2 + 1.81524210481359 * GRP_Recency3 + -0.14279288009067 * GRP_Recency4 ;
357103    +   H1x2_1  =    -1.10844381917328 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.10844381917328 + H1x2_1 ;
357104    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
357105    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
357106    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
357107    +END;
MPRINT(EM_DIAGRAM):   END;
357108    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
357109    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
357110    +END;
MPRINT(EM_DIAGRAM):   END;
357111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357112    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
357113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357114    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
357115    +   H2x1_1  =    -4.35637031258639 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -4.35637031258639 * H1x1_1 ;
357116    +   H2x1_1  = H2x1_1  +    -3.33687841316643 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.33687841316643 * H1x2_1 ;
357117    +   H2x1_1  =     3.05963926783565 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.05963926783565 + H2x1_1 ;
357118    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
357119    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
357120    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
357121    +END;
MPRINT(EM_DIAGRAM):   END;
357122    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
357123    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
357124    +END;
MPRINT(EM_DIAGRAM):   END;
357125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357126    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
357127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357128    +
357129    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
357130    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
357131    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
357132    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
357133    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
357134    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
357135    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
357136    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
357137    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
357138    +end;
MPRINT(EM_DIAGRAM):   end;
357139    +else do;
MPRINT(EM_DIAGRAM):   else do;
357140    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
357141    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
357142    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
357143    +   end;
MPRINT(EM_DIAGRAM):   end;
357144    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
357145    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
357146    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
357147    +   end;
MPRINT(EM_DIAGRAM):   end;
357148    +   else do;
MPRINT(EM_DIAGRAM):   else do;
357149    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
357150    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
357151    +   end;
MPRINT(EM_DIAGRAM):   end;
357152    +end;
MPRINT(EM_DIAGRAM):   end;
357153    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
357154    +   P_DepVar1  =    -6.02136211154727 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.02136211154727 * H2x1_1 ;
357155    +   P_DepVar1  =     0.37595575621801 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37595575621801 + P_DepVar1 ;
357156    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
357157    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
357158    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
357159    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
357160    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
357161    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
357162    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
357163    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
357164    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
357165    +END;
MPRINT(EM_DIAGRAM):   END;
357166    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
357167    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
357168    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
357169    +END;
MPRINT(EM_DIAGRAM):   END;
357170    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
357171    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
357172    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
357173    +END;
MPRINT(EM_DIAGRAM):   END;
357174    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
357175    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
357176    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
357177    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
357178    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
357179    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
357180    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
357181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357182    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
357183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
357184    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
357185    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
357186    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
357187    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
357188    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
357189    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
357190    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
357191    +END;
MPRINT(EM_DIAGRAM):   END;
357192    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
357193    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
357194    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
357195    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
357196    +* Renaming variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural23;
357197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357198    +* Renaming Posterior variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural23;
357199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357200    +drop AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar1;
357201    +AutoNeural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar1 = P_DepVar1;
357202    +drop AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar0;
357203    +AutoNeural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar0 = P_DepVar0;
357204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357205    +* Renaming _WARN_ variable for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural23;
357206    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357207    +length AutoNeural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural23_WARN_ $4;
357208    +drop AutoNeural23_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_WARN_;
357209    +AutoNeural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural23_WARN_ = _WARN_;
357210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357211    +* Ensmbl48: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Average Posteriors of 7 models;
357212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357213    +P_DepVar1 = (
357214    +AutoNeural24_P_DepVar1 +
357215    +AutoNeural22_P_DepVar1 +
357216    +AutoNeural21_P_DepVar1 +
357217    +AutoNeural20_P_DepVar1 +
357218    +AutoNeural26_P_DepVar1 +
357219    +AutoNeural25_P_DepVar1 +
357220    +AutoNeural23_P_DepVar1
357221    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural24_P_DepVar1 + AutoNeural22_P_DepVar1 + 
AutoNeural21_P_DepVar1 + AutoNeural20_P_DepVar1 + AutoNeural26_P_DepVar1 + 
AutoNeural25_P_DepVar1 + AutoNeural23_P_DepVar1 )/7;
357222    +P_DepVar0 = (
357223    +AutoNeural24_P_DepVar0 +
357224    +AutoNeural22_P_DepVar0 +
357225    +AutoNeural21_P_DepVar0 +
357226    +AutoNeural20_P_DepVar0 +
357227    +AutoNeural26_P_DepVar0 +
357228    +AutoNeural25_P_DepVar0 +
357229    +AutoNeural23_P_DepVar0
357230    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural24_P_DepVar0 + AutoNeural22_P_DepVar0 + 
AutoNeural21_P_DepVar0 + AutoNeural20_P_DepVar0 + AutoNeural26_P_DepVar0 + 
AutoNeural25_P_DepVar0 + AutoNeural23_P_DepVar0 )/7;
357231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357232    +* Ensmbl48: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Computing Classification Vars;
357233    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357234    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
357235    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
357236    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
357237    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
357238    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
357239    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
357240    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
357241    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
357242    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
357243    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
357244    +end;
MPRINT(EM_DIAGRAM):   end;
357245    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
357246    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
357247    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
357248    +end;
MPRINT(EM_DIAGRAM):   end;
357249    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
357250    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357251    +* Ensmbl48: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Producing Unformatted variable;
357252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357253    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
357254    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
357255    +else
357256    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
357257    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357258    +* Ensmbl48: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Computing _WARN_ Variable;
357259    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357260    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
357261    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
357262    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
357263    +if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
357263   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
357264    +if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
357264   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
357265    +if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
357265   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
357266    +if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
357266   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
357267    +if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
357267   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
357268    +if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
357268   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
357269    +if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
357269   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
357270    +if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
357270   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
357271    +if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
357271   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
357272    +if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
357272   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
357273    +if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
357273   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
357274    +if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
357274   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
357275    +if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
357275   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
357276    +if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
357276   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
357277    +if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
357277   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
357278    +if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
357278   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
357279    +if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
357279   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
357280    +if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
357280   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
357281    +if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
357281   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
357282    +if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
357282   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
357283    +if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
357283   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
357284    +if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
357284   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
357285    +if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
357285   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
357286    +if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
357286   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
357287    +if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
357287   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
357288    +if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
357288   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
357289    +if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
357289   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
357290    +if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
357290   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
357291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357292    +* Ensmbl48: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Computing Residual Vars;
357293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357294    +if
357295    +F_DepVar NE '1'
357296    +AND F_DepVar NE '0'
357297    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
357298    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
357299    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
357300    +end;
MPRINT(EM_DIAGRAM):   end;
357301    +else do;
MPRINT(EM_DIAGRAM):   else do;
357302    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
357303    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
357304    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
357305    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
357306    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
357307    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
357308    +END;
MPRINT(EM_DIAGRAM):   END;
357309    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
357310     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL48_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL24_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
      

MPRINT(EM_DIAGRAM):   quit;
357311     quit;
357312     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
357313     filename emflow
357313   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring AUTONEURAL24_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357314     *------------------------------------------------------------*;
357315     * Ensmbl48: Scoring AUTONEURAL24_VALIDATE data;
357316     *------------------------------------------------------------*;
357317     data EMWS8.Ensmbl48_VALIDATE
357318     / view=EMWS8.Ensmbl48_VALIDATE
357319     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl48_VALIDATE / view=EMWS8.Ensmbl48_VALIDATE ;
357320     set EMWS8.AutoNeural24_VALIDATE
357321     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural24_VALIDATE ;
357322     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\EMFLOWSCORE.sas.
357323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357324    +* Ensmbl48: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Combine model for DepVar;
357325    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357326    +* Ensmbl48: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 1 of 7;
357327    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357328    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357329    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
357330    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
357331    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
357332    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357333    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357334    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
357335    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
357336    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
357337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357338    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357339    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
357340    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
357341    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
357342    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357343    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357344    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
357345    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
357346    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
357347    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357348    +
357349    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
357350    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
357350   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
357351    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
357352    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
357353    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
357354    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
357355    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
357356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357357    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
357358    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
357359    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
357360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357361    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357362    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
357363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357364    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
357365    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
357366    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
357367    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357368    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
357369    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
357370    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
357371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357373    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
357374    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
357375    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
357376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357377    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
357378    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
357379    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
357380    +
357381    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357382    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
357383    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357384    +LABEL GRP_AcceptedCmp5 =
357385    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
357386    +
357387    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
357388    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
357389    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
357390    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
357391    +end;
MPRINT(EM_DIAGRAM):   end;
357392    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
357393    +if (_UFORMAT eq '0'
357394    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
357395    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
357396    +end;
MPRINT(EM_DIAGRAM):   end;
357397    +else
357398    +if (_UFORMAT eq '1'
357399    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
357400    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
357401    +end;
MPRINT(EM_DIAGRAM):   end;
357402    +else do;
MPRINT(EM_DIAGRAM):   else do;
357403    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
357404    +end;
MPRINT(EM_DIAGRAM):   end;
357405    +end;
MPRINT(EM_DIAGRAM):   end;
357406    +
357407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357408    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
357409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357410    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
357411    +
357412    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
357413    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
357414    +end;
MPRINT(EM_DIAGRAM):   end;
357415    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
357416    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
357417    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
357418    +end;
MPRINT(EM_DIAGRAM):   end;
357419    +else
357420    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
357421    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
357422    +end;
MPRINT(EM_DIAGRAM):   end;
357423    +else
357424    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
357425    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
357426    +end;
MPRINT(EM_DIAGRAM):   end;
357427    +else
357428    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
357429    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
357430    +end;
MPRINT(EM_DIAGRAM):   end;
357431    +end;
MPRINT(EM_DIAGRAM):   end;
357432    +
357433    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357434    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
357435    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357436    +LABEL GRP_Income =
357437    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
357438    +
357439    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
357440    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
357441    +end;
MPRINT(EM_DIAGRAM):   end;
357442    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
357443    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
357444    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
357445    +end;
MPRINT(EM_DIAGRAM):   end;
357446    +else
357447    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
357448    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
357449    +end;
MPRINT(EM_DIAGRAM):   end;
357450    +else
357451    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
357452    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
357453    +end;
MPRINT(EM_DIAGRAM):   end;
357454    +else
357455    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
357456    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
357457    +end;
MPRINT(EM_DIAGRAM):   end;
357458    +end;
MPRINT(EM_DIAGRAM):   end;
357459    +
357460    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357461    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
357462    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357463    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
357464    +
357465    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
357466    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
357467    +end;
MPRINT(EM_DIAGRAM):   end;
357468    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
357469    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
357470    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
357471    +end;
MPRINT(EM_DIAGRAM):   end;
357472    +else
357473    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
357474    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
357475    +end;
MPRINT(EM_DIAGRAM):   end;
357476    +else
357477    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
357478    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
357479    +end;
MPRINT(EM_DIAGRAM):   end;
357480    +else
357481    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
357482    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
357483    +end;
MPRINT(EM_DIAGRAM):   end;
357484    +end;
MPRINT(EM_DIAGRAM):   end;
357485    +
357486    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357487    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
357488    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357489    +LABEL GRP_MntFishProducts =
357490    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
357491    +
357492    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
357493    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
357494    +end;
MPRINT(EM_DIAGRAM):   end;
357495    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
357496    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
357497    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
357498    +end;
MPRINT(EM_DIAGRAM):   end;
357499    +else
357500    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
357501    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
357502    +end;
MPRINT(EM_DIAGRAM):   end;
357503    +else
357504    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
357505    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
357506    +end;
MPRINT(EM_DIAGRAM):   end;
357507    +else
357508    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
357509    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
357510    +end;
MPRINT(EM_DIAGRAM):   end;
357511    +end;
MPRINT(EM_DIAGRAM):   end;
357512    +
357513    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357514    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
357515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357516    +LABEL GRP_MntGoldProds =
357517    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
357518    +
357519    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
357520    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
357521    +end;
MPRINT(EM_DIAGRAM):   end;
357522    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
357523    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
357524    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
357525    +end;
MPRINT(EM_DIAGRAM):   end;
357526    +else
357527    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
357528    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
357529    +end;
MPRINT(EM_DIAGRAM):   end;
357530    +else
357531    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
357532    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
357533    +end;
MPRINT(EM_DIAGRAM):   end;
357534    +else
357535    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
357536    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
357537    +end;
MPRINT(EM_DIAGRAM):   end;
357538    +end;
MPRINT(EM_DIAGRAM):   end;
357539    +
357540    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357541    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
357542    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357543    +LABEL GRP_MntMeatProducts =
357544    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
357545    +
357546    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
357547    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
357548    +end;
MPRINT(EM_DIAGRAM):   end;
357549    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
357550    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
357551    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
357552    +end;
MPRINT(EM_DIAGRAM):   end;
357553    +else
357554    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
357555    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
357556    +end;
MPRINT(EM_DIAGRAM):   end;
357557    +else
357558    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
357559    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
357560    +end;
MPRINT(EM_DIAGRAM):   end;
357561    +else
357562    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
357563    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
357564    +end;
MPRINT(EM_DIAGRAM):   end;
357565    +end;
MPRINT(EM_DIAGRAM):   end;
357566    +
357567    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357568    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
357569    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357570    +LABEL GRP_MntWines =
357571    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
357572    +
357573    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
357574    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
357575    +end;
MPRINT(EM_DIAGRAM):   end;
357576    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
357577    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
357578    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
357579    +end;
MPRINT(EM_DIAGRAM):   end;
357580    +else
357581    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
357582    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
357583    +end;
MPRINT(EM_DIAGRAM):   end;
357584    +else
357585    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
357586    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
357587    +end;
MPRINT(EM_DIAGRAM):   end;
357588    +else
357589    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
357590    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
357591    +end;
MPRINT(EM_DIAGRAM):   end;
357592    +end;
MPRINT(EM_DIAGRAM):   end;
357593    +
357594    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357595    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
357596    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357597    +LABEL GRP_NumCatalogPurchases =
357598    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
357599    +
357600    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
357601    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
357602    +end;
MPRINT(EM_DIAGRAM):   end;
357603    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
357604    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
357605    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
357606    +end;
MPRINT(EM_DIAGRAM):   end;
357607    +else
357608    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
357609    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
357610    +end;
MPRINT(EM_DIAGRAM):   end;
357611    +else
357612    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
357613    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
357614    +end;
MPRINT(EM_DIAGRAM):   end;
357615    +else
357616    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
357617    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
357618    +end;
MPRINT(EM_DIAGRAM):   end;
357619    +end;
MPRINT(EM_DIAGRAM):   end;
357620    +
357621    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357622    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
357623    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357624    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
357625    +
357626    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
357627    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
357628    +end;
MPRINT(EM_DIAGRAM):   end;
357629    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
357630    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
357631    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
357632    +end;
MPRINT(EM_DIAGRAM):   end;
357633    +else
357634    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
357635    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
357636    +end;
MPRINT(EM_DIAGRAM):   end;
357637    +else
357638    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
357639    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
357640    +end;
MPRINT(EM_DIAGRAM):   end;
357641    +else
357642    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
357643    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
357644    +end;
MPRINT(EM_DIAGRAM):   end;
357645    +end;
MPRINT(EM_DIAGRAM):   end;
357646    +
357647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357648    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
357649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357650    +LABEL GRP_NumWebPurchases =
357651    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
357652    +
357653    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
357654    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
357655    +end;
MPRINT(EM_DIAGRAM):   end;
357656    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
357657    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
357658    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
357659    +end;
MPRINT(EM_DIAGRAM):   end;
357660    +else
357661    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
357662    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
357663    +end;
MPRINT(EM_DIAGRAM):   end;
357664    +else
357665    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
357666    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
357667    +end;
MPRINT(EM_DIAGRAM):   end;
357668    +else
357669    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
357670    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
357671    +end;
MPRINT(EM_DIAGRAM):   end;
357672    +end;
MPRINT(EM_DIAGRAM):   end;
357673    +
357674    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357675    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
357676    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357677    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
357678    +
357679    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
357680    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
357681    +end;
MPRINT(EM_DIAGRAM):   end;
357682    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
357683    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
357684    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
357685    +end;
MPRINT(EM_DIAGRAM):   end;
357686    +else
357687    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
357688    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
357689    +end;
MPRINT(EM_DIAGRAM):   end;
357690    +else
357691    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
357692    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
357693    +end;
MPRINT(EM_DIAGRAM):   end;
357694    +else
357695    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
357696    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
357697    +end;
MPRINT(EM_DIAGRAM):   end;
357698    +end;
MPRINT(EM_DIAGRAM):   end;
357699    +
357700    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357701    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
357702    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357703    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
357704    +
357705    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
357706    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
357707    +end;
MPRINT(EM_DIAGRAM):   end;
357708    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
357709    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
357710    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
357711    +end;
MPRINT(EM_DIAGRAM):   end;
357712    +else
357713    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
357714    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
357715    +end;
MPRINT(EM_DIAGRAM):   end;
357716    +else
357717    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
357718    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
357719    +end;
MPRINT(EM_DIAGRAM):   end;
357720    +else
357721    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
357722    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
357723    +end;
MPRINT(EM_DIAGRAM):   end;
357724    +end;
MPRINT(EM_DIAGRAM):   end;
357725    +
357726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357727    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
357728    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357729    +LABEL GRP_Recency =
357730    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
357731    +
357732    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
357733    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
357734    +end;
MPRINT(EM_DIAGRAM):   end;
357735    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
357736    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
357737    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
357738    +end;
MPRINT(EM_DIAGRAM):   end;
357739    +else
357740    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
357741    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
357742    +end;
MPRINT(EM_DIAGRAM):   end;
357743    +else
357744    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
357745    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
357746    +end;
MPRINT(EM_DIAGRAM):   end;
357747    +else
357748    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
357749    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
357750    +end;
MPRINT(EM_DIAGRAM):   end;
357751    +end;
MPRINT(EM_DIAGRAM):   end;
357752    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357753    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
357754    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
357755    +* NODE: AutoNeural24;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural24;
357756    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
357757    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
357758    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
357759    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
357760    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
357761    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
357762    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
357763    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
357764    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
357765    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
357766    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
357767    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
357768    +LENGTH _WARN_ $4
357769    +      F_DepVar  $ 12
357770    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
357771    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
357772    +
357773    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
357774    +
357775    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
357776    +
357777    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
357778    +
357779    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
357780    +
357781    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
357782    +
357783    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
357784    +
357785    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
357786    +
357787    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
357788    +
357789    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
357790    +
357791    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
357792    +
357793    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
357794    +
357795    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
357796    +
357797    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
357798    +
357799    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
357800    +
357801    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
357802    +
357803    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
357804    +
357805    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
357806    +
357807    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
357808    +
357809    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
357810    +
357811    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
357812    +
357813    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
357814    +
357815    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
357816    +
357817    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
357818    +
357819    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
357820    +
357821    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
357822    +
357823    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
357824    +
357825    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
357826    +
357827    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
357828    +
357829    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
357830    +
357831    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
357832    +
357833    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
357834    +
357835    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
357836    +
357837    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
357838    +
357839    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
357840    +
357841    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
357842    +
357843    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
357844    +
357845    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
357846    +
357847    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
357848    +
357849    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
357850    +
357851    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
357852    +
357853    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
357854    +
357855    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
357856    +
357857    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
357858    +
357859    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
357860    +
357861    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
357862    +
357863    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
357864    +
357865    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
357866    +
357867    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
357868    +
357869    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
357870    +
357871    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
357872    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
357873    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
357874    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
357875    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
357876    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357877    +end;
MPRINT(EM_DIAGRAM):   end;
357878    +else do;
MPRINT(EM_DIAGRAM):   else do;
357879    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
357880    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
357881    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
357882    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
357883    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
357884    +   end;
MPRINT(EM_DIAGRAM):   end;
357885    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
357886    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
357887    +   end;
MPRINT(EM_DIAGRAM):   end;
357888    +   else do;
MPRINT(EM_DIAGRAM):   else do;
357889    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
357890    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
357891    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357892    +   end;
MPRINT(EM_DIAGRAM):   end;
357893    +end;
MPRINT(EM_DIAGRAM):   end;
357894    +
357895    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
357896    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
357897    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
357898    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
357899    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
357900    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
357901    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
357902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357903    +end;
MPRINT(EM_DIAGRAM):   end;
357904    +else do;
MPRINT(EM_DIAGRAM):   else do;
357905    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
357906    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
357907    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
357908    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
357909    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
357910    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
357911    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
357912    +   end;
MPRINT(EM_DIAGRAM):   end;
357913    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
357914    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
357915    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
357916    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
357917    +   end;
MPRINT(EM_DIAGRAM):   end;
357918    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
357919    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
357920    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
357921    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
357922    +   end;
MPRINT(EM_DIAGRAM):   end;
357923    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
357924    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
357925    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
357926    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
357927    +   end;
MPRINT(EM_DIAGRAM):   end;
357928    +   else do;
MPRINT(EM_DIAGRAM):   else do;
357929    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
357930    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
357931    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
357932    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
357933    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357934    +   end;
MPRINT(EM_DIAGRAM):   end;
357935    +end;
MPRINT(EM_DIAGRAM):   end;
357936    +
357937    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
357938    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
357939    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
357940    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
357941    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
357942    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
357943    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
357944    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357945    +end;
MPRINT(EM_DIAGRAM):   end;
357946    +else do;
MPRINT(EM_DIAGRAM):   else do;
357947    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
357948    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
357949    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
357950    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
357951    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
357952    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
357953    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
357954    +   end;
MPRINT(EM_DIAGRAM):   end;
357955    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
357956    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
357957    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
357958    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
357959    +   end;
MPRINT(EM_DIAGRAM):   end;
357960    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
357961    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
357962    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
357963    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
357964    +   end;
MPRINT(EM_DIAGRAM):   end;
357965    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
357966    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
357967    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
357968    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
357969    +   end;
MPRINT(EM_DIAGRAM):   end;
357970    +   else do;
MPRINT(EM_DIAGRAM):   else do;
357971    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
357972    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
357973    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
357974    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
357975    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357976    +   end;
MPRINT(EM_DIAGRAM):   end;
357977    +end;
MPRINT(EM_DIAGRAM):   end;
357978    +
357979    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
357980    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
357981    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
357982    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
357983    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
357984    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
357985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
357986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
357987    +end;
MPRINT(EM_DIAGRAM):   end;
357988    +else do;
MPRINT(EM_DIAGRAM):   else do;
357989    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
357990    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
357991    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
357992    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
357993    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
357994    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
357995    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
357996    +   end;
MPRINT(EM_DIAGRAM):   end;
357997    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
357998    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
357999    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
358000    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
358001    +   end;
MPRINT(EM_DIAGRAM):   end;
358002    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358003    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
358004    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
358005    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
358006    +   end;
MPRINT(EM_DIAGRAM):   end;
358007    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358008    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
358009    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
358010    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
358011    +   end;
MPRINT(EM_DIAGRAM):   end;
358012    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358013    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
358014    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
358015    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
358016    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358017    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358018    +   end;
MPRINT(EM_DIAGRAM):   end;
358019    +end;
MPRINT(EM_DIAGRAM):   end;
358020    +
358021    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
358022    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
358023    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
358024    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
358025    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
358026    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
358027    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358028    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358029    +end;
MPRINT(EM_DIAGRAM):   end;
358030    +else do;
MPRINT(EM_DIAGRAM):   else do;
358031    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358032    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
358033    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358034    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358035    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
358036    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
358037    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
358038    +   end;
MPRINT(EM_DIAGRAM):   end;
358039    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358040    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
358041    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
358042    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
358043    +   end;
MPRINT(EM_DIAGRAM):   end;
358044    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358045    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
358046    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
358047    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
358048    +   end;
MPRINT(EM_DIAGRAM):   end;
358049    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358050    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
358051    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
358052    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
358053    +   end;
MPRINT(EM_DIAGRAM):   end;
358054    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358055    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
358056    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
358057    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
358058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358060    +   end;
MPRINT(EM_DIAGRAM):   end;
358061    +end;
MPRINT(EM_DIAGRAM):   end;
358062    +
358063    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
358064    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
358065    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
358066    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
358067    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
358068    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
358069    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358070    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358071    +end;
MPRINT(EM_DIAGRAM):   end;
358072    +else do;
MPRINT(EM_DIAGRAM):   else do;
358073    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358074    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
358075    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358076    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358077    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
358078    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
358079    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
358080    +   end;
MPRINT(EM_DIAGRAM):   end;
358081    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358082    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
358083    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
358084    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
358085    +   end;
MPRINT(EM_DIAGRAM):   end;
358086    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358087    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
358088    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
358089    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
358090    +   end;
MPRINT(EM_DIAGRAM):   end;
358091    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358092    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
358093    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
358094    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
358095    +   end;
MPRINT(EM_DIAGRAM):   end;
358096    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358097    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
358098    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
358099    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
358100    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358101    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358102    +   end;
MPRINT(EM_DIAGRAM):   end;
358103    +end;
MPRINT(EM_DIAGRAM):   end;
358104    +
358105    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
358106    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
358107    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
358108    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
358109    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
358110    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
358111    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358112    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358113    +end;
MPRINT(EM_DIAGRAM):   end;
358114    +else do;
MPRINT(EM_DIAGRAM):   else do;
358115    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358116    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
358117    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358118    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358119    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
358120    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
358121    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
358122    +   end;
MPRINT(EM_DIAGRAM):   end;
358123    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358124    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
358125    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
358126    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
358127    +   end;
MPRINT(EM_DIAGRAM):   end;
358128    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358129    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
358130    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
358131    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
358132    +   end;
MPRINT(EM_DIAGRAM):   end;
358133    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358134    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
358135    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
358136    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
358137    +   end;
MPRINT(EM_DIAGRAM):   end;
358138    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358139    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
358140    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
358141    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
358142    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358143    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358144    +   end;
MPRINT(EM_DIAGRAM):   end;
358145    +end;
MPRINT(EM_DIAGRAM):   end;
358146    +
358147    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
358148    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
358149    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
358150    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
358151    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
358152    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
358153    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358154    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358155    +end;
MPRINT(EM_DIAGRAM):   end;
358156    +else do;
MPRINT(EM_DIAGRAM):   else do;
358157    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358158    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
358159    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358160    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358161    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
358162    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
358163    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
358164    +   end;
MPRINT(EM_DIAGRAM):   end;
358165    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358166    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
358167    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
358168    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
358169    +   end;
MPRINT(EM_DIAGRAM):   end;
358170    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358171    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
358172    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
358173    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
358174    +   end;
MPRINT(EM_DIAGRAM):   end;
358175    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358176    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
358177    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
358178    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
358179    +   end;
MPRINT(EM_DIAGRAM):   end;
358180    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358181    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
358182    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
358183    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
358184    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358185    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358186    +   end;
MPRINT(EM_DIAGRAM):   end;
358187    +end;
MPRINT(EM_DIAGRAM):   end;
358188    +
358189    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
358190    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
358191    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
358192    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
358193    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
358194    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358195    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358196    +end;
MPRINT(EM_DIAGRAM):   end;
358197    +else do;
MPRINT(EM_DIAGRAM):   else do;
358198    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358199    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
358200    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358201    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358202    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
358203    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
358204    +   end;
MPRINT(EM_DIAGRAM):   end;
358205    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358206    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
358207    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
358208    +   end;
MPRINT(EM_DIAGRAM):   end;
358209    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358210    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
358211    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
358212    +   end;
MPRINT(EM_DIAGRAM):   end;
358213    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358214    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
358215    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
358216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358218    +   end;
MPRINT(EM_DIAGRAM):   end;
358219    +end;
MPRINT(EM_DIAGRAM):   end;
358220    +
358221    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
358222    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
358223    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
358224    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
358225    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
358226    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
358227    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358228    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358229    +end;
MPRINT(EM_DIAGRAM):   end;
358230    +else do;
MPRINT(EM_DIAGRAM):   else do;
358231    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358232    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
358233    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358234    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
358235    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
358236    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
358237    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
358238    +   end;
MPRINT(EM_DIAGRAM):   end;
358239    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358240    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
358241    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
358242    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
358243    +   end;
MPRINT(EM_DIAGRAM):   end;
358244    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358245    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
358246    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
358247    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
358248    +   end;
MPRINT(EM_DIAGRAM):   end;
358249    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
358250    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
358251    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
358252    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
358253    +   end;
MPRINT(EM_DIAGRAM):   end;
358254    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358255    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
358256    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
358257    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
358258    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358259    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358260    +   end;
MPRINT(EM_DIAGRAM):   end;
358261    +end;
MPRINT(EM_DIAGRAM):   end;
358262    +
358263    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
358264    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
358265    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
358266    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
358267    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
358268    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
358269    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358270    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358271    +end;
MPRINT(EM_DIAGRAM):   end;
358272    +else do;
MPRINT(EM_DIAGRAM):   else do;
358273    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358274    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
358275    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358276    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358277    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
358278    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
358279    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
358280    +   end;
MPRINT(EM_DIAGRAM):   end;
358281    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358282    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
358283    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
358284    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
358285    +   end;
MPRINT(EM_DIAGRAM):   end;
358286    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358287    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
358288    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
358289    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
358290    +   end;
MPRINT(EM_DIAGRAM):   end;
358291    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358292    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
358293    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
358294    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
358295    +   end;
MPRINT(EM_DIAGRAM):   end;
358296    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358297    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
358298    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
358299    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
358300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358302    +   end;
MPRINT(EM_DIAGRAM):   end;
358303    +end;
MPRINT(EM_DIAGRAM):   end;
358304    +
358305    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
358306    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
358307    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
358308    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
358309    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
358310    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
358311    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358313    +end;
MPRINT(EM_DIAGRAM):   end;
358314    +else do;
MPRINT(EM_DIAGRAM):   else do;
358315    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358316    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
358317    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358318    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
358319    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
358320    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
358321    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
358322    +   end;
MPRINT(EM_DIAGRAM):   end;
358323    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
358324    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
358325    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
358326    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
358327    +   end;
MPRINT(EM_DIAGRAM):   end;
358328    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358329    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
358330    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
358331    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
358332    +   end;
MPRINT(EM_DIAGRAM):   end;
358333    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358334    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
358335    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
358336    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
358337    +   end;
MPRINT(EM_DIAGRAM):   end;
358338    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358339    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
358340    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
358341    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
358342    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358343    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358344    +   end;
MPRINT(EM_DIAGRAM):   end;
358345    +end;
MPRINT(EM_DIAGRAM):   end;
358346    +
358347    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
358348    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
358349    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
358350    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
358351    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
358352    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
358353    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358354    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358355    +end;
MPRINT(EM_DIAGRAM):   end;
358356    +else do;
MPRINT(EM_DIAGRAM):   else do;
358357    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358358    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
358359    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358360    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358361    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
358362    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
358363    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
358364    +   end;
MPRINT(EM_DIAGRAM):   end;
358365    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358366    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
358367    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
358368    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
358369    +   end;
MPRINT(EM_DIAGRAM):   end;
358370    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358371    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
358372    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
358373    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
358374    +   end;
MPRINT(EM_DIAGRAM):   end;
358375    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358376    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
358377    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
358378    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
358379    +   end;
MPRINT(EM_DIAGRAM):   end;
358380    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358381    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
358382    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
358383    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
358384    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358385    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358386    +   end;
MPRINT(EM_DIAGRAM):   end;
358387    +end;
MPRINT(EM_DIAGRAM):   end;
358388    +
358389    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
358390    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
358391    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
358392    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
358393    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
358394    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
358395    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358396    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358397    +end;
MPRINT(EM_DIAGRAM):   end;
358398    +else do;
MPRINT(EM_DIAGRAM):   else do;
358399    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358400    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
358401    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358402    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
358403    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
358404    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
358405    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
358406    +   end;
MPRINT(EM_DIAGRAM):   end;
358407    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358408    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
358409    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
358410    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
358411    +   end;
MPRINT(EM_DIAGRAM):   end;
358412    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
358413    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
358414    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
358415    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
358416    +   end;
MPRINT(EM_DIAGRAM):   end;
358417    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358418    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
358419    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
358420    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
358421    +   end;
MPRINT(EM_DIAGRAM):   end;
358422    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358423    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
358424    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
358425    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
358426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358428    +   end;
MPRINT(EM_DIAGRAM):   end;
358429    +end;
MPRINT(EM_DIAGRAM):   end;
358430    +
358431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358432    +*** Checking missing input Interval
358433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
358434    +
358435    +IF NMISS(
358436    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
358437    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
358438    +
358439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358440    +END;
MPRINT(EM_DIAGRAM):   END;
358441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358442    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
358443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358444    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
358445    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
358446    +END;
MPRINT(EM_DIAGRAM):   END;
358447    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
358448    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
358449    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
358450    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
358451    +END;
MPRINT(EM_DIAGRAM):   END;
358452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358453    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
358454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358456    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
358457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358458    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
358459    +   H1x1_1  =    -1.98556205049158 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.98556205049158 * S_Year_Birth ;
358460    +   H1x1_2  =     2.65003203246915 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.65003203246915 * S_Year_Birth ;
358461    +   H1x1_1  = H1x1_1  +    -0.05712043872213 * GRP_AcceptedCmp52
358462    +          +     1.04378756398945 * GRP_Frq2  +     1.53971794568749 * GRP_Frq3
358463    +          +     1.46006856973709 * GRP_Frq4  +    -0.56202924907336 *
358464    +        GRP_Income2  +     4.72191701616365 * GRP_Income3
358465    +          +    -2.66170280222507 * GRP_Income4  +     0.01753317277737 *
358466    +        GRP_Mnt2  +    -3.49161842568046 * GRP_Mnt3  +    -2.05166246350112 *
358467    +        GRP_Mnt4  +     3.42363704603021 * GRP_MntFishProducts2
358468    +          +     4.07177263196201 * GRP_MntFishProducts3
358469    +          +    -0.95758193346069 * GRP_MntFishProducts4
358470    +          +     0.27642218349221 * GRP_MntGoldProds2
358471    +          +    -1.85260255304992 * GRP_MntGoldProds3
358472    +          +      0.0084996256166 * GRP_MntGoldProds4
358473    +          +     1.78769069128312 * GRP_MntMeatProducts2
358474    +          +    -5.09868822425716 * GRP_MntMeatProducts3
358475    +          +     -1.2944400003238 * GRP_MntMeatProducts4
358476    +          +     2.16310510520522 * GRP_MntWines2  +    -0.98848869719513 *
358477    +        GRP_MntWines3  +     0.37628412350279 * GRP_MntWines4
358478    +          +    -0.18399160398973 * GRP_NumCatalogPurchases3
358479    +          +     2.78149370347513 * GRP_NumCatalogPurchases4
358480    +          +    -1.92842775798726 * GRP_NumDistPurchases2
358481    +          +     1.36617128431309 * GRP_NumDistPurchases3
358482    +          +    -5.04459399151701 * GRP_NumDistPurchases4
358483    +          +    -3.10131336282255 * GRP_NumWebPurchases2
358484    +          +    -1.70853531086832 * GRP_NumWebPurchases3
358485    +          +    -1.81576465350843 * GRP_NumWebPurchases4
358486    +          +     0.97448188440932 * GRP_RFMstat2  +    -1.74164713551138 *
358487    +        GRP_RFMstat3  +    -1.61869970889612 * GRP_RFMstat4
358488    +          +     0.94148483345045 * GRP_RMntFrq2  +    -4.61928796757469 *
358489    +        GRP_RMntFrq3  +    -0.29552475494224 * GRP_RMntFrq4
358490    +          +     0.59385679636573 * GRP_Recency2  +    -0.70804337284842 *
358491    +        GRP_Recency3  +     2.46935358022796 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05712043872213 * GRP_AcceptedCmp52 + 
1.04378756398945 * GRP_Frq2 + 1.53971794568749 * GRP_Frq3 + 1.46006856973709 * GRP_Frq4 + 
-0.56202924907336 * GRP_Income2 + 4.72191701616365 * GRP_Income3 + -2.66170280222507 * 
GRP_Income4 + 0.01753317277737 * GRP_Mnt2 + -3.49161842568046 * GRP_Mnt3 + -2.05166246350112 * 
GRP_Mnt4 + 3.42363704603021 * GRP_MntFishProducts2 + 4.07177263196201 * GRP_MntFishProducts3 + 
-0.95758193346069 * GRP_MntFishProducts4 + 0.27642218349221 * GRP_MntGoldProds2 + 
-1.85260255304992 * GRP_MntGoldProds3 + 0.0084996256166 * GRP_MntGoldProds4 + 1.78769069128312 
* GRP_MntMeatProducts2 + -5.09868822425716 * GRP_MntMeatProducts3 + -1.2944400003238 * 
GRP_MntMeatProducts4 + 2.16310510520522 * GRP_MntWines2 + -0.98848869719513 * GRP_MntWines3 + 
0.37628412350279 * GRP_MntWines4 + -0.18399160398973 * GRP_NumCatalogPurchases3 + 
2.78149370347513 * GRP_NumCatalogPurchases4 + -1.92842775798726 * GRP_NumDistPurchases2 + 
1.36617128431309 * GRP_NumDistPurchases3 + -5.04459399151701 * GRP_NumDistPurchases4 + 
-3.10131336282255 * GRP_NumWebPurchases2 + -1.70853531086832 * GRP_NumWebPurchases3 + 
-1.81576465350843 * GRP_NumWebPurchases4 + 0.97448188440932 * GRP_RFMstat2 + -1.74164713551138 
* GRP_RFMstat3 + -1.61869970889612 * GRP_RFMstat4 + 0.94148483345045 * GRP_RMntFrq2 + 
-4.61928796757469 * GRP_RMntFrq3 + -0.29552475494224 * GRP_RMntFrq4 + 0.59385679636573 * 
GRP_Recency2 + -0.70804337284842 * GRP_Recency3 + 2.46935358022796 * GRP_Recency4 ;
358492    +   H1x1_2  = H1x1_2  +    -2.86061192932804 * GRP_AcceptedCmp52
358493    +          +    -2.37847197829836 * GRP_Frq2  +     3.04126084255177 * GRP_Frq3
358494    +          +    -2.25316213708692 * GRP_Frq4  +    -2.15230505920585 *
358495    +        GRP_Income2  +     0.22423161350469 * GRP_Income3
358496    +          +     1.82470653064149 * GRP_Income4  +     0.91426377324604 *
358497    +        GRP_Mnt2  +    -2.52824414988744 * GRP_Mnt3  +     1.25821903076482 *
358498    +        GRP_Mnt4  +     2.48215495303599 * GRP_MntFishProducts2
358499    +          +    -2.53912545896945 * GRP_MntFishProducts3
358500    +          +    -1.24420085467004 * GRP_MntFishProducts4
358501    +          +     0.87589074104426 * GRP_MntGoldProds2
358502    +          +     2.05825939506076 * GRP_MntGoldProds3
358503    +          +     4.54187777951066 * GRP_MntGoldProds4
358504    +          +     1.73194182769876 * GRP_MntMeatProducts2
358505    +          +    -0.50494075731675 * GRP_MntMeatProducts3
358506    +          +    -1.24502732975278 * GRP_MntMeatProducts4
358507    +          +     1.29208460321632 * GRP_MntWines2  +     0.29717301998256 *
358508    +        GRP_MntWines3  +    -0.62672710631427 * GRP_MntWines4
358509    +          +     1.35492499749641 * GRP_NumCatalogPurchases3
358510    +          +    -0.16024517906179 * GRP_NumCatalogPurchases4
358511    +          +     1.86677407552405 * GRP_NumDistPurchases2
358512    +          +     -0.7331940643207 * GRP_NumDistPurchases3
358513    +          +     1.69990326910684 * GRP_NumDistPurchases4
358514    +          +     2.43176299986254 * GRP_NumWebPurchases2
358515    +          +    -2.13772911466858 * GRP_NumWebPurchases3
358516    +          +    -4.73478753166791 * GRP_NumWebPurchases4
358517    +          +     2.64399780173577 * GRP_RFMstat2  +    -3.62336346056054 *
358518    +        GRP_RFMstat3  +    -3.18363324824984 * GRP_RFMstat4
358519    +          +     3.46796006062254 * GRP_RMntFrq2  +    -0.59973905875633 *
358520    +        GRP_RMntFrq3  +    -1.07300094897005 * GRP_RMntFrq4
358521    +          +     1.65131957040649 * GRP_Recency2  +     2.60583794046673 *
358522    +        GRP_Recency3  +    -1.61296974687132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.86061192932804 * GRP_AcceptedCmp52 + 
-2.37847197829836 * GRP_Frq2 + 3.04126084255177 * GRP_Frq3 + -2.25316213708692 * GRP_Frq4 + 
-2.15230505920585 * GRP_Income2 + 0.22423161350469 * GRP_Income3 + 1.82470653064149 * 
GRP_Income4 + 0.91426377324604 * GRP_Mnt2 + -2.52824414988744 * GRP_Mnt3 + 1.25821903076482 * 
GRP_Mnt4 + 2.48215495303599 * GRP_MntFishProducts2 + -2.53912545896945 * GRP_MntFishProducts3 
+ -1.24420085467004 * GRP_MntFishProducts4 + 0.87589074104426 * GRP_MntGoldProds2 + 
2.05825939506076 * GRP_MntGoldProds3 + 4.54187777951066 * GRP_MntGoldProds4 + 1.73194182769876 
* GRP_MntMeatProducts2 + -0.50494075731675 * GRP_MntMeatProducts3 + -1.24502732975278 * 
GRP_MntMeatProducts4 + 1.29208460321632 * GRP_MntWines2 + 0.29717301998256 * GRP_MntWines3 + 
-0.62672710631427 * GRP_MntWines4 + 1.35492499749641 * GRP_NumCatalogPurchases3 + 
-0.16024517906179 * GRP_NumCatalogPurchases4 + 1.86677407552405 * GRP_NumDistPurchases2 + 
-0.7331940643207 * GRP_NumDistPurchases3 + 1.69990326910684 * GRP_NumDistPurchases4 + 
2.43176299986254 * GRP_NumWebPurchases2 + -2.13772911466858 * GRP_NumWebPurchases3 + 
-4.73478753166791 * GRP_NumWebPurchases4 + 2.64399780173577 * GRP_RFMstat2 + -3.62336346056054 
* GRP_RFMstat3 + -3.18363324824984 * GRP_RFMstat4 + 3.46796006062254 * GRP_RMntFrq2 + 
-0.59973905875633 * GRP_RMntFrq3 + -1.07300094897005 * GRP_RMntFrq4 + 1.65131957040649 * 
GRP_Recency2 + 2.60583794046673 * GRP_Recency3 + -1.61296974687132 * GRP_Recency4 ;
358523    +   H1x1_1  =     2.45115906330524 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.45115906330524 + H1x1_1 ;
358524    +   H1x1_2  =     4.73081202118604 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 4.73081202118604 + H1x1_2 ;
358525    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
358526    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
358527    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
358528    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
358529    +END;
MPRINT(EM_DIAGRAM):   END;
358530    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
358531    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
358532    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
358533    +END;
MPRINT(EM_DIAGRAM):   END;
358534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358535    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
358536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358537    +
358538    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
358539    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
358540    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
358541    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
358542    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
358543    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358544    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
358545    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
358546    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
358547    +end;
MPRINT(EM_DIAGRAM):   end;
358548    +else do;
MPRINT(EM_DIAGRAM):   else do;
358549    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
358550    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
358551    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
358552    +   end;
MPRINT(EM_DIAGRAM):   end;
358553    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
358554    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
358555    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
358556    +   end;
MPRINT(EM_DIAGRAM):   end;
358557    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358558    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
358559    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
358560    +   end;
MPRINT(EM_DIAGRAM):   end;
358561    +end;
MPRINT(EM_DIAGRAM):   end;
358562    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
358563    +   P_DepVar1  =      4.0196958449291 * H1x1_1  +    -3.12785763420985 * H1x1_2
358564    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0196958449291 * H1x1_1 + -3.12785763420985 * H1x1_2 ;
358565    +   P_DepVar1  =    -2.56231918790427 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.56231918790427 + P_DepVar1 ;
358566    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
358567    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
358568    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
358569    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
358570    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
358571    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
358572    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
358573    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
358574    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
358575    +END;
MPRINT(EM_DIAGRAM):   END;
358576    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
358577    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
358578    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
358579    +END;
MPRINT(EM_DIAGRAM):   END;
358580    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
358581    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
358582    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
358583    +END;
MPRINT(EM_DIAGRAM):   END;
358584    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
358585    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
358586    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
358587    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
358588    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
358589    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
358590    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
358591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358592    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
358593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
358594    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
358595    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
358596    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
358597    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
358598    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
358599    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
358600    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
358601    +END;
MPRINT(EM_DIAGRAM):   END;
358602    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
358603    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
358604    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
358605    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
358606    +* Renaming variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural24;
358607    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358608    +* Renaming Posterior variables for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural24;
358609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358610    +drop AutoNeural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar1;
358611    +AutoNeural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar1 = P_DepVar1;
358612    +drop AutoNeural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_P_DepVar0;
358613    +AutoNeural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural24_P_DepVar0 = P_DepVar0;
358614    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358615    +* Renaming _WARN_ variable for AutoNeural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural24;
358616    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358617    +length AutoNeural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural24_WARN_ $4;
358618    +drop AutoNeural24_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural24_WARN_;
358619    +AutoNeural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural24_WARN_ = _WARN_;
358620    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358621    +* Ensmbl48: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 2 of 7;
358622    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358623    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358624    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
358625    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
358626    +* NODE: AutoNeural22;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural22;
358627    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
358628    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
358629    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
358630    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
358631    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
358632    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
358633    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
358634    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
358635    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
358636    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
358637    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
358638    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
358639    +LENGTH _WARN_ $4
358640    +      F_DepVar  $ 12
358641    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
358642    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
358643    +
358644    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
358645    +
358646    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
358647    +
358648    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
358649    +
358650    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
358651    +
358652    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
358653    +
358654    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
358655    +
358656    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
358657    +
358658    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
358659    +
358660    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
358661    +
358662    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
358663    +
358664    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
358665    +
358666    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
358667    +
358668    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
358669    +
358670    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
358671    +
358672    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
358673    +
358674    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
358675    +
358676    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
358677    +
358678    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
358679    +
358680    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
358681    +
358682    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
358683    +
358684    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
358685    +
358686    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
358687    +
358688    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
358689    +
358690    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
358691    +
358692    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
358693    +
358694    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
358695    +
358696    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
358697    +
358698    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
358699    +
358700    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
358701    +
The SAS System

358702    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
358703    +
358704    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
358705    +
358706    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
358707    +
358708    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
358709    +
358710    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
358711    +
358712    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
358713    +
358714    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
358715    +
358716    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
358717    +
358718    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
358719    +
358720    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
358721    +
358722    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
358723    +
358724    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
358725    +
358726    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
358727    +
358728    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
358729    +
358730    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
358731    +
358732    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
358733    +
358734    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
358735    +
358736    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
358737    +
358738    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
358739    +
358740    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
358741    +
358742    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
358743    +
358744    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
358745    +
358746    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
358747    +
358748    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
358749    +
358750    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
358751    +
358752    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
358753    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
358754    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
358755    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
358756    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358757    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358758    +end;
MPRINT(EM_DIAGRAM):   end;
358759    +else do;
MPRINT(EM_DIAGRAM):   else do;
358760    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358761    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
358762    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358763    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
358764    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
358765    +   end;
MPRINT(EM_DIAGRAM):   end;
358766    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
358767    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
358768    +   end;
MPRINT(EM_DIAGRAM):   end;
358769    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358770    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
358771    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358772    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358773    +   end;
MPRINT(EM_DIAGRAM):   end;
358774    +end;
MPRINT(EM_DIAGRAM):   end;
358775    +
358776    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
358777    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
358778    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
358779    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
358780    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
358781    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
358782    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358783    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358784    +end;
MPRINT(EM_DIAGRAM):   end;
358785    +else do;
MPRINT(EM_DIAGRAM):   else do;
358786    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358787    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
358788    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358789    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
358790    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
358791    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
358792    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
358793    +   end;
MPRINT(EM_DIAGRAM):   end;
358794    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
358795    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
358796    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
358797    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
358798    +   end;
MPRINT(EM_DIAGRAM):   end;
358799    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358800    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
358801    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
358802    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
358803    +   end;
MPRINT(EM_DIAGRAM):   end;
358804    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358805    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
358806    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
358807    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
358808    +   end;
MPRINT(EM_DIAGRAM):   end;
358809    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358810    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
358811    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
358812    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
358813    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358814    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358815    +   end;
MPRINT(EM_DIAGRAM):   end;
358816    +end;
MPRINT(EM_DIAGRAM):   end;
358817    +
358818    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
358819    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
358820    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
358821    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
358822    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
358823    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
358824    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358825    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358826    +end;
MPRINT(EM_DIAGRAM):   end;
358827    +else do;
MPRINT(EM_DIAGRAM):   else do;
358828    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358829    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
358830    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358831    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
358832    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
358833    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
358834    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
358835    +   end;
MPRINT(EM_DIAGRAM):   end;
358836    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358837    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
358838    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
358839    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
358840    +   end;
MPRINT(EM_DIAGRAM):   end;
358841    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
358842    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
358843    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
358844    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
358845    +   end;
MPRINT(EM_DIAGRAM):   end;
358846    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358847    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
358848    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
358849    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
358850    +   end;
MPRINT(EM_DIAGRAM):   end;
358851    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358852    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
358853    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
358854    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
358855    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358856    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358857    +   end;
MPRINT(EM_DIAGRAM):   end;
358858    +end;
MPRINT(EM_DIAGRAM):   end;
358859    +
358860    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
358861    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
358862    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
358863    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
358864    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
358865    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
358866    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358867    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358868    +end;
MPRINT(EM_DIAGRAM):   end;
358869    +else do;
MPRINT(EM_DIAGRAM):   else do;
358870    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358871    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
358872    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358873    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358874    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
358875    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
358876    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
358877    +   end;
MPRINT(EM_DIAGRAM):   end;
358878    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358879    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
358880    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
358881    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
358882    +   end;
MPRINT(EM_DIAGRAM):   end;
358883    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358884    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
358885    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
358886    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
358887    +   end;
MPRINT(EM_DIAGRAM):   end;
358888    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358889    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
358890    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
358891    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
358892    +   end;
MPRINT(EM_DIAGRAM):   end;
358893    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358894    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
358895    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
358896    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
358897    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358898    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358899    +   end;
MPRINT(EM_DIAGRAM):   end;
358900    +end;
MPRINT(EM_DIAGRAM):   end;
358901    +
358902    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
358903    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
358904    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
358905    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
358906    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
358907    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
358908    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358909    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358910    +end;
MPRINT(EM_DIAGRAM):   end;
358911    +else do;
MPRINT(EM_DIAGRAM):   else do;
358912    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358913    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
358914    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358915    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358916    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
358917    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
358918    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
358919    +   end;
MPRINT(EM_DIAGRAM):   end;
358920    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358921    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
358922    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
358923    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
358924    +   end;
MPRINT(EM_DIAGRAM):   end;
358925    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358926    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
358927    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
358928    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
358929    +   end;
MPRINT(EM_DIAGRAM):   end;
358930    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358931    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
358932    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
358933    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
358934    +   end;
MPRINT(EM_DIAGRAM):   end;
358935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358936    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
358937    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
358938    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
358939    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358940    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358941    +   end;
MPRINT(EM_DIAGRAM):   end;
358942    +end;
MPRINT(EM_DIAGRAM):   end;
358943    +
358944    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
358945    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
358946    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
358947    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
358948    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
358949    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
358950    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358951    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358952    +end;
MPRINT(EM_DIAGRAM):   end;
358953    +else do;
MPRINT(EM_DIAGRAM):   else do;
358954    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358955    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
358956    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358957    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
358958    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
358959    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
358960    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
358961    +   end;
MPRINT(EM_DIAGRAM):   end;
358962    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
358963    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
358964    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
358965    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
358966    +   end;
MPRINT(EM_DIAGRAM):   end;
358967    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
358968    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
358969    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
358970    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
358971    +   end;
MPRINT(EM_DIAGRAM):   end;
358972    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
358973    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
358974    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
358975    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
358976    +   end;
MPRINT(EM_DIAGRAM):   end;
358977    +   else do;
MPRINT(EM_DIAGRAM):   else do;
358978    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
358979    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
358980    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
358981    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
358982    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358983    +   end;
MPRINT(EM_DIAGRAM):   end;
358984    +end;
MPRINT(EM_DIAGRAM):   end;
358985    +
358986    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
358987    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
358988    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
358989    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
358990    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
358991    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
358992    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
358993    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
358994    +end;
MPRINT(EM_DIAGRAM):   end;
358995    +else do;
MPRINT(EM_DIAGRAM):   else do;
358996    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
358997    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
358998    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
358999    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
359000    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
359001    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
359002    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
359003    +   end;
MPRINT(EM_DIAGRAM):   end;
359004    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359005    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
359006    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
359007    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
359008    +   end;
MPRINT(EM_DIAGRAM):   end;
359009    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359010    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
359011    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
359012    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
359013    +   end;
MPRINT(EM_DIAGRAM):   end;
359014    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359015    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
359016    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
359017    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
359018    +   end;
MPRINT(EM_DIAGRAM):   end;
359019    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359020    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
359021    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
359022    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
359023    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359024    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359025    +   end;
MPRINT(EM_DIAGRAM):   end;
359026    +end;
MPRINT(EM_DIAGRAM):   end;
359027    +
359028    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
359029    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
359030    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
359031    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
359032    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
359033    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
359034    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359035    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359036    +end;
MPRINT(EM_DIAGRAM):   end;
359037    +else do;
MPRINT(EM_DIAGRAM):   else do;
359038    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359039    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
359040    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359041    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
359042    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
359043    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
359044    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
359045    +   end;
MPRINT(EM_DIAGRAM):   end;
359046    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359047    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
359048    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
359049    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
359050    +   end;
MPRINT(EM_DIAGRAM):   end;
359051    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359052    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
359053    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
359054    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
359055    +   end;
MPRINT(EM_DIAGRAM):   end;
359056    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359057    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
359058    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
359059    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
359060    +   end;
MPRINT(EM_DIAGRAM):   end;
359061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359062    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
359063    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
359064    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
359065    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359066    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359067    +   end;
MPRINT(EM_DIAGRAM):   end;
359068    +end;
MPRINT(EM_DIAGRAM):   end;
359069    +
359070    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
359071    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
359072    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
359073    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
359074    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
359075    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359076    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359077    +end;
MPRINT(EM_DIAGRAM):   end;
359078    +else do;
MPRINT(EM_DIAGRAM):   else do;
359079    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359080    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
359081    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359082    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
359083    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
359084    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
359085    +   end;
MPRINT(EM_DIAGRAM):   end;
359086    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359087    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
359088    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
359089    +   end;
MPRINT(EM_DIAGRAM):   end;
359090    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359091    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
359092    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
359093    +   end;
MPRINT(EM_DIAGRAM):   end;
359094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359095    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
359096    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
359097    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359098    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359099    +   end;
MPRINT(EM_DIAGRAM):   end;
359100    +end;
MPRINT(EM_DIAGRAM):   end;
359101    +
359102    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
359103    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
359104    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
359105    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
359106    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
359107    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
359108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359110    +end;
MPRINT(EM_DIAGRAM):   end;
359111    +else do;
MPRINT(EM_DIAGRAM):   else do;
359112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359113    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
359114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359115    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
359116    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
359117    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
359118    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
359119    +   end;
MPRINT(EM_DIAGRAM):   end;
359120    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359121    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
359122    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
359123    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
359124    +   end;
MPRINT(EM_DIAGRAM):   end;
359125    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359126    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
359127    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
359128    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
359129    +   end;
MPRINT(EM_DIAGRAM):   end;
359130    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
359131    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
359132    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
359133    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
359134    +   end;
MPRINT(EM_DIAGRAM):   end;
359135    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359136    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
359137    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
359138    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
359139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359141    +   end;
MPRINT(EM_DIAGRAM):   end;
359142    +end;
MPRINT(EM_DIAGRAM):   end;
359143    +
359144    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
359145    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
359146    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
359147    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
359148    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
359149    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
359150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359152    +end;
MPRINT(EM_DIAGRAM):   end;
359153    +else do;
MPRINT(EM_DIAGRAM):   else do;
359154    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359155    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
359156    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359157    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
359158    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
359159    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
359160    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
359161    +   end;
MPRINT(EM_DIAGRAM):   end;
359162    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359163    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
359164    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
359165    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
359166    +   end;
MPRINT(EM_DIAGRAM):   end;
359167    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359168    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
359169    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
359170    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
359171    +   end;
MPRINT(EM_DIAGRAM):   end;
359172    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359173    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
359174    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
359175    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
359176    +   end;
MPRINT(EM_DIAGRAM):   end;
359177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359178    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
359179    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
359180    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
359181    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359182    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359183    +   end;
MPRINT(EM_DIAGRAM):   end;
359184    +end;
MPRINT(EM_DIAGRAM):   end;
359185    +
359186    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
359187    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
359188    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
359189    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
359190    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
359191    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
359192    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359193    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359194    +end;
MPRINT(EM_DIAGRAM):   end;
359195    +else do;
MPRINT(EM_DIAGRAM):   else do;
359196    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359197    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
359198    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359199    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
359200    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
359201    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
359202    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
359203    +   end;
MPRINT(EM_DIAGRAM):   end;
359204    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
359205    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
359206    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
359207    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
359208    +   end;
MPRINT(EM_DIAGRAM):   end;
359209    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359210    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
359211    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
359212    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
359213    +   end;
MPRINT(EM_DIAGRAM):   end;
359214    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359215    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
359216    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
359217    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
359218    +   end;
MPRINT(EM_DIAGRAM):   end;
359219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359220    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
359221    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
359222    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
359223    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359224    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359225    +   end;
MPRINT(EM_DIAGRAM):   end;
359226    +end;
MPRINT(EM_DIAGRAM):   end;
359227    +
359228    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
359229    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
359230    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
359231    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
359232    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
359233    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
359234    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359235    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359236    +end;
MPRINT(EM_DIAGRAM):   end;
359237    +else do;
MPRINT(EM_DIAGRAM):   else do;
359238    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359239    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
359240    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359241    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
359242    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
359243    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
359244    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
359245    +   end;
MPRINT(EM_DIAGRAM):   end;
359246    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359247    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
359248    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
359249    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
359250    +   end;
MPRINT(EM_DIAGRAM):   end;
359251    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359252    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
359253    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
359254    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
359255    +   end;
MPRINT(EM_DIAGRAM):   end;
359256    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359257    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
359258    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
359259    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
359260    +   end;
MPRINT(EM_DIAGRAM):   end;
359261    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359262    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
359263    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
359264    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
359265    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359266    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359267    +   end;
MPRINT(EM_DIAGRAM):   end;
359268    +end;
MPRINT(EM_DIAGRAM):   end;
359269    +
359270    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
359271    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
359272    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
359273    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
359274    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
359275    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
359276    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359277    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359278    +end;
MPRINT(EM_DIAGRAM):   end;
359279    +else do;
MPRINT(EM_DIAGRAM):   else do;
359280    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359281    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
359282    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359283    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
359284    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
359285    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
359286    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
359287    +   end;
MPRINT(EM_DIAGRAM):   end;
359288    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359289    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
359290    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
359291    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
359292    +   end;
MPRINT(EM_DIAGRAM):   end;
359293    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
359294    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
359295    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
359296    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
359297    +   end;
MPRINT(EM_DIAGRAM):   end;
359298    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359299    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
359300    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
359301    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
359302    +   end;
MPRINT(EM_DIAGRAM):   end;
359303    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359304    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
359305    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
359306    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
359307    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359308    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359309    +   end;
MPRINT(EM_DIAGRAM):   end;
359310    +end;
MPRINT(EM_DIAGRAM):   end;
359311    +
359312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359313    +*** Checking missing input Interval
359314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
359315    +
359316    +IF NMISS(
359317    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
359318    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
359319    +
359320    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359321    +END;
MPRINT(EM_DIAGRAM):   END;
359322    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359323    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
359324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359325    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
359326    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
359327    +END;
MPRINT(EM_DIAGRAM):   END;
359328    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
359329    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
359330    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
359331    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
359332    +END;
MPRINT(EM_DIAGRAM):   END;
359333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359334    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
359335    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359337    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
359338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359339    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
359340    +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
359341    +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
359342    +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
359343    +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
359344    +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
359345    +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
359346    +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
359347    +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
359348    +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
359349    +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
359350    +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
359351    +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
359352    +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
359353    +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
359354    +          +    -2.14876852259668 * GRP_MntFishProducts3
359355    +          +     1.83260002021024 * GRP_MntFishProducts4
359356    +          +     0.51096990118592 * GRP_MntGoldProds2
359357    +          +     0.50696068122006 * GRP_MntGoldProds3
359358    +          +     0.74230349643824 * GRP_MntGoldProds4
359359    +          +     1.49045716090612 * GRP_MntMeatProducts2
359360    +          +    -0.61254307122158 * GRP_MntMeatProducts3
359361    +          +     1.56999187930143 * GRP_MntMeatProducts4
359362    +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
359363    +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
359364    +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
359365    +          +     1.58785113957128 * GRP_NumCatalogPurchases4
359366    +          +    -0.62454988809727 * GRP_NumDistPurchases2
359367    +          +     1.37295312356584 * GRP_NumDistPurchases3
359368    +          +      1.5440119795954 * GRP_NumDistPurchases4
359369    +          +    -0.26547715068585 * GRP_NumWebPurchases2
359370    +          +     2.62305554684179 * GRP_NumWebPurchases3
359371    +          +     0.91247524672275 * GRP_NumWebPurchases4
359372    +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
359373    +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
359374    +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
359375    +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
359376    +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
359377    +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
359378    +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
359379    +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
359380    +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
359381    +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
359382    +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
359383    +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
359384    +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
359385    +          +    -1.03235983303498 * GRP_MntFishProducts3
359386    +          +     1.43737242782063 * GRP_MntFishProducts4
359387    +          +    -0.10286834037331 * GRP_MntGoldProds2
359388    +          +     0.74054061895326 * GRP_MntGoldProds3
359389    +          +     0.27916388015938 * GRP_MntGoldProds4
359390    +          +     0.12775665160956 * GRP_MntMeatProducts2
359391    +          +     1.94239791535409 * GRP_MntMeatProducts3
359392    +          +      2.8604089986372 * GRP_MntMeatProducts4
359393    +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
359394    +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
359395    +          +     0.80335076525252 * GRP_NumCatalogPurchases3
359396    +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
359397    +          +    -0.87650147959772 * GRP_NumDistPurchases2
359398    +          +     1.12706069993787 * GRP_NumDistPurchases3
359399    +          +    -1.96498929641584 * GRP_NumDistPurchases4
359400    +          +     1.06875251220076 * GRP_NumWebPurchases2
359401    +          +     1.19584362733739 * GRP_NumWebPurchases3
359402    +          +    -0.75462993535725 * GRP_NumWebPurchases4
359403    +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
359404    +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
359405    +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
359406    +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
359407    +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
359408    +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
359409    +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
359410    +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
359411    +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
359412    +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
359413    +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
359414    +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
359415    +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
359416    +          +    -0.11485741469493 * GRP_MntFishProducts3
359417    +          +     1.45721315298108 * GRP_MntFishProducts4
359418    +          +     0.26086838482974 * GRP_MntGoldProds2
359419    +          +    -0.13326700912822 * GRP_MntGoldProds3
359420    +          +    -0.31998514458297 * GRP_MntGoldProds4
359421    +          +     0.87003612251325 * GRP_MntMeatProducts2
359422    +          +    -0.25985022264915 * GRP_MntMeatProducts3
359423    +          +    -0.87011310494619 * GRP_MntMeatProducts4
359424    +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
359425    +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
359426    +          +     1.20111821881337 * GRP_NumCatalogPurchases3
359427    +          +     1.02378241927709 * GRP_NumCatalogPurchases4
359428    +          +      1.0835984835482 * GRP_NumDistPurchases2
359429    +          +     1.45339482543591 * GRP_NumDistPurchases3
359430    +          +     0.28792255375632 * GRP_NumDistPurchases4
359431    +          +     1.88871344284328 * GRP_NumWebPurchases2
359432    +          +     1.61086784930132 * GRP_NumWebPurchases3
359433    +          +     0.49767560191528 * GRP_NumWebPurchases4
359434    +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
359435    +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
359436    +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
359437    +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
359438    +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
359439    +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
359440    +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
359441    +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
359442    +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
359443    +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
359444    +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
359445    +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
359446    +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
359447    +          +    -0.00259407262353 * GRP_MntFishProducts3
359448    +          +     0.26637234051452 * GRP_MntFishProducts4
359449    +          +     1.23072457246487 * GRP_MntGoldProds2
359450    +          +     0.27789879553199 * GRP_MntGoldProds3
359451    +          +    -1.84318316043809 * GRP_MntGoldProds4
359452    +          +    -0.37980618439099 * GRP_MntMeatProducts2
359453    +          +    -0.29547725841338 * GRP_MntMeatProducts3
359454    +          +      1.3351420752995 * GRP_MntMeatProducts4
359455    +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
359456    +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
359457    +          +     1.64715242240489 * GRP_NumCatalogPurchases3
359458    +          +     0.01013329918753 * GRP_NumCatalogPurchases4
359459    +          +      0.0553124072484 * GRP_NumDistPurchases2
359460    +          +     0.76354979572241 * GRP_NumDistPurchases3
359461    +          +     0.88878742575161 * GRP_NumDistPurchases4
359462    +          +    -0.02629928898859 * GRP_NumWebPurchases2
359463    +          +     1.58583162640849 * GRP_NumWebPurchases3
359464    +          +    -0.90266287490405 * GRP_NumWebPurchases4
359465    +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
359466    +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
359467    +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
359468    +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
359469    +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
359470    +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
359471    +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
359472    +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
359473    +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
359474    +        GRP_Income2  +     2.20143802199151 * GRP_Income3
359475    +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
359476    +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
359477    +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
359478    +          +    -1.66553508839843 * GRP_MntFishProducts3
359479    +          +     3.34099127472134 * GRP_MntFishProducts4
359480    +          +    -3.77620930649926 * GRP_MntGoldProds2
359481    +          +     2.75980592823208 * GRP_MntGoldProds3
359482    +          +    -0.90664928399655 * GRP_MntGoldProds4
359483    +          +    -1.27778215433985 * GRP_MntMeatProducts2
359484    +          +    -0.38584098789626 * GRP_MntMeatProducts3
359485    +          +      0.8642940393434 * GRP_MntMeatProducts4
359486    +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
359487    +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
359488    +          +     0.54374663319998 * GRP_NumCatalogPurchases3
359489    +          +     0.84217480467185 * GRP_NumCatalogPurchases4
359490    +          +    -0.04373645189331 * GRP_NumDistPurchases2
359491    +          +    -3.26167594790936 * GRP_NumDistPurchases3
359492    +          +    -1.17302893253955 * GRP_NumDistPurchases4
359493    +          +     1.08907656354379 * GRP_NumWebPurchases2
359494    +          +    -1.23512651413063 * GRP_NumWebPurchases3
359495    +          +     1.21540059785356 * GRP_NumWebPurchases4
359496    +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
359497    +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
359498    +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
359499    +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
359500    +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
359501    +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
359502    +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
359503    +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
359504    +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
359505    +        GRP_Income2  +     2.31528209254516 * GRP_Income3
359506    +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
359507    +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
359508    +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
359509    +          +    -2.67281939906452 * GRP_MntFishProducts3
359510    +          +     0.40242786465667 * GRP_MntFishProducts4
359511    +          +     1.21530608953831 * GRP_MntGoldProds2
359512    +          +      1.3503878333604 * GRP_MntGoldProds3
359513    +          +    -0.90580344196397 * GRP_MntGoldProds4
359514    +          +    -1.45763540546851 * GRP_MntMeatProducts2
359515    +          +     -1.1437696213546 * GRP_MntMeatProducts3
359516    +          +    -0.95836970043212 * GRP_MntMeatProducts4
359517    +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
359518    +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
359519    +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
359520    +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
359521    +          +     0.41629563300233 * GRP_NumDistPurchases2
359522    +          +     2.64707563295858 * GRP_NumDistPurchases3
359523    +          +    -2.61014123917694 * GRP_NumDistPurchases4
359524    +          +     1.31436489534812 * GRP_NumWebPurchases2
359525    +          +    -0.44152222308186 * GRP_NumWebPurchases3
359526    +          +     1.72168992115176 * GRP_NumWebPurchases4
359527    +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
359528    +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
359529    +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
359530    +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
359531    +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
359532    +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
359533    +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
359534    +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
359535    +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
359536    +        GRP_Income2  +     1.14246001493098 * GRP_Income3
359537    +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
359538    +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
359539    +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
359540    +          +      -0.152562533802 * GRP_MntFishProducts3
359541    +          +     0.16800852501402 * GRP_MntFishProducts4
359542    +          +    -0.43436913890783 * GRP_MntGoldProds2
359543    +          +    -0.36427695823088 * GRP_MntGoldProds3
359544    +          +    -0.70562605444874 * GRP_MntGoldProds4
359545    +          +      1.1896868399991 * GRP_MntMeatProducts2
359546    +          +    -3.25683109762258 * GRP_MntMeatProducts3
359547    +          +     1.07082922763777 * GRP_MntMeatProducts4
359548    +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
359549    +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
359550    +          +     2.86401269707592 * GRP_NumCatalogPurchases3
359551    +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
359552    +          +     1.70072621341351 * GRP_NumDistPurchases2
359553    +          +    -0.01744947613595 * GRP_NumDistPurchases3
359554    +          +    -2.08742260039568 * GRP_NumDistPurchases4
359555    +          +    -1.04444309037822 * GRP_NumWebPurchases2
359556    +          +    -3.12746125340209 * GRP_NumWebPurchases3
359557    +          +    -0.71369198142362 * GRP_NumWebPurchases4
359558    +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
359559    +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
359560    +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
359561    +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
359562    +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
359563    +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
359564    +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
359565    +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
359566    +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
359567    +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
359568    +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
359569    +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
359570    +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
359571    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
359572    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
359573    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
359574    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
359575    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
359576    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
359577    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
359578    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
359579    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
359580    +END;
MPRINT(EM_DIAGRAM):   END;
359581    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
359582    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
359583    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
359584    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
359585    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
359586    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
359587    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
359588    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
359589    +END;
MPRINT(EM_DIAGRAM):   END;
359590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359591    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
359592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359593    +
359594    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
359595    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
359596    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
359597    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
359598    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
359599    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359600    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
359601    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
359602    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
359603    +end;
MPRINT(EM_DIAGRAM):   end;
359604    +else do;
MPRINT(EM_DIAGRAM):   else do;
359605    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
359606    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
359607    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
359608    +   end;
MPRINT(EM_DIAGRAM):   end;
359609    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
359610    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
359611    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
359612    +   end;
MPRINT(EM_DIAGRAM):   end;
359613    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359614    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
359615    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
359616    +   end;
MPRINT(EM_DIAGRAM):   end;
359617    +end;
MPRINT(EM_DIAGRAM):   end;
359618    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
359619    +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
359620    +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
359621    +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
359622    +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
359623    +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
359624    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
359625    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
359626    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
359627    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
359628    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
359629    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
359630    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
359631    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
359632    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
359633    +END;
MPRINT(EM_DIAGRAM):   END;
359634    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
359635    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
359636    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
359637    +END;
MPRINT(EM_DIAGRAM):   END;
359638    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
359639    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
359640    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
359641    +END;
MPRINT(EM_DIAGRAM):   END;
359642    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
359643    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
359644    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
359645    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
359646    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
359647    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
359648    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
359649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359650    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
359651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
359652    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
359653    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
359654    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
359655    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
359656    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
359657    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
359658    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
359659    +END;
MPRINT(EM_DIAGRAM):   END;
359660    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
359661    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
359662    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
359663    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
359664    +* Renaming variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural22;
359665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359666    +* Renaming Posterior variables for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural22;
359667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359668    +drop AutoNeural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar1;
359669    +AutoNeural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar1 = P_DepVar1;
359670    +drop AutoNeural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_P_DepVar0;
359671    +AutoNeural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural22_P_DepVar0 = P_DepVar0;
359672    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359673    +* Renaming _WARN_ variable for AutoNeural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural22;
359674    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359675    +length AutoNeural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural22_WARN_ $4;
359676    +drop AutoNeural22_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural22_WARN_;
359677    +AutoNeural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural22_WARN_ = _WARN_;
359678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359679    +* Ensmbl48: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 3 of 7;
359680    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359681    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359682    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
359683    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
359684    +* NODE: AutoNeural21;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural21;
359685    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
359686    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
359687    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
359688    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
359689    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
359690    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
359691    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
359692    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
359693    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
359694    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
359695    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
359696    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
359697    +LENGTH _WARN_ $4
359698    +      F_DepVar  $ 12
359699    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
359700    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
359701    +
359702    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
359703    +
359704    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
359705    +
359706    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
359707    +
359708    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
359709    +
359710    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
359711    +
359712    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
359713    +
359714    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
359715    +
359716    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
359717    +
359718    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
359719    +
359720    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
359721    +
359722    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
359723    +
359724    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
359725    +
359726    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
359727    +
359728    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
359729    +
359730    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
359731    +
359732    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
359733    +
359734    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
359735    +
359736    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
359737    +
359738    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
359739    +
359740    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
359741    +
359742    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
359743    +
359744    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
359745    +
359746    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
359747    +
359748    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
359749    +
359750    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
359751    +
359752    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
359753    +
359754    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
359755    +
359756    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
359757    +
359758    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
359759    +
359760    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
359761    +
359762    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
359763    +
359764    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
359765    +
359766    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
359767    +
359768    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
359769    +
359770    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
359771    +
359772    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
359773    +
359774    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
359775    +
359776    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
359777    +
359778    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
359779    +
359780    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
359781    +
359782    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
359783    +
359784    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
359785    +
359786    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
359787    +
359788    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
359789    +
359790    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
359791    +
359792    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
359793    +
359794    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
359795    +
359796    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
359797    +
359798    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
359799    +
359800    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
359801    +
359802    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
359803    +
359804    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
359805    +
359806    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
359807    +
359808    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
359809    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
359810    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
359811    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
359812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359814    +end;
MPRINT(EM_DIAGRAM):   end;
359815    +else do;
MPRINT(EM_DIAGRAM):   else do;
359816    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359817    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
359818    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359819    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
359820    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
359821    +   end;
MPRINT(EM_DIAGRAM):   end;
359822    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
359823    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
359824    +   end;
MPRINT(EM_DIAGRAM):   end;
359825    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359826    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
359827    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359828    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359829    +   end;
MPRINT(EM_DIAGRAM):   end;
359830    +end;
MPRINT(EM_DIAGRAM):   end;
359831    +
359832    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
359833    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
359834    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
359835    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
359836    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
359837    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
359838    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359839    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359840    +end;
MPRINT(EM_DIAGRAM):   end;
359841    +else do;
MPRINT(EM_DIAGRAM):   else do;
359842    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359843    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
359844    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359845    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
359846    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
359847    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
359848    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
359849    +   end;
MPRINT(EM_DIAGRAM):   end;
359850    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
359851    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
359852    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
359853    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
359854    +   end;
MPRINT(EM_DIAGRAM):   end;
359855    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359856    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
359857    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
359858    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
359859    +   end;
MPRINT(EM_DIAGRAM):   end;
359860    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359861    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
359862    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
359863    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
359864    +   end;
MPRINT(EM_DIAGRAM):   end;
359865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359866    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
359867    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
359868    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
359869    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359870    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359871    +   end;
MPRINT(EM_DIAGRAM):   end;
359872    +end;
MPRINT(EM_DIAGRAM):   end;
359873    +
359874    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
359875    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
359876    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
359877    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
359878    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
359879    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
359880    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359881    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359882    +end;
MPRINT(EM_DIAGRAM):   end;
359883    +else do;
MPRINT(EM_DIAGRAM):   else do;
359884    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359885    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
359886    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359887    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
359888    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
359889    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
359890    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
359891    +   end;
MPRINT(EM_DIAGRAM):   end;
359892    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359893    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
359894    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
359895    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
359896    +   end;
MPRINT(EM_DIAGRAM):   end;
359897    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
359898    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
359899    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
359900    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
359901    +   end;
MPRINT(EM_DIAGRAM):   end;
359902    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359903    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
359904    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
359905    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
359906    +   end;
MPRINT(EM_DIAGRAM):   end;
359907    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359908    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
359909    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
359910    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
359911    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359912    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359913    +   end;
MPRINT(EM_DIAGRAM):   end;
359914    +end;
MPRINT(EM_DIAGRAM):   end;
359915    +
359916    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
359917    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
359918    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
359919    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
359920    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
359921    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
359922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359924    +end;
MPRINT(EM_DIAGRAM):   end;
359925    +else do;
MPRINT(EM_DIAGRAM):   else do;
359926    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359927    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
359928    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359929    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
359930    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
359931    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
359932    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
359933    +   end;
MPRINT(EM_DIAGRAM):   end;
359934    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359935    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
359936    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
359937    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
359938    +   end;
MPRINT(EM_DIAGRAM):   end;
359939    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359940    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
359941    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
359942    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
359943    +   end;
MPRINT(EM_DIAGRAM):   end;
359944    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359945    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
359946    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
359947    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
359948    +   end;
MPRINT(EM_DIAGRAM):   end;
359949    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359950    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
359951    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
359952    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
359953    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359954    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359955    +   end;
MPRINT(EM_DIAGRAM):   end;
359956    +end;
MPRINT(EM_DIAGRAM):   end;
359957    +
359958    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
359959    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
359960    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
359961    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
359962    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
359963    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
359964    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
359965    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359966    +end;
MPRINT(EM_DIAGRAM):   end;
359967    +else do;
MPRINT(EM_DIAGRAM):   else do;
359968    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
359969    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
359970    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
359971    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
359972    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
359973    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
359974    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
359975    +   end;
MPRINT(EM_DIAGRAM):   end;
359976    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
359977    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
359978    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
359979    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
359980    +   end;
MPRINT(EM_DIAGRAM):   end;
359981    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
359982    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
359983    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
359984    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
359985    +   end;
MPRINT(EM_DIAGRAM):   end;
359986    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
359987    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
359988    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
359989    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
359990    +   end;
MPRINT(EM_DIAGRAM):   end;
359991    +   else do;
MPRINT(EM_DIAGRAM):   else do;
359992    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
359993    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
359994    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
359995    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
359996    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
359997    +   end;
MPRINT(EM_DIAGRAM):   end;
359998    +end;
MPRINT(EM_DIAGRAM):   end;
359999    +
360000    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
360001    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
360002    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
360003    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
360004    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
360005    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
360006    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360007    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360008    +end;
MPRINT(EM_DIAGRAM):   end;
360009    +else do;
MPRINT(EM_DIAGRAM):   else do;
360010    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360011    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
360012    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360013    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360014    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
360015    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
360016    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
360017    +   end;
MPRINT(EM_DIAGRAM):   end;
360018    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360019    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
360020    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
360021    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
360022    +   end;
MPRINT(EM_DIAGRAM):   end;
360023    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360024    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
360025    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
360026    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
360027    +   end;
MPRINT(EM_DIAGRAM):   end;
360028    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360029    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
360030    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
360031    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
360032    +   end;
MPRINT(EM_DIAGRAM):   end;
360033    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360034    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
360035    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
360036    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
360037    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360038    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360039    +   end;
MPRINT(EM_DIAGRAM):   end;
360040    +end;
MPRINT(EM_DIAGRAM):   end;
360041    +
360042    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
360043    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
360044    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
360045    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
360046    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
360047    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
360048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360050    +end;
MPRINT(EM_DIAGRAM):   end;
360051    +else do;
MPRINT(EM_DIAGRAM):   else do;
360052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360053    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
360054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360055    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360056    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
360057    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
360058    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
360059    +   end;
MPRINT(EM_DIAGRAM):   end;
360060    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360061    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
360062    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
360063    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
360064    +   end;
MPRINT(EM_DIAGRAM):   end;
360065    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360066    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
360067    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
360068    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
360069    +   end;
MPRINT(EM_DIAGRAM):   end;
360070    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360071    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
360072    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
360073    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
360074    +   end;
MPRINT(EM_DIAGRAM):   end;
360075    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360076    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
360077    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
360078    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
360079    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360080    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360081    +   end;
MPRINT(EM_DIAGRAM):   end;
360082    +end;
MPRINT(EM_DIAGRAM):   end;
360083    +
360084    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
360085    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
360086    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
360087    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
360088    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
360089    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
360090    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360091    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360092    +end;
MPRINT(EM_DIAGRAM):   end;
360093    +else do;
MPRINT(EM_DIAGRAM):   else do;
360094    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360095    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
360096    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360097    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360098    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
360099    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
360100    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
360101    +   end;
MPRINT(EM_DIAGRAM):   end;
360102    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360103    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
360104    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
360105    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
360106    +   end;
MPRINT(EM_DIAGRAM):   end;
360107    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360108    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
360109    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
360110    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
360111    +   end;
MPRINT(EM_DIAGRAM):   end;
360112    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360113    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
360114    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
360115    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
360116    +   end;
MPRINT(EM_DIAGRAM):   end;
360117    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360118    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
360119    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
360120    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
360121    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360122    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360123    +   end;
MPRINT(EM_DIAGRAM):   end;
360124    +end;
MPRINT(EM_DIAGRAM):   end;
360125    +
360126    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
360127    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
360128    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
360129    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
360130    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
360131    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360132    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360133    +end;
MPRINT(EM_DIAGRAM):   end;
360134    +else do;
MPRINT(EM_DIAGRAM):   else do;
360135    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360136    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
360137    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360138    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360139    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
360140    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
360141    +   end;
MPRINT(EM_DIAGRAM):   end;
360142    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360143    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
360144    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
360145    +   end;
MPRINT(EM_DIAGRAM):   end;
360146    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360147    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
360148    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
360149    +   end;
MPRINT(EM_DIAGRAM):   end;
360150    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360151    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
360152    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
360153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360155    +   end;
MPRINT(EM_DIAGRAM):   end;
360156    +end;
MPRINT(EM_DIAGRAM):   end;
360157    +
360158    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
360159    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
360160    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
360161    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
360162    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
360163    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
360164    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360166    +end;
MPRINT(EM_DIAGRAM):   end;
360167    +else do;
MPRINT(EM_DIAGRAM):   else do;
360168    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360169    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
360170    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360171    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
360172    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
360173    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
360174    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
360175    +   end;
MPRINT(EM_DIAGRAM):   end;
360176    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360177    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
360178    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
360179    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
360180    +   end;
MPRINT(EM_DIAGRAM):   end;
360181    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360182    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
360183    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
360184    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
360185    +   end;
MPRINT(EM_DIAGRAM):   end;
360186    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
360187    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
360188    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
360189    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
360190    +   end;
MPRINT(EM_DIAGRAM):   end;
360191    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360192    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
360193    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
360194    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
360195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360197    +   end;
MPRINT(EM_DIAGRAM):   end;
360198    +end;
MPRINT(EM_DIAGRAM):   end;
360199    +
360200    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
360201    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
360202    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
360203    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
360204    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
360205    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
360206    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360207    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360208    +end;
MPRINT(EM_DIAGRAM):   end;
360209    +else do;
MPRINT(EM_DIAGRAM):   else do;
360210    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360211    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
360212    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360213    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360214    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
360215    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
360216    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
360217    +   end;
MPRINT(EM_DIAGRAM):   end;
360218    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360219    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
360220    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
360221    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
360222    +   end;
MPRINT(EM_DIAGRAM):   end;
360223    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360224    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
360225    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
360226    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
360227    +   end;
MPRINT(EM_DIAGRAM):   end;
360228    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360229    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
360230    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
360231    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
360232    +   end;
MPRINT(EM_DIAGRAM):   end;
360233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360234    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
360235    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
360236    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
360237    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360238    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360239    +   end;
MPRINT(EM_DIAGRAM):   end;
360240    +end;
MPRINT(EM_DIAGRAM):   end;
360241    +
360242    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
360243    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
360244    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
360245    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
360246    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
360247    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
360248    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360249    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360250    +end;
MPRINT(EM_DIAGRAM):   end;
360251    +else do;
MPRINT(EM_DIAGRAM):   else do;
360252    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360253    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
360254    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360255    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
360256    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
360257    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
360258    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
360259    +   end;
MPRINT(EM_DIAGRAM):   end;
360260    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
360261    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
360262    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
360263    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
360264    +   end;
MPRINT(EM_DIAGRAM):   end;
360265    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360266    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
360267    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
360268    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
360269    +   end;
MPRINT(EM_DIAGRAM):   end;
360270    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360271    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
360272    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
360273    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
360274    +   end;
MPRINT(EM_DIAGRAM):   end;
360275    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360276    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
360277    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
360278    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
360279    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360280    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360281    +   end;
MPRINT(EM_DIAGRAM):   end;
360282    +end;
MPRINT(EM_DIAGRAM):   end;
360283    +
360284    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
360285    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
360286    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
360287    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
360288    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
360289    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
360290    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360291    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360292    +end;
MPRINT(EM_DIAGRAM):   end;
360293    +else do;
MPRINT(EM_DIAGRAM):   else do;
360294    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360295    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
360296    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360297    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360298    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
360299    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
360300    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
360301    +   end;
MPRINT(EM_DIAGRAM):   end;
360302    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360303    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
360304    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
360305    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
360306    +   end;
MPRINT(EM_DIAGRAM):   end;
360307    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360308    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
360309    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
360310    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
360311    +   end;
MPRINT(EM_DIAGRAM):   end;
360312    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360313    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
360314    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
360315    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
360316    +   end;
MPRINT(EM_DIAGRAM):   end;
360317    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360318    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
360319    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
360320    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
360321    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360322    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360323    +   end;
MPRINT(EM_DIAGRAM):   end;
360324    +end;
MPRINT(EM_DIAGRAM):   end;
360325    +
360326    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
360327    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
360328    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
360329    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
360330    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
360331    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
360332    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360333    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360334    +end;
MPRINT(EM_DIAGRAM):   end;
360335    +else do;
MPRINT(EM_DIAGRAM):   else do;
360336    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360337    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
360338    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360339    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
360340    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
360341    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
360342    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
360343    +   end;
MPRINT(EM_DIAGRAM):   end;
360344    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360345    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
360346    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
360347    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
360348    +   end;
MPRINT(EM_DIAGRAM):   end;
360349    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
360350    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
360351    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
360352    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
360353    +   end;
MPRINT(EM_DIAGRAM):   end;
360354    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360355    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
360356    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
360357    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
360358    +   end;
MPRINT(EM_DIAGRAM):   end;
360359    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360360    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
360361    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
360362    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
360363    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360364    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360365    +   end;
MPRINT(EM_DIAGRAM):   end;
360366    +end;
MPRINT(EM_DIAGRAM):   end;
360367    +
360368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360369    +*** Checking missing input Interval
360370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
360371    +
360372    +IF NMISS(
360373    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
360374    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
360375    +
360376    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360377    +END;
MPRINT(EM_DIAGRAM):   END;
360378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360379    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
360380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
360382    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
360383    +END;
MPRINT(EM_DIAGRAM):   END;
360384    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
360385    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
360386    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
360387    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
360388    +END;
MPRINT(EM_DIAGRAM):   END;
360389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360390    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
360391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360393    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
360394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360395    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
360396    +   H1x1_1  =     1.28407338963657 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.28407338963657 * S_Year_Birth ;
360397    +   H1x1_2  =     2.38810822597472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.38810822597472 * S_Year_Birth ;
360398    +   H1x1_3  =     -0.7204801808304 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.7204801808304 * S_Year_Birth ;
360399    +   H1x1_4  =    -0.06539124294592 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.06539124294592 * S_Year_Birth ;
360400    +   H1x1_5  =     0.03236440118268 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.03236440118268 * S_Year_Birth ;
360401    +   H1x1_1  = H1x1_1  +     2.33808165856563 * GRP_AcceptedCmp52
360402    +          +    -0.22986949765805 * GRP_Frq2  +     0.35082837363653 * GRP_Frq3
360403    +          +    -0.81539338849938 * GRP_Frq4  +     0.02220909701196 *
360404    +        GRP_Income2  +    -0.13099501713971 * GRP_Income3
360405    +          +     -0.0804536656406 * GRP_Income4  +    -1.59663744670427 *
360406    +        GRP_Mnt2  +    -0.75210072607852 * GRP_Mnt3  +     2.54348518711375 *
360407    +        GRP_Mnt4  +    -1.10495982071076 * GRP_MntFishProducts2
360408    +          +     0.01777635572399 * GRP_MntFishProducts3
360409    +          +     0.64964482065317 * GRP_MntFishProducts4
360410    +          +    -1.04611988857835 * GRP_MntGoldProds2
360411    +          +    -0.78605743432786 * GRP_MntGoldProds3
360412    +          +    -0.66472335544579 * GRP_MntGoldProds4
360413    +          +     1.30740864871492 * GRP_MntMeatProducts2
360414    +          +     2.64958489779167 * GRP_MntMeatProducts3
360415    +          +    -0.07163049651484 * GRP_MntMeatProducts4
360416    +          +     0.25422937257394 * GRP_MntWines2  +     4.96131673300801 *
360417    +        GRP_MntWines3  +     1.19639467926964 * GRP_MntWines4
360418    +          +     1.95336043181706 * GRP_NumCatalogPurchases3
360419    +          +    -1.04651597352668 * GRP_NumCatalogPurchases4
360420    +          +     2.10673800243141 * GRP_NumDistPurchases2
360421    +          +     1.49840431617564 * GRP_NumDistPurchases3
360422    +          +     2.97897302921808 * GRP_NumDistPurchases4
360423    +          +    -0.06881799061639 * GRP_NumWebPurchases2
360424    +          +     2.06509459645382 * GRP_NumWebPurchases3
360425    +          +     2.82361840359249 * GRP_NumWebPurchases4
360426    +          +    -0.22785891000012 * GRP_RFMstat2  +     0.11731067369321 *
360427    +        GRP_RFMstat3  +      2.1473773933678 * GRP_RFMstat4
360428    +          +    -0.84256952222829 * GRP_RMntFrq2  +     0.14220513090593 *
360429    +        GRP_RMntFrq3  +    -0.12372171572674 * GRP_RMntFrq4
360430    +          +    -0.31743815181215 * GRP_Recency2  +    -1.98918978493071 *
360431    +        GRP_Recency3  +    -0.65545972977238 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.33808165856563 * GRP_AcceptedCmp52 + 
-0.22986949765805 * GRP_Frq2 + 0.35082837363653 * GRP_Frq3 + -0.81539338849938 * GRP_Frq4 + 
0.02220909701196 * GRP_Income2 + -0.13099501713971 * GRP_Income3 + -0.0804536656406 * 
GRP_Income4 + -1.59663744670427 * GRP_Mnt2 + -0.75210072607852 * GRP_Mnt3 + 2.54348518711375 * 
GRP_Mnt4 + -1.10495982071076 * GRP_MntFishProducts2 + 0.01777635572399 * GRP_MntFishProducts3 
+ 0.64964482065317 * GRP_MntFishProducts4 + -1.04611988857835 * GRP_MntGoldProds2 + 
-0.78605743432786 * GRP_MntGoldProds3 + -0.66472335544579 * GRP_MntGoldProds4 + 
1.30740864871492 * GRP_MntMeatProducts2 + 2.64958489779167 * GRP_MntMeatProducts3 + 
-0.07163049651484 * GRP_MntMeatProducts4 + 0.25422937257394 * GRP_MntWines2 + 4.96131673300801 
* GRP_MntWines3 + 1.19639467926964 * GRP_MntWines4 + 1.95336043181706 * 
GRP_NumCatalogPurchases3 + -1.04651597352668 * GRP_NumCatalogPurchases4 + 2.10673800243141 * 
GRP_NumDistPurchases2 + 1.49840431617564 * GRP_NumDistPurchases3 + 2.97897302921808 * 
GRP_NumDistPurchases4 + -0.06881799061639 * GRP_NumWebPurchases2 + 2.06509459645382 * 
GRP_NumWebPurchases3 + 2.82361840359249 * GRP_NumWebPurchases4 + -0.22785891000012 * 
GRP_RFMstat2 + 0.11731067369321 * GRP_RFMstat3 + 2.1473773933678 * GRP_RFMstat4 + 
-0.84256952222829 * GRP_RMntFrq2 + 0.14220513090593 * GRP_RMntFrq3 + -0.12372171572674 * 
GRP_RMntFrq4 + -0.31743815181215 * GRP_Recency2 + -1.98918978493071 * GRP_Recency3 + 
-0.65545972977238 * GRP_Recency4 ;
360432    +   H1x1_2  = H1x1_2  +     0.33200444555787 * GRP_AcceptedCmp52
360433    +          +     -0.8934566312976 * GRP_Frq2  +    -0.00243983936395 * GRP_Frq3
360434    +          +     0.63648993363629 * GRP_Frq4  +     0.05197343322571 *
360435    +        GRP_Income2  +     0.68177129296873 * GRP_Income3
360436    +          +     1.16889856198675 * GRP_Income4  +     0.52345733778819 *
360437    +        GRP_Mnt2  +     0.86891568330214 * GRP_Mnt3  +    -1.01013818778187 *
360438    +        GRP_Mnt4  +     0.01260306109505 * GRP_MntFishProducts2
360439    +          +     0.36267476732712 * GRP_MntFishProducts3
360440    +          +     -0.0117944700646 * GRP_MntFishProducts4
360441    +          +    -2.60247007794362 * GRP_MntGoldProds2
360442    +          +     1.49175629619075 * GRP_MntGoldProds3
360443    +          +     1.15735621033648 * GRP_MntGoldProds4
360444    +          +     -0.8857925625722 * GRP_MntMeatProducts2
360445    +          +    -1.11977905267757 * GRP_MntMeatProducts3
360446    +          +     0.89317411392862 * GRP_MntMeatProducts4
360447    +          +     1.08362434913444 * GRP_MntWines2  +    -2.34573154102981 *
360448    +        GRP_MntWines3  +    -1.04821908065864 * GRP_MntWines4
360449    +          +    -1.24280966967211 * GRP_NumCatalogPurchases3
360450    +          +      3.0326089053041 * GRP_NumCatalogPurchases4
360451    +          +     0.04779959574354 * GRP_NumDistPurchases2
360452    +          +     1.71017115843439 * GRP_NumDistPurchases3
360453    +          +     0.53628643929359 * GRP_NumDistPurchases4
360454    +          +     0.89950827667194 * GRP_NumWebPurchases2
360455    +          +    -0.92684592689592 * GRP_NumWebPurchases3
360456    +          +     2.96876986636503 * GRP_NumWebPurchases4
360457    +          +     0.63124526160033 * GRP_RFMstat2  +     1.50566150377083 *
360458    +        GRP_RFMstat3  +     1.62201671855053 * GRP_RFMstat4
360459    +          +     1.20404881746786 * GRP_RMntFrq2  +    -0.61586201148662 *
360460    +        GRP_RMntFrq3  +    -1.45102172370413 * GRP_RMntFrq4
360461    +          +     0.89969425569035 * GRP_Recency2  +     0.72245574147873 *
360462    +        GRP_Recency3  +     2.83083807801553 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.33200444555787 * GRP_AcceptedCmp52 + 
-0.8934566312976 * GRP_Frq2 + -0.00243983936395 * GRP_Frq3 + 0.63648993363629 * GRP_Frq4 + 
0.05197343322571 * GRP_Income2 + 0.68177129296873 * GRP_Income3 + 1.16889856198675 * 
GRP_Income4 + 0.52345733778819 * GRP_Mnt2 + 0.86891568330214 * GRP_Mnt3 + -1.01013818778187 * 
GRP_Mnt4 + 0.01260306109505 * GRP_MntFishProducts2 + 0.36267476732712 * GRP_MntFishProducts3 + 
-0.0117944700646 * GRP_MntFishProducts4 + -2.60247007794362 * GRP_MntGoldProds2 + 
1.49175629619075 * GRP_MntGoldProds3 + 1.15735621033648 * GRP_MntGoldProds4 + -0.8857925625722 
* GRP_MntMeatProducts2 + -1.11977905267757 * GRP_MntMeatProducts3 + 0.89317411392862 * 
GRP_MntMeatProducts4 + 1.08362434913444 * GRP_MntWines2 + -2.34573154102981 * GRP_MntWines3 + 
-1.04821908065864 * GRP_MntWines4 + -1.24280966967211 * GRP_NumCatalogPurchases3 + 
3.0326089053041 * GRP_NumCatalogPurchases4 + 0.04779959574354 * GRP_NumDistPurchases2 + 
1.71017115843439 * GRP_NumDistPurchases3 + 0.53628643929359 * GRP_NumDistPurchases4 + 
0.89950827667194 * GRP_NumWebPurchases2 + -0.92684592689592 * GRP_NumWebPurchases3 + 
2.96876986636503 * GRP_NumWebPurchases4 + 0.63124526160033 * GRP_RFMstat2 + 1.50566150377083 * 
GRP_RFMstat3 + 1.62201671855053 * GRP_RFMstat4 + 1.20404881746786 * GRP_RMntFrq2 + 
-0.61586201148662 * GRP_RMntFrq3 + -1.45102172370413 * GRP_RMntFrq4 + 0.89969425569035 * 
GRP_Recency2 + 0.72245574147873 * GRP_Recency3 + 2.83083807801553 * GRP_Recency4 ;
360463    +   H1x1_3  = H1x1_3  +    -0.49052681984122 * GRP_AcceptedCmp52
360464    +          +     0.05710791956099 * GRP_Frq2  +     1.88983418164026 * GRP_Frq3
360465    +          +     0.23283788572694 * GRP_Frq4  +    -0.80169095220425 *
360466    +        GRP_Income2  +    -1.74093887199998 * GRP_Income3
360467    +          +    -0.35184466623661 * GRP_Income4  +     0.02791690171447 *
360468    +        GRP_Mnt2  +    -2.20424160961867 * GRP_Mnt3  +     0.50765331628654 *
360469    +        GRP_Mnt4  +     0.29403246554661 * GRP_MntFishProducts2
360470    +          +    -0.83380418052364 * GRP_MntFishProducts3
360471    +          +    -1.82543627661138 * GRP_MntFishProducts4
360472    +          +     0.39365380396703 * GRP_MntGoldProds2
360473    +          +     0.03998618589682 * GRP_MntGoldProds3
360474    +          +    -1.56455277750616 * GRP_MntGoldProds4
360475    +          +     0.07220994129439 * GRP_MntMeatProducts2
360476    +          +     1.10999034367361 * GRP_MntMeatProducts3
360477    +          +     0.63528886514116 * GRP_MntMeatProducts4
360478    +          +    -1.82455352991516 * GRP_MntWines2  +    -0.37467219689144 *
360479    +        GRP_MntWines3  +     0.51071844252207 * GRP_MntWines4
360480    +          +    -0.21422031720258 * GRP_NumCatalogPurchases3
360481    +          +    -3.11364867963994 * GRP_NumCatalogPurchases4
360482    +          +    -0.08758432252505 * GRP_NumDistPurchases2
360483    +          +    -0.24735131829279 * GRP_NumDistPurchases3
360484    +          +     1.22135970166178 * GRP_NumDistPurchases4
360485    +          +     0.57769775812299 * GRP_NumWebPurchases2
360486    +          +     4.20512829375782 * GRP_NumWebPurchases3
360487    +          +    -0.77892811708123 * GRP_NumWebPurchases4
360488    +          +    -1.48591575907258 * GRP_RFMstat2  +    -0.02715745890283 *
360489    +        GRP_RFMstat3  +    -1.82753253216976 * GRP_RFMstat4
360490    +          +     0.63517164755033 * GRP_RMntFrq2  +     3.41625861410136 *
360491    +        GRP_RMntFrq3  +    -1.06016238729643 * GRP_RMntFrq4
360492    +          +     0.96560069161334 * GRP_Recency2  +     2.60413272119793 *
360493    +        GRP_Recency3  +    -1.02278922860839 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.49052681984122 * GRP_AcceptedCmp52 + 
0.05710791956099 * GRP_Frq2 + 1.88983418164026 * GRP_Frq3 + 0.23283788572694 * GRP_Frq4 + 
-0.80169095220425 * GRP_Income2 + -1.74093887199998 * GRP_Income3 + -0.35184466623661 * 
GRP_Income4 + 0.02791690171447 * GRP_Mnt2 + -2.20424160961867 * GRP_Mnt3 + 0.50765331628654 * 
GRP_Mnt4 + 0.29403246554661 * GRP_MntFishProducts2 + -0.83380418052364 * GRP_MntFishProducts3 
+ -1.82543627661138 * GRP_MntFishProducts4 + 0.39365380396703 * GRP_MntGoldProds2 + 
0.03998618589682 * GRP_MntGoldProds3 + -1.56455277750616 * GRP_MntGoldProds4 + 
0.07220994129439 * GRP_MntMeatProducts2 + 1.10999034367361 * GRP_MntMeatProducts3 + 
0.63528886514116 * GRP_MntMeatProducts4 + -1.82455352991516 * GRP_MntWines2 + 
-0.37467219689144 * GRP_MntWines3 + 0.51071844252207 * GRP_MntWines4 + -0.21422031720258 * 
GRP_NumCatalogPurchases3 + -3.11364867963994 * GRP_NumCatalogPurchases4 + -0.08758432252505 * 
GRP_NumDistPurchases2 + -0.24735131829279 * GRP_NumDistPurchases3 + 1.22135970166178 * 
GRP_NumDistPurchases4 + 0.57769775812299 * GRP_NumWebPurchases2 + 4.20512829375782 * 
GRP_NumWebPurchases3 + -0.77892811708123 * GRP_NumWebPurchases4 + -1.48591575907258 * 
GRP_RFMstat2 + -0.02715745890283 * GRP_RFMstat3 + -1.82753253216976 * GRP_RFMstat4 + 
0.63517164755033 * GRP_RMntFrq2 + 3.41625861410136 * GRP_RMntFrq3 + -1.06016238729643 * 
GRP_RMntFrq4 + 0.96560069161334 * GRP_Recency2 + 2.60413272119793 * GRP_Recency3 + 
-1.02278922860839 * GRP_Recency4 ;
360494    +   H1x1_4  = H1x1_4  +    -3.02372554661072 * GRP_AcceptedCmp52
360495    +          +     1.03599850000215 * GRP_Frq2  +     2.24242470356718 * GRP_Frq3
360496    +          +      3.4718187916521 * GRP_Frq4  +     1.28707236613409 *
360497    +        GRP_Income2  +    -1.54838965127225 * GRP_Income3
360498    +          +     2.52665199719571 * GRP_Income4  +    -2.14598289769275 *
360499    +        GRP_Mnt2  +    -1.04082723723167 * GRP_Mnt3  +    -1.68747662808983 *
360500    +        GRP_Mnt4  +     -0.8736100922486 * GRP_MntFishProducts2
360501    +          +     0.12779836724514 * GRP_MntFishProducts3
360502    +          +     0.60216313416651 * GRP_MntFishProducts4
360503    +          +     0.68165487174749 * GRP_MntGoldProds2
360504    +          +    -0.89672475622939 * GRP_MntGoldProds3
360505    +          +    -1.77795912962804 * GRP_MntGoldProds4
360506    +          +    -0.74193637631708 * GRP_MntMeatProducts2
360507    +          +    -3.00981763564253 * GRP_MntMeatProducts3
360508    +          +    -0.98818439514034 * GRP_MntMeatProducts4
360509    +          +    -0.81552449599254 * GRP_MntWines2  +    -1.24481835102021 *
360510    +        GRP_MntWines3  +     0.58877118654504 * GRP_MntWines4
360511    +          +    -0.10424789545355 * GRP_NumCatalogPurchases3
360512    +          +    -1.76322947168567 * GRP_NumCatalogPurchases4
360513    +          +     0.28024987640988 * GRP_NumDistPurchases2
360514    +          +    -0.26195842187994 * GRP_NumDistPurchases3
360515    +          +     1.27465783090106 * GRP_NumDistPurchases4
360516    +          +     0.56044035795721 * GRP_NumWebPurchases2
360517    +          +     -1.0019608410124 * GRP_NumWebPurchases3
360518    +          +    -1.00438490557229 * GRP_NumWebPurchases4
360519    +          +      0.1961165620509 * GRP_RFMstat2  +    -0.64166582924081 *
360520    +        GRP_RFMstat3  +     1.80597898183848 * GRP_RFMstat4
360521    +          +       0.012135091764 * GRP_RMntFrq2  +     -1.6713653901367 *
360522    +        GRP_RMntFrq3  +    -0.99155260811599 * GRP_RMntFrq4
360523    +          +    -1.41207701933445 * GRP_Recency2  +    -1.44162495285758 *
360524    +        GRP_Recency3  +    -1.33328278459656 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -3.02372554661072 * GRP_AcceptedCmp52 + 
1.03599850000215 * GRP_Frq2 + 2.24242470356718 * GRP_Frq3 + 3.4718187916521 * GRP_Frq4 + 
1.28707236613409 * GRP_Income2 + -1.54838965127225 * GRP_Income3 + 2.52665199719571 * 
GRP_Income4 + -2.14598289769275 * GRP_Mnt2 + -1.04082723723167 * GRP_Mnt3 + -1.68747662808983 
* GRP_Mnt4 + -0.8736100922486 * GRP_MntFishProducts2 + 0.12779836724514 * GRP_MntFishProducts3 
+ 0.60216313416651 * GRP_MntFishProducts4 + 0.68165487174749 * GRP_MntGoldProds2 + 
-0.89672475622939 * GRP_MntGoldProds3 + -1.77795912962804 * GRP_MntGoldProds4 + 
-0.74193637631708 * GRP_MntMeatProducts2 + -3.00981763564253 * GRP_MntMeatProducts3 + 
-0.98818439514034 * GRP_MntMeatProducts4 + -0.81552449599254 * GRP_MntWines2 + 
-1.24481835102021 * GRP_MntWines3 + 0.58877118654504 * GRP_MntWines4 + -0.10424789545355 * 
GRP_NumCatalogPurchases3 + -1.76322947168567 * GRP_NumCatalogPurchases4 + 0.28024987640988 * 
GRP_NumDistPurchases2 + -0.26195842187994 * GRP_NumDistPurchases3 + 1.27465783090106 * 
GRP_NumDistPurchases4 + 0.56044035795721 * GRP_NumWebPurchases2 + -1.0019608410124 * 
GRP_NumWebPurchases3 + -1.00438490557229 * GRP_NumWebPurchases4 + 0.1961165620509 * 
GRP_RFMstat2 + -0.64166582924081 * GRP_RFMstat3 + 1.80597898183848 * GRP_RFMstat4 + 
0.012135091764 * GRP_RMntFrq2 + -1.6713653901367 * GRP_RMntFrq3 + -0.99155260811599 * 
GRP_RMntFrq4 + -1.41207701933445 * GRP_Recency2 + -1.44162495285758 * GRP_Recency3 + 
-1.33328278459656 * GRP_Recency4 ;
360525    +   H1x1_5  = H1x1_5  +    -2.91353005427803 * GRP_AcceptedCmp52
360526    +          +    -0.01308096407334 * GRP_Frq2  +    -0.45559322170718 * GRP_Frq3
360527    +          +    -0.49751279425547 * GRP_Frq4  +     0.02860594561374 *
360528    +        GRP_Income2  +     1.41758925806391 * GRP_Income3
360529    +          +     0.03726548596251 * GRP_Income4  +    -1.57900147909252 *
360530    +        GRP_Mnt2  +      2.3511697752438 * GRP_Mnt3  +     0.88048248424859 *
360531    +        GRP_Mnt4  +    -0.56545409501904 * GRP_MntFishProducts2
360532    +          +    -3.10608760567335 * GRP_MntFishProducts3
360533    +          +     1.06400320622897 * GRP_MntFishProducts4
360534    +          +     2.68670541844486 * GRP_MntGoldProds2
360535    +          +     0.07232195736653 * GRP_MntGoldProds3
360536    +          +     1.85531703888295 * GRP_MntGoldProds4
360537    +          +    -1.87162230531925 * GRP_MntMeatProducts2
360538    +          +    -1.13875662802599 * GRP_MntMeatProducts3
360539    +          +    -0.24099135606782 * GRP_MntMeatProducts4
360540    +          +    -0.13235213570702 * GRP_MntWines2  +    -0.50193070898101 *
360541    +        GRP_MntWines3  +     -0.1999771853027 * GRP_MntWines4
360542    +          +    -1.59837823433046 * GRP_NumCatalogPurchases3
360543    +          +    -3.92043146311091 * GRP_NumCatalogPurchases4
360544    +          +    -0.99805577329855 * GRP_NumDistPurchases2
360545    +          +     -2.4067364238872 * GRP_NumDistPurchases3
360546    +          +     0.25924131471222 * GRP_NumDistPurchases4
360547    +          +     0.70743157783391 * GRP_NumWebPurchases2
360548    +          +    -2.55740259562506 * GRP_NumWebPurchases3
360549    +          +     1.49837454147543 * GRP_NumWebPurchases4
360550    +          +     0.02282459900932 * GRP_RFMstat2  +     2.49823188893146 *
360551    +        GRP_RFMstat3  +      0.0125770688182 * GRP_RFMstat4
360552    +          +    -0.52646059416986 * GRP_RMntFrq2  +     0.48734306173312 *
360553    +        GRP_RMntFrq3  +     1.20982084491791 * GRP_RMntFrq4
360554    +          +     1.46024730556461 * GRP_Recency2  +     1.39328521843098 *
360555    +        GRP_Recency3  +     0.07072877455933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.91353005427803 * GRP_AcceptedCmp52 + 
-0.01308096407334 * GRP_Frq2 + -0.45559322170718 * GRP_Frq3 + -0.49751279425547 * GRP_Frq4 + 
0.02860594561374 * GRP_Income2 + 1.41758925806391 * GRP_Income3 + 0.03726548596251 * 
GRP_Income4 + -1.57900147909252 * GRP_Mnt2 + 2.3511697752438 * GRP_Mnt3 + 0.88048248424859 * 
GRP_Mnt4 + -0.56545409501904 * GRP_MntFishProducts2 + -3.10608760567335 * GRP_MntFishProducts3 
+ 1.06400320622897 * GRP_MntFishProducts4 + 2.68670541844486 * GRP_MntGoldProds2 + 
0.07232195736653 * GRP_MntGoldProds3 + 1.85531703888295 * GRP_MntGoldProds4 + 
-1.87162230531925 * GRP_MntMeatProducts2 + -1.13875662802599 * GRP_MntMeatProducts3 + 
-0.24099135606782 * GRP_MntMeatProducts4 + -0.13235213570702 * GRP_MntWines2 + 
-0.50193070898101 * GRP_MntWines3 + -0.1999771853027 * GRP_MntWines4 + -1.59837823433046 * 
GRP_NumCatalogPurchases3 + -3.92043146311091 * GRP_NumCatalogPurchases4 + -0.99805577329855 * 
GRP_NumDistPurchases2 + -2.4067364238872 * GRP_NumDistPurchases3 + 0.25924131471222 * 
GRP_NumDistPurchases4 + 0.70743157783391 * GRP_NumWebPurchases2 + -2.55740259562506 * 
GRP_NumWebPurchases3 + 1.49837454147543 * GRP_NumWebPurchases4 + 0.02282459900932 * 
GRP_RFMstat2 + 2.49823188893146 * GRP_RFMstat3 + 0.0125770688182 * GRP_RFMstat4 + 
-0.52646059416986 * GRP_RMntFrq2 + 0.48734306173312 * GRP_RMntFrq3 + 1.20982084491791 * 
GRP_RMntFrq4 + 1.46024730556461 * GRP_Recency2 + 1.39328521843098 * GRP_Recency3 + 
0.07072877455933 * GRP_Recency4 ;
360556    +   H1x1_1  =     2.28517939702199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.28517939702199 + H1x1_1 ;
360557    +   H1x1_2  =      0.8100923065727 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.8100923065727 + H1x1_2 ;
360558    +   H1x1_3  =    -1.33120225377486 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.33120225377486 + H1x1_3 ;
360559    +   H1x1_4  =    -0.45230391783078 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.45230391783078 + H1x1_4 ;
360560    +   H1x1_5  =    -0.40460344381081 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.40460344381081 + H1x1_5 ;
360561    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
360562    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
360563    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
360564    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
360565    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
360566    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
360567    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
360568    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
360569    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
360570    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
360571    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
360572    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
360573    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
360574    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
360575    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
360576    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
360577    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
360578    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
360579    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
360580    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
360581    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
360582    +END;
MPRINT(EM_DIAGRAM):   END;
360583    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
360584    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
360585    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
360586    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
360587    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
360588    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
360589    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
360590    +END;
MPRINT(EM_DIAGRAM):   END;
360591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360592    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
360593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360594    +
360595    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
360596    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
360597    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
360598    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
360599    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
360600    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360601    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
360602    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
360603    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
360604    +end;
MPRINT(EM_DIAGRAM):   end;
360605    +else do;
MPRINT(EM_DIAGRAM):   else do;
360606    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
360607    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
360608    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
360609    +   end;
MPRINT(EM_DIAGRAM):   end;
360610    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
360611    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
360612    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
360613    +   end;
MPRINT(EM_DIAGRAM):   end;
360614    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360615    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
360616    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
360617    +   end;
MPRINT(EM_DIAGRAM):   end;
360618    +end;
MPRINT(EM_DIAGRAM):   end;
360619    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
360620    +   P_DepVar1  =    -2.81431269255211 * H1x1_1  +       3.440967475001 * H1x1_2
360621    +          +     0.80588527631153 * H1x1_3  +    -2.86385782353564 * H1x1_4
360622    +          +     4.10205776026281 * H1x1_5  +    -2.89048426961502 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.81431269255211 * H1x1_1 + 3.440967475001 * H1x1_2 + 
0.80588527631153 * H1x1_3 + -2.86385782353564 * H1x1_4 + 4.10205776026281 * H1x1_5 + 
-2.89048426961502 * H1x1_6 ;
360623    +   P_DepVar1  =    -1.38440437244113 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.38440437244113 + P_DepVar1 ;
360624    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
360625    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
360626    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
360627    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
360628    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
360629    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
360630    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
360631    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
360632    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
360633    +END;
MPRINT(EM_DIAGRAM):   END;
360634    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
360635    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
360636    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
360637    +END;
MPRINT(EM_DIAGRAM):   END;
360638    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
360639    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
360640    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
360641    +END;
MPRINT(EM_DIAGRAM):   END;
360642    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
360643    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
360644    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
360645    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
360646    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
360647    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
360648    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
360649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360650    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
360651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
360652    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
360653    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
360654    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
360655    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
360656    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
360657    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
360658    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
360659    +END;
MPRINT(EM_DIAGRAM):   END;
360660    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
360661    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
360662    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
360663    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
360664    +* Renaming variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural21;
360665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360666    +* Renaming Posterior variables for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural21;
360667    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360668    +drop AutoNeural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar1;
360669    +AutoNeural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar1 = P_DepVar1;
360670    +drop AutoNeural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_P_DepVar0;
360671    +AutoNeural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural21_P_DepVar0 = P_DepVar0;
360672    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360673    +* Renaming _WARN_ variable for AutoNeural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural21;
360674    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360675    +length AutoNeural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural21_WARN_ $4;
360676    +drop AutoNeural21_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural21_WARN_;
360677    +AutoNeural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural21_WARN_ = _WARN_;
360678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360679    +* Ensmbl48: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 4 of 7;
360680    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360681    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360682    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
360683    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
360684    +* NODE: AutoNeural20;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural20;
360685    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
360686    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
360687    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
360688    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
360689    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
360690    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
360691    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
360692    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
360693    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
360694    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
360695    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
360696    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
360697    +LENGTH _WARN_ $4
360698    +      F_DepVar  $ 12
360699    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
360700    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
360701    +
360702    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
360703    +
360704    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
360705    +
360706    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
360707    +
360708    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
360709    +
360710    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
360711    +
360712    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
360713    +
360714    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
360715    +
360716    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
360717    +
360718    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
360719    +
360720    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
360721    +
360722    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
360723    +
360724    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
360725    +
360726    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
360727    +
360728    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
360729    +
360730    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
360731    +
360732    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
360733    +
360734    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
360735    +
360736    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
360737    +
360738    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
360739    +
360740    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
360741    +
360742    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
360743    +
360744    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
360745    +
360746    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
360747    +
360748    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
360749    +
360750    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
360751    +
360752    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
360753    +
360754    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
360755    +
360756    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
360757    +
360758    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
360759    +
360760    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
360761    +
360762    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
360763    +
360764    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
360765    +
360766    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
360767    +
360768    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
360769    +
360770    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
360771    +
360772    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
360773    +
360774    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
360775    +
360776    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
360777    +
360778    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
360779    +
360780    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
360781    +
360782    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
360783    +
360784    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
360785    +
360786    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
360787    +
360788    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
360789    +
360790    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
360791    +
360792    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
360793    +
360794    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
360795    +
360796    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
360797    +
360798    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
360799    +
360800    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
360801    +
360802    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
360803    +
360804    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
360805    +
360806    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
360807    +
360808    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
360809    +
360810    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
360811    +
360812    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
360813    +
360814    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
360815    +
360816    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
360817    +
360818    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
360819    +
360820    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
360821    +
360822    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
360823    +
360824    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
360825    +
360826    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
360827    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
360828    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
360829    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
360830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360832    +end;
MPRINT(EM_DIAGRAM):   end;
360833    +else do;
MPRINT(EM_DIAGRAM):   else do;
360834    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360835    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
360836    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360837    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
360838    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
360839    +   end;
MPRINT(EM_DIAGRAM):   end;
360840    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
360841    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
360842    +   end;
MPRINT(EM_DIAGRAM):   end;
360843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360844    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
360845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360847    +   end;
MPRINT(EM_DIAGRAM):   end;
360848    +end;
MPRINT(EM_DIAGRAM):   end;
360849    +
360850    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
360851    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
360852    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
360853    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
360854    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
360855    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
360856    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360857    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360858    +end;
MPRINT(EM_DIAGRAM):   end;
360859    +else do;
MPRINT(EM_DIAGRAM):   else do;
360860    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360861    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
360862    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360863    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
360864    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
360865    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
360866    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
360867    +   end;
MPRINT(EM_DIAGRAM):   end;
360868    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
360869    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
360870    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
360871    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
360872    +   end;
MPRINT(EM_DIAGRAM):   end;
360873    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360874    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
360875    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
360876    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
360877    +   end;
MPRINT(EM_DIAGRAM):   end;
360878    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360879    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
360880    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
360881    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
360882    +   end;
MPRINT(EM_DIAGRAM):   end;
360883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360884    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
360885    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
360886    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
360887    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360888    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360889    +   end;
MPRINT(EM_DIAGRAM):   end;
360890    +end;
MPRINT(EM_DIAGRAM):   end;
360891    +
360892    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
360893    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
360894    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
360895    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
360896    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
360897    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
360898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360900    +end;
MPRINT(EM_DIAGRAM):   end;
360901    +else do;
MPRINT(EM_DIAGRAM):   else do;
360902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360903    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
360904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360905    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
360906    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
360907    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
360908    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
360909    +   end;
MPRINT(EM_DIAGRAM):   end;
360910    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360911    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
360912    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
360913    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
360914    +   end;
MPRINT(EM_DIAGRAM):   end;
360915    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
360916    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
360917    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
360918    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
360919    +   end;
MPRINT(EM_DIAGRAM):   end;
360920    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360921    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
360922    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
360923    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
360924    +   end;
MPRINT(EM_DIAGRAM):   end;
360925    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360926    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
360927    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
360928    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
360929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360931    +   end;
MPRINT(EM_DIAGRAM):   end;
360932    +end;
MPRINT(EM_DIAGRAM):   end;
360933    +
360934    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
360935    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
360936    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
360937    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
360938    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
360939    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
360940    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360941    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360942    +end;
MPRINT(EM_DIAGRAM):   end;
360943    +else do;
MPRINT(EM_DIAGRAM):   else do;
360944    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360945    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
360946    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360947    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360948    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
360949    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
360950    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
360951    +   end;
MPRINT(EM_DIAGRAM):   end;
360952    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360953    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
360954    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
360955    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
360956    +   end;
MPRINT(EM_DIAGRAM):   end;
360957    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
360958    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
360959    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
360960    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
360961    +   end;
MPRINT(EM_DIAGRAM):   end;
360962    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
360963    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
360964    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
360965    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
360966    +   end;
MPRINT(EM_DIAGRAM):   end;
360967    +   else do;
MPRINT(EM_DIAGRAM):   else do;
360968    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
360969    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
360970    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
360971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
360972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360973    +   end;
MPRINT(EM_DIAGRAM):   end;
360974    +end;
MPRINT(EM_DIAGRAM):   end;
360975    +
360976    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
360977    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
360978    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
360979    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
360980    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
360981    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
360982    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
360983    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
360984    +end;
MPRINT(EM_DIAGRAM):   end;
360985    +else do;
MPRINT(EM_DIAGRAM):   else do;
360986    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
360987    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
360988    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
360989    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
360990    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
360991    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
360992    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
360993    +   end;
MPRINT(EM_DIAGRAM):   end;
360994    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
360995    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
360996    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
360997    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
360998    +   end;
MPRINT(EM_DIAGRAM):   end;
360999    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361000    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
361001    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
361002    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
361003    +   end;
MPRINT(EM_DIAGRAM):   end;
361004    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361005    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
361006    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
361007    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
361008    +   end;
MPRINT(EM_DIAGRAM):   end;
361009    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361010    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
361011    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
361012    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
361013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361015    +   end;
MPRINT(EM_DIAGRAM):   end;
361016    +end;
MPRINT(EM_DIAGRAM):   end;
361017    +
361018    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
361019    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
361020    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
361021    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
361022    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
361023    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
361024    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361026    +end;
MPRINT(EM_DIAGRAM):   end;
361027    +else do;
MPRINT(EM_DIAGRAM):   else do;
361028    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361029    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
361030    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361031    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
361032    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
361033    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
361034    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
361035    +   end;
MPRINT(EM_DIAGRAM):   end;
361036    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361037    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
361038    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
361039    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
361040    +   end;
MPRINT(EM_DIAGRAM):   end;
361041    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
361042    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
361043    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
361044    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
361045    +   end;
MPRINT(EM_DIAGRAM):   end;
361046    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361047    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
361048    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
361049    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
361050    +   end;
MPRINT(EM_DIAGRAM):   end;
361051    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361052    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
361053    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
361054    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
361055    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361056    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361057    +   end;
MPRINT(EM_DIAGRAM):   end;
361058    +end;
MPRINT(EM_DIAGRAM):   end;
361059    +
361060    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
361061    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
361062    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
361063    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
361064    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
361065    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
361066    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361067    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361068    +end;
MPRINT(EM_DIAGRAM):   end;
361069    +else do;
MPRINT(EM_DIAGRAM):   else do;
361070    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361071    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
361072    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361073    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
361074    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
361075    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
361076    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
361077    +   end;
MPRINT(EM_DIAGRAM):   end;
361078    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361079    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
361080    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
361081    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
361082    +   end;
MPRINT(EM_DIAGRAM):   end;
361083    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
361084    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
361085    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
361086    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
361087    +   end;
MPRINT(EM_DIAGRAM):   end;
361088    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361089    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
361090    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
361091    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
361092    +   end;
MPRINT(EM_DIAGRAM):   end;
361093    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361094    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
361095    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
361096    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
361097    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361098    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361099    +   end;
MPRINT(EM_DIAGRAM):   end;
361100    +end;
MPRINT(EM_DIAGRAM):   end;
361101    +
361102    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
361103    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
361104    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
361105    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
361106    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
361107    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
361108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361110    +end;
MPRINT(EM_DIAGRAM):   end;
361111    +else do;
MPRINT(EM_DIAGRAM):   else do;
361112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361113    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
361114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361115    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
361116    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
361117    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
361118    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
361119    +   end;
MPRINT(EM_DIAGRAM):   end;
361120    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
361121    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
361122    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
361123    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
361124    +   end;
MPRINT(EM_DIAGRAM):   end;
361125    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361126    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
361127    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
361128    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
361129    +   end;
MPRINT(EM_DIAGRAM):   end;
361130    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361131    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
361132    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
361133    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
361134    +   end;
MPRINT(EM_DIAGRAM):   end;
361135    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361136    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
361137    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
361138    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
361139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361141    +   end;
MPRINT(EM_DIAGRAM):   end;
361142    +end;
MPRINT(EM_DIAGRAM):   end;
361143    +
361144    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
361145    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
361146    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
361147    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
361148    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
361149    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361150    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361151    +end;
MPRINT(EM_DIAGRAM):   end;
361152    +else do;
MPRINT(EM_DIAGRAM):   else do;
361153    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361154    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
361155    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361156    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
361157    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
361158    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
361159    +   end;
MPRINT(EM_DIAGRAM):   end;
361160    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
361161    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
361162    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
361163    +   end;
MPRINT(EM_DIAGRAM):   end;
361164    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361165    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
361166    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
361167    +   end;
MPRINT(EM_DIAGRAM):   end;
361168    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361169    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
361170    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
361171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361173    +   end;
MPRINT(EM_DIAGRAM):   end;
361174    +end;
MPRINT(EM_DIAGRAM):   end;
361175    +
361176    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
361177    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
361178    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
361179    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
361180    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
361181    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
361182    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361183    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361184    +end;
MPRINT(EM_DIAGRAM):   end;
361185    +else do;
MPRINT(EM_DIAGRAM):   else do;
361186    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361187    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
361188    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361189    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
361190    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
361191    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
361192    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
361193    +   end;
MPRINT(EM_DIAGRAM):   end;
361194    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361195    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
361196    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
361197    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
361198    +   end;
MPRINT(EM_DIAGRAM):   end;
361199    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361200    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
361201    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
361202    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
361203    +   end;
MPRINT(EM_DIAGRAM):   end;
361204    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
361205    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
361206    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
361207    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
361208    +   end;
MPRINT(EM_DIAGRAM):   end;
361209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361210    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
361211    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
361212    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
361213    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361214    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361215    +   end;
MPRINT(EM_DIAGRAM):   end;
361216    +end;
MPRINT(EM_DIAGRAM):   end;
361217    +
361218    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
361219    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
361220    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
361221    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
361222    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
361223    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
361224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361226    +end;
MPRINT(EM_DIAGRAM):   end;
361227    +else do;
MPRINT(EM_DIAGRAM):   else do;
361228    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361229    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
361230    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361231    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
361232    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
361233    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
361234    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
361235    +   end;
MPRINT(EM_DIAGRAM):   end;
361236    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
361237    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
361238    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
361239    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
361240    +   end;
MPRINT(EM_DIAGRAM):   end;
361241    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361242    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
361243    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
361244    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
361245    +   end;
MPRINT(EM_DIAGRAM):   end;
361246    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361247    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
361248    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
361249    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
361250    +   end;
MPRINT(EM_DIAGRAM):   end;
361251    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361252    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
361253    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
361254    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
361255    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361256    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361257    +   end;
MPRINT(EM_DIAGRAM):   end;
361258    +end;
MPRINT(EM_DIAGRAM):   end;
361259    +
361260    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
361261    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
361262    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
361263    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
361264    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
361265    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
361266    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361268    +end;
MPRINT(EM_DIAGRAM):   end;
361269    +else do;
MPRINT(EM_DIAGRAM):   else do;
361270    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361271    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
361272    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361273    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
361274    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
361275    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
361276    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
361277    +   end;
MPRINT(EM_DIAGRAM):   end;
361278    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
361279    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
361280    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
361281    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
361282    +   end;
MPRINT(EM_DIAGRAM):   end;
361283    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
361284    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
361285    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
361286    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
361287    +   end;
MPRINT(EM_DIAGRAM):   end;
361288    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361289    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
361290    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
361291    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
361292    +   end;
MPRINT(EM_DIAGRAM):   end;
361293    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361294    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
361295    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
361296    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
361297    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361298    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361299    +   end;
MPRINT(EM_DIAGRAM):   end;
361300    +end;
MPRINT(EM_DIAGRAM):   end;
361301    +
361302    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
361303    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
361304    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
361305    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
361306    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
361307    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
361308    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361310    +end;
MPRINT(EM_DIAGRAM):   end;
361311    +else do;
MPRINT(EM_DIAGRAM):   else do;
361312    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361313    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
361314    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361315    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
361316    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
361317    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
361318    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
361319    +   end;
MPRINT(EM_DIAGRAM):   end;
361320    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
361321    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
361322    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
361323    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
361324    +   end;
MPRINT(EM_DIAGRAM):   end;
361325    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361326    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
361327    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
361328    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
361329    +   end;
MPRINT(EM_DIAGRAM):   end;
361330    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361331    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
361332    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
361333    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
361334    +   end;
MPRINT(EM_DIAGRAM):   end;
361335    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361336    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
361337    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
361338    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
361339    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361340    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361341    +   end;
MPRINT(EM_DIAGRAM):   end;
361342    +end;
MPRINT(EM_DIAGRAM):   end;
361343    +
361344    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
361345    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
361346    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
361347    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
361348    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
361349    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
361350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
361351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361352    +end;
MPRINT(EM_DIAGRAM):   end;
361353    +else do;
MPRINT(EM_DIAGRAM):   else do;
361354    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
361355    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
361356    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361357    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
361358    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
361359    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
361360    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
361361    +   end;
MPRINT(EM_DIAGRAM):   end;
361362    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
361363    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
361364    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
361365    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
361366    +   end;
MPRINT(EM_DIAGRAM):   end;
361367    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
361368    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
361369    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
361370    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
361371    +   end;
MPRINT(EM_DIAGRAM):   end;
361372    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
361373    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
361374    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
361375    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
361376    +   end;
MPRINT(EM_DIAGRAM):   end;
361377    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361378    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
361379    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
361380    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
361381    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
361382    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361383    +   end;
MPRINT(EM_DIAGRAM):   end;
361384    +end;
MPRINT(EM_DIAGRAM):   end;
361385    +
361386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361387    +*** Checking missing input Interval
361388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
361389    +
361390    +IF NMISS(
361391    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
361392    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
361393    +
361394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
361395    +END;
MPRINT(EM_DIAGRAM):   END;
361396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361397    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
361398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361399    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
361400    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
361401    +END;
MPRINT(EM_DIAGRAM):   END;
361402    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
361403    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
361404    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
361405    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
361406    +END;
MPRINT(EM_DIAGRAM):   END;
361407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361408    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
361409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361411    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
361412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361413    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
361414    +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
361415    +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
361416    +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
361417    +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
361418    +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
361419    +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
361420    +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
361421    +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
361422    +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
361423    +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
361424    +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
361425    +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
361426    +          +    -1.92253913417034 * GRP_MntFishProducts3
361427    +          +     0.11236967036572 * GRP_MntFishProducts4
361428    +          +     1.55117451498964 * GRP_MntGoldProds2
361429    +          +    -2.17638819155912 * GRP_MntGoldProds3
361430    +          +     1.12471370225173 * GRP_MntGoldProds4
361431    +          +     0.73773441156548 * GRP_MntMeatProducts2
361432    +          +     2.07738910661633 * GRP_MntMeatProducts3
361433    +          +    -0.64280630173292 * GRP_MntMeatProducts4
361434    +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
361435    +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
361436    +          +     0.27137671258246 * GRP_NumCatalogPurchases3
361437    +          +     1.17769351442984 * GRP_NumCatalogPurchases4
361438    +          +     1.22104662684375 * GRP_NumDistPurchases2
361439    +          +      3.4956187335148 * GRP_NumDistPurchases3
361440    +          +     1.44110988448724 * GRP_NumDistPurchases4
361441    +          +    -0.15910531424988 * GRP_NumWebPurchases2
361442    +          +      2.0651216353476 * GRP_NumWebPurchases3
361443    +          +     1.88264340284474 * GRP_NumWebPurchases4
361444    +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
361445    +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
361446    +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
361447    +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
361448    +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
361449    +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
361450    +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
361451    +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
361452    +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
361453    +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
361454    +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
361455    +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
361456    +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
361457    +          +     0.69185352158005 * GRP_MntFishProducts3
361458    +          +    -0.03493178084029 * GRP_MntFishProducts4
361459    +          +     1.51100187776315 * GRP_MntGoldProds2
361460    +          +     0.06501688279193 * GRP_MntGoldProds3
361461    +          +    -0.39137744731231 * GRP_MntGoldProds4
361462    +          +    -1.71718837423104 * GRP_MntMeatProducts2
361463    +          +    -2.21915390243757 * GRP_MntMeatProducts3
361464    +          +    -0.56748587906854 * GRP_MntMeatProducts4
361465    +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
361466    +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
361467    +          +     1.48903401021544 * GRP_NumCatalogPurchases3
361468    +          +     1.17263293507207 * GRP_NumCatalogPurchases4
361469    +          +     1.51105230747578 * GRP_NumDistPurchases2
361470    +          +     0.77634340058478 * GRP_NumDistPurchases3
361471    +          +    -0.03088809375301 * GRP_NumDistPurchases4
361472    +          +    -0.96601789395554 * GRP_NumWebPurchases2
361473    +          +     0.85040977160083 * GRP_NumWebPurchases3
361474    +          +     2.40308918299781 * GRP_NumWebPurchases4
361475    +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
361476    +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
361477    +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
361478    +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
361479    +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
361480    +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
361481    +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
361482    +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
361483    +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
361484    +        GRP_Income2  +     1.18033291239845 * GRP_Income3
361485    +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
361486    +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
361487    +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
361488    +          +    -0.25133476006515 * GRP_MntFishProducts3
361489    +          +     1.43382012526151 * GRP_MntFishProducts4
361490    +          +      0.6587510367878 * GRP_MntGoldProds2
361491    +          +    -2.29815972364167 * GRP_MntGoldProds3
361492    +          +    -1.17878838514109 * GRP_MntGoldProds4
361493    +          +    -1.45630165039671 * GRP_MntMeatProducts2
361494    +          +    -0.11970663820977 * GRP_MntMeatProducts3
361495    +          +    -0.76333182688138 * GRP_MntMeatProducts4
361496    +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
361497    +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
361498    +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
361499    +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
361500    +          +    -0.83062872942088 * GRP_NumDistPurchases2
361501    +          +      1.2644984519337 * GRP_NumDistPurchases3
361502    +          +     0.62516412515385 * GRP_NumDistPurchases4
361503    +          +    -0.91932392687811 * GRP_NumWebPurchases2
361504    +          +     0.63985001179952 * GRP_NumWebPurchases3
361505    +          +     0.11379774354586 * GRP_NumWebPurchases4
361506    +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
361507    +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
361508    +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
361509    +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
361510    +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
361511    +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
361512    +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
361513    +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
361514    +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
361515    +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
361516    +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
361517    +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
361518    +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
361519    +          +     0.25005234850524 * GRP_MntFishProducts3
361520    +          +    -0.07970714752313 * GRP_MntFishProducts4
361521    +          +     -0.7495440064059 * GRP_MntGoldProds2
361522    +          +     -0.0659148563739 * GRP_MntGoldProds3
361523    +          +    -1.42445075896946 * GRP_MntGoldProds4
361524    +          +      0.1738975461322 * GRP_MntMeatProducts2
361525    +          +    -2.24799164386156 * GRP_MntMeatProducts3
361526    +          +    -1.67754357341899 * GRP_MntMeatProducts4
361527    +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
361528    +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
361529    +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
361530    +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
361531    +          +    -0.48267351716569 * GRP_NumDistPurchases2
361532    +          +     0.93211719554417 * GRP_NumDistPurchases3
361533    +          +      1.1708430486506 * GRP_NumDistPurchases4
361534    +          +     0.03811902892169 * GRP_NumWebPurchases2
361535    +          +    -1.51477371309928 * GRP_NumWebPurchases3
361536    +          +     1.07378297590898 * GRP_NumWebPurchases4
361537    +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
361538    +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
361539    +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
361540    +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
361541    +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
361542    +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
361543    +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
361544    +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
361545    +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
361546    +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
361547    +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
361548    +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
361549    +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
361550    +          +    -1.49559041774587 * GRP_MntFishProducts3
361551    +          +     1.29292270443546 * GRP_MntFishProducts4
361552    +          +     3.28109415592287 * GRP_MntGoldProds2
361553    +          +     0.40523569115651 * GRP_MntGoldProds3
361554    +          +        0.70305704265 * GRP_MntGoldProds4
361555    +          +    -1.85351989681271 * GRP_MntMeatProducts2
361556    +          +    -0.63625311683955 * GRP_MntMeatProducts3
361557    +          +     0.27320544681113 * GRP_MntMeatProducts4
361558    +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
361559    +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
361560    +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
361561    +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
361562    +          +    -1.40970961318877 * GRP_NumDistPurchases2
361563    +          +     -2.5780841761751 * GRP_NumDistPurchases3
361564    +          +    -0.35557998232484 * GRP_NumDistPurchases4
361565    +          +     1.27746944985248 * GRP_NumWebPurchases2
361566    +          +     0.69463977283169 * GRP_NumWebPurchases3
361567    +          +    -0.54397813851169 * GRP_NumWebPurchases4
361568    +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
361569    +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
361570    +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
361571    +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
361572    +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
361573    +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
361574    +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
361575    +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
361576    +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
361577    +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
361578    +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
361579    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
361580    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
361581    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
361582    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
361583    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
361584    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
361585    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
361586    +END;
MPRINT(EM_DIAGRAM):   END;
361587    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
361588    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
361589    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
361590    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
361591    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
361592    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
361593    +END;
MPRINT(EM_DIAGRAM):   END;
361594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361595    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
361596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361597    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
361598    +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
361599    +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
361600    +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
361601    +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
361602    +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
361603    +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
361604    +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
361605    +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
361606    +        GRP_Income2  +      2.4308303101124 * GRP_Income3
361607    +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
361608    +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
361609    +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
361610    +          +     2.51364109656281 * GRP_MntFishProducts3
361611    +          +    -1.42490007484769 * GRP_MntFishProducts4
361612    +          +    -0.45125943648795 * GRP_MntGoldProds2
361613    +          +     2.47102254724134 * GRP_MntGoldProds3
361614    +          +     -1.9039173262792 * GRP_MntGoldProds4
361615    +          +     0.19349291706995 * GRP_MntMeatProducts2
361616    +          +     1.13475826324844 * GRP_MntMeatProducts3
361617    +          +    -0.33642288502432 * GRP_MntMeatProducts4
361618    +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
361619    +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
361620    +          +     0.15659125827236 * GRP_NumCatalogPurchases3
361621    +          +     0.32817066335176 * GRP_NumCatalogPurchases4
361622    +          +    -0.67313821415044 * GRP_NumDistPurchases2
361623    +          +    -0.96239937857546 * GRP_NumDistPurchases3
361624    +          +     0.32058507897383 * GRP_NumDistPurchases4
361625    +          +     0.02503658374779 * GRP_NumWebPurchases2
361626    +          +    -2.42182777667863 * GRP_NumWebPurchases3
361627    +          +     1.09934791830799 * GRP_NumWebPurchases4
361628    +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
361629    +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
361630    +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
361631    +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
361632    +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
361633    +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
361634    +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
361635    +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
361636    +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
361637    +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
361638    +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
361639    +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
361640    +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
361641    +          +    -0.68769529687639 * GRP_MntFishProducts3
361642    +          +     0.91046416847697 * GRP_MntFishProducts4
361643    +          +     1.93581182421904 * GRP_MntGoldProds2
361644    +          +     0.00795466624941 * GRP_MntGoldProds3
361645    +          +    -0.22854189252742 * GRP_MntGoldProds4
361646    +          +     0.51645804440055 * GRP_MntMeatProducts2
361647    +          +    -0.73677565057958 * GRP_MntMeatProducts3
361648    +          +    -3.38222954402665 * GRP_MntMeatProducts4
361649    +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
361650    +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
361651    +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
361652    +          +     0.92868654767551 * GRP_NumCatalogPurchases4
361653    +          +    -0.18642581919214 * GRP_NumDistPurchases2
361654    +          +     0.32117397006136 * GRP_NumDistPurchases3
361655    +          +    -0.59059080451748 * GRP_NumDistPurchases4
361656    +          +    -1.05057528699441 * GRP_NumWebPurchases2
361657    +          +    -0.84936431958655 * GRP_NumWebPurchases3
361658    +          +     0.43322339989668 * GRP_NumWebPurchases4
361659    +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
361660    +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
361661    +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
361662    +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
361663    +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
361664    +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
361665    +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
361666    +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
361667    +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
361668    +        GRP_Income2  +     2.06545795697617 * GRP_Income3
361669    +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
361670    +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
361671    +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
361672    +          +     -0.2747383185488 * GRP_MntFishProducts3
361673    +          +     0.05699547232616 * GRP_MntFishProducts4
361674    +          +     1.78340082221807 * GRP_MntGoldProds2
361675    +          +    -0.21272258173805 * GRP_MntGoldProds3
361676    +          +    -0.63881612523162 * GRP_MntGoldProds4
361677    +          +     0.35743242018534 * GRP_MntMeatProducts2
361678    +          +     0.39288166088974 * GRP_MntMeatProducts3
361679    +          +     0.68623350973697 * GRP_MntMeatProducts4
361680    +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
361681    +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
361682    +          +     0.38349558810511 * GRP_NumCatalogPurchases3
361683    +          +     0.94944817324412 * GRP_NumCatalogPurchases4
361684    +          +     0.87924710032772 * GRP_NumDistPurchases2
361685    +          +     0.54658799433949 * GRP_NumDistPurchases3
361686    +          +     1.85594529989185 * GRP_NumDistPurchases4
361687    +          +    -0.66471569231333 * GRP_NumWebPurchases2
361688    +          +    -0.59461900037355 * GRP_NumWebPurchases3
361689    +          +     0.12806083458682 * GRP_NumWebPurchases4
361690    +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
361691    +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
361692    +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
361693    +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
361694    +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
361695    +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
361696    +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
361697    +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
361698    +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
361699    +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
361700    +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
361701    +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
361702    +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
361703    +          +    -0.50962348735329 * GRP_MntFishProducts3
361704    +          +    -1.75841654964734 * GRP_MntFishProducts4
361705    +          +     2.14839745385174 * GRP_MntGoldProds2
361706    +          +      2.4716387157729 * GRP_MntGoldProds3
361707    +          +     0.61286996367418 * GRP_MntGoldProds4
361708    +          +     1.45427097683349 * GRP_MntMeatProducts2
361709    +          +    -0.34990206215878 * GRP_MntMeatProducts3
361710    +          +     2.25284175811484 * GRP_MntMeatProducts4
361711    +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
361712    +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
361713    +          +     1.02272173939472 * GRP_NumCatalogPurchases3
361714    +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
361715    +          +    -0.44080685652484 * GRP_NumDistPurchases2
361716    +          +     2.40613428385819 * GRP_NumDistPurchases3
361717    +          +     0.26317801067025 * GRP_NumDistPurchases4
361718    +          +     2.34961138802546 * GRP_NumWebPurchases2
361719    +          +     2.35826990005342 * GRP_NumWebPurchases3
361720    +          +     0.18496434892584 * GRP_NumWebPurchases4
361721    +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
361722    +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
361723    +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
361724    +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
361725    +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
361726    +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
361727    +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
361728    +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
361729    +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
361730    +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
361731    +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
361732    +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
361733    +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
361734    +          +     -2.3817205567109 * GRP_MntFishProducts3
361735    +          +      1.4356293091772 * GRP_MntFishProducts4
361736    +          +    -1.03209023546079 * GRP_MntGoldProds2
361737    +          +     1.93949728331263 * GRP_MntGoldProds3
361738    +          +     0.44849194130528 * GRP_MntGoldProds4
361739    +          +     1.34973896956794 * GRP_MntMeatProducts2
361740    +          +     1.40989126474294 * GRP_MntMeatProducts3
361741    +          +     0.74435387703611 * GRP_MntMeatProducts4
361742    +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
361743    +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
361744    +          +     1.65449574071289 * GRP_NumCatalogPurchases3
361745    +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
361746    +          +    -0.76749528874396 * GRP_NumDistPurchases2
361747    +          +     1.83370965910825 * GRP_NumDistPurchases3
361748    +          +    -0.73709156569506 * GRP_NumDistPurchases4
361749    +          +     0.09215124428658 * GRP_NumWebPurchases2
361750    +          +      1.0403096068891 * GRP_NumWebPurchases3
361751    +          +     0.59317560741224 * GRP_NumWebPurchases4
361752    +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
361753    +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
361754    +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
361755    +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
361756    +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
361757    +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
361758    +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
361759    +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
361760    +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
361761    +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
361762    +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
361763    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
361764    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
361765    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
361766    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
361767    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
361768    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
361769    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
361770    +END;
MPRINT(EM_DIAGRAM):   END;
361771    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
361772    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
361773    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
361774    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
361775    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
361776    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
361777    +END;
MPRINT(EM_DIAGRAM):   END;
361778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361779    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
361780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361781    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
361782    +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
361783    +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
361784    +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
361785    +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
361786    +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
361787    +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
361788    +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
361789    +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
361790    +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
361791    +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
361792    +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
361793    +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
361794    +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
361795    +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
361796    +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
361797    +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
361798    +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
361799    +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
361800    +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
361801    +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
361802    +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
361803    +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
361804    +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
361805    +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
361806    +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
361807    +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
361808    +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
361809    +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
361810    +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
361811    +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
361812    +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
361813    +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
361814    +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
361815    +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
361816    +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
361817    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
361818    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
361819    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
361820    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
361821    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
361822    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
361823    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
361824    +END;
MPRINT(EM_DIAGRAM):   END;
361825    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
361826    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
361827    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
361828    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
361829    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
361830    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
361831    +END;
MPRINT(EM_DIAGRAM):   END;
361832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361833    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
361834    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361835    +
361836    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
361837    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
361838    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
361839    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
361840    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
361841    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
361842    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
361843    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
361844    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
361845    +end;
MPRINT(EM_DIAGRAM):   end;
361846    +else do;
MPRINT(EM_DIAGRAM):   else do;
361847    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
361848    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
361849    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
361850    +   end;
MPRINT(EM_DIAGRAM):   end;
361851    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
361852    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
361853    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
361854    +   end;
MPRINT(EM_DIAGRAM):   end;
361855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
361856    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
361857    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
361858    +   end;
MPRINT(EM_DIAGRAM):   end;
361859    +end;
MPRINT(EM_DIAGRAM):   end;
361860    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
361861    +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
361862    +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
361863    +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
361864    +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
361865    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
361866    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
361867    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
361868    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
361869    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
361870    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
361871    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
361872    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
361873    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
361874    +END;
MPRINT(EM_DIAGRAM):   END;
361875    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
361876    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
361877    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
361878    +END;
MPRINT(EM_DIAGRAM):   END;
361879    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
361880    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
361881    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
361882    +END;
MPRINT(EM_DIAGRAM):   END;
361883    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
361884    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
361885    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
361886    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
361887    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
361888    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
361889    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
361890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361891    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
361892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
361893    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
361894    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
361895    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
361896    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
361897    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
361898    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
361899    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
361900    +END;
MPRINT(EM_DIAGRAM):   END;
361901    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
361902    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
361903    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
361904    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
361905    +* Renaming variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural20;
361906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361907    +* Renaming Posterior variables for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural20;
361908    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361909    +drop AutoNeural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar1;
361910    +AutoNeural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar1 = P_DepVar1;
361911    +drop AutoNeural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_P_DepVar0;
361912    +AutoNeural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural20_P_DepVar0 = P_DepVar0;
361913    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361914    +* Renaming _WARN_ variable for AutoNeural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural20;
361915    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361916    +length AutoNeural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural20_WARN_ $4;
361917    +drop AutoNeural20_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural20_WARN_;
361918    +AutoNeural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural20_WARN_ = _WARN_;
361919    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361920    +* Ensmbl48: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 5 of 7;
361921    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361922    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361923    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
361924    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
361925    +* NODE: AutoNeural26;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural26;
361926    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
361927    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
361928    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
361929    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
361930    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
361931    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
361932    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
361933    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
361934    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
361935    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
361936    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
361937    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
361938    +LENGTH _WARN_ $4
361939    +      F_DepVar  $ 12
361940    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
361941    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
361942    +
361943    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
361944    +
361945    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
361946    +
361947    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
361948    +
361949    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
361950    +
361951    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
361952    +
361953    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
361954    +
361955    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
361956    +
361957    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
361958    +
361959    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
361960    +
361961    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
361962    +
361963    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
361964    +
361965    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
361966    +
361967    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
361968    +
361969    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
361970    +
361971    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
361972    +
361973    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
361974    +
361975    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
361976    +
361977    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
361978    +
361979    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
361980    +
361981    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
361982    +
361983    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
361984    +
361985    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
361986    +
361987    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
361988    +
361989    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
361990    +
361991    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
361992    +
361993    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
361994    +
361995    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
361996    +
361997    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
361998    +
361999    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
362000    +
362001    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
362002    +
362003    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
362004    +
362005    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
362006    +
362007    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
362008    +
362009    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
362010    +
362011    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
362012    +
362013    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
362014    +
362015    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
362016    +
362017    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
362018    +
362019    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
362020    +
362021    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
362022    +
362023    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
362024    +
362025    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
362026    +
362027    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
362028    +
362029    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
362030    +
362031    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
362032    +
362033    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
362034    +
362035    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
362036    +
362037    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
362038    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
362039    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
362040    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
362041    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362042    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362043    +end;
MPRINT(EM_DIAGRAM):   end;
362044    +else do;
MPRINT(EM_DIAGRAM):   else do;
362045    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362046    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
362047    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362048    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
362049    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
362050    +   end;
MPRINT(EM_DIAGRAM):   end;
362051    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362052    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
362053    +   end;
MPRINT(EM_DIAGRAM):   end;
362054    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362055    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
362056    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362057    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362058    +   end;
MPRINT(EM_DIAGRAM):   end;
362059    +end;
MPRINT(EM_DIAGRAM):   end;
362060    +
362061    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
362062    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
362063    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
362064    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
362065    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
362066    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
362067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362069    +end;
MPRINT(EM_DIAGRAM):   end;
362070    +else do;
MPRINT(EM_DIAGRAM):   else do;
362071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362072    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
362073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362074    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
362075    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
362076    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
362077    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
362078    +   end;
MPRINT(EM_DIAGRAM):   end;
362079    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362080    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
362081    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
362082    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
362083    +   end;
MPRINT(EM_DIAGRAM):   end;
362084    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362085    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
362086    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
362087    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
362088    +   end;
MPRINT(EM_DIAGRAM):   end;
362089    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362090    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
362091    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
362092    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
362093    +   end;
MPRINT(EM_DIAGRAM):   end;
362094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362095    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
362096    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
362097    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
362098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362100    +   end;
MPRINT(EM_DIAGRAM):   end;
362101    +end;
MPRINT(EM_DIAGRAM):   end;
362102    +
362103    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
362104    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
362105    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
362106    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
362107    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
362108    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
362109    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362110    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362111    +end;
MPRINT(EM_DIAGRAM):   end;
362112    +else do;
MPRINT(EM_DIAGRAM):   else do;
362113    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362114    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
362115    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362116    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
362117    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
362118    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
362119    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
362120    +   end;
MPRINT(EM_DIAGRAM):   end;
362121    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362122    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
362123    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
362124    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
362125    +   end;
MPRINT(EM_DIAGRAM):   end;
362126    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362127    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
362128    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
362129    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
362130    +   end;
MPRINT(EM_DIAGRAM):   end;
362131    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362132    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
362133    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
362134    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
362135    +   end;
MPRINT(EM_DIAGRAM):   end;
362136    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362137    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
362138    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
362139    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
362140    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362141    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362142    +   end;
MPRINT(EM_DIAGRAM):   end;
362143    +end;
MPRINT(EM_DIAGRAM):   end;
362144    +
362145    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
362146    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
362147    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
362148    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
362149    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
362150    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
362151    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362152    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362153    +end;
MPRINT(EM_DIAGRAM):   end;
362154    +else do;
MPRINT(EM_DIAGRAM):   else do;
362155    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362156    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
362157    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362158    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362159    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
362160    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
362161    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
362162    +   end;
MPRINT(EM_DIAGRAM):   end;
362163    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362164    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
362165    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
362166    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
362167    +   end;
MPRINT(EM_DIAGRAM):   end;
362168    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362169    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
362170    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
362171    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
362172    +   end;
MPRINT(EM_DIAGRAM):   end;
362173    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362174    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
362175    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
362176    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
362177    +   end;
MPRINT(EM_DIAGRAM):   end;
362178    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362179    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
362180    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
362181    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
362182    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362183    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362184    +   end;
MPRINT(EM_DIAGRAM):   end;
362185    +end;
MPRINT(EM_DIAGRAM):   end;
362186    +
362187    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
362188    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
362189    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
362190    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
362191    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
362192    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
362193    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362194    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362195    +end;
MPRINT(EM_DIAGRAM):   end;
362196    +else do;
MPRINT(EM_DIAGRAM):   else do;
362197    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362198    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
362199    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362200    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362201    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
362202    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
362203    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
362204    +   end;
MPRINT(EM_DIAGRAM):   end;
362205    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362206    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
362207    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
362208    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
362209    +   end;
MPRINT(EM_DIAGRAM):   end;
362210    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362211    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
362212    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
362213    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
362214    +   end;
MPRINT(EM_DIAGRAM):   end;
362215    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362216    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
362217    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
362218    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
362219    +   end;
MPRINT(EM_DIAGRAM):   end;
362220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362221    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
362222    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
362223    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
362224    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362225    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362226    +   end;
MPRINT(EM_DIAGRAM):   end;
362227    +end;
MPRINT(EM_DIAGRAM):   end;
362228    +
362229    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
362230    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
362231    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
362232    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
362233    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
362234    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
362235    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362236    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362237    +end;
MPRINT(EM_DIAGRAM):   end;
362238    +else do;
MPRINT(EM_DIAGRAM):   else do;
362239    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362240    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
362241    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362242    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362243    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
362244    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
362245    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
362246    +   end;
MPRINT(EM_DIAGRAM):   end;
362247    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362248    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
362249    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
362250    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
362251    +   end;
MPRINT(EM_DIAGRAM):   end;
362252    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362253    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
362254    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
362255    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
362256    +   end;
MPRINT(EM_DIAGRAM):   end;
362257    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362258    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
362259    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
362260    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
362261    +   end;
MPRINT(EM_DIAGRAM):   end;
362262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362263    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
362264    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
362265    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
362266    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362267    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362268    +   end;
MPRINT(EM_DIAGRAM):   end;
362269    +end;
MPRINT(EM_DIAGRAM):   end;
362270    +
362271    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
362272    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
362273    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
362274    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
362275    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
362276    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
362277    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362278    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362279    +end;
MPRINT(EM_DIAGRAM):   end;
362280    +else do;
MPRINT(EM_DIAGRAM):   else do;
362281    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362282    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
362283    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362284    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362285    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
362286    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
362287    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
362288    +   end;
MPRINT(EM_DIAGRAM):   end;
362289    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362290    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
362291    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
362292    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
362293    +   end;
MPRINT(EM_DIAGRAM):   end;
362294    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362295    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
362296    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
362297    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
362298    +   end;
MPRINT(EM_DIAGRAM):   end;
362299    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362300    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
362301    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
362302    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
362303    +   end;
MPRINT(EM_DIAGRAM):   end;
362304    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362305    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
362306    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
362307    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
362308    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362309    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362310    +   end;
MPRINT(EM_DIAGRAM):   end;
362311    +end;
MPRINT(EM_DIAGRAM):   end;
362312    +
362313    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
362314    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
362315    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
362316    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
362317    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
362318    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
362319    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362320    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362321    +end;
MPRINT(EM_DIAGRAM):   end;
362322    +else do;
MPRINT(EM_DIAGRAM):   else do;
362323    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362324    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
362325    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362326    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362327    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
362328    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
362329    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
362330    +   end;
MPRINT(EM_DIAGRAM):   end;
362331    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362332    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
362333    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
362334    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
362335    +   end;
MPRINT(EM_DIAGRAM):   end;
362336    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362337    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
362338    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
362339    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
362340    +   end;
MPRINT(EM_DIAGRAM):   end;
362341    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362342    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
362343    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
362344    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
362345    +   end;
MPRINT(EM_DIAGRAM):   end;
362346    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362347    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
362348    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
362349    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
362350    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362351    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362352    +   end;
MPRINT(EM_DIAGRAM):   end;
362353    +end;
MPRINT(EM_DIAGRAM):   end;
362354    +
362355    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
362356    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
362357    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
362358    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
362359    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
362360    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362361    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362362    +end;
MPRINT(EM_DIAGRAM):   end;
362363    +else do;
MPRINT(EM_DIAGRAM):   else do;
362364    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362365    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
362366    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362367    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362368    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
362369    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
362370    +   end;
MPRINT(EM_DIAGRAM):   end;
362371    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362372    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
362373    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
362374    +   end;
MPRINT(EM_DIAGRAM):   end;
362375    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362376    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
362377    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
362378    +   end;
MPRINT(EM_DIAGRAM):   end;
362379    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362380    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
362381    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
362382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362384    +   end;
MPRINT(EM_DIAGRAM):   end;
362385    +end;
MPRINT(EM_DIAGRAM):   end;
362386    +
362387    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
362388    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
362389    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
362390    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
362391    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
362392    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
362393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362395    +end;
MPRINT(EM_DIAGRAM):   end;
362396    +else do;
MPRINT(EM_DIAGRAM):   else do;
362397    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362398    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
362399    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362400    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
362401    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
362402    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
362403    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
362404    +   end;
MPRINT(EM_DIAGRAM):   end;
362405    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362406    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
362407    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
362408    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
362409    +   end;
MPRINT(EM_DIAGRAM):   end;
362410    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362411    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
362412    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
362413    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
362414    +   end;
MPRINT(EM_DIAGRAM):   end;
362415    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362416    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
362417    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
362418    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
362419    +   end;
MPRINT(EM_DIAGRAM):   end;
362420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362421    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
362422    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
362423    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
362424    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362425    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362426    +   end;
MPRINT(EM_DIAGRAM):   end;
362427    +end;
MPRINT(EM_DIAGRAM):   end;
362428    +
362429    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
362430    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
362431    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
362432    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
362433    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
362434    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
362435    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362437    +end;
MPRINT(EM_DIAGRAM):   end;
362438    +else do;
MPRINT(EM_DIAGRAM):   else do;
362439    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362440    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
362441    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362442    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362443    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
362444    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
362445    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
362446    +   end;
MPRINT(EM_DIAGRAM):   end;
362447    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362448    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
362449    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
362450    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
362451    +   end;
MPRINT(EM_DIAGRAM):   end;
362452    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362453    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
362454    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
362455    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
362456    +   end;
MPRINT(EM_DIAGRAM):   end;
362457    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362458    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
362459    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
362460    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
362461    +   end;
MPRINT(EM_DIAGRAM):   end;
362462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362463    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
362464    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
362465    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
362466    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362467    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362468    +   end;
MPRINT(EM_DIAGRAM):   end;
362469    +end;
MPRINT(EM_DIAGRAM):   end;
362470    +
362471    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
362472    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
362473    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
362474    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
362475    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
362476    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
362477    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362478    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362479    +end;
MPRINT(EM_DIAGRAM):   end;
362480    +else do;
MPRINT(EM_DIAGRAM):   else do;
362481    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362482    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
362483    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362484    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
362485    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
362486    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
362487    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
362488    +   end;
MPRINT(EM_DIAGRAM):   end;
362489    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362490    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
362491    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
362492    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
362493    +   end;
MPRINT(EM_DIAGRAM):   end;
362494    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362495    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
362496    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
362497    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
362498    +   end;
MPRINT(EM_DIAGRAM):   end;
362499    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362500    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
362501    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
362502    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
362503    +   end;
MPRINT(EM_DIAGRAM):   end;
362504    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362505    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
362506    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
362507    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
362508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362510    +   end;
MPRINT(EM_DIAGRAM):   end;
362511    +end;
MPRINT(EM_DIAGRAM):   end;
362512    +
362513    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
362514    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
362515    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
362516    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
362517    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
362518    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
362519    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362520    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362521    +end;
MPRINT(EM_DIAGRAM):   end;
362522    +else do;
MPRINT(EM_DIAGRAM):   else do;
362523    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362524    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
362525    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362526    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362527    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
362528    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
362529    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
362530    +   end;
MPRINT(EM_DIAGRAM):   end;
362531    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362532    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
362533    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
362534    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
362535    +   end;
MPRINT(EM_DIAGRAM):   end;
362536    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362537    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
362538    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
362539    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
362540    +   end;
MPRINT(EM_DIAGRAM):   end;
362541    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362542    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
362543    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
362544    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
362545    +   end;
MPRINT(EM_DIAGRAM):   end;
362546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362547    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
362548    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
362549    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
362550    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362551    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362552    +   end;
MPRINT(EM_DIAGRAM):   end;
362553    +end;
MPRINT(EM_DIAGRAM):   end;
362554    +
362555    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
362556    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
362557    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
362558    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
362559    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
362560    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
362561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362563    +end;
MPRINT(EM_DIAGRAM):   end;
362564    +else do;
MPRINT(EM_DIAGRAM):   else do;
362565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362566    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
362567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362568    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
362569    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
362570    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
362571    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
362572    +   end;
MPRINT(EM_DIAGRAM):   end;
362573    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362574    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
362575    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
362576    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
362577    +   end;
MPRINT(EM_DIAGRAM):   end;
362578    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362579    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
362580    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
362581    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
362582    +   end;
MPRINT(EM_DIAGRAM):   end;
362583    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362584    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
362585    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
362586    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
362587    +   end;
MPRINT(EM_DIAGRAM):   end;
362588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362589    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
362590    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
362591    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
362592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362594    +   end;
MPRINT(EM_DIAGRAM):   end;
362595    +end;
MPRINT(EM_DIAGRAM):   end;
362596    +
362597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362598    +*** Checking missing input Interval
362599    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
362600    +
362601    +IF NMISS(
362602    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
362603    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
362604    +
362605    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362606    +END;
MPRINT(EM_DIAGRAM):   END;
362607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362608    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
362609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362610    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
362611    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
362612    +END;
MPRINT(EM_DIAGRAM):   END;
362613    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
362614    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
362615    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
362616    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
362617    +END;
MPRINT(EM_DIAGRAM):   END;
362618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362619    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
362620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362621    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362622    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
362623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362624    +
362625    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
362626    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
362627    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
362628    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
362629    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
362630    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362631    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
362632    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
362633    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
362634    +end;
MPRINT(EM_DIAGRAM):   end;
362635    +else do;
MPRINT(EM_DIAGRAM):   else do;
362636    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
362637    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
362638    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
362639    +   end;
MPRINT(EM_DIAGRAM):   end;
362640    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
362641    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
362642    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
362643    +   end;
MPRINT(EM_DIAGRAM):   end;
362644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362645    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
362646    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
362647    +   end;
MPRINT(EM_DIAGRAM):   end;
362648    +end;
MPRINT(EM_DIAGRAM):   end;
362649    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
362650    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
362651    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
362652    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
362653    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
362654    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
362655    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
362656    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
362657    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
362658    +          +     0.11895902038445 * GRP_MntFishProducts3
362659    +          +     -0.0194508409368 * GRP_MntFishProducts4
362660    +          +    -0.27172158371684 * GRP_MntGoldProds2
362661    +          +    -0.06617094209943 * GRP_MntGoldProds3
362662    +          +     0.04665050332743 * GRP_MntGoldProds4
362663    +          +    -0.97879858925028 * GRP_MntMeatProducts2
362664    +          +    -0.16953024357929 * GRP_MntMeatProducts3
362665    +          +     0.36702521764699 * GRP_MntMeatProducts4
362666    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
362667    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
362668    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
362669    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
362670    +          +    -1.86131730329435 * GRP_NumDistPurchases2
362671    +          +     -0.1744815262149 * GRP_NumDistPurchases3
362672    +          +     0.29974863559738 * GRP_NumDistPurchases4
362673    +          +     0.08237783693138 * GRP_NumWebPurchases2
362674    +          +     0.08904902237334 * GRP_NumWebPurchases3
362675    +          +     0.01729681908858 * GRP_NumWebPurchases4
362676    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
362677    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
362678    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
362679    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
362680    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
362681    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 + 
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 + 
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 * 
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 * 
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 + 
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 + 
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 + 
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 + 
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708 
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 * 
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 * 
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 * 
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 * 
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 * 
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 + 
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 * 
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 + 
-0.57834308365674 * GRP_Recency4 ;
362682    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
362683    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
362684    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
362685    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
362686    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
362687    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
362688    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
362689    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
362690    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
362691    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
362692    +END;
MPRINT(EM_DIAGRAM):   END;
362693    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
362694    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
362695    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
362696    +END;
MPRINT(EM_DIAGRAM):   END;
362697    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
362698    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
362699    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
362700    +END;
MPRINT(EM_DIAGRAM):   END;
362701    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
362702    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
362703    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
362704    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
362705    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
362706    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
362707    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
362708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362709    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
362710    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
362711    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
362712    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
362713    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
362714    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
362715    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
362716    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
362717    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
362718    +END;
MPRINT(EM_DIAGRAM):   END;
362719    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
362720    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
362721    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
362722    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
362723    +* Renaming variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural26;
362724    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362725    +* Renaming Posterior variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural26;
362726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362727    +drop AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar1;
362728    +AutoNeural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar1 = P_DepVar1;
362729    +drop AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar0;
362730    +AutoNeural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar0 = P_DepVar0;
362731    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362732    +* Renaming _WARN_ variable for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural26;
362733    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362734    +length AutoNeural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural26_WARN_ $4;
362735    +drop AutoNeural26_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_WARN_;
362736    +AutoNeural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural26_WARN_ = _WARN_;
362737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362738    +* Ensmbl48: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 6 of 7;
362739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362740    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362741    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
362742    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
362743    +* NODE: AutoNeural25;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural25;
362744    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
362745    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
362746    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
362747    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
362748    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
362749    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
362750    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
362751    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
362752    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
362753    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
362754    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
362755    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
362756    +LENGTH _WARN_ $4
362757    +      F_DepVar  $ 12
362758    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
362759    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
362760    +
362761    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
362762    +
362763    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
362764    +
362765    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
362766    +
362767    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
362768    +
362769    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
362770    +
362771    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
362772    +
362773    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
362774    +
362775    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
362776    +
362777    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
362778    +
362779    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
362780    +
362781    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
362782    +
362783    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
362784    +
362785    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
362786    +
362787    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
362788    +
362789    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
362790    +
362791    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
362792    +
362793    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
362794    +
362795    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
362796    +
362797    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
362798    +
362799    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
362800    +
362801    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
362802    +
362803    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
362804    +
362805    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
362806    +
362807    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
362808    +
362809    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
362810    +
362811    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
362812    +
362813    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
362814    +
362815    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
362816    +
362817    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
362818    +
362819    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
362820    +
362821    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
362822    +
362823    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
362824    +
362825    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
362826    +
362827    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
362828    +
362829    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
362830    +
362831    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
362832    +
362833    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
362834    +
362835    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
362836    +
362837    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
362838    +
362839    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
362840    +
362841    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
362842    +
362843    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
362844    +
362845    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
362846    +
362847    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
362848    +
362849    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
362850    +
362851    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
362852    +
362853    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
362854    +
362855    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
362856    +
362857    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
362858    +
362859    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
362860    +
362861    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
362862    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
362863    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
362864    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
362865    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362867    +end;
MPRINT(EM_DIAGRAM):   end;
362868    +else do;
MPRINT(EM_DIAGRAM):   else do;
362869    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362870    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
362871    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362872    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
362873    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
362874    +   end;
MPRINT(EM_DIAGRAM):   end;
362875    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362876    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
362877    +   end;
MPRINT(EM_DIAGRAM):   end;
362878    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362879    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
362880    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362881    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362882    +   end;
MPRINT(EM_DIAGRAM):   end;
362883    +end;
MPRINT(EM_DIAGRAM):   end;
362884    +
362885    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
362886    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
362887    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
362888    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
362889    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
362890    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
362891    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362892    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362893    +end;
MPRINT(EM_DIAGRAM):   end;
362894    +else do;
MPRINT(EM_DIAGRAM):   else do;
362895    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362896    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
362897    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362898    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
362899    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
362900    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
362901    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
362902    +   end;
MPRINT(EM_DIAGRAM):   end;
362903    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362904    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
362905    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
362906    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
362907    +   end;
MPRINT(EM_DIAGRAM):   end;
362908    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362909    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
362910    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
362911    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
362912    +   end;
MPRINT(EM_DIAGRAM):   end;
362913    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362914    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
362915    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
362916    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
362917    +   end;
MPRINT(EM_DIAGRAM):   end;
362918    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362919    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
362920    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
362921    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
362922    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362923    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362924    +   end;
MPRINT(EM_DIAGRAM):   end;
362925    +end;
MPRINT(EM_DIAGRAM):   end;
362926    +
362927    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
362928    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
362929    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
362930    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
362931    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
362932    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
362933    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362934    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362935    +end;
MPRINT(EM_DIAGRAM):   end;
362936    +else do;
MPRINT(EM_DIAGRAM):   else do;
362937    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362938    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
362939    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362940    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
362941    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
362942    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
362943    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
362944    +   end;
MPRINT(EM_DIAGRAM):   end;
362945    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362946    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
362947    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
362948    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
362949    +   end;
MPRINT(EM_DIAGRAM):   end;
362950    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
362951    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
362952    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
362953    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
362954    +   end;
MPRINT(EM_DIAGRAM):   end;
362955    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362956    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
362957    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
362958    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
362959    +   end;
MPRINT(EM_DIAGRAM):   end;
362960    +   else do;
MPRINT(EM_DIAGRAM):   else do;
362961    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
362962    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
362963    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
362964    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
362965    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362966    +   end;
MPRINT(EM_DIAGRAM):   end;
362967    +end;
MPRINT(EM_DIAGRAM):   end;
362968    +
362969    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
362970    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
362971    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
362972    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
362973    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
362974    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
362975    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
362976    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
362977    +end;
MPRINT(EM_DIAGRAM):   end;
362978    +else do;
MPRINT(EM_DIAGRAM):   else do;
362979    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
362980    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
362981    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
362982    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
362983    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
362984    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
362985    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
362986    +   end;
MPRINT(EM_DIAGRAM):   end;
362987    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
362988    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
362989    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
362990    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
362991    +   end;
MPRINT(EM_DIAGRAM):   end;
362992    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
362993    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
362994    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
362995    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
362996    +   end;
MPRINT(EM_DIAGRAM):   end;
362997    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
362998    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
362999    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
363000    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
363001    +   end;
MPRINT(EM_DIAGRAM):   end;
363002    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363003    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
363004    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
363005    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
363006    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363007    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363008    +   end;
MPRINT(EM_DIAGRAM):   end;
363009    +end;
MPRINT(EM_DIAGRAM):   end;
363010    +
363011    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
363012    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
363013    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
363014    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
363015    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
363016    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
363017    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363018    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363019    +end;
MPRINT(EM_DIAGRAM):   end;
363020    +else do;
MPRINT(EM_DIAGRAM):   else do;
363021    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363022    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
363023    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363024    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363025    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
363026    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
363027    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
363028    +   end;
MPRINT(EM_DIAGRAM):   end;
363029    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363030    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
363031    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
363032    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
363033    +   end;
MPRINT(EM_DIAGRAM):   end;
363034    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363035    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
363036    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
363037    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
363038    +   end;
MPRINT(EM_DIAGRAM):   end;
363039    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363040    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
363041    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
363042    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
363043    +   end;
MPRINT(EM_DIAGRAM):   end;
363044    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363045    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
363046    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
363047    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
363048    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363049    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363050    +   end;
MPRINT(EM_DIAGRAM):   end;
363051    +end;
MPRINT(EM_DIAGRAM):   end;
363052    +
363053    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
363054    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
363055    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
363056    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
363057    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
363058    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
363059    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363060    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363061    +end;
MPRINT(EM_DIAGRAM):   end;
363062    +else do;
MPRINT(EM_DIAGRAM):   else do;
363063    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363064    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
363065    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363066    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363067    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
363068    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
363069    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
363070    +   end;
MPRINT(EM_DIAGRAM):   end;
363071    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363072    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
363073    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
363074    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
363075    +   end;
MPRINT(EM_DIAGRAM):   end;
363076    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363077    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
363078    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
363079    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
363080    +   end;
MPRINT(EM_DIAGRAM):   end;
363081    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363082    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
363083    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
363084    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
363085    +   end;
MPRINT(EM_DIAGRAM):   end;
363086    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363087    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
363088    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
363089    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
363090    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363091    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363092    +   end;
MPRINT(EM_DIAGRAM):   end;
363093    +end;
MPRINT(EM_DIAGRAM):   end;
363094    +
363095    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
363096    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
363097    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
363098    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
363099    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
363100    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
363101    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363102    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363103    +end;
MPRINT(EM_DIAGRAM):   end;
363104    +else do;
MPRINT(EM_DIAGRAM):   else do;
363105    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363106    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
363107    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363108    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363109    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
363110    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
363111    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
363112    +   end;
MPRINT(EM_DIAGRAM):   end;
363113    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363114    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
363115    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
363116    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
363117    +   end;
MPRINT(EM_DIAGRAM):   end;
363118    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363119    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
363120    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
363121    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
363122    +   end;
MPRINT(EM_DIAGRAM):   end;
363123    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363124    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
363125    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
363126    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
363127    +   end;
MPRINT(EM_DIAGRAM):   end;
363128    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363129    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
363130    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
363131    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
363132    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363133    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363134    +   end;
MPRINT(EM_DIAGRAM):   end;
363135    +end;
MPRINT(EM_DIAGRAM):   end;
363136    +
363137    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
363138    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
363139    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
363140    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
363141    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
363142    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
363143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363145    +end;
MPRINT(EM_DIAGRAM):   end;
363146    +else do;
MPRINT(EM_DIAGRAM):   else do;
363147    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363148    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
363149    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363150    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363151    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
363152    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
363153    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
363154    +   end;
MPRINT(EM_DIAGRAM):   end;
363155    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363156    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
363157    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
363158    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
363159    +   end;
MPRINT(EM_DIAGRAM):   end;
363160    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363161    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
363162    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
363163    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
363164    +   end;
MPRINT(EM_DIAGRAM):   end;
363165    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363166    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
363167    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
363168    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
363169    +   end;
MPRINT(EM_DIAGRAM):   end;
363170    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363171    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
363172    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
363173    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
363174    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363175    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363176    +   end;
MPRINT(EM_DIAGRAM):   end;
363177    +end;
MPRINT(EM_DIAGRAM):   end;
363178    +
363179    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
363180    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
363181    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
363182    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
363183    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
363184    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363185    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363186    +end;
MPRINT(EM_DIAGRAM):   end;
363187    +else do;
MPRINT(EM_DIAGRAM):   else do;
363188    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363189    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
363190    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363191    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363192    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
363193    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
363194    +   end;
MPRINT(EM_DIAGRAM):   end;
363195    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363196    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
363197    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
363198    +   end;
MPRINT(EM_DIAGRAM):   end;
363199    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363200    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
363201    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
363202    +   end;
MPRINT(EM_DIAGRAM):   end;
363203    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363204    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
363205    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
363206    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363207    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363208    +   end;
MPRINT(EM_DIAGRAM):   end;
363209    +end;
MPRINT(EM_DIAGRAM):   end;
363210    +
363211    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
363212    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
363213    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
363214    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
363215    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
363216    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
363217    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363218    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363219    +end;
MPRINT(EM_DIAGRAM):   end;
363220    +else do;
MPRINT(EM_DIAGRAM):   else do;
363221    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363222    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
363223    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363224    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
363225    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
363226    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
363227    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
363228    +   end;
MPRINT(EM_DIAGRAM):   end;
363229    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363230    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
363231    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
363232    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
363233    +   end;
MPRINT(EM_DIAGRAM):   end;
363234    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363235    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
363236    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
363237    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
363238    +   end;
MPRINT(EM_DIAGRAM):   end;
363239    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
363240    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
363241    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
363242    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
363243    +   end;
MPRINT(EM_DIAGRAM):   end;
363244    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363245    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
363246    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
363247    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
363248    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363249    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363250    +   end;
MPRINT(EM_DIAGRAM):   end;
363251    +end;
MPRINT(EM_DIAGRAM):   end;
363252    +
363253    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
363254    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
363255    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
363256    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
363257    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
363258    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
363259    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363260    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363261    +end;
MPRINT(EM_DIAGRAM):   end;
363262    +else do;
MPRINT(EM_DIAGRAM):   else do;
363263    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363264    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
363265    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363266    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363267    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
363268    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
363269    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
363270    +   end;
MPRINT(EM_DIAGRAM):   end;
363271    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363272    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
363273    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
363274    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
363275    +   end;
MPRINT(EM_DIAGRAM):   end;
363276    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363277    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
363278    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
363279    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
363280    +   end;
MPRINT(EM_DIAGRAM):   end;
363281    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363282    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
363283    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
363284    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
363285    +   end;
MPRINT(EM_DIAGRAM):   end;
363286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363287    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
363288    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
363289    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
363290    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363291    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363292    +   end;
MPRINT(EM_DIAGRAM):   end;
363293    +end;
MPRINT(EM_DIAGRAM):   end;
363294    +
363295    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
363296    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
363297    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
363298    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
363299    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
363300    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
363301    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363302    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363303    +end;
MPRINT(EM_DIAGRAM):   end;
363304    +else do;
MPRINT(EM_DIAGRAM):   else do;
363305    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363306    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
363307    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363308    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
363309    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
363310    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
363311    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
363312    +   end;
MPRINT(EM_DIAGRAM):   end;
363313    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
363314    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
363315    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
363316    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
363317    +   end;
MPRINT(EM_DIAGRAM):   end;
363318    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363319    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
363320    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
363321    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
363322    +   end;
MPRINT(EM_DIAGRAM):   end;
363323    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363324    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
363325    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
363326    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
363327    +   end;
MPRINT(EM_DIAGRAM):   end;
363328    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363329    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
363330    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
363331    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
363332    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363333    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363334    +   end;
MPRINT(EM_DIAGRAM):   end;
363335    +end;
MPRINT(EM_DIAGRAM):   end;
363336    +
363337    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
363338    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
363339    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
363340    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
363341    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
363342    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
363343    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363344    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363345    +end;
MPRINT(EM_DIAGRAM):   end;
363346    +else do;
MPRINT(EM_DIAGRAM):   else do;
363347    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363348    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
363349    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363350    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363351    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
363352    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
363353    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
363354    +   end;
MPRINT(EM_DIAGRAM):   end;
363355    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363356    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
363357    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
363358    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
363359    +   end;
MPRINT(EM_DIAGRAM):   end;
363360    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363361    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
363362    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
363363    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
363364    +   end;
MPRINT(EM_DIAGRAM):   end;
363365    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363366    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
363367    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
363368    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
363369    +   end;
MPRINT(EM_DIAGRAM):   end;
363370    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363371    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
363372    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
363373    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
363374    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363375    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363376    +   end;
MPRINT(EM_DIAGRAM):   end;
363377    +end;
MPRINT(EM_DIAGRAM):   end;
363378    +
363379    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
363380    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
363381    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
363382    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
363383    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
363384    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
363385    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363386    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363387    +end;
MPRINT(EM_DIAGRAM):   end;
363388    +else do;
MPRINT(EM_DIAGRAM):   else do;
363389    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363390    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
363391    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363392    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
363393    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
363394    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
363395    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
363396    +   end;
MPRINT(EM_DIAGRAM):   end;
363397    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363398    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
363399    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
363400    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
363401    +   end;
MPRINT(EM_DIAGRAM):   end;
363402    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
363403    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
363404    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
363405    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
363406    +   end;
MPRINT(EM_DIAGRAM):   end;
363407    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363408    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
363409    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
363410    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
363411    +   end;
MPRINT(EM_DIAGRAM):   end;
363412    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363413    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
363414    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
363415    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
363416    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363417    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363418    +   end;
MPRINT(EM_DIAGRAM):   end;
363419    +end;
MPRINT(EM_DIAGRAM):   end;
363420    +
363421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363422    +*** Checking missing input Interval
363423    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
363424    +
363425    +IF NMISS(
363426    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
363427    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
363428    +
363429    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363430    +END;
MPRINT(EM_DIAGRAM):   END;
363431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363432    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
363433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363434    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
363435    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
363436    +END;
MPRINT(EM_DIAGRAM):   END;
363437    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
363438    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
363439    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
363440    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
363441    +END;
MPRINT(EM_DIAGRAM):   END;
363442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363443    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
363444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363445    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363446    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
363447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363448    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
363449    +   H1x1_1  =     0.38021638611764 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.38021638611764 * S_Year_Birth ;
363450    +   H1x1_2  =      -1.088276895346 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.088276895346 * S_Year_Birth ;
363451    +   H1x1_3  =    -0.21044864474556 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21044864474556 * S_Year_Birth ;
363452    +   H1x1_1  = H1x1_1  +    -1.19598236721657 * GRP_AcceptedCmp52
363453    +          +     0.89556920543007 * GRP_Frq2  +    -1.28633632438875 * GRP_Frq3
363454    +          +     1.09957277812081 * GRP_Frq4  +     1.66129248688789 *
363455    +        GRP_Income2  +    -0.02208859809261 * GRP_Income3
363456    +          +     0.13742442233856 * GRP_Income4  +     -0.8762617114278 *
363457    +        GRP_Mnt2  +     0.14483268386758 * GRP_Mnt3  +     1.46115917633769 *
363458    +        GRP_Mnt4  +     -0.6421408902491 * GRP_MntFishProducts2
363459    +          +      0.1128138472044 * GRP_MntFishProducts3
363460    +          +     1.21562636748698 * GRP_MntFishProducts4
363461    +          +     0.97422300880066 * GRP_MntGoldProds2
363462    +          +    -0.78007036389535 * GRP_MntGoldProds3
363463    +          +    -0.13814365615145 * GRP_MntGoldProds4
363464    +          +     1.35693955555286 * GRP_MntMeatProducts2
363465    +          +    -0.27598973191035 * GRP_MntMeatProducts3
363466    +          +     0.24526165671667 * GRP_MntMeatProducts4
363467    +          +    -2.07253692193163 * GRP_MntWines2  +    -0.82406684176795 *
363468    +        GRP_MntWines3  +     1.33606527822464 * GRP_MntWines4
363469    +          +    -1.54679770016919 * GRP_NumCatalogPurchases3
363470    +          +    -2.28037541698712 * GRP_NumCatalogPurchases4
363471    +          +     0.40979012613952 * GRP_NumDistPurchases2
363472    +          +     0.01840169060266 * GRP_NumDistPurchases3
363473    +          +     0.45490355508206 * GRP_NumDistPurchases4
363474    +          +     -2.5216795172343 * GRP_NumWebPurchases2
363475    +          +    -1.84801006282457 * GRP_NumWebPurchases3
363476    +          +    -1.97644985842889 * GRP_NumWebPurchases4
363477    +          +     1.42008839453911 * GRP_RFMstat2  +    -1.47553685202484 *
363478    +        GRP_RFMstat3  +     0.87098855427631 * GRP_RFMstat4
363479    +          +     1.05400168422125 * GRP_RMntFrq2  +    -0.41630002795032 *
363480    +        GRP_RMntFrq3  +     0.32151577305352 * GRP_RMntFrq4
363481    +          +    -0.40892574480582 * GRP_Recency2  +    -0.38760854674907 *
363482    +        GRP_Recency3  +    -1.01062906861757 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.19598236721657 * GRP_AcceptedCmp52 + 
0.89556920543007 * GRP_Frq2 + -1.28633632438875 * GRP_Frq3 + 1.09957277812081 * GRP_Frq4 + 
1.66129248688789 * GRP_Income2 + -0.02208859809261 * GRP_Income3 + 0.13742442233856 * 
GRP_Income4 + -0.8762617114278 * GRP_Mnt2 + 0.14483268386758 * GRP_Mnt3 + 1.46115917633769 * 
GRP_Mnt4 + -0.6421408902491 * GRP_MntFishProducts2 + 0.1128138472044 * GRP_MntFishProducts3 + 
1.21562636748698 * GRP_MntFishProducts4 + 0.97422300880066 * GRP_MntGoldProds2 + 
-0.78007036389535 * GRP_MntGoldProds3 + -0.13814365615145 * GRP_MntGoldProds4 + 
1.35693955555286 * GRP_MntMeatProducts2 + -0.27598973191035 * GRP_MntMeatProducts3 + 
0.24526165671667 * GRP_MntMeatProducts4 + -2.07253692193163 * GRP_MntWines2 + 
-0.82406684176795 * GRP_MntWines3 + 1.33606527822464 * GRP_MntWines4 + -1.54679770016919 * 
GRP_NumCatalogPurchases3 + -2.28037541698712 * GRP_NumCatalogPurchases4 + 0.40979012613952 * 
GRP_NumDistPurchases2 + 0.01840169060266 * GRP_NumDistPurchases3 + 0.45490355508206 * 
GRP_NumDistPurchases4 + -2.5216795172343 * GRP_NumWebPurchases2 + -1.84801006282457 * 
GRP_NumWebPurchases3 + -1.97644985842889 * GRP_NumWebPurchases4 + 1.42008839453911 * 
GRP_RFMstat2 + -1.47553685202484 * GRP_RFMstat3 + 0.87098855427631 * GRP_RFMstat4 + 
1.05400168422125 * GRP_RMntFrq2 + -0.41630002795032 * GRP_RMntFrq3 + 0.32151577305352 * 
GRP_RMntFrq4 + -0.40892574480582 * GRP_Recency2 + -0.38760854674907 * GRP_Recency3 + 
-1.01062906861757 * GRP_Recency4 ;
363483    +   H1x1_2  = H1x1_2  +    -0.22087092765683 * GRP_AcceptedCmp52
363484    +          +     0.86410922322484 * GRP_Frq2  +     1.63807214492524 * GRP_Frq3
363485    +          +    -1.25641751320277 * GRP_Frq4  +    -2.06319605492297 *
363486    +        GRP_Income2  +    -0.19570512199776 * GRP_Income3
363487    +          +    -1.02783445665559 * GRP_Income4  +     0.15804947667697 *
363488    +        GRP_Mnt2  +    -1.89927129454089 * GRP_Mnt3  +    -2.03683593435912 *
363489    +        GRP_Mnt4  +    -1.52161150732597 * GRP_MntFishProducts2
363490    +          +     1.31452667544583 * GRP_MntFishProducts3
363491    +          +     -1.7257971559668 * GRP_MntFishProducts4
363492    +          +     2.35872511454228 * GRP_MntGoldProds2
363493    +          +    -2.18519280701813 * GRP_MntGoldProds3
363494    +          +     2.11958828863486 * GRP_MntGoldProds4
363495    +          +     0.96289877666679 * GRP_MntMeatProducts2
363496    +          +     0.23432155256273 * GRP_MntMeatProducts3
363497    +          +     1.73039772995976 * GRP_MntMeatProducts4
363498    +          +    -0.42501510787424 * GRP_MntWines2  +    -1.52486822377888 *
363499    +        GRP_MntWines3  +      1.6227654564975 * GRP_MntWines4
363500    +          +    -1.89995561867666 * GRP_NumCatalogPurchases3
363501    +          +     0.67482053398184 * GRP_NumCatalogPurchases4
363502    +          +     0.66331524792021 * GRP_NumDistPurchases2
363503    +          +    -3.51633711874744 * GRP_NumDistPurchases3
363504    +          +    -2.78868266001809 * GRP_NumDistPurchases4
363505    +          +     0.48911700629841 * GRP_NumWebPurchases2
363506    +          +    -2.04233990579849 * GRP_NumWebPurchases3
363507    +          +     0.61493436153841 * GRP_NumWebPurchases4
363508    +          +    -0.04998034532745 * GRP_RFMstat2  +     0.70675221202708 *
363509    +        GRP_RFMstat3  +      1.1835788842441 * GRP_RFMstat4
363510    +          +    -1.59293821911804 * GRP_RMntFrq2  +    -2.00649847294694 *
363511    +        GRP_RMntFrq3  +     1.51867097620424 * GRP_RMntFrq4
363512    +          +     0.80524037758297 * GRP_Recency2  +     0.46947615167497 *
363513    +        GRP_Recency3  +    -0.02984024000355 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22087092765683 * GRP_AcceptedCmp52 + 
0.86410922322484 * GRP_Frq2 + 1.63807214492524 * GRP_Frq3 + -1.25641751320277 * GRP_Frq4 + 
-2.06319605492297 * GRP_Income2 + -0.19570512199776 * GRP_Income3 + -1.02783445665559 * 
GRP_Income4 + 0.15804947667697 * GRP_Mnt2 + -1.89927129454089 * GRP_Mnt3 + -2.03683593435912 * 
GRP_Mnt4 + -1.52161150732597 * GRP_MntFishProducts2 + 1.31452667544583 * GRP_MntFishProducts3 
+ -1.7257971559668 * GRP_MntFishProducts4 + 2.35872511454228 * GRP_MntGoldProds2 + 
-2.18519280701813 * GRP_MntGoldProds3 + 2.11958828863486 * GRP_MntGoldProds4 + 
0.96289877666679 * GRP_MntMeatProducts2 + 0.23432155256273 * GRP_MntMeatProducts3 + 
1.73039772995976 * GRP_MntMeatProducts4 + -0.42501510787424 * GRP_MntWines2 + 
-1.52486822377888 * GRP_MntWines3 + 1.6227654564975 * GRP_MntWines4 + -1.89995561867666 * 
GRP_NumCatalogPurchases3 + 0.67482053398184 * GRP_NumCatalogPurchases4 + 0.66331524792021 * 
GRP_NumDistPurchases2 + -3.51633711874744 * GRP_NumDistPurchases3 + -2.78868266001809 * 
GRP_NumDistPurchases4 + 0.48911700629841 * GRP_NumWebPurchases2 + -2.04233990579849 * 
GRP_NumWebPurchases3 + 0.61493436153841 * GRP_NumWebPurchases4 + -0.04998034532745 * 
GRP_RFMstat2 + 0.70675221202708 * GRP_RFMstat3 + 1.1835788842441 * GRP_RFMstat4 + 
-1.59293821911804 * GRP_RMntFrq2 + -2.00649847294694 * GRP_RMntFrq3 + 1.51867097620424 * 
GRP_RMntFrq4 + 0.80524037758297 * GRP_Recency2 + 0.46947615167497 * GRP_Recency3 + 
-0.02984024000355 * GRP_Recency4 ;
363514    +   H1x1_3  = H1x1_3  +     0.63511799928422 * GRP_AcceptedCmp52
363515    +          +      -2.298606068807 * GRP_Frq2  +     3.16864487857804 * GRP_Frq3
363516    +          +     3.03519261062887 * GRP_Frq4  +    -1.85162718986086 *
363517    +        GRP_Income2  +     0.41526825199627 * GRP_Income3
363518    +          +    -0.80593312350255 * GRP_Income4  +     1.66777476102634 *
363519    +        GRP_Mnt2  +     2.08848488119875 * GRP_Mnt3  +     0.65051244257971 *
363520    +        GRP_Mnt4  +     0.71847095407349 * GRP_MntFishProducts2
363521    +          +    -1.10257815890641 * GRP_MntFishProducts3
363522    +          +     2.17792588671141 * GRP_MntFishProducts4
363523    +          +     2.50223152259939 * GRP_MntGoldProds2
363524    +          +    -1.72156085851201 * GRP_MntGoldProds3
363525    +          +    -3.91709431063923 * GRP_MntGoldProds4
363526    +          +     -1.0779971381482 * GRP_MntMeatProducts2
363527    +          +    -1.47970774146601 * GRP_MntMeatProducts3
363528    +          +     1.27022891132009 * GRP_MntMeatProducts4
363529    +          +     0.48048593774493 * GRP_MntWines2  +     2.90436921022208 *
363530    +        GRP_MntWines3  +    -3.52082955604777 * GRP_MntWines4
363531    +          +    -0.04446993636304 * GRP_NumCatalogPurchases3
363532    +          +     0.63669224655802 * GRP_NumCatalogPurchases4
363533    +          +    -3.14645279004965 * GRP_NumDistPurchases2
363534    +          +    -2.33190469508132 * GRP_NumDistPurchases3
363535    +          +    -0.62827451633899 * GRP_NumDistPurchases4
363536    +          +    -1.01851610127648 * GRP_NumWebPurchases2
363537    +          +    -1.48934390537683 * GRP_NumWebPurchases3
363538    +          +    -0.53741548796796 * GRP_NumWebPurchases4
363539    +          +    -0.75492549718573 * GRP_RFMstat2  +     -0.7937620334965 *
363540    +        GRP_RFMstat3  +     1.16856250505521 * GRP_RFMstat4
363541    +          +     2.45700945744116 * GRP_RMntFrq2  +      2.6192187092108 *
363542    +        GRP_RMntFrq3  +    -0.99545519667238 * GRP_RMntFrq4
363543    +          +     -0.8178492657671 * GRP_Recency2  +     0.13605490470692 *
363544    +        GRP_Recency3  +    -0.93901422840588 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.63511799928422 * GRP_AcceptedCmp52 + -2.298606068807 
* GRP_Frq2 + 3.16864487857804 * GRP_Frq3 + 3.03519261062887 * GRP_Frq4 + -1.85162718986086 * 
GRP_Income2 + 0.41526825199627 * GRP_Income3 + -0.80593312350255 * GRP_Income4 + 
1.66777476102634 * GRP_Mnt2 + 2.08848488119875 * GRP_Mnt3 + 0.65051244257971 * GRP_Mnt4 + 
0.71847095407349 * GRP_MntFishProducts2 + -1.10257815890641 * GRP_MntFishProducts3 + 
2.17792588671141 * GRP_MntFishProducts4 + 2.50223152259939 * GRP_MntGoldProds2 + 
-1.72156085851201 * GRP_MntGoldProds3 + -3.91709431063923 * GRP_MntGoldProds4 + 
-1.0779971381482 * GRP_MntMeatProducts2 + -1.47970774146601 * GRP_MntMeatProducts3 + 
1.27022891132009 * GRP_MntMeatProducts4 + 0.48048593774493 * GRP_MntWines2 + 2.90436921022208 
* GRP_MntWines3 + -3.52082955604777 * GRP_MntWines4 + -0.04446993636304 * 
GRP_NumCatalogPurchases3 + 0.63669224655802 * GRP_NumCatalogPurchases4 + -3.14645279004965 * 
GRP_NumDistPurchases2 + -2.33190469508132 * GRP_NumDistPurchases3 + -0.62827451633899 * 
GRP_NumDistPurchases4 + -1.01851610127648 * GRP_NumWebPurchases2 + -1.48934390537683 * 
GRP_NumWebPurchases3 + -0.53741548796796 * GRP_NumWebPurchases4 + -0.75492549718573 * 
GRP_RFMstat2 + -0.7937620334965 * GRP_RFMstat3 + 1.16856250505521 * GRP_RFMstat4 + 
2.45700945744116 * GRP_RMntFrq2 + 2.6192187092108 * GRP_RMntFrq3 + -0.99545519667238 * 
GRP_RMntFrq4 + -0.8178492657671 * GRP_Recency2 + 0.13605490470692 * GRP_Recency3 + 
-0.93901422840588 * GRP_Recency4 ;
363545    +   H1x1_1  =      1.8884999595718 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.8884999595718 + H1x1_1 ;
363546    +   H1x1_2  =    -0.51989390923325 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.51989390923325 + H1x1_2 ;
363547    +   H1x1_3  =     2.10213347257206 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.10213347257206 + H1x1_3 ;
363548    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
363549    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
363550    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
363551    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
363552    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
363553    +END;
MPRINT(EM_DIAGRAM):   END;
363554    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
363555    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
363556    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
363557    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
363558    +END;
MPRINT(EM_DIAGRAM):   END;
363559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363560    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
363561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363562    +
363563    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
363564    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
363565    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
363566    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
363567    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
363568    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363569    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
363570    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
363571    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
363572    +end;
MPRINT(EM_DIAGRAM):   end;
363573    +else do;
MPRINT(EM_DIAGRAM):   else do;
363574    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
363575    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
363576    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
363577    +   end;
MPRINT(EM_DIAGRAM):   end;
363578    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
363579    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
363580    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
363581    +   end;
MPRINT(EM_DIAGRAM):   end;
363582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363583    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
363584    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
363585    +   end;
MPRINT(EM_DIAGRAM):   end;
363586    +end;
MPRINT(EM_DIAGRAM):   end;
363587    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
363588    +   P_DepVar1  =    -2.62984121710329 * H1x1_1  +    -2.65642038715706 * H1x1_2
363589    +          +    -4.24846513249504 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.62984121710329 * H1x1_1 + -2.65642038715706 * H1x1_2 + 
-4.24846513249504 * H1x1_3 ;
363590    +   P_DepVar1  =     3.19982150134729 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.19982150134729 + P_DepVar1 ;
363591    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
363592    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
363593    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
363594    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
363595    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
363596    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
363597    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
363598    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
363599    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
363600    +END;
MPRINT(EM_DIAGRAM):   END;
363601    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
363602    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
363603    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
363604    +END;
MPRINT(EM_DIAGRAM):   END;
363605    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
363606    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
363607    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
363608    +END;
MPRINT(EM_DIAGRAM):   END;
363609    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
363610    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
363611    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
363612    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
363613    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
363614    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
363615    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
363616    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363617    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
363618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
363619    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
363620    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
363621    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
363622    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
363623    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
363624    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
363625    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
363626    +END;
MPRINT(EM_DIAGRAM):   END;
363627    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
363628    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
363629    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
363630    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
363631    +* Renaming variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural25;
363632    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363633    +* Renaming Posterior variables for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural25;
363634    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363635    +drop AutoNeural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar1;
363636    +AutoNeural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar1 = P_DepVar1;
363637    +drop AutoNeural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_P_DepVar0;
363638    +AutoNeural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural25_P_DepVar0 = P_DepVar0;
363639    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363640    +* Renaming _WARN_ variable for AutoNeural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural25;
363641    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363642    +length AutoNeural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural25_WARN_ $4;
363643    +drop AutoNeural25_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural25_WARN_;
363644    +AutoNeural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural25_WARN_ = _WARN_;
363645    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363646    +* Ensmbl48: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Scoring Code of model 7 of 7;
363647    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363648    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363649    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
363650    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
363651    +* NODE: AutoNeural23;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural23;
363652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
363653    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
363654    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
363655    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
363656    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
363657    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
363658    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
363659    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
363660    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
363661    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
363662    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
363663    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
363664    +LENGTH _WARN_ $4
363665    +      F_DepVar  $ 12
363666    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
363667    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
363668    +
363669    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
363670    +
363671    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
363672    +
363673    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
363674    +
363675    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
363676    +
363677    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
363678    +
363679    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
363680    +
363681    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
363682    +
363683    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
363684    +
363685    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
363686    +
363687    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
363688    +
363689    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
363690    +
363691    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
363692    +
363693    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
363694    +
363695    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
363696    +
363697    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
363698    +
363699    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
363700    +
363701    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
363702    +
363703    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
363704    +
363705    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
363706    +
363707    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
363708    +
363709    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
363710    +
363711    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
363712    +
363713    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
363714    +
363715    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
363716    +
363717    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
363718    +
363719    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
363720    +
363721    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
363722    +
363723    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
363724    +
363725    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
363726    +
363727    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
363728    +
363729    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
363730    +
363731    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
363732    +
363733    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
363734    +
363735    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
363736    +
363737    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
363738    +
363739    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
363740    +
363741    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
363742    +
363743    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
363744    +
363745    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
363746    +
363747    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
363748    +
363749    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
363750    +
363751    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
363752    +
363753    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
363754    +
363755    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
363756    +
363757    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
363758    +
363759    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
363760    +
363761    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
363762    +
363763    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
363764    +
363765    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
363766    +
363767    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
363768    +
363769    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
363770    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
363771    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
363772    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
363773    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363774    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363775    +end;
MPRINT(EM_DIAGRAM):   end;
363776    +else do;
MPRINT(EM_DIAGRAM):   else do;
363777    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363778    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
363779    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363780    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
363781    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
363782    +   end;
MPRINT(EM_DIAGRAM):   end;
363783    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
363784    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
363785    +   end;
MPRINT(EM_DIAGRAM):   end;
363786    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363787    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
363788    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363789    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363790    +   end;
MPRINT(EM_DIAGRAM):   end;
363791    +end;
MPRINT(EM_DIAGRAM):   end;
363792    +
363793    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
363794    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
363795    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
363796    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
363797    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
363798    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
363799    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363800    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363801    +end;
MPRINT(EM_DIAGRAM):   end;
363802    +else do;
MPRINT(EM_DIAGRAM):   else do;
363803    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363804    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
363805    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363806    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
363807    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
363808    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
363809    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
363810    +   end;
MPRINT(EM_DIAGRAM):   end;
363811    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
363812    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
363813    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
363814    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
363815    +   end;
MPRINT(EM_DIAGRAM):   end;
363816    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363817    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
363818    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
363819    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
363820    +   end;
MPRINT(EM_DIAGRAM):   end;
363821    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363822    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
363823    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
363824    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
363825    +   end;
MPRINT(EM_DIAGRAM):   end;
363826    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363827    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
363828    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
363829    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
363830    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363831    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363832    +   end;
MPRINT(EM_DIAGRAM):   end;
363833    +end;
MPRINT(EM_DIAGRAM):   end;
363834    +
363835    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
363836    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
363837    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
363838    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
363839    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
363840    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
363841    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363842    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363843    +end;
MPRINT(EM_DIAGRAM):   end;
363844    +else do;
MPRINT(EM_DIAGRAM):   else do;
363845    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363846    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
363847    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363848    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
363849    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
363850    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
363851    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
363852    +   end;
MPRINT(EM_DIAGRAM):   end;
363853    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363854    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
363855    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
363856    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
363857    +   end;
MPRINT(EM_DIAGRAM):   end;
363858    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
363859    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
363860    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
363861    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
363862    +   end;
MPRINT(EM_DIAGRAM):   end;
363863    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363864    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
363865    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
363866    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
363867    +   end;
MPRINT(EM_DIAGRAM):   end;
363868    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363869    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
363870    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
363871    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
363872    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363873    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363874    +   end;
MPRINT(EM_DIAGRAM):   end;
363875    +end;
MPRINT(EM_DIAGRAM):   end;
363876    +
363877    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
363878    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
363879    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
363880    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
363881    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
363882    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
363883    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363884    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363885    +end;
MPRINT(EM_DIAGRAM):   end;
363886    +else do;
MPRINT(EM_DIAGRAM):   else do;
363887    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363888    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
363889    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363890    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363891    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
363892    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
363893    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
363894    +   end;
MPRINT(EM_DIAGRAM):   end;
363895    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363896    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
363897    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
363898    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
363899    +   end;
MPRINT(EM_DIAGRAM):   end;
363900    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363901    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
363902    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
363903    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
363904    +   end;
MPRINT(EM_DIAGRAM):   end;
363905    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363906    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
363907    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
363908    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
363909    +   end;
MPRINT(EM_DIAGRAM):   end;
363910    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363911    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
363912    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
363913    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
363914    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363915    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363916    +   end;
MPRINT(EM_DIAGRAM):   end;
363917    +end;
MPRINT(EM_DIAGRAM):   end;
363918    +
363919    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
363920    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
363921    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
363922    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
363923    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
363924    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
363925    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363926    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363927    +end;
MPRINT(EM_DIAGRAM):   end;
363928    +else do;
MPRINT(EM_DIAGRAM):   else do;
363929    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363930    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
363931    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363932    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363933    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
363934    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
363935    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
363936    +   end;
MPRINT(EM_DIAGRAM):   end;
363937    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363938    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
363939    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
363940    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
363941    +   end;
MPRINT(EM_DIAGRAM):   end;
363942    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363943    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
363944    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
363945    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
363946    +   end;
MPRINT(EM_DIAGRAM):   end;
363947    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363948    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
363949    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
363950    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
363951    +   end;
MPRINT(EM_DIAGRAM):   end;
363952    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363953    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
363954    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
363955    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
363956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363958    +   end;
MPRINT(EM_DIAGRAM):   end;
363959    +end;
MPRINT(EM_DIAGRAM):   end;
363960    +
363961    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
363962    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
363963    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
363964    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
363965    +   GRP_MntGoldProds3 = .;
The SAS System

MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
363966    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
363967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
363968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
363969    +end;
MPRINT(EM_DIAGRAM):   end;
363970    +else do;
MPRINT(EM_DIAGRAM):   else do;
363971    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
363972    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
363973    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
363974    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
363975    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
363976    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
363977    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
363978    +   end;
MPRINT(EM_DIAGRAM):   end;
363979    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
363980    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
363981    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
363982    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
363983    +   end;
MPRINT(EM_DIAGRAM):   end;
363984    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
363985    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
363986    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
363987    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
363988    +   end;
MPRINT(EM_DIAGRAM):   end;
363989    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
363990    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
363991    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
363992    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
363993    +   end;
MPRINT(EM_DIAGRAM):   end;
363994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
363995    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
363996    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
363997    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
363998    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
363999    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364000    +   end;
MPRINT(EM_DIAGRAM):   end;
364001    +end;
MPRINT(EM_DIAGRAM):   end;
364002    +
364003    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
364004    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
364005    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
364006    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
364007    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
364008    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
364009    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364010    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364011    +end;
MPRINT(EM_DIAGRAM):   end;
364012    +else do;
MPRINT(EM_DIAGRAM):   else do;
364013    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364014    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
364015    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364016    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
364017    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
364018    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
364019    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
364020    +   end;
MPRINT(EM_DIAGRAM):   end;
364021    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364022    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
364023    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
364024    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
364025    +   end;
MPRINT(EM_DIAGRAM):   end;
364026    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364027    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
364028    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
364029    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
364030    +   end;
MPRINT(EM_DIAGRAM):   end;
364031    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364032    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
364033    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
364034    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
364035    +   end;
MPRINT(EM_DIAGRAM):   end;
364036    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364037    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
364038    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
364039    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
364040    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364041    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364042    +   end;
MPRINT(EM_DIAGRAM):   end;
364043    +end;
MPRINT(EM_DIAGRAM):   end;
364044    +
364045    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
364046    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
364047    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
364048    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
364049    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
364050    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
364051    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364052    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364053    +end;
MPRINT(EM_DIAGRAM):   end;
364054    +else do;
MPRINT(EM_DIAGRAM):   else do;
364055    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364056    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
364057    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364058    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
364059    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
364060    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
364061    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
364062    +   end;
MPRINT(EM_DIAGRAM):   end;
364063    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364064    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
364065    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
364066    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
364067    +   end;
MPRINT(EM_DIAGRAM):   end;
364068    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364069    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
364070    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
364071    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
364072    +   end;
MPRINT(EM_DIAGRAM):   end;
364073    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364074    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
364075    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
364076    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
364077    +   end;
MPRINT(EM_DIAGRAM):   end;
364078    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364079    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
364080    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
364081    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
364082    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364083    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364084    +   end;
MPRINT(EM_DIAGRAM):   end;
364085    +end;
MPRINT(EM_DIAGRAM):   end;
364086    +
364087    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
364088    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
364089    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
364090    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
364091    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
364092    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364094    +end;
MPRINT(EM_DIAGRAM):   end;
364095    +else do;
MPRINT(EM_DIAGRAM):   else do;
364096    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364097    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
364098    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364099    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
364100    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
364101    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
364102    +   end;
MPRINT(EM_DIAGRAM):   end;
364103    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364104    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
364105    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
364106    +   end;
MPRINT(EM_DIAGRAM):   end;
364107    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364108    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
364109    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
364110    +   end;
MPRINT(EM_DIAGRAM):   end;
364111    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364112    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
364113    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
364114    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364115    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364116    +   end;
MPRINT(EM_DIAGRAM):   end;
364117    +end;
MPRINT(EM_DIAGRAM):   end;
364118    +
364119    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
364120    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
364121    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
364122    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
364123    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
364124    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
364125    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364126    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364127    +end;
MPRINT(EM_DIAGRAM):   end;
364128    +else do;
MPRINT(EM_DIAGRAM):   else do;
364129    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364130    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
364131    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364132    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
364133    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
364134    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
364135    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
364136    +   end;
MPRINT(EM_DIAGRAM):   end;
364137    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364138    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
364139    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
364140    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
364141    +   end;
MPRINT(EM_DIAGRAM):   end;
364142    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364143    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
364144    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
364145    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
364146    +   end;
MPRINT(EM_DIAGRAM):   end;
364147    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
364148    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
364149    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
364150    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
364151    +   end;
MPRINT(EM_DIAGRAM):   end;
364152    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364153    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
364154    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
364155    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
364156    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364157    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364158    +   end;
MPRINT(EM_DIAGRAM):   end;
364159    +end;
MPRINT(EM_DIAGRAM):   end;
364160    +
364161    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
364162    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
364163    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
364164    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
364165    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
364166    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
364167    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364168    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364169    +end;
MPRINT(EM_DIAGRAM):   end;
364170    +else do;
MPRINT(EM_DIAGRAM):   else do;
364171    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364172    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
364173    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364174    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
364175    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
364176    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
364177    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
364178    +   end;
MPRINT(EM_DIAGRAM):   end;
364179    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364180    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
364181    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
364182    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
364183    +   end;
MPRINT(EM_DIAGRAM):   end;
364184    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364185    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
364186    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
364187    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
364188    +   end;
MPRINT(EM_DIAGRAM):   end;
364189    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364190    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
364191    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
364192    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
364193    +   end;
MPRINT(EM_DIAGRAM):   end;
364194    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364195    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
364196    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
364197    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
364198    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364199    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364200    +   end;
MPRINT(EM_DIAGRAM):   end;
364201    +end;
MPRINT(EM_DIAGRAM):   end;
364202    +
364203    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
364204    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
364205    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
364206    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
364207    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
364208    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
364209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364211    +end;
MPRINT(EM_DIAGRAM):   end;
364212    +else do;
MPRINT(EM_DIAGRAM):   else do;
364213    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364214    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
364215    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364216    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
364217    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
364218    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
364219    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
364220    +   end;
MPRINT(EM_DIAGRAM):   end;
364221    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
364222    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
364223    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
364224    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
364225    +   end;
MPRINT(EM_DIAGRAM):   end;
364226    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364227    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
364228    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
364229    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
364230    +   end;
MPRINT(EM_DIAGRAM):   end;
364231    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364232    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
364233    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
364234    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
364235    +   end;
MPRINT(EM_DIAGRAM):   end;
364236    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364237    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
364238    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
364239    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
364240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364242    +   end;
MPRINT(EM_DIAGRAM):   end;
364243    +end;
MPRINT(EM_DIAGRAM):   end;
364244    +
364245    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
364246    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
364247    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
364248    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
364249    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
364250    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
364251    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364252    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364253    +end;
MPRINT(EM_DIAGRAM):   end;
364254    +else do;
MPRINT(EM_DIAGRAM):   else do;
364255    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364256    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
364257    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364258    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
364259    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
364260    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
364261    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
364262    +   end;
MPRINT(EM_DIAGRAM):   end;
364263    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364264    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
364265    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
364266    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
364267    +   end;
MPRINT(EM_DIAGRAM):   end;
364268    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364269    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
364270    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
364271    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
364272    +   end;
MPRINT(EM_DIAGRAM):   end;
364273    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364274    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
364275    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
364276    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
364277    +   end;
MPRINT(EM_DIAGRAM):   end;
364278    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364279    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
364280    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
364281    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
364282    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364283    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364284    +   end;
MPRINT(EM_DIAGRAM):   end;
364285    +end;
MPRINT(EM_DIAGRAM):   end;
364286    +
364287    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
364288    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
364289    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
364290    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
364291    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
364292    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
364293    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364294    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364295    +end;
MPRINT(EM_DIAGRAM):   end;
364296    +else do;
MPRINT(EM_DIAGRAM):   else do;
364297    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364298    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
364299    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364300    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
364301    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
364302    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
364303    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
364304    +   end;
MPRINT(EM_DIAGRAM):   end;
364305    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364306    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
364307    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
364308    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
364309    +   end;
MPRINT(EM_DIAGRAM):   end;
364310    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
364311    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
364312    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
364313    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
364314    +   end;
MPRINT(EM_DIAGRAM):   end;
364315    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364316    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
364317    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
364318    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
364319    +   end;
MPRINT(EM_DIAGRAM):   end;
364320    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364321    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
364322    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
364323    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
364324    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364325    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364326    +   end;
MPRINT(EM_DIAGRAM):   end;
364327    +end;
MPRINT(EM_DIAGRAM):   end;
364328    +
364329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364330    +*** Checking missing input Interval
364331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
364332    +
364333    +IF NMISS(
364334    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
364335    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
364336    +
364337    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364338    +END;
MPRINT(EM_DIAGRAM):   END;
364339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364340    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
364341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364342    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
364343    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
364344    +END;
MPRINT(EM_DIAGRAM):   END;
364345    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
364346    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
364347    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
364348    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
364349    +END;
MPRINT(EM_DIAGRAM):   END;
364350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364351    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
364352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364354    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
364355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364356    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
364357    +   H1x1_1  =     1.95381025032439 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.95381025032439 * S_Year_Birth ;
364358    +   H1x1_1  = H1x1_1  +     1.14916728016472 * GRP_AcceptedCmp52
364359    +          +    -5.96780006482557 * GRP_Frq2  +     4.49682337069914 * GRP_Frq3
364360    +          +    -1.00084168387427 * GRP_Frq4  +    -4.56848186498493 *
364361    +        GRP_Income2  +    -6.08290839556081 * GRP_Income3
364362    +          +        -1.9523756063 * GRP_Income4  +     2.25453632912582 *
364363    +        GRP_Mnt2  +     0.79226665009331 * GRP_Mnt3  +     4.62693684609359 *
364364    +        GRP_Mnt4  +     4.80720961994346 * GRP_MntFishProducts2
364365    +          +     5.98129040124117 * GRP_MntFishProducts3
364366    +          +    -7.67060692838644 * GRP_MntFishProducts4
364367    +          +    -2.17396725012949 * GRP_MntGoldProds2
364368    +          +     0.85597521158935 * GRP_MntGoldProds3
364369    +          +      2.1173332536462 * GRP_MntGoldProds4
364370    +          +     7.10141475402441 * GRP_MntMeatProducts2
364371    +          +     -4.9090455486088 * GRP_MntMeatProducts3
364372    +          +     2.83142638000959 * GRP_MntMeatProducts4
364373    +          +     3.69328975873193 * GRP_MntWines2  +      2.1695090110711 *
364374    +        GRP_MntWines3  +    -5.30256986722649 * GRP_MntWines4
364375    +          +     0.29736312872725 * GRP_NumCatalogPurchases3
364376    +          +     4.11382044060245 * GRP_NumCatalogPurchases4
364377    +          +    -6.25823764999595 * GRP_NumDistPurchases2
364378    +          +    -0.67901515881598 * GRP_NumDistPurchases3
364379    +          +     7.85932256128371 * GRP_NumDistPurchases4
364380    +          +     3.53767704202566 * GRP_NumWebPurchases2
364381    +          +    -6.48408913826017 * GRP_NumWebPurchases3
364382    +          +     4.25220646709256 * GRP_NumWebPurchases4
364383    +          +     1.52518398177008 * GRP_RFMstat2  +    -8.45537513058681 *
364384    +        GRP_RFMstat3  +      1.7628190243685 * GRP_RFMstat4
364385    +          +    -2.26342656707522 * GRP_RMntFrq2  +     0.15141321171269 *
364386    +        GRP_RMntFrq3  +     4.77478604851781 * GRP_RMntFrq4
364387    +          +     7.94049700164507 * GRP_Recency2  +     6.59302318386937 *
364388    +        GRP_Recency3  +    -1.94583979914797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.14916728016472 * GRP_AcceptedCmp52 + 
-5.96780006482557 * GRP_Frq2 + 4.49682337069914 * GRP_Frq3 + -1.00084168387427 * GRP_Frq4 + 
-4.56848186498493 * GRP_Income2 + -6.08290839556081 * GRP_Income3 + -1.9523756063 * 
GRP_Income4 + 2.25453632912582 * GRP_Mnt2 + 0.79226665009331 * GRP_Mnt3 + 4.62693684609359 * 
GRP_Mnt4 + 4.80720961994346 * GRP_MntFishProducts2 + 5.98129040124117 * GRP_MntFishProducts3 + 
-7.67060692838644 * GRP_MntFishProducts4 + -2.17396725012949 * GRP_MntGoldProds2 + 
0.85597521158935 * GRP_MntGoldProds3 + 2.1173332536462 * GRP_MntGoldProds4 + 7.10141475402441 
* GRP_MntMeatProducts2 + -4.9090455486088 * GRP_MntMeatProducts3 + 2.83142638000959 * 
GRP_MntMeatProducts4 + 3.69328975873193 * GRP_MntWines2 + 2.1695090110711 * GRP_MntWines3 + 
-5.30256986722649 * GRP_MntWines4 + 0.29736312872725 * GRP_NumCatalogPurchases3 + 
4.11382044060245 * GRP_NumCatalogPurchases4 + -6.25823764999595 * GRP_NumDistPurchases2 + 
-0.67901515881598 * GRP_NumDistPurchases3 + 7.85932256128371 * GRP_NumDistPurchases4 + 
3.53767704202566 * GRP_NumWebPurchases2 + -6.48408913826017 * GRP_NumWebPurchases3 + 
4.25220646709256 * GRP_NumWebPurchases4 + 1.52518398177008 * GRP_RFMstat2 + -8.45537513058681 
* GRP_RFMstat3 + 1.7628190243685 * GRP_RFMstat4 + -2.26342656707522 * GRP_RMntFrq2 + 
0.15141321171269 * GRP_RMntFrq3 + 4.77478604851781 * GRP_RMntFrq4 + 7.94049700164507 * 
GRP_Recency2 + 6.59302318386937 * GRP_Recency3 + -1.94583979914797 * GRP_Recency4 ;
364389    +   H1x1_1  =     0.17797650232548 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.17797650232548 + H1x1_1 ;
364390    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
364391    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
364392    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
364393    +END;
MPRINT(EM_DIAGRAM):   END;
364394    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
364395    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
364396    +END;
MPRINT(EM_DIAGRAM):   END;
364397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364398    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
364399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364400    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
364401    +   H1x2_1  =     -0.4803749248586 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.4803749248586 * S_Year_Birth ;
364402    +   H1x2_1  = H1x2_1  +      -2.709334396045 * GRP_AcceptedCmp52
364403    +          +    -0.72996008627086 * GRP_Frq2  +     1.18917091356785 * GRP_Frq3
364404    +          +    -0.84357839249772 * GRP_Frq4  +    -1.34210240870748 *
364405    +        GRP_Income2  +    -2.49305097670051 * GRP_Income3
364406    +          +     0.47903160451188 * GRP_Income4  +    -0.21389782834045 *
364407    +        GRP_Mnt2  +    -2.96981107340783 * GRP_Mnt3  +     0.25136923781697 *
364408    +        GRP_Mnt4  +    -1.77015468345115 * GRP_MntFishProducts2
364409    +          +    -2.01927730228967 * GRP_MntFishProducts3
364410    +          +    -1.75480602447555 * GRP_MntFishProducts4
364411    +          +     0.42274303160257 * GRP_MntGoldProds2
364412    +          +     1.56137884413542 * GRP_MntGoldProds3
364413    +          +     0.84731732911707 * GRP_MntGoldProds4
364414    +          +     0.81025189254107 * GRP_MntMeatProducts2
364415    +          +     1.96319534444801 * GRP_MntMeatProducts3
364416    +          +     0.96127142865074 * GRP_MntMeatProducts4
364417    +          +    -0.93806166213097 * GRP_MntWines2  +     0.05312243237158 *
364418    +        GRP_MntWines3  +     0.84972126175769 * GRP_MntWines4
364419    +          +    -1.06178615974842 * GRP_NumCatalogPurchases3
364420    +          +     0.40580399494511 * GRP_NumCatalogPurchases4
364421    +          +      0.0678513615184 * GRP_NumDistPurchases2
364422    +          +     0.02437151967393 * GRP_NumDistPurchases3
364423    +          +     0.69402606373719 * GRP_NumDistPurchases4
364424    +          +       0.411121097653 * GRP_NumWebPurchases2
364425    +          +     0.82481677575773 * GRP_NumWebPurchases3
364426    +          +     1.41988866790215 * GRP_NumWebPurchases4
364427    +          +     0.85026610914091 * GRP_RFMstat2  +    -2.24707947369438 *
364428    +        GRP_RFMstat3  +     -1.1790000875996 * GRP_RFMstat4
364429    +          +     0.87106199482984 * GRP_RMntFrq2  +    -0.83130886232946 *
364430    +        GRP_RMntFrq3  +    -0.14994298443333 * GRP_RMntFrq4
364431    +          +      0.4148069318585 * GRP_Recency2  +     1.81524210481359 *
364432    +        GRP_Recency3  +    -0.14279288009067 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.709334396045 * GRP_AcceptedCmp52 + 
-0.72996008627086 * GRP_Frq2 + 1.18917091356785 * GRP_Frq3 + -0.84357839249772 * GRP_Frq4 + 
-1.34210240870748 * GRP_Income2 + -2.49305097670051 * GRP_Income3 + 0.47903160451188 * 
GRP_Income4 + -0.21389782834045 * GRP_Mnt2 + -2.96981107340783 * GRP_Mnt3 + 0.25136923781697 * 
GRP_Mnt4 + -1.77015468345115 * GRP_MntFishProducts2 + -2.01927730228967 * GRP_MntFishProducts3 
+ -1.75480602447555 * GRP_MntFishProducts4 + 0.42274303160257 * GRP_MntGoldProds2 + 
1.56137884413542 * GRP_MntGoldProds3 + 0.84731732911707 * GRP_MntGoldProds4 + 0.81025189254107 
* GRP_MntMeatProducts2 + 1.96319534444801 * GRP_MntMeatProducts3 + 0.96127142865074 * 
GRP_MntMeatProducts4 + -0.93806166213097 * GRP_MntWines2 + 0.05312243237158 * GRP_MntWines3 + 
0.84972126175769 * GRP_MntWines4 + -1.06178615974842 * GRP_NumCatalogPurchases3 + 
0.40580399494511 * GRP_NumCatalogPurchases4 + 0.0678513615184 * GRP_NumDistPurchases2 + 
0.02437151967393 * GRP_NumDistPurchases3 + 0.69402606373719 * GRP_NumDistPurchases4 + 
0.411121097653 * GRP_NumWebPurchases2 + 0.82481677575773 * GRP_NumWebPurchases3 + 
1.41988866790215 * GRP_NumWebPurchases4 + 0.85026610914091 * GRP_RFMstat2 + -2.24707947369438 
* GRP_RFMstat3 + -1.1790000875996 * GRP_RFMstat4 + 0.87106199482984 * GRP_RMntFrq2 + 
-0.83130886232946 * GRP_RMntFrq3 + -0.14994298443333 * GRP_RMntFrq4 + 0.4148069318585 * 
GRP_Recency2 + 1.81524210481359 * GRP_Recency3 + -0.14279288009067 * GRP_Recency4 ;
364433    +   H1x2_1  =    -1.10844381917328 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.10844381917328 + H1x2_1 ;
364434    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
364435    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
364436    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
364437    +END;
MPRINT(EM_DIAGRAM):   END;
364438    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
364439    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
364440    +END;
MPRINT(EM_DIAGRAM):   END;
364441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364442    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
364443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364444    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
364445    +   H2x1_1  =    -4.35637031258639 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -4.35637031258639 * H1x1_1 ;
364446    +   H2x1_1  = H2x1_1  +    -3.33687841316643 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.33687841316643 * H1x2_1 ;
364447    +   H2x1_1  =     3.05963926783565 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.05963926783565 + H2x1_1 ;
364448    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
364449    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
364450    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
364451    +END;
MPRINT(EM_DIAGRAM):   END;
364452    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
364453    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
364454    +END;
MPRINT(EM_DIAGRAM):   END;
364455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364456    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
364457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364458    +
364459    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
364460    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
364461    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
364462    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
364463    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
364464    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364465    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
364466    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
364467    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
364468    +end;
MPRINT(EM_DIAGRAM):   end;
364469    +else do;
MPRINT(EM_DIAGRAM):   else do;
364470    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
364471    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
364472    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
364473    +   end;
MPRINT(EM_DIAGRAM):   end;
364474    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
364475    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
364476    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
364477    +   end;
MPRINT(EM_DIAGRAM):   end;
364478    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364479    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
364480    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
364481    +   end;
MPRINT(EM_DIAGRAM):   end;
364482    +end;
MPRINT(EM_DIAGRAM):   end;
364483    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
364484    +   P_DepVar1  =    -6.02136211154727 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.02136211154727 * H2x1_1 ;
364485    +   P_DepVar1  =     0.37595575621801 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37595575621801 + P_DepVar1 ;
364486    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
364487    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
364488    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
364489    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
364490    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
364491    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
364492    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
364493    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
364494    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
364495    +END;
MPRINT(EM_DIAGRAM):   END;
364496    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
364497    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
364498    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
364499    +END;
MPRINT(EM_DIAGRAM):   END;
364500    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
364501    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
364502    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
364503    +END;
MPRINT(EM_DIAGRAM):   END;
364504    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
364505    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
364506    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
364507    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
364508    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
364509    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
364510    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
364511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364512    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
364513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
364514    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
364515    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
364516    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
364517    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
364518    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
364519    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
364520    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
364521    +END;
MPRINT(EM_DIAGRAM):   END;
364522    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
364523    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
364524    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
364525    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
364526    +* Renaming variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural23;
364527    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364528    +* Renaming Posterior variables for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural23;
364529    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364530    +drop AutoNeural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar1;
364531    +AutoNeural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar1 = P_DepVar1;
364532    +drop AutoNeural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_P_DepVar0;
364533    +AutoNeural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural23_P_DepVar0 = P_DepVar0;
364534    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364535    +* Renaming _WARN_ variable for AutoNeural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural23;
364536    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364537    +length AutoNeural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural23_WARN_ $4;
364538    +drop AutoNeural23_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural23_WARN_;
364539    +AutoNeural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural23_WARN_ = _WARN_;
364540    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364541    +* Ensmbl48: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Average Posteriors of 7 models;
364542    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364543    +P_DepVar1 = (
364544    +AutoNeural24_P_DepVar1 +
364545    +AutoNeural22_P_DepVar1 +
364546    +AutoNeural21_P_DepVar1 +
364547    +AutoNeural20_P_DepVar1 +
364548    +AutoNeural26_P_DepVar1 +
364549    +AutoNeural25_P_DepVar1 +
364550    +AutoNeural23_P_DepVar1
364551    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural24_P_DepVar1 + AutoNeural22_P_DepVar1 + 
AutoNeural21_P_DepVar1 + AutoNeural20_P_DepVar1 + AutoNeural26_P_DepVar1 + 
AutoNeural25_P_DepVar1 + AutoNeural23_P_DepVar1 )/7;
364552    +P_DepVar0 = (
364553    +AutoNeural24_P_DepVar0 +
364554    +AutoNeural22_P_DepVar0 +
364555    +AutoNeural21_P_DepVar0 +
364556    +AutoNeural20_P_DepVar0 +
364557    +AutoNeural26_P_DepVar0 +
364558    +AutoNeural25_P_DepVar0 +
364559    +AutoNeural23_P_DepVar0
364560    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural24_P_DepVar0 + AutoNeural22_P_DepVar0 + 
AutoNeural21_P_DepVar0 + AutoNeural20_P_DepVar0 + AutoNeural26_P_DepVar0 + 
AutoNeural25_P_DepVar0 + AutoNeural23_P_DepVar0 )/7;
364561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364562    +* Ensmbl48: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Computing Classification Vars;
364563    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364564    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
364565    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
364566    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
364567    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
364568    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
364569    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
364570    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
364571    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
364572    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
364573    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
364574    +end;
MPRINT(EM_DIAGRAM):   end;
364575    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
364576    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
364577    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
364578    +end;
MPRINT(EM_DIAGRAM):   end;
364579    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
364580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364581    +* Ensmbl48: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Producing Unformatted variable;
364582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364583    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
364584    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
364585    +else
364586    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
364587    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364588    +* Ensmbl48: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Computing _WARN_ Variable;
364589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364590    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
364591    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
364592    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
364593    +if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
364593   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
364594    +if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
364594   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
364595    +if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
364595   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
364596    +if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
364596   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
364597    +if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
364597   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
364598    +if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
364598   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
364599    +if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
364599   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
364600    +if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
364600   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
364601    +if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
364601   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
364602    +if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
364602   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
364603    +if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
364603   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
364604    +if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
364604   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
364605    +if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
364605   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
364606    +if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
364606   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
364607    +if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
364607   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
364608    +if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
364608   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
364609    +if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
364609   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
364610    +if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
364610   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
364611    +if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
364611   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
364612    +if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
364612   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
364613    +if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
364613   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
364614    +if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
364614   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
364615    +if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
364615   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
364616    +if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
364616   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
364617    +if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
364617   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
364618    +if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
364618   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
364619    +if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
364619   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
364620    +if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
364620   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
364621    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364622    +* Ensmbl48: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Computing Residual Vars;
364623    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
364624    +if
364625    +F_DepVar NE '1'
364626    +AND F_DepVar NE '0'
364627    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
364628    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
364629    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
364630    +end;
MPRINT(EM_DIAGRAM):   end;
364631    +else do;
MPRINT(EM_DIAGRAM):   else do;
364632    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
364633    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
364634    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
364635    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
364636    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
364637    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
364638    +END;
MPRINT(EM_DIAGRAM):   END;
364639    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
364640     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL48_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL24_VALIDATE.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      

MPRINT(EM_DIAGRAM):   quit;
364641     quit;
364642     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl48_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl48_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl48_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl48_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl48_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
364702     filename _pref
364702   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural24\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural24\EMPUBLISHSCORE.sas";
364703     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
364704     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural24\EMPUBLISHSCORE.sas.
364705    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
364706    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
364707    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
364708    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
364709    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
364710    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
364711    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
364712    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
364713    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
364714    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
364715    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
364716    +LENGTH _WARN_ $4
364717    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
364718    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
364719    +
364720    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
364721    +
364722    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
364723    +
364724    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
364725    +
364726    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
364727    +
364728    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
364729    +
364730    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
364731    +
364732    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
364733    +
364734    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
364735    +
364736    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
364737    +
364738    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
364739    +
364740    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
364741    +
364742    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
364743    +
364744    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
364745    +
364746    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
364747    +
364748    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
364749    +
364750    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
364751    +
364752    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
364753    +
364754    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
364755    +
364756    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
364757    +
364758    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
364759    +
364760    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
364761    +
364762    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
364763    +
364764    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
364765    +
364766    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
364767    +
364768    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
364769    +
364770    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
364771    +
364772    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
364773    +
364774    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
364775    +
364776    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
364777    +
364778    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
364779    +
364780    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
364781    +
364782    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
364783    +
364784    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
364785    +
364786    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
364787    +
364788    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
364789    +
364790    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
364791    +
364792    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
364793    +
364794    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
364795    +
364796    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
364797    +
364798    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
364799    +
364800    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
364801    +
364802    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
364803    +
364804    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
364805    +
364806    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
364807    +
364808    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
364809    +
364810    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
364811    +
364812    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
364813    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
364814    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
364815    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
364816    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364817    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364818    +end;
MPRINT(EM_DIAGRAM):   end;
364819    +else do;
MPRINT(EM_DIAGRAM):   else do;
364820    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364821    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
364822    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364823    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
364824    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
364825    +   end;
MPRINT(EM_DIAGRAM):   end;
364826    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
364827    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
364828    +   end;
MPRINT(EM_DIAGRAM):   end;
364829    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364830    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
364831    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364832    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364833    +   end;
MPRINT(EM_DIAGRAM):   end;
364834    +end;
MPRINT(EM_DIAGRAM):   end;
364835    +
364836    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
364837    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
364838    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
364839    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
364840    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
364841    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
364842    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364843    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364844    +end;
MPRINT(EM_DIAGRAM):   end;
364845    +else do;
MPRINT(EM_DIAGRAM):   else do;
364846    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364847    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
364848    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364849    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
364850    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
364851    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
364852    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
364853    +   end;
MPRINT(EM_DIAGRAM):   end;
364854    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
364855    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
364856    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
364857    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
364858    +   end;
MPRINT(EM_DIAGRAM):   end;
364859    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364860    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
364861    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
364862    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
364863    +   end;
MPRINT(EM_DIAGRAM):   end;
364864    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364865    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
364866    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
364867    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
364868    +   end;
MPRINT(EM_DIAGRAM):   end;
364869    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364870    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
364871    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
364872    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
364873    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364874    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364875    +   end;
MPRINT(EM_DIAGRAM):   end;
364876    +end;
MPRINT(EM_DIAGRAM):   end;
364877    +
364878    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
364879    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
364880    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
364881    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
364882    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
364883    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
364884    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364885    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364886    +end;
MPRINT(EM_DIAGRAM):   end;
364887    +else do;
MPRINT(EM_DIAGRAM):   else do;
364888    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364889    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
364890    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364891    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
364892    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
364893    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
364894    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
364895    +   end;
MPRINT(EM_DIAGRAM):   end;
364896    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364897    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
364898    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
364899    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
364900    +   end;
MPRINT(EM_DIAGRAM):   end;
364901    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
364902    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
364903    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
364904    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
364905    +   end;
MPRINT(EM_DIAGRAM):   end;
364906    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364907    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
364908    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
364909    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
364910    +   end;
MPRINT(EM_DIAGRAM):   end;
364911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364912    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
364913    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
364914    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
364915    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364916    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364917    +   end;
MPRINT(EM_DIAGRAM):   end;
364918    +end;
MPRINT(EM_DIAGRAM):   end;
364919    +
364920    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
364921    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
364922    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
364923    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
364924    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
364925    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
364926    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364927    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364928    +end;
MPRINT(EM_DIAGRAM):   end;
364929    +else do;
MPRINT(EM_DIAGRAM):   else do;
364930    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364931    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
364932    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364933    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
364934    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
364935    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
364936    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
364937    +   end;
MPRINT(EM_DIAGRAM):   end;
364938    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364939    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
364940    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
364941    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
364942    +   end;
MPRINT(EM_DIAGRAM):   end;
364943    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364944    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
364945    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
364946    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
364947    +   end;
MPRINT(EM_DIAGRAM):   end;
364948    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364949    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
364950    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
364951    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
364952    +   end;
MPRINT(EM_DIAGRAM):   end;
364953    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364954    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
364955    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
364956    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
364957    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
364958    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364959    +   end;
MPRINT(EM_DIAGRAM):   end;
364960    +end;
MPRINT(EM_DIAGRAM):   end;
364961    +
364962    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
364963    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
364964    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
364965    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
364966    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
364967    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
364968    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
364969    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
364970    +end;
MPRINT(EM_DIAGRAM):   end;
364971    +else do;
MPRINT(EM_DIAGRAM):   else do;
364972    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
364973    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
364974    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
364975    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
364976    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
364977    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
364978    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
364979    +   end;
MPRINT(EM_DIAGRAM):   end;
364980    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
364981    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
364982    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
364983    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
364984    +   end;
MPRINT(EM_DIAGRAM):   end;
364985    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
364986    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
364987    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
364988    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
364989    +   end;
MPRINT(EM_DIAGRAM):   end;
364990    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
364991    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
364992    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
364993    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
364994    +   end;
MPRINT(EM_DIAGRAM):   end;
364995    +   else do;
MPRINT(EM_DIAGRAM):   else do;
364996    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
364997    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
364998    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
364999    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365000    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365001    +   end;
MPRINT(EM_DIAGRAM):   end;
365002    +end;
MPRINT(EM_DIAGRAM):   end;
365003    +
365004    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
365005    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
365006    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
365007    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
365008    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
365009    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
365010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365012    +end;
MPRINT(EM_DIAGRAM):   end;
365013    +else do;
MPRINT(EM_DIAGRAM):   else do;
365014    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365015    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
365016    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365017    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
365018    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
365019    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
365020    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
365021    +   end;
MPRINT(EM_DIAGRAM):   end;
365022    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365023    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
365024    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
365025    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
365026    +   end;
MPRINT(EM_DIAGRAM):   end;
365027    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
365028    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
365029    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
365030    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
365031    +   end;
MPRINT(EM_DIAGRAM):   end;
365032    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365033    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
365034    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
365035    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
365036    +   end;
MPRINT(EM_DIAGRAM):   end;
365037    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365038    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
365039    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
365040    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
365041    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365042    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365043    +   end;
MPRINT(EM_DIAGRAM):   end;
365044    +end;
MPRINT(EM_DIAGRAM):   end;
365045    +
365046    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
365047    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
365048    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
365049    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
365050    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
365051    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
365052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365054    +end;
MPRINT(EM_DIAGRAM):   end;
365055    +else do;
MPRINT(EM_DIAGRAM):   else do;
365056    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365057    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
365058    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365059    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
365060    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
365061    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
365062    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
365063    +   end;
MPRINT(EM_DIAGRAM):   end;
365064    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365065    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
365066    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
365067    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
365068    +   end;
MPRINT(EM_DIAGRAM):   end;
365069    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
365070    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
365071    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
365072    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
365073    +   end;
MPRINT(EM_DIAGRAM):   end;
365074    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365075    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
365076    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
365077    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
365078    +   end;
MPRINT(EM_DIAGRAM):   end;
365079    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365080    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
365081    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
365082    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
365083    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365084    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365085    +   end;
MPRINT(EM_DIAGRAM):   end;
365086    +end;
MPRINT(EM_DIAGRAM):   end;
365087    +
365088    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
365089    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
365090    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
365091    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
365092    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
365093    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
365094    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365095    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365096    +end;
MPRINT(EM_DIAGRAM):   end;
365097    +else do;
MPRINT(EM_DIAGRAM):   else do;
365098    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365099    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
365100    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365101    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
365102    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
365103    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
365104    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
365105    +   end;
MPRINT(EM_DIAGRAM):   end;
365106    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
365107    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
365108    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
365109    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
365110    +   end;
MPRINT(EM_DIAGRAM):   end;
365111    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365112    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
365113    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
365114    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
365115    +   end;
MPRINT(EM_DIAGRAM):   end;
365116    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365117    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
365118    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
365119    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
365120    +   end;
MPRINT(EM_DIAGRAM):   end;
365121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365122    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
365123    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
365124    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
365125    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365126    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365127    +   end;
MPRINT(EM_DIAGRAM):   end;
365128    +end;
MPRINT(EM_DIAGRAM):   end;
365129    +
365130    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
365131    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
365132    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
365133    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
365134    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
365135    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365136    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365137    +end;
MPRINT(EM_DIAGRAM):   end;
365138    +else do;
MPRINT(EM_DIAGRAM):   else do;
365139    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365140    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
365141    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365142    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
365143    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
365144    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
365145    +   end;
MPRINT(EM_DIAGRAM):   end;
365146    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
365147    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
365148    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
365149    +   end;
MPRINT(EM_DIAGRAM):   end;
365150    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365151    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
365152    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
365153    +   end;
MPRINT(EM_DIAGRAM):   end;
365154    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365155    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
365156    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
365157    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365158    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365159    +   end;
MPRINT(EM_DIAGRAM):   end;
365160    +end;
MPRINT(EM_DIAGRAM):   end;
365161    +
365162    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
365163    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
365164    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
365165    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
365166    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
365167    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
365168    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365169    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365170    +end;
MPRINT(EM_DIAGRAM):   end;
365171    +else do;
MPRINT(EM_DIAGRAM):   else do;
365172    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365173    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
365174    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365175    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
365176    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
365177    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
365178    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
365179    +   end;
MPRINT(EM_DIAGRAM):   end;
365180    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365181    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
365182    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
365183    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
365184    +   end;
MPRINT(EM_DIAGRAM):   end;
365185    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365186    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
365187    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
365188    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
365189    +   end;
MPRINT(EM_DIAGRAM):   end;
365190    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
365191    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
365192    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
365193    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
365194    +   end;
MPRINT(EM_DIAGRAM):   end;
365195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365196    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
365197    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
365198    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
365199    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365200    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365201    +   end;
MPRINT(EM_DIAGRAM):   end;
365202    +end;
MPRINT(EM_DIAGRAM):   end;
365203    +
365204    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
365205    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
365206    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
365207    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
365208    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
365209    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
365210    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365211    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365212    +end;
MPRINT(EM_DIAGRAM):   end;
365213    +else do;
MPRINT(EM_DIAGRAM):   else do;
365214    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365215    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
365216    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365217    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
365218    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
365219    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
365220    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
365221    +   end;
MPRINT(EM_DIAGRAM):   end;
365222    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
365223    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
365224    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
365225    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
365226    +   end;
MPRINT(EM_DIAGRAM):   end;
365227    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365228    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
365229    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
365230    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
365231    +   end;
MPRINT(EM_DIAGRAM):   end;
365232    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365233    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
365234    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
365235    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
365236    +   end;
MPRINT(EM_DIAGRAM):   end;
365237    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365238    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
365239    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
365240    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
365241    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365242    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365243    +   end;
MPRINT(EM_DIAGRAM):   end;
365244    +end;
MPRINT(EM_DIAGRAM):   end;
365245    +
365246    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
365247    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
365248    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
365249    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
365250    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
365251    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
365252    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365253    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365254    +end;
MPRINT(EM_DIAGRAM):   end;
365255    +else do;
MPRINT(EM_DIAGRAM):   else do;
365256    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365257    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
365258    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365259    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
365260    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
365261    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
365262    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
365263    +   end;
MPRINT(EM_DIAGRAM):   end;
365264    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
365265    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
365266    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
365267    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
365268    +   end;
MPRINT(EM_DIAGRAM):   end;
365269    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
365270    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
365271    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
365272    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
365273    +   end;
MPRINT(EM_DIAGRAM):   end;
365274    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365275    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
365276    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
365277    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
365278    +   end;
MPRINT(EM_DIAGRAM):   end;
365279    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365280    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
365281    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
365282    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
365283    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365284    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365285    +   end;
MPRINT(EM_DIAGRAM):   end;
365286    +end;
MPRINT(EM_DIAGRAM):   end;
365287    +
365288    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
365289    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
365290    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
365291    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
365292    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
365293    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
365294    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365295    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365296    +end;
MPRINT(EM_DIAGRAM):   end;
365297    +else do;
MPRINT(EM_DIAGRAM):   else do;
365298    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365299    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
365300    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365301    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
365302    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
365303    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
365304    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
365305    +   end;
MPRINT(EM_DIAGRAM):   end;
365306    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
365307    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
365308    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
365309    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
365310    +   end;
MPRINT(EM_DIAGRAM):   end;
365311    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365312    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
365313    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
365314    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
365315    +   end;
MPRINT(EM_DIAGRAM):   end;
365316    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365317    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
365318    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
365319    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
365320    +   end;
MPRINT(EM_DIAGRAM):   end;
365321    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365322    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
365323    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
365324    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
365325    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365326    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365327    +   end;
MPRINT(EM_DIAGRAM):   end;
365328    +end;
MPRINT(EM_DIAGRAM):   end;
365329    +
365330    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
365331    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
365332    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
365333    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
365334    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
365335    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
365336    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
365337    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365338    +end;
MPRINT(EM_DIAGRAM):   end;
365339    +else do;
MPRINT(EM_DIAGRAM):   else do;
365340    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
365341    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
365342    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
365343    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
365344    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
365345    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
365346    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
365347    +   end;
MPRINT(EM_DIAGRAM):   end;
365348    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
365349    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
365350    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
365351    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
365352    +   end;
MPRINT(EM_DIAGRAM):   end;
365353    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
365354    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
365355    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
365356    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
365357    +   end;
MPRINT(EM_DIAGRAM):   end;
365358    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
365359    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
365360    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
365361    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
365362    +   end;
MPRINT(EM_DIAGRAM):   end;
365363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
365364    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
365365    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
365366    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
365367    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
365368    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365369    +   end;
MPRINT(EM_DIAGRAM):   end;
365370    +end;
MPRINT(EM_DIAGRAM):   end;
365371    +
365372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365373    +*** Checking missing input Interval
365374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
365375    +
365376    +IF NMISS(
365377    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
365378    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
365379    +
365380    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
365381    +END;
MPRINT(EM_DIAGRAM):   END;
365382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365383    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
365384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365385    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
365386    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
365387    +END;
MPRINT(EM_DIAGRAM):   END;
365388    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
365389    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
365390    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
365391    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
365392    +END;
MPRINT(EM_DIAGRAM):   END;
365393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365394    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
365395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365397    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
365398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365399    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
365400    +   H1x1_1  =    -1.98556205049158 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.98556205049158 * S_Year_Birth ;
365401    +   H1x1_2  =     2.65003203246915 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.65003203246915 * S_Year_Birth ;
365402    +   H1x1_1  = H1x1_1  +    -0.05712043872213 * GRP_AcceptedCmp52
365403    +          +     1.04378756398945 * GRP_Frq2  +     1.53971794568749 * GRP_Frq3
365404    +          +     1.46006856973709 * GRP_Frq4  +    -0.56202924907336 *
365405    +        GRP_Income2  +     4.72191701616365 * GRP_Income3
365406    +          +    -2.66170280222507 * GRP_Income4  +     0.01753317277737 *
365407    +        GRP_Mnt2  +    -3.49161842568046 * GRP_Mnt3  +    -2.05166246350112 *
365408    +        GRP_Mnt4  +     3.42363704603021 * GRP_MntFishProducts2
365409    +          +     4.07177263196201 * GRP_MntFishProducts3
365410    +          +    -0.95758193346069 * GRP_MntFishProducts4
365411    +          +     0.27642218349221 * GRP_MntGoldProds2
365412    +          +    -1.85260255304992 * GRP_MntGoldProds3
365413    +          +      0.0084996256166 * GRP_MntGoldProds4
365414    +          +     1.78769069128312 * GRP_MntMeatProducts2
365415    +          +    -5.09868822425716 * GRP_MntMeatProducts3
365416    +          +     -1.2944400003238 * GRP_MntMeatProducts4
365417    +          +     2.16310510520522 * GRP_MntWines2  +    -0.98848869719513 *
365418    +        GRP_MntWines3  +     0.37628412350279 * GRP_MntWines4
365419    +          +    -0.18399160398973 * GRP_NumCatalogPurchases3
365420    +          +     2.78149370347513 * GRP_NumCatalogPurchases4
365421    +          +    -1.92842775798726 * GRP_NumDistPurchases2
365422    +          +     1.36617128431309 * GRP_NumDistPurchases3
365423    +          +    -5.04459399151701 * GRP_NumDistPurchases4
365424    +          +    -3.10131336282255 * GRP_NumWebPurchases2
365425    +          +    -1.70853531086832 * GRP_NumWebPurchases3
365426    +          +    -1.81576465350843 * GRP_NumWebPurchases4
365427    +          +     0.97448188440932 * GRP_RFMstat2  +    -1.74164713551138 *
365428    +        GRP_RFMstat3  +    -1.61869970889612 * GRP_RFMstat4
365429    +          +     0.94148483345045 * GRP_RMntFrq2  +    -4.61928796757469 *
365430    +        GRP_RMntFrq3  +    -0.29552475494224 * GRP_RMntFrq4
365431    +          +     0.59385679636573 * GRP_Recency2  +    -0.70804337284842 *
365432    +        GRP_Recency3  +     2.46935358022796 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05712043872213 * GRP_AcceptedCmp52 + 
1.04378756398945 * GRP_Frq2 + 1.53971794568749 * GRP_Frq3 + 1.46006856973709 * GRP_Frq4 + 
-0.56202924907336 * GRP_Income2 + 4.72191701616365 * GRP_Income3 + -2.66170280222507 * 
GRP_Income4 + 0.01753317277737 * GRP_Mnt2 + -3.49161842568046 * GRP_Mnt3 + -2.05166246350112 * 
GRP_Mnt4 + 3.42363704603021 * GRP_MntFishProducts2 + 4.07177263196201 * GRP_MntFishProducts3 + 
-0.95758193346069 * GRP_MntFishProducts4 + 0.27642218349221 * GRP_MntGoldProds2 + 
-1.85260255304992 * GRP_MntGoldProds3 + 0.0084996256166 * GRP_MntGoldProds4 + 1.78769069128312 
* GRP_MntMeatProducts2 + -5.09868822425716 * GRP_MntMeatProducts3 + -1.2944400003238 * 
GRP_MntMeatProducts4 + 2.16310510520522 * GRP_MntWines2 + -0.98848869719513 * GRP_MntWines3 + 
0.37628412350279 * GRP_MntWines4 + -0.18399160398973 * GRP_NumCatalogPurchases3 + 
2.78149370347513 * GRP_NumCatalogPurchases4 + -1.92842775798726 * GRP_NumDistPurchases2 + 
1.36617128431309 * GRP_NumDistPurchases3 + -5.04459399151701 * GRP_NumDistPurchases4 + 
-3.10131336282255 * GRP_NumWebPurchases2 + -1.70853531086832 * GRP_NumWebPurchases3 + 
-1.81576465350843 * GRP_NumWebPurchases4 + 0.97448188440932 * GRP_RFMstat2 + -1.74164713551138 
* GRP_RFMstat3 + -1.61869970889612 * GRP_RFMstat4 + 0.94148483345045 * GRP_RMntFrq2 + 
-4.61928796757469 * GRP_RMntFrq3 + -0.29552475494224 * GRP_RMntFrq4 + 0.59385679636573 * 
GRP_Recency2 + -0.70804337284842 * GRP_Recency3 + 2.46935358022796 * GRP_Recency4 ;
365433    +   H1x1_2  = H1x1_2  +    -2.86061192932804 * GRP_AcceptedCmp52
365434    +          +    -2.37847197829836 * GRP_Frq2  +     3.04126084255177 * GRP_Frq3
365435    +          +    -2.25316213708692 * GRP_Frq4  +    -2.15230505920585 *
365436    +        GRP_Income2  +     0.22423161350469 * GRP_Income3
365437    +          +     1.82470653064149 * GRP_Income4  +     0.91426377324604 *
365438    +        GRP_Mnt2  +    -2.52824414988744 * GRP_Mnt3  +     1.25821903076482 *
365439    +        GRP_Mnt4  +     2.48215495303599 * GRP_MntFishProducts2
365440    +          +    -2.53912545896945 * GRP_MntFishProducts3
365441    +          +    -1.24420085467004 * GRP_MntFishProducts4
365442    +          +     0.87589074104426 * GRP_MntGoldProds2
365443    +          +     2.05825939506076 * GRP_MntGoldProds3
365444    +          +     4.54187777951066 * GRP_MntGoldProds4
365445    +          +     1.73194182769876 * GRP_MntMeatProducts2
365446    +          +    -0.50494075731675 * GRP_MntMeatProducts3
365447    +          +    -1.24502732975278 * GRP_MntMeatProducts4
365448    +          +     1.29208460321632 * GRP_MntWines2  +     0.29717301998256 *
365449    +        GRP_MntWines3  +    -0.62672710631427 * GRP_MntWines4
365450    +          +     1.35492499749641 * GRP_NumCatalogPurchases3
365451    +          +    -0.16024517906179 * GRP_NumCatalogPurchases4
365452    +          +     1.86677407552405 * GRP_NumDistPurchases2
365453    +          +     -0.7331940643207 * GRP_NumDistPurchases3
365454    +          +     1.69990326910684 * GRP_NumDistPurchases4
365455    +          +     2.43176299986254 * GRP_NumWebPurchases2
365456    +          +    -2.13772911466858 * GRP_NumWebPurchases3
365457    +          +    -4.73478753166791 * GRP_NumWebPurchases4
365458    +          +     2.64399780173577 * GRP_RFMstat2  +    -3.62336346056054 *
365459    +        GRP_RFMstat3  +    -3.18363324824984 * GRP_RFMstat4
365460    +          +     3.46796006062254 * GRP_RMntFrq2  +    -0.59973905875633 *
365461    +        GRP_RMntFrq3  +    -1.07300094897005 * GRP_RMntFrq4
365462    +          +     1.65131957040649 * GRP_Recency2  +     2.60583794046673 *
365463    +        GRP_Recency3  +    -1.61296974687132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.86061192932804 * GRP_AcceptedCmp52 + 
-2.37847197829836 * GRP_Frq2 + 3.04126084255177 * GRP_Frq3 + -2.25316213708692 * GRP_Frq4 + 
-2.15230505920585 * GRP_Income2 + 0.22423161350469 * GRP_Income3 + 1.82470653064149 * 
GRP_Income4 + 0.91426377324604 * GRP_Mnt2 + -2.52824414988744 * GRP_Mnt3 + 1.25821903076482 * 
GRP_Mnt4 + 2.48215495303599 * GRP_MntFishProducts2 + -2.53912545896945 * GRP_MntFishProducts3 
+ -1.24420085467004 * GRP_MntFishProducts4 + 0.87589074104426 * GRP_MntGoldProds2 + 
2.05825939506076 * GRP_MntGoldProds3 + 4.54187777951066 * GRP_MntGoldProds4 + 1.73194182769876 
* GRP_MntMeatProducts2 + -0.50494075731675 * GRP_MntMeatProducts3 + -1.24502732975278 * 
GRP_MntMeatProducts4 + 1.29208460321632 * GRP_MntWines2 + 0.29717301998256 * GRP_MntWines3 + 
-0.62672710631427 * GRP_MntWines4 + 1.35492499749641 * GRP_NumCatalogPurchases3 + 
-0.16024517906179 * GRP_NumCatalogPurchases4 + 1.86677407552405 * GRP_NumDistPurchases2 + 
-0.7331940643207 * GRP_NumDistPurchases3 + 1.69990326910684 * GRP_NumDistPurchases4 + 
2.43176299986254 * GRP_NumWebPurchases2 + -2.13772911466858 * GRP_NumWebPurchases3 + 
-4.73478753166791 * GRP_NumWebPurchases4 + 2.64399780173577 * GRP_RFMstat2 + -3.62336346056054 
* GRP_RFMstat3 + -3.18363324824984 * GRP_RFMstat4 + 3.46796006062254 * GRP_RMntFrq2 + 
-0.59973905875633 * GRP_RMntFrq3 + -1.07300094897005 * GRP_RMntFrq4 + 1.65131957040649 * 
GRP_Recency2 + 2.60583794046673 * GRP_Recency3 + -1.61296974687132 * GRP_Recency4 ;
365464    +   H1x1_1  =     2.45115906330524 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.45115906330524 + H1x1_1 ;
365465    +   H1x1_2  =     4.73081202118604 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 4.73081202118604 + H1x1_2 ;
365466    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
365467    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
365468    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
365469    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
365470    +END;
MPRINT(EM_DIAGRAM):   END;
365471    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
365472    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
365473    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
365474    +END;
MPRINT(EM_DIAGRAM):   END;
365475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365476    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
365477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365478    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
365479    +   P_DepVar1  =      4.0196958449291 * H1x1_1  +    -3.12785763420985 * H1x1_2
365480    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0196958449291 * H1x1_1 + -3.12785763420985 * H1x1_2 ;
365481    +   P_DepVar1  =    -2.56231918790427 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.56231918790427 + P_DepVar1 ;
365482    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
365483    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
365484    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
365485    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
365486    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
365487    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
365488    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
365489    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
365490    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
365491    +END;
MPRINT(EM_DIAGRAM):   END;
365492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
365493    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
365494    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
365495    +END;
MPRINT(EM_DIAGRAM):   END;
365496    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
365497    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
365498    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
365499    +END;
MPRINT(EM_DIAGRAM):   END;
365500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365501    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
365502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
365503    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
365504    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
365505    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
365506    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
365507    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
365508    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
365509    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
365510    +END;
MPRINT(EM_DIAGRAM):   END;
365511    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
365512    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
365513    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
365514    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
365515     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
365516     quit;
365517     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
365518     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
365519     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
365520     retain ID 2 Node "AutoNeural24";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural24";
365521     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
365522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1597 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1597 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365523     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
365524     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365525     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1597 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1597 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365526     proc sort data=EMWS8.AutoNeural24_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural24_variableset out=_temp2(keep=NAME 
CREATOR);
365527     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365528     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL24_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

365529     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
365530     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
365531     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
365532     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365533     proc contents data=EMWS8.AutoNeural24_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural24_train out=_meta(keep=NAME) noprint;
365534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 69 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

365535     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
365536     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 69 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365538     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
365539     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
365540     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365541     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 69 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 69 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365542     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
365543     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
365543   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 874 rows and 5 columns.

365544     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365545     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
365546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 874 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 874 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

365547     filename _pref
365547   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
365548     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
365549     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
365550    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
365551    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
365552    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
365553    +
365554    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365555    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
365556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365557    +LABEL GRP_AcceptedCmp5 =
365558    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
365559    +
365560    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
365561    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
365562    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
365563    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
365564    +end;
MPRINT(EM_DIAGRAM):   end;
365565    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
365566    +if (_UFORMAT eq '0'
365567    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
365568    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
365569    +end;
MPRINT(EM_DIAGRAM):   end;
365570    +else
365571    +if (_UFORMAT eq '1'
365572    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
365573    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
365574    +end;
MPRINT(EM_DIAGRAM):   end;
365575    +else do;
MPRINT(EM_DIAGRAM):   else do;
365576    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
365577    +end;
MPRINT(EM_DIAGRAM):   end;
365578    +end;
MPRINT(EM_DIAGRAM):   end;
365579    +
365580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365581    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
365582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365583    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
365584    +
365585    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
365586    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
365587    +end;
MPRINT(EM_DIAGRAM):   end;
365588    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
365589    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
365590    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
365591    +end;
MPRINT(EM_DIAGRAM):   end;
365592    +else
365593    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
365594    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
365595    +end;
MPRINT(EM_DIAGRAM):   end;
365596    +else
365597    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
365598    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
365599    +end;
MPRINT(EM_DIAGRAM):   end;
365600    +else
365601    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
365602    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
365603    +end;
MPRINT(EM_DIAGRAM):   end;
365604    +end;
MPRINT(EM_DIAGRAM):   end;
365605    +
365606    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365607    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
365608    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365609    +LABEL GRP_Income =
365610    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
365611    +
365612    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
365613    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
365614    +end;
MPRINT(EM_DIAGRAM):   end;
365615    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
365616    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
365617    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
365618    +end;
MPRINT(EM_DIAGRAM):   end;
365619    +else
365620    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
365621    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
365622    +end;
MPRINT(EM_DIAGRAM):   end;
365623    +else
365624    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
365625    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
365626    +end;
MPRINT(EM_DIAGRAM):   end;
365627    +else
365628    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
365629    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
365630    +end;
MPRINT(EM_DIAGRAM):   end;
365631    +end;
MPRINT(EM_DIAGRAM):   end;
365632    +
365633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365634    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
365635    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365636    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
365637    +
365638    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
365639    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
365640    +end;
MPRINT(EM_DIAGRAM):   end;
365641    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
365642    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
365643    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
365644    +end;
MPRINT(EM_DIAGRAM):   end;
365645    +else
365646    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
365647    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
365648    +end;
MPRINT(EM_DIAGRAM):   end;
365649    +else
365650    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
365651    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
365652    +end;
MPRINT(EM_DIAGRAM):   end;
365653    +else
365654    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
365655    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
365656    +end;
MPRINT(EM_DIAGRAM):   end;
365657    +end;
MPRINT(EM_DIAGRAM):   end;
365658    +
365659    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365660    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
365661    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365662    +LABEL GRP_MntFishProducts =
365663    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
365664    +
365665    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
365666    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
365667    +end;
MPRINT(EM_DIAGRAM):   end;
365668    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
365669    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
365670    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
365671    +end;
MPRINT(EM_DIAGRAM):   end;
365672    +else
365673    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
365674    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
365675    +end;
MPRINT(EM_DIAGRAM):   end;
365676    +else
365677    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
365678    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
365679    +end;
MPRINT(EM_DIAGRAM):   end;
365680    +else
365681    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
365682    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
365683    +end;
MPRINT(EM_DIAGRAM):   end;
365684    +end;
MPRINT(EM_DIAGRAM):   end;
365685    +
365686    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365687    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
365688    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365689    +LABEL GRP_MntGoldProds =
365690    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
365691    +
365692    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
365693    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
365694    +end;
MPRINT(EM_DIAGRAM):   end;
365695    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
365696    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
365697    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
365698    +end;
MPRINT(EM_DIAGRAM):   end;
365699    +else
365700    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
365701    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
365702    +end;
MPRINT(EM_DIAGRAM):   end;
365703    +else
365704    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
365705    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
365706    +end;
MPRINT(EM_DIAGRAM):   end;
365707    +else
365708    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
365709    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
365710    +end;
MPRINT(EM_DIAGRAM):   end;
365711    +end;
MPRINT(EM_DIAGRAM):   end;
365712    +
365713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365714    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
365715    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365716    +LABEL GRP_MntMeatProducts =
365717    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
365718    +
365719    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
365720    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
365721    +end;
MPRINT(EM_DIAGRAM):   end;
365722    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
365723    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
365724    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
365725    +end;
MPRINT(EM_DIAGRAM):   end;
365726    +else
365727    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
365728    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
365729    +end;
MPRINT(EM_DIAGRAM):   end;
365730    +else
365731    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
365732    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
365733    +end;
MPRINT(EM_DIAGRAM):   end;
365734    +else
365735    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
365736    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
365737    +end;
MPRINT(EM_DIAGRAM):   end;
365738    +end;
MPRINT(EM_DIAGRAM):   end;
365739    +
365740    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365741    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
365742    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365743    +LABEL GRP_MntWines =
365744    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
365745    +
365746    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
365747    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
365748    +end;
MPRINT(EM_DIAGRAM):   end;
365749    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
365750    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
365751    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
365752    +end;
MPRINT(EM_DIAGRAM):   end;
365753    +else
365754    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
365755    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
365756    +end;
MPRINT(EM_DIAGRAM):   end;
365757    +else
365758    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
365759    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
365760    +end;
MPRINT(EM_DIAGRAM):   end;
365761    +else
365762    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
365763    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
365764    +end;
MPRINT(EM_DIAGRAM):   end;
365765    +end;
MPRINT(EM_DIAGRAM):   end;
365766    +
365767    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365768    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
365769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365770    +LABEL GRP_NumCatalogPurchases =
365771    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
365772    +
365773    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
365774    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
365775    +end;
MPRINT(EM_DIAGRAM):   end;
365776    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
365777    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
365778    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
365779    +end;
MPRINT(EM_DIAGRAM):   end;
365780    +else
365781    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
365782    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
365783    +end;
MPRINT(EM_DIAGRAM):   end;
365784    +else
365785    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
365786    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
365787    +end;
MPRINT(EM_DIAGRAM):   end;
365788    +else
365789    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
365790    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
365791    +end;
MPRINT(EM_DIAGRAM):   end;
365792    +end;
MPRINT(EM_DIAGRAM):   end;
365793    +
365794    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365795    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
365796    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365797    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
365798    +
365799    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
365800    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
365801    +end;
MPRINT(EM_DIAGRAM):   end;
365802    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
365803    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
365804    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
365805    +end;
MPRINT(EM_DIAGRAM):   end;
365806    +else
365807    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
365808    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
365809    +end;
MPRINT(EM_DIAGRAM):   end;
365810    +else
365811    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
365812    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
365813    +end;
MPRINT(EM_DIAGRAM):   end;
365814    +else
365815    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
365816    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
365817    +end;
MPRINT(EM_DIAGRAM):   end;
365818    +end;
MPRINT(EM_DIAGRAM):   end;
365819    +
365820    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365821    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
365822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365823    +LABEL GRP_NumWebPurchases =
365824    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
365825    +
365826    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
365827    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
365828    +end;
MPRINT(EM_DIAGRAM):   end;
365829    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
365830    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
365831    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
365832    +end;
MPRINT(EM_DIAGRAM):   end;
365833    +else
365834    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
365835    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
365836    +end;
MPRINT(EM_DIAGRAM):   end;
365837    +else
365838    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
365839    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
365840    +end;
MPRINT(EM_DIAGRAM):   end;
365841    +else
365842    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
365843    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
365844    +end;
MPRINT(EM_DIAGRAM):   end;
365845    +end;
MPRINT(EM_DIAGRAM):   end;
365846    +
365847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365848    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
365849    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365850    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
365851    +
365852    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
365853    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
365854    +end;
MPRINT(EM_DIAGRAM):   end;
365855    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
365856    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
365857    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
365858    +end;
MPRINT(EM_DIAGRAM):   end;
365859    +else
365860    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
365861    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
365862    +end;
MPRINT(EM_DIAGRAM):   end;
365863    +else
365864    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
365865    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
365866    +end;
MPRINT(EM_DIAGRAM):   end;
365867    +else
365868    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
365869    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
365870    +end;
MPRINT(EM_DIAGRAM):   end;
365871    +end;
MPRINT(EM_DIAGRAM):   end;
365872    +
365873    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365874    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
365875    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365876    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
365877    +
365878    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
365879    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
365880    +end;
MPRINT(EM_DIAGRAM):   end;
365881    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
365882    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
365883    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
365884    +end;
MPRINT(EM_DIAGRAM):   end;
365885    +else
365886    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
365887    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
365888    +end;
MPRINT(EM_DIAGRAM):   end;
365889    +else
365890    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
365891    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
365892    +end;
MPRINT(EM_DIAGRAM):   end;
365893    +else
365894    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
365895    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
365896    +end;
MPRINT(EM_DIAGRAM):   end;
365897    +end;
MPRINT(EM_DIAGRAM):   end;
365898    +
365899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365900    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
365901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365902    +LABEL GRP_Recency =
365903    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
365904    +
365905    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
365906    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
365907    +end;
MPRINT(EM_DIAGRAM):   end;
365908    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
365909    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
365910    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
365911    +end;
MPRINT(EM_DIAGRAM):   end;
365912    +else
365913    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
365914    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
365915    +end;
MPRINT(EM_DIAGRAM):   end;
365916    +else
365917    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
365918    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
365919    +end;
MPRINT(EM_DIAGRAM):   end;
365920    +else
365921    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
365922    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
365923    +end;
MPRINT(EM_DIAGRAM):   end;
365924    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
365925     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
365926     quit;
365927     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
365928     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
365929     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
365930     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
365931     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
365932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365933     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
365934     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365935     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365936     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
365937     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365939     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
365940     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
365941     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
365942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365943     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
365944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.15 seconds
      cpu time            0.03 seconds
      

365945     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
365946     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365947     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365948     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
365949     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
365950     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365951     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365952     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
365953     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
365953   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

365954     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365955     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
365956     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 889 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365957     filename _pref
365957   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
365958     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
365959     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
365960    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365961    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
365962    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
365963    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
365964    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
365965    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
365966     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
365967     quit;
365968     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
365969     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
365970     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
365971     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
365972     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
365973     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365974     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
365975     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365976     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365977     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
365978     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365979     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365980     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
365981     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
365982     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
365983     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365984     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
365985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

365986     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
365987     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365988     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365989     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
365990     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
365991     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
365992     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365993     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
365994     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
365994   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

365995     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

365996     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
365997     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 893 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

365998     filename _pref
365998   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
365999     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
366000     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
366001    +
366002    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
366003    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
366003   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
366004    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
366005    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
366006    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
366007    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
366008    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
366009     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
366010     quit;
366011     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
366012     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
366013     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
366014     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
366015     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
366016     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366017     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
366018     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366019     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366020     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
366021     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366022     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

366023     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
366024     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
366025     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
366026     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366027     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
366028     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366029     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
366030     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366031     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

366032     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
366033     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
366034     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366035     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366036     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
366037     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
366037   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

366038     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366039     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
366040     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 932 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

366041     filename _pref
366041   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
366042     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
366043     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
366044    +
366045    +
366046    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
366047    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
366048    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
366049    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
366050    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
366051    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366052    +
366053    +
366054    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
366055    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
366056    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
366057    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
366058    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
366059    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366060    +
366061    +
366062    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
366063    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
366064    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
366065    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
366066    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
366067    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366068    +
366069    +
366070    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
366071    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
366072    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
366073    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
366074    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
366075    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366076    +
366077    +
366078    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
366079    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
366080    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
366081    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
366082    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
366083    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366084    +
366085    +
366086    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
366087    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
366088    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
366089    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
366090    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
366091    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366092    +
366093    +
366094    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
366095    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
366096    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
366097    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
366098    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
366099    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366100    +
366101    +
366102    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
366103    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
366104    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
366105    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
366106    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
366107    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
366108    +if
366109    +_FILTERNORM1 not in ( '.')
366110    + and
366111    +_FILTERNORM2 not in ( '.')
366112    + and
366113    +_FILTERNORM3 not in ( '.')
366114    + and
366115    +_FILTERNORM4 not in ( '.')
366116    + and
366117    +_FILTERNORM5 not in ( '.')
366118    + and
366119    +_FILTERNORM6 not in ( '.')
366120    + and
366121    +_FILTERNORM7 not in ( ' ')
366122    + and
366123    +_FILTERNORM8 not in ( ' ')
366124    +and
366125    +( Dt_Customer ne .)
366126    +and ( Income ne . and (Income<=107000))
366127    +and ( Kidhome ne .)
366128    +and ( MntFishProducts ne .)
366129    +and ( MntFruits ne .)
366130    +and ( MntGoldProds ne .)
366131    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
366132    +and ( MntSweetProducts ne .)
366133    +and ( MntWines ne .)
366134    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
366135    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
366136    +and ( NumStorePurchases ne .)
366137    +and ( NumWebPurchases ne .)
366138    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
366139    +and ( Recency ne .)
366140    +and ( Teenhome ne .)
366141    +and ( Year_Birth ne .)
366142    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
366143    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
366144    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
366145    +end;
MPRINT(EM_DIAGRAM):   end;
366146    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
366147    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
366148     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
366149     quit;
366150     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
366151     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
366152     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
366153     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
366154     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
366155     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366156     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
366157     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366159     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
366160     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366161     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366162     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
366163     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
366164     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
366165     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366166     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
366167     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

366168     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
366169     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366170     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366171     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
366172     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
366173     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
366174     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366175     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
366176     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
366176   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

366177     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366178     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
366179     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 998 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366180     %macro varDept(fcmpdata=,id=);
366181     %global nobs&id scoreFlag&id;
366182     %let scoreFlag&id = 0;
366183     %if &id=1 or ^&fcmpStart %then %do;
366184     proc sort data=&fcmpdata out=_temp&id nodupkey;
366185     by NAME;
366186     where id=&id and LHS in( %let j=1;
366187     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
366188     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
366189     "&var" %let j = %eval(&j+1);
366190     %end;
366191     );
366192     run;
366193     %let dsid = %sysfunc(open(_temp&id));
366194     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
366195     %let dsid = %sysfunc(close(&dsid));
366196     %if &&nobs&id %then %do;
366197     %let scoreFlag&id = 1;
366198     %let fcmpStart = 1;
366199     %end;
366200     %else %let fcmpStart = 0;
366201     %end;
366202     %else %do;
366203     proc sort data=&fcmpdata out=_tempid;
366204     where id=&id;
366205     by LHS;
366206     run;
366207     %let dsid = %sysfunc(open(_tempid));
366208     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
366209     %let dsid = %sysfunc(close(&dsid));
366210     %if ^&&nobs&id %then %do;
366211     proc datasets lib=work nolist;
366212     delete _tempid;
366213     run;
366214     quit;
366215     %end;
366216     %else %do;
366217     data _tempAll;
366218     set %let j=%eval(&id-1);
366219     %do x=1 %to &j;
366220     %if &&nobs&x %then %do;
366221     _temp&x %end;
366222     %end;
366223     ;
366224     run;
366225     proc sql;
366226     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
366226   ! work._tempid p2 where p.name=p2.lhs;
366227     quit;
366228     data _temp&id;
366229     set _temp&id;
366230     where LHS ne '' and NAME ne '' and Node ne '';
366231     run;
366232     proc datasets lib=work nolist;
366233     delete _tempAll;
366234     run;
366235     %let dsid = %sysfunc(open(_temp&id));
366236     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
366237     %let dsid = %sysfunc(close(&dsid));
366238     %if ^&&nobs&id %then %do;
366239     proc datasets lib=work nolist;
366240     delete _temp&id;
366241     run;
366242     quit;
366243     %end;
366244     %else %do;
366245     %let scoreFlag&id = 1;
366246     data _temp&id;
366247     set _temp&id;
366248     where LHS ne NAME and node ne '';
366249     run;
366250     %let dsid = %sysfunc(open(_temp&id));
366251     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
366252     %let dsid = %sysfunc(close(&dsid));
366253     %if ^&&nobs&id %then %do;
366254     proc datasets lib=work nolist;
366255     delete _temp&id;
366256     run;
366257     quit;
366258     %end;
366259     %else %do;
366260     proc sort data=_temp&id nodupkey;
366261     by LHS NAME;
366262     run;
366263     %end;
366264     %end;
366265     %end;
366266     %end;
366267     %mend varDept;
366268     %macro optCode(outdata=fcmpdata);
366269     %global fcmpStart;
366270     %let fcmpStart = 0;
366271     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
366272     %let NumNodes=9;
366273     %do k=1 %to &NumNodes;
366274     %vardept(fcmpdata=&outdata, id=&k);
366275     %end;
366276     %mend optCode;
366277     %optcode(outData=EMWS8.Ensmbl48_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 72 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 53 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 67 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

366278     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
366279     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
366280     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
366281     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366282     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
366283     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
366284     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
366285     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

366286     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
366287     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
366287   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

366288     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366289     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
366290     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
366291     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366292     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
366293     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
366294     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
366295     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366296     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
366297     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
366298     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
366299     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

366300     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
366301     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
366301   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

366302     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

366303     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
366304     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
366305     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

366306     filename _pref
366306   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMPUBLISHSCORE.sas";
366307     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
366308     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMPUBLISHSCORE.sas.
366309    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
366310    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
366311    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
366312    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
366313    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
366314    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
366315    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
366316    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
366317    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
366318    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
366319    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
366320    +LENGTH _WARN_ $4
366321    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
366322    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
366323    +
366324    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
366325    +
366326    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
366327    +
366328    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
366329    +
366330    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
366331    +
366332    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
366333    +
366334    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
366335    +
366336    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
366337    +
366338    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
366339    +
366340    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
366341    +
366342    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
366343    +
366344    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
366345    +
366346    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
366347    +
366348    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
366349    +
366350    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
366351    +
366352    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
366353    +
366354    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
366355    +
366356    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
366357    +
366358    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
366359    +
366360    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
366361    +
366362    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
366363    +
366364    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
366365    +
366366    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
366367    +
366368    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
366369    +
366370    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
366371    +
366372    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
366373    +
366374    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
366375    +
366376    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
366377    +
366378    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
366379    +
366380    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
366381    +
366382    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
366383    +
366384    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
366385    +
366386    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
366387    +
366388    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
366389    +
366390    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
366391    +
366392    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
366393    +
366394    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
366395    +
366396    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
366397    +
366398    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
366399    +
366400    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
366401    +
366402    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
366403    +
366404    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
366405    +
366406    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
366407    +
366408    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
366409    +
366410    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
366411    +
366412    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
366413    +
366414    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
366415    +
366416    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
366417    +
366418    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
366419    +
366420    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
366421    +
366422    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
366423    +
366424    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
366425    +
366426    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
366427    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
366428    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
366429    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
366430    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366432    +end;
MPRINT(EM_DIAGRAM):   end;
366433    +else do;
MPRINT(EM_DIAGRAM):   else do;
366434    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366435    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
366436    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366437    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
366438    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
366439    +   end;
MPRINT(EM_DIAGRAM):   end;
366440    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
366441    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
366442    +   end;
MPRINT(EM_DIAGRAM):   end;
366443    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366444    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
366445    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366446    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366447    +   end;
MPRINT(EM_DIAGRAM):   end;
366448    +end;
MPRINT(EM_DIAGRAM):   end;
366449    +
366450    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
366451    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
366452    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
366453    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
366454    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
366455    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
366456    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366458    +end;
MPRINT(EM_DIAGRAM):   end;
366459    +else do;
MPRINT(EM_DIAGRAM):   else do;
366460    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366461    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
366462    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366463    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
366464    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
366465    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
366466    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
366467    +   end;
MPRINT(EM_DIAGRAM):   end;
366468    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
366469    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
366470    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
366471    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
366472    +   end;
MPRINT(EM_DIAGRAM):   end;
366473    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366474    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
366475    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
366476    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
366477    +   end;
MPRINT(EM_DIAGRAM):   end;
366478    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366479    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
366480    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
366481    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
366482    +   end;
MPRINT(EM_DIAGRAM):   end;
366483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366484    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
366485    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
366486    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
366487    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366488    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366489    +   end;
MPRINT(EM_DIAGRAM):   end;
366490    +end;
MPRINT(EM_DIAGRAM):   end;
366491    +
366492    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
366493    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
366494    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
366495    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
366496    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
366497    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
366498    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366499    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366500    +end;
MPRINT(EM_DIAGRAM):   end;
366501    +else do;
MPRINT(EM_DIAGRAM):   else do;
366502    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366503    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
366504    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366505    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
366506    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
366507    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
366508    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
366509    +   end;
MPRINT(EM_DIAGRAM):   end;
366510    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366511    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
366512    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
366513    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
366514    +   end;
MPRINT(EM_DIAGRAM):   end;
366515    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
366516    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
366517    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
366518    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
366519    +   end;
MPRINT(EM_DIAGRAM):   end;
366520    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366521    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
366522    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
366523    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
366524    +   end;
MPRINT(EM_DIAGRAM):   end;
366525    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366526    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
366527    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
366528    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
366529    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366530    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366531    +   end;
MPRINT(EM_DIAGRAM):   end;
366532    +end;
MPRINT(EM_DIAGRAM):   end;
366533    +
366534    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
366535    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
366536    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
366537    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
366538    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
366539    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
366540    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366541    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366542    +end;
MPRINT(EM_DIAGRAM):   end;
366543    +else do;
MPRINT(EM_DIAGRAM):   else do;
366544    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366545    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
366546    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366547    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366548    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
366549    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
366550    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
366551    +   end;
MPRINT(EM_DIAGRAM):   end;
366552    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366553    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
366554    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
366555    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
366556    +   end;
MPRINT(EM_DIAGRAM):   end;
366557    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366558    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
366559    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
366560    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
366561    +   end;
MPRINT(EM_DIAGRAM):   end;
366562    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366563    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
366564    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
366565    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
366566    +   end;
MPRINT(EM_DIAGRAM):   end;
366567    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366568    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
366569    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
366570    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
366571    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366572    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366573    +   end;
MPRINT(EM_DIAGRAM):   end;
366574    +end;
MPRINT(EM_DIAGRAM):   end;
366575    +
366576    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
366577    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
366578    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
366579    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
366580    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
366581    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
366582    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366583    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366584    +end;
MPRINT(EM_DIAGRAM):   end;
366585    +else do;
MPRINT(EM_DIAGRAM):   else do;
366586    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366587    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
366588    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366589    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366590    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
366591    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
366592    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
366593    +   end;
MPRINT(EM_DIAGRAM):   end;
366594    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366595    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
366596    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
366597    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
366598    +   end;
MPRINT(EM_DIAGRAM):   end;
366599    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366600    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
366601    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
366602    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
366603    +   end;
MPRINT(EM_DIAGRAM):   end;
366604    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366605    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
366606    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
366607    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
366608    +   end;
MPRINT(EM_DIAGRAM):   end;
366609    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366610    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
366611    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
366612    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
366613    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366614    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366615    +   end;
MPRINT(EM_DIAGRAM):   end;
366616    +end;
MPRINT(EM_DIAGRAM):   end;
366617    +
366618    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
366619    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
366620    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
366621    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
366622    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
366623    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
366624    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366625    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366626    +end;
MPRINT(EM_DIAGRAM):   end;
366627    +else do;
MPRINT(EM_DIAGRAM):   else do;
366628    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366629    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
366630    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366631    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366632    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
366633    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
366634    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
366635    +   end;
MPRINT(EM_DIAGRAM):   end;
366636    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366637    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
366638    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
366639    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
366640    +   end;
MPRINT(EM_DIAGRAM):   end;
366641    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366642    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
366643    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
366644    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
366645    +   end;
MPRINT(EM_DIAGRAM):   end;
366646    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366647    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
366648    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
366649    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
366650    +   end;
MPRINT(EM_DIAGRAM):   end;
366651    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366652    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
366653    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
366654    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
366655    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366656    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366657    +   end;
MPRINT(EM_DIAGRAM):   end;
366658    +end;
MPRINT(EM_DIAGRAM):   end;
366659    +
366660    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
366661    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
366662    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
366663    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
366664    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
366665    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
366666    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366667    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366668    +end;
MPRINT(EM_DIAGRAM):   end;
366669    +else do;
MPRINT(EM_DIAGRAM):   else do;
366670    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366671    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
366672    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366673    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366674    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
366675    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
366676    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
366677    +   end;
MPRINT(EM_DIAGRAM):   end;
366678    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366679    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
366680    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
366681    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
366682    +   end;
MPRINT(EM_DIAGRAM):   end;
366683    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366684    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
366685    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
366686    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
366687    +   end;
MPRINT(EM_DIAGRAM):   end;
366688    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366689    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
366690    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
366691    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
366692    +   end;
MPRINT(EM_DIAGRAM):   end;
366693    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366694    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
366695    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
366696    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
366697    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366698    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366699    +   end;
MPRINT(EM_DIAGRAM):   end;
366700    +end;
MPRINT(EM_DIAGRAM):   end;
366701    +
366702    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
366703    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
366704    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
366705    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
366706    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
366707    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
366708    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366709    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366710    +end;
MPRINT(EM_DIAGRAM):   end;
366711    +else do;
MPRINT(EM_DIAGRAM):   else do;
366712    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366713    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
366714    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366715    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366716    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
366717    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
366718    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
366719    +   end;
MPRINT(EM_DIAGRAM):   end;
366720    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366721    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
366722    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
366723    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
366724    +   end;
MPRINT(EM_DIAGRAM):   end;
366725    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366726    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
366727    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
366728    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
366729    +   end;
MPRINT(EM_DIAGRAM):   end;
366730    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366731    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
366732    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
366733    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
366734    +   end;
MPRINT(EM_DIAGRAM):   end;
366735    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366736    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
366737    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
366738    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
366739    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366740    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366741    +   end;
MPRINT(EM_DIAGRAM):   end;
366742    +end;
MPRINT(EM_DIAGRAM):   end;
366743    +
366744    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
366745    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
366746    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
366747    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
366748    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
366749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366751    +end;
MPRINT(EM_DIAGRAM):   end;
366752    +else do;
MPRINT(EM_DIAGRAM):   else do;
366753    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366754    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
366755    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366756    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366757    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
366758    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
366759    +   end;
MPRINT(EM_DIAGRAM):   end;
366760    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366761    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
366762    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
366763    +   end;
MPRINT(EM_DIAGRAM):   end;
366764    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366765    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
366766    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
366767    +   end;
MPRINT(EM_DIAGRAM):   end;
366768    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366769    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
366770    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
366771    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366772    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366773    +   end;
MPRINT(EM_DIAGRAM):   end;
366774    +end;
MPRINT(EM_DIAGRAM):   end;
366775    +
366776    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
366777    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
366778    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
366779    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
366780    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
366781    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
366782    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366783    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366784    +end;
MPRINT(EM_DIAGRAM):   end;
366785    +else do;
MPRINT(EM_DIAGRAM):   else do;
366786    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366787    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
366788    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366789    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
366790    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
366791    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
366792    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
366793    +   end;
MPRINT(EM_DIAGRAM):   end;
366794    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366795    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
366796    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
366797    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
366798    +   end;
MPRINT(EM_DIAGRAM):   end;
366799    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366800    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
366801    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
366802    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
366803    +   end;
MPRINT(EM_DIAGRAM):   end;
366804    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
366805    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
366806    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
366807    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
366808    +   end;
MPRINT(EM_DIAGRAM):   end;
366809    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366810    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
366811    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
366812    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
366813    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366814    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366815    +   end;
MPRINT(EM_DIAGRAM):   end;
366816    +end;
MPRINT(EM_DIAGRAM):   end;
366817    +
366818    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
366819    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
366820    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
366821    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
366822    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
366823    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
366824    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366825    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366826    +end;
MPRINT(EM_DIAGRAM):   end;
366827    +else do;
MPRINT(EM_DIAGRAM):   else do;
366828    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366829    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
366830    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366831    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366832    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
366833    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
366834    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
366835    +   end;
MPRINT(EM_DIAGRAM):   end;
366836    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366837    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
366838    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
366839    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
366840    +   end;
MPRINT(EM_DIAGRAM):   end;
366841    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366842    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
366843    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
366844    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
366845    +   end;
MPRINT(EM_DIAGRAM):   end;
366846    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366847    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
366848    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
366849    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
366850    +   end;
MPRINT(EM_DIAGRAM):   end;
366851    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366852    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
366853    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
366854    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
366855    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366856    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366857    +   end;
MPRINT(EM_DIAGRAM):   end;
366858    +end;
MPRINT(EM_DIAGRAM):   end;
366859    +
366860    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
366861    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
366862    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
366863    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
366864    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
366865    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
366866    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366867    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366868    +end;
MPRINT(EM_DIAGRAM):   end;
366869    +else do;
MPRINT(EM_DIAGRAM):   else do;
366870    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366871    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
366872    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366873    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
366874    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
366875    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
366876    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
366877    +   end;
MPRINT(EM_DIAGRAM):   end;
366878    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
366879    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
366880    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
366881    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
366882    +   end;
MPRINT(EM_DIAGRAM):   end;
366883    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366884    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
366885    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
366886    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
366887    +   end;
MPRINT(EM_DIAGRAM):   end;
366888    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366889    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
366890    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
366891    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
366892    +   end;
MPRINT(EM_DIAGRAM):   end;
366893    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366894    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
366895    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
366896    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
366897    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366898    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366899    +   end;
MPRINT(EM_DIAGRAM):   end;
366900    +end;
MPRINT(EM_DIAGRAM):   end;
366901    +
366902    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
366903    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
366904    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
366905    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
366906    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
366907    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
366908    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366909    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366910    +end;
MPRINT(EM_DIAGRAM):   end;
366911    +else do;
MPRINT(EM_DIAGRAM):   else do;
366912    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366913    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
366914    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366915    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
366916    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
366917    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
366918    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
366919    +   end;
MPRINT(EM_DIAGRAM):   end;
366920    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
366921    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
366922    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
366923    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
366924    +   end;
MPRINT(EM_DIAGRAM):   end;
366925    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366926    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
366927    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
366928    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
366929    +   end;
MPRINT(EM_DIAGRAM):   end;
366930    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366931    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
366932    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
366933    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
366934    +   end;
MPRINT(EM_DIAGRAM):   end;
366935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366936    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
366937    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
366938    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
366939    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366940    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366941    +   end;
MPRINT(EM_DIAGRAM):   end;
366942    +end;
MPRINT(EM_DIAGRAM):   end;
366943    +
366944    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
366945    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
366946    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
366947    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
366948    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
366949    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
366950    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
366951    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366952    +end;
MPRINT(EM_DIAGRAM):   end;
366953    +else do;
MPRINT(EM_DIAGRAM):   else do;
366954    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
366955    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
366956    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
366957    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
366958    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
366959    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
366960    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
366961    +   end;
MPRINT(EM_DIAGRAM):   end;
366962    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
366963    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
366964    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
366965    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
366966    +   end;
MPRINT(EM_DIAGRAM):   end;
366967    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
366968    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
366969    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
366970    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
366971    +   end;
MPRINT(EM_DIAGRAM):   end;
366972    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
366973    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
366974    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
366975    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
366976    +   end;
MPRINT(EM_DIAGRAM):   end;
366977    +   else do;
MPRINT(EM_DIAGRAM):   else do;
366978    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
366979    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
366980    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
366981    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
366982    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366983    +   end;
MPRINT(EM_DIAGRAM):   end;
366984    +end;
MPRINT(EM_DIAGRAM):   end;
366985    +
366986    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
366987    +*** Checking missing input Interval
366988    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
366989    +
366990    +IF NMISS(
366991    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
366992    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
366993    +
366994    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
366995    +END;
MPRINT(EM_DIAGRAM):   END;
366996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
366997    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
366998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
366999    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
367000    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
367001    +END;
MPRINT(EM_DIAGRAM):   END;
367002    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
367003    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
367004    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
367005    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
367006    +END;
MPRINT(EM_DIAGRAM):   END;
367007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367008    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
367009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367011    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
367012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367013    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
367014    +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
367015    +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
367016    +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
367017    +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
367018    +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
367019    +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
367020    +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
367021    +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
367022    +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
367023    +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
367024    +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
367025    +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
367026    +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
367027    +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
367028    +          +    -2.14876852259668 * GRP_MntFishProducts3
367029    +          +     1.83260002021024 * GRP_MntFishProducts4
367030    +          +     0.51096990118592 * GRP_MntGoldProds2
367031    +          +     0.50696068122006 * GRP_MntGoldProds3
367032    +          +     0.74230349643824 * GRP_MntGoldProds4
367033    +          +     1.49045716090612 * GRP_MntMeatProducts2
367034    +          +    -0.61254307122158 * GRP_MntMeatProducts3
367035    +          +     1.56999187930143 * GRP_MntMeatProducts4
367036    +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
367037    +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
367038    +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
367039    +          +     1.58785113957128 * GRP_NumCatalogPurchases4
367040    +          +    -0.62454988809727 * GRP_NumDistPurchases2
367041    +          +     1.37295312356584 * GRP_NumDistPurchases3
367042    +          +      1.5440119795954 * GRP_NumDistPurchases4
367043    +          +    -0.26547715068585 * GRP_NumWebPurchases2
367044    +          +     2.62305554684179 * GRP_NumWebPurchases3
367045    +          +     0.91247524672275 * GRP_NumWebPurchases4
367046    +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
367047    +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
367048    +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
367049    +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
367050    +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
367051    +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
367052    +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
367053    +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
367054    +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
367055    +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
367056    +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
367057    +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
367058    +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
367059    +          +    -1.03235983303498 * GRP_MntFishProducts3
367060    +          +     1.43737242782063 * GRP_MntFishProducts4
367061    +          +    -0.10286834037331 * GRP_MntGoldProds2
367062    +          +     0.74054061895326 * GRP_MntGoldProds3
367063    +          +     0.27916388015938 * GRP_MntGoldProds4
367064    +          +     0.12775665160956 * GRP_MntMeatProducts2
367065    +          +     1.94239791535409 * GRP_MntMeatProducts3
367066    +          +      2.8604089986372 * GRP_MntMeatProducts4
367067    +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
367068    +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
367069    +          +     0.80335076525252 * GRP_NumCatalogPurchases3
367070    +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
367071    +          +    -0.87650147959772 * GRP_NumDistPurchases2
367072    +          +     1.12706069993787 * GRP_NumDistPurchases3
367073    +          +    -1.96498929641584 * GRP_NumDistPurchases4
367074    +          +     1.06875251220076 * GRP_NumWebPurchases2
367075    +          +     1.19584362733739 * GRP_NumWebPurchases3
367076    +          +    -0.75462993535725 * GRP_NumWebPurchases4
367077    +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
367078    +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
367079    +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
367080    +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
367081    +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
367082    +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
367083    +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
367084    +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
367085    +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
367086    +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
367087    +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
367088    +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
367089    +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
367090    +          +    -0.11485741469493 * GRP_MntFishProducts3
367091    +          +     1.45721315298108 * GRP_MntFishProducts4
367092    +          +     0.26086838482974 * GRP_MntGoldProds2
367093    +          +    -0.13326700912822 * GRP_MntGoldProds3
367094    +          +    -0.31998514458297 * GRP_MntGoldProds4
367095    +          +     0.87003612251325 * GRP_MntMeatProducts2
367096    +          +    -0.25985022264915 * GRP_MntMeatProducts3
367097    +          +    -0.87011310494619 * GRP_MntMeatProducts4
367098    +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
367099    +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
367100    +          +     1.20111821881337 * GRP_NumCatalogPurchases3
367101    +          +     1.02378241927709 * GRP_NumCatalogPurchases4
367102    +          +      1.0835984835482 * GRP_NumDistPurchases2
367103    +          +     1.45339482543591 * GRP_NumDistPurchases3
367104    +          +     0.28792255375632 * GRP_NumDistPurchases4
367105    +          +     1.88871344284328 * GRP_NumWebPurchases2
367106    +          +     1.61086784930132 * GRP_NumWebPurchases3
367107    +          +     0.49767560191528 * GRP_NumWebPurchases4
367108    +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
367109    +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
367110    +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
367111    +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
367112    +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
367113    +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
367114    +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
367115    +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
367116    +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
367117    +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
367118    +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
367119    +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
367120    +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
367121    +          +    -0.00259407262353 * GRP_MntFishProducts3
367122    +          +     0.26637234051452 * GRP_MntFishProducts4
367123    +          +     1.23072457246487 * GRP_MntGoldProds2
367124    +          +     0.27789879553199 * GRP_MntGoldProds3
367125    +          +    -1.84318316043809 * GRP_MntGoldProds4
367126    +          +    -0.37980618439099 * GRP_MntMeatProducts2
367127    +          +    -0.29547725841338 * GRP_MntMeatProducts3
367128    +          +      1.3351420752995 * GRP_MntMeatProducts4
367129    +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
367130    +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
367131    +          +     1.64715242240489 * GRP_NumCatalogPurchases3
367132    +          +     0.01013329918753 * GRP_NumCatalogPurchases4
367133    +          +      0.0553124072484 * GRP_NumDistPurchases2
367134    +          +     0.76354979572241 * GRP_NumDistPurchases3
367135    +          +     0.88878742575161 * GRP_NumDistPurchases4
367136    +          +    -0.02629928898859 * GRP_NumWebPurchases2
367137    +          +     1.58583162640849 * GRP_NumWebPurchases3
367138    +          +    -0.90266287490405 * GRP_NumWebPurchases4
367139    +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
367140    +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
367141    +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
367142    +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
367143    +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
367144    +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
367145    +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
367146    +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
367147    +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
367148    +        GRP_Income2  +     2.20143802199151 * GRP_Income3
367149    +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
367150    +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
367151    +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
367152    +          +    -1.66553508839843 * GRP_MntFishProducts3
367153    +          +     3.34099127472134 * GRP_MntFishProducts4
367154    +          +    -3.77620930649926 * GRP_MntGoldProds2
367155    +          +     2.75980592823208 * GRP_MntGoldProds3
367156    +          +    -0.90664928399655 * GRP_MntGoldProds4
367157    +          +    -1.27778215433985 * GRP_MntMeatProducts2
367158    +          +    -0.38584098789626 * GRP_MntMeatProducts3
367159    +          +      0.8642940393434 * GRP_MntMeatProducts4
367160    +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
367161    +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
367162    +          +     0.54374663319998 * GRP_NumCatalogPurchases3
367163    +          +     0.84217480467185 * GRP_NumCatalogPurchases4
367164    +          +    -0.04373645189331 * GRP_NumDistPurchases2
367165    +          +    -3.26167594790936 * GRP_NumDistPurchases3
367166    +          +    -1.17302893253955 * GRP_NumDistPurchases4
367167    +          +     1.08907656354379 * GRP_NumWebPurchases2
367168    +          +    -1.23512651413063 * GRP_NumWebPurchases3
367169    +          +     1.21540059785356 * GRP_NumWebPurchases4
367170    +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
367171    +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
367172    +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
367173    +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
367174    +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
367175    +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
367176    +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
367177    +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
367178    +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
367179    +        GRP_Income2  +     2.31528209254516 * GRP_Income3
367180    +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
367181    +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
367182    +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
367183    +          +    -2.67281939906452 * GRP_MntFishProducts3
367184    +          +     0.40242786465667 * GRP_MntFishProducts4
367185    +          +     1.21530608953831 * GRP_MntGoldProds2
367186    +          +      1.3503878333604 * GRP_MntGoldProds3
367187    +          +    -0.90580344196397 * GRP_MntGoldProds4
367188    +          +    -1.45763540546851 * GRP_MntMeatProducts2
367189    +          +     -1.1437696213546 * GRP_MntMeatProducts3
367190    +          +    -0.95836970043212 * GRP_MntMeatProducts4
367191    +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
367192    +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
367193    +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
367194    +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
367195    +          +     0.41629563300233 * GRP_NumDistPurchases2
367196    +          +     2.64707563295858 * GRP_NumDistPurchases3
367197    +          +    -2.61014123917694 * GRP_NumDistPurchases4
367198    +          +     1.31436489534812 * GRP_NumWebPurchases2
367199    +          +    -0.44152222308186 * GRP_NumWebPurchases3
367200    +          +     1.72168992115176 * GRP_NumWebPurchases4
367201    +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
367202    +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
367203    +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
367204    +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
367205    +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
367206    +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
367207    +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
367208    +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
367209    +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
367210    +        GRP_Income2  +     1.14246001493098 * GRP_Income3
367211    +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
367212    +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
367213    +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
367214    +          +      -0.152562533802 * GRP_MntFishProducts3
367215    +          +     0.16800852501402 * GRP_MntFishProducts4
367216    +          +    -0.43436913890783 * GRP_MntGoldProds2
367217    +          +    -0.36427695823088 * GRP_MntGoldProds3
367218    +          +    -0.70562605444874 * GRP_MntGoldProds4
367219    +          +      1.1896868399991 * GRP_MntMeatProducts2
367220    +          +    -3.25683109762258 * GRP_MntMeatProducts3
367221    +          +     1.07082922763777 * GRP_MntMeatProducts4
367222    +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
367223    +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
367224    +          +     2.86401269707592 * GRP_NumCatalogPurchases3
367225    +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
367226    +          +     1.70072621341351 * GRP_NumDistPurchases2
367227    +          +    -0.01744947613595 * GRP_NumDistPurchases3
367228    +          +    -2.08742260039568 * GRP_NumDistPurchases4
367229    +          +    -1.04444309037822 * GRP_NumWebPurchases2
367230    +          +    -3.12746125340209 * GRP_NumWebPurchases3
367231    +          +    -0.71369198142362 * GRP_NumWebPurchases4
367232    +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
367233    +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
367234    +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
367235    +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
367236    +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
367237    +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
367238    +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
367239    +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
367240    +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
367241    +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
367242    +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
367243    +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
367244    +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
367245    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
367246    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
367247    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
367248    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
367249    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
367250    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
367251    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
367252    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
367253    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
367254    +END;
MPRINT(EM_DIAGRAM):   END;
367255    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
367256    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
367257    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
367258    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
367259    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
367260    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
367261    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
367262    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
367263    +END;
MPRINT(EM_DIAGRAM):   END;
367264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367265    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
367266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367267    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
367268    +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
367269    +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
367270    +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
367271    +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
367272    +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
367273    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
367274    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
367275    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
367276    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
367277    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
367278    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
367279    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
367280    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
367281    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
367282    +END;
MPRINT(EM_DIAGRAM):   END;
367283    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
367284    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
367285    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
367286    +END;
MPRINT(EM_DIAGRAM):   END;
367287    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
367288    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
367289    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
367290    +END;
MPRINT(EM_DIAGRAM):   END;
367291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367292    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
367293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
367294    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
367295    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
367296    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
367297    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
367298    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
367299    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
367300    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
367301    +END;
MPRINT(EM_DIAGRAM):   END;
367302    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
367303    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
367304    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
367305    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
367306     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
367307     quit;
367308     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
367309     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
367310     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
367311     retain ID 2 Node "AutoNeural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural22";
367312     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
367313     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2297 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2297 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367314     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
367315     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367316     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2297 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2297 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367317     proc sort data=EMWS8.AutoNeural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural22_variableset out=_temp2(keep=NAME 
CREATOR);
367318     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367319     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367320     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367321     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
367322     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
367323     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367324     proc contents data=EMWS8.AutoNeural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural22_train out=_meta(keep=NAME) noprint;
367325     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

367326     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
367327     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367328     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367329     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367330     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
367331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367332     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367333     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
367334     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
367334   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1084 rows and 5 columns.

367335     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367336     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
367337     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1084 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1084 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

367338     filename _pref
367338   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
367339     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
367340     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
367341    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
367342    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
367343    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
367344    +
367345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367346    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
367347    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367348    +LABEL GRP_AcceptedCmp5 =
367349    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
367350    +
367351    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
367352    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
367353    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
367354    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
367355    +end;
MPRINT(EM_DIAGRAM):   end;
367356    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
367357    +if (_UFORMAT eq '0'
367358    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
367359    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
367360    +end;
MPRINT(EM_DIAGRAM):   end;
367361    +else
367362    +if (_UFORMAT eq '1'
367363    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
367364    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
367365    +end;
MPRINT(EM_DIAGRAM):   end;
367366    +else do;
MPRINT(EM_DIAGRAM):   else do;
367367    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
367368    +end;
MPRINT(EM_DIAGRAM):   end;
367369    +end;
MPRINT(EM_DIAGRAM):   end;
367370    +
367371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367372    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
367373    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367374    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
367375    +
367376    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
367377    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
367378    +end;
MPRINT(EM_DIAGRAM):   end;
367379    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
367380    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
367381    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
367382    +end;
MPRINT(EM_DIAGRAM):   end;
367383    +else
367384    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
367385    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
367386    +end;
MPRINT(EM_DIAGRAM):   end;
367387    +else
367388    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
367389    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
367390    +end;
MPRINT(EM_DIAGRAM):   end;
367391    +else
367392    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
367393    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
367394    +end;
MPRINT(EM_DIAGRAM):   end;
367395    +end;
MPRINT(EM_DIAGRAM):   end;
367396    +
367397    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367398    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
367399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367400    +LABEL GRP_Income =
367401    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
367402    +
367403    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
367404    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
367405    +end;
MPRINT(EM_DIAGRAM):   end;
367406    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
367407    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
367408    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
367409    +end;
MPRINT(EM_DIAGRAM):   end;
367410    +else
367411    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
367412    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
367413    +end;
MPRINT(EM_DIAGRAM):   end;
367414    +else
367415    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
367416    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
367417    +end;
MPRINT(EM_DIAGRAM):   end;
367418    +else
367419    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
367420    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
367421    +end;
MPRINT(EM_DIAGRAM):   end;
367422    +end;
MPRINT(EM_DIAGRAM):   end;
367423    +
367424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367425    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
367426    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367427    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
367428    +
367429    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
367430    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
367431    +end;
MPRINT(EM_DIAGRAM):   end;
367432    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
367433    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
367434    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
367435    +end;
MPRINT(EM_DIAGRAM):   end;
367436    +else
367437    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
367438    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
367439    +end;
MPRINT(EM_DIAGRAM):   end;
367440    +else
367441    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
367442    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
367443    +end;
MPRINT(EM_DIAGRAM):   end;
367444    +else
367445    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
367446    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
367447    +end;
MPRINT(EM_DIAGRAM):   end;
367448    +end;
MPRINT(EM_DIAGRAM):   end;
367449    +
367450    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367451    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
367452    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367453    +LABEL GRP_MntFishProducts =
367454    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
367455    +
367456    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
367457    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
367458    +end;
MPRINT(EM_DIAGRAM):   end;
367459    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
367460    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
367461    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
367462    +end;
MPRINT(EM_DIAGRAM):   end;
367463    +else
367464    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
367465    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
367466    +end;
MPRINT(EM_DIAGRAM):   end;
367467    +else
367468    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
367469    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
367470    +end;
MPRINT(EM_DIAGRAM):   end;
367471    +else
367472    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
367473    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
367474    +end;
MPRINT(EM_DIAGRAM):   end;
367475    +end;
MPRINT(EM_DIAGRAM):   end;
367476    +
367477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367478    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
367479    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367480    +LABEL GRP_MntGoldProds =
367481    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
367482    +
367483    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
367484    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
367485    +end;
MPRINT(EM_DIAGRAM):   end;
367486    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
367487    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
367488    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
367489    +end;
MPRINT(EM_DIAGRAM):   end;
367490    +else
367491    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
367492    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
367493    +end;
MPRINT(EM_DIAGRAM):   end;
367494    +else
367495    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
367496    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
367497    +end;
MPRINT(EM_DIAGRAM):   end;
367498    +else
367499    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
367500    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
367501    +end;
MPRINT(EM_DIAGRAM):   end;
367502    +end;
MPRINT(EM_DIAGRAM):   end;
367503    +
367504    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367505    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
367506    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367507    +LABEL GRP_MntMeatProducts =
367508    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
367509    +
367510    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
367511    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
367512    +end;
MPRINT(EM_DIAGRAM):   end;
367513    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
367514    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
367515    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
367516    +end;
MPRINT(EM_DIAGRAM):   end;
367517    +else
367518    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
367519    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
367520    +end;
MPRINT(EM_DIAGRAM):   end;
367521    +else
367522    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
367523    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
367524    +end;
MPRINT(EM_DIAGRAM):   end;
367525    +else
367526    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
367527    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
367528    +end;
MPRINT(EM_DIAGRAM):   end;
367529    +end;
MPRINT(EM_DIAGRAM):   end;
367530    +
367531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367532    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
367533    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367534    +LABEL GRP_MntWines =
367535    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
367536    +
367537    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
367538    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
367539    +end;
MPRINT(EM_DIAGRAM):   end;
367540    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
367541    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
367542    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
367543    +end;
MPRINT(EM_DIAGRAM):   end;
367544    +else
367545    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
367546    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
367547    +end;
MPRINT(EM_DIAGRAM):   end;
367548    +else
367549    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
367550    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
367551    +end;
MPRINT(EM_DIAGRAM):   end;
367552    +else
367553    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
367554    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
367555    +end;
MPRINT(EM_DIAGRAM):   end;
367556    +end;
MPRINT(EM_DIAGRAM):   end;
367557    +
367558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367559    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
367560    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367561    +LABEL GRP_NumCatalogPurchases =
367562    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
367563    +
367564    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
367565    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
367566    +end;
MPRINT(EM_DIAGRAM):   end;
367567    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
367568    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
367569    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
367570    +end;
MPRINT(EM_DIAGRAM):   end;
367571    +else
367572    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
367573    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
367574    +end;
MPRINT(EM_DIAGRAM):   end;
367575    +else
367576    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
367577    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
367578    +end;
MPRINT(EM_DIAGRAM):   end;
367579    +else
367580    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
367581    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
367582    +end;
MPRINT(EM_DIAGRAM):   end;
367583    +end;
MPRINT(EM_DIAGRAM):   end;
367584    +
367585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367586    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
367587    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367588    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
367589    +
367590    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
367591    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
367592    +end;
MPRINT(EM_DIAGRAM):   end;
367593    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
367594    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
367595    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
367596    +end;
MPRINT(EM_DIAGRAM):   end;
367597    +else
367598    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
367599    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
367600    +end;
MPRINT(EM_DIAGRAM):   end;
367601    +else
367602    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
367603    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
367604    +end;
MPRINT(EM_DIAGRAM):   end;
367605    +else
367606    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
367607    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
367608    +end;
MPRINT(EM_DIAGRAM):   end;
367609    +end;
MPRINT(EM_DIAGRAM):   end;
367610    +
367611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367612    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
367613    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367614    +LABEL GRP_NumWebPurchases =
367615    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
367616    +
367617    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
367618    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
367619    +end;
MPRINT(EM_DIAGRAM):   end;
367620    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
367621    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
367622    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
367623    +end;
MPRINT(EM_DIAGRAM):   end;
367624    +else
367625    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
367626    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
367627    +end;
MPRINT(EM_DIAGRAM):   end;
367628    +else
367629    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
367630    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
367631    +end;
MPRINT(EM_DIAGRAM):   end;
367632    +else
367633    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
367634    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
367635    +end;
MPRINT(EM_DIAGRAM):   end;
367636    +end;
MPRINT(EM_DIAGRAM):   end;
367637    +
367638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367639    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
367640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367641    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
367642    +
367643    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
367644    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
367645    +end;
MPRINT(EM_DIAGRAM):   end;
367646    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
367647    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
367648    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
367649    +end;
MPRINT(EM_DIAGRAM):   end;
367650    +else
367651    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
367652    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
367653    +end;
MPRINT(EM_DIAGRAM):   end;
367654    +else
367655    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
367656    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
367657    +end;
MPRINT(EM_DIAGRAM):   end;
367658    +else
367659    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
367660    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
367661    +end;
MPRINT(EM_DIAGRAM):   end;
367662    +end;
MPRINT(EM_DIAGRAM):   end;
367663    +
367664    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367665    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
367666    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367667    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
367668    +
367669    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
367670    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
367671    +end;
MPRINT(EM_DIAGRAM):   end;
367672    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
367673    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
367674    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
367675    +end;
MPRINT(EM_DIAGRAM):   end;
367676    +else
367677    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
367678    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
367679    +end;
MPRINT(EM_DIAGRAM):   end;
367680    +else
367681    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
367682    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
367683    +end;
MPRINT(EM_DIAGRAM):   end;
367684    +else
367685    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
367686    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
367687    +end;
MPRINT(EM_DIAGRAM):   end;
367688    +end;
MPRINT(EM_DIAGRAM):   end;
367689    +
367690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367691    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
367692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367693    +LABEL GRP_Recency =
367694    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
367695    +
367696    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
367697    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
367698    +end;
MPRINT(EM_DIAGRAM):   end;
367699    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
367700    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
367701    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
367702    +end;
MPRINT(EM_DIAGRAM):   end;
367703    +else
367704    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
367705    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
367706    +end;
MPRINT(EM_DIAGRAM):   end;
367707    +else
367708    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
367709    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
367710    +end;
MPRINT(EM_DIAGRAM):   end;
367711    +else
367712    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
367713    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
367714    +end;
MPRINT(EM_DIAGRAM):   end;
367715    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
367716     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
367717     quit;
367718     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
367719     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
367720     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
367721     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
367722     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
367723     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367724     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
367725     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367726     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367727     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
367728     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367729     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367730     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367731     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
367732     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
367733     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367734     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
367735     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367736     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
367737     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367738     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367739     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367740     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
367741     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367742     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367743     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
367744     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
367744   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

367745     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367746     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
367747     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1099 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367748     filename _pref
367748   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
367749     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
367750     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
367751    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367752    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
367753    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
367754    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
367755    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
367756    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
367757     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
367758     quit;
367759     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
367760     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
367761     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
367762     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
367763     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
367764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367765     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
367766     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367768     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
367769     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367770     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367771     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367772     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
367773     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
367774     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367775     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
367776     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367777     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
367778     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367779     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367780     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367781     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
367782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367783     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367784     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
367785     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
367785   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

367786     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367787     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
367788     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1103 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367789     filename _pref
367789   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
367790     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
367791     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
367792    +
367793    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
367794    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
367794   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
367795    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
367796    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
367797    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
367798    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
367799    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
367800     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
367801     quit;
367802     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
367803     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
367804     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
367805     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
367806     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
367807     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367808     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
367809     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367810     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367811     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
367812     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367813     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367814     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367815     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
367816     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
367817     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367818     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
367819     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367820     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
367821     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367822     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367823     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367824     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
367825     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367826     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367827     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
367828     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
367828   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

367829     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367830     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
367831     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1142 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367832     filename _pref
367832   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
367833     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
367834     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
367835    +
367836    +
367837    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
367838    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
367839    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
367840    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
367841    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
367842    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367843    +
367844    +
367845    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
367846    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
367847    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
367848    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
367849    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
367850    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367851    +
367852    +
367853    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
367854    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
367855    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
367856    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
367857    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
367858    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367859    +
367860    +
367861    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
367862    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
367863    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
367864    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
367865    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
367866    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367867    +
367868    +
367869    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
367870    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
367871    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
367872    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
367873    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
367874    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367875    +
367876    +
367877    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
367878    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
367879    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
367880    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
367881    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
367882    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367883    +
367884    +
367885    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
367886    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
367887    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
367888    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
367889    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
367890    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367891    +
367892    +
367893    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
367894    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
367895    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
367896    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
367897    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
367898    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
367899    +if
367900    +_FILTERNORM1 not in ( '.')
367901    + and
367902    +_FILTERNORM2 not in ( '.')
367903    + and
367904    +_FILTERNORM3 not in ( '.')
367905    + and
367906    +_FILTERNORM4 not in ( '.')
367907    + and
367908    +_FILTERNORM5 not in ( '.')
367909    + and
367910    +_FILTERNORM6 not in ( '.')
367911    + and
367912    +_FILTERNORM7 not in ( ' ')
367913    + and
367914    +_FILTERNORM8 not in ( ' ')
367915    +and
367916    +( Dt_Customer ne .)
367917    +and ( Income ne . and (Income<=107000))
367918    +and ( Kidhome ne .)
367919    +and ( MntFishProducts ne .)
367920    +and ( MntFruits ne .)
367921    +and ( MntGoldProds ne .)
367922    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
367923    +and ( MntSweetProducts ne .)
367924    +and ( MntWines ne .)
367925    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
367926    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
367927    +and ( NumStorePurchases ne .)
367928    +and ( NumWebPurchases ne .)
367929    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
367930    +and ( Recency ne .)
367931    +and ( Teenhome ne .)
367932    +and ( Year_Birth ne .)
367933    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
367934    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
367935    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
367936    +end;
MPRINT(EM_DIAGRAM):   end;
367937    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
367938    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
367939     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
367940     quit;
367941     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
367942     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
367943     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
367944     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
367945     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
367946     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367947     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
367948     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367950     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
367951     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

367953     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367954     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
367955     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
367956     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367957     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
367958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367959     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
367960     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367962     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
367963     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
367964     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
367965     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367966     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
367967     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
367967   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

367968     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

367969     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
367970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1208 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

367971     %macro varDept(fcmpdata=,id=);
367972     %global nobs&id scoreFlag&id;
367973     %let scoreFlag&id = 0;
367974     %if &id=1 or ^&fcmpStart %then %do;
367975     proc sort data=&fcmpdata out=_temp&id nodupkey;
367976     by NAME;
367977     where id=&id and LHS in( %let j=1;
367978     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
367979     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
367980     "&var" %let j = %eval(&j+1);
367981     %end;
367982     );
367983     run;
367984     %let dsid = %sysfunc(open(_temp&id));
367985     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
367986     %let dsid = %sysfunc(close(&dsid));
367987     %if &&nobs&id %then %do;
367988     %let scoreFlag&id = 1;
367989     %let fcmpStart = 1;
367990     %end;
367991     %else %let fcmpStart = 0;
367992     %end;
367993     %else %do;
367994     proc sort data=&fcmpdata out=_tempid;
367995     where id=&id;
367996     by LHS;
367997     run;
367998     %let dsid = %sysfunc(open(_tempid));
367999     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
368000     %let dsid = %sysfunc(close(&dsid));
368001     %if ^&&nobs&id %then %do;
368002     proc datasets lib=work nolist;
368003     delete _tempid;
368004     run;
368005     quit;
368006     %end;
368007     %else %do;
368008     data _tempAll;
368009     set %let j=%eval(&id-1);
368010     %do x=1 %to &j;
368011     %if &&nobs&x %then %do;
368012     _temp&x %end;
368013     %end;
368014     ;
368015     run;
368016     proc sql;
368017     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
368017   ! work._tempid p2 where p.name=p2.lhs;
368018     quit;
368019     data _temp&id;
368020     set _temp&id;
368021     where LHS ne '' and NAME ne '' and Node ne '';
368022     run;
368023     proc datasets lib=work nolist;
368024     delete _tempAll;
368025     run;
368026     %let dsid = %sysfunc(open(_temp&id));
368027     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
368028     %let dsid = %sysfunc(close(&dsid));
368029     %if ^&&nobs&id %then %do;
368030     proc datasets lib=work nolist;
368031     delete _temp&id;
368032     run;
368033     quit;
368034     %end;
368035     %else %do;
368036     %let scoreFlag&id = 1;
368037     data _temp&id;
368038     set _temp&id;
368039     where LHS ne NAME and node ne '';
368040     run;
368041     %let dsid = %sysfunc(open(_temp&id));
368042     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
368043     %let dsid = %sysfunc(close(&dsid));
368044     %if ^&&nobs&id %then %do;
368045     proc datasets lib=work nolist;
368046     delete _temp&id;
368047     run;
368048     quit;
368049     %end;
368050     %else %do;
368051     proc sort data=_temp&id nodupkey;
368052     by LHS NAME;
368053     run;
368054     %end;
368055     %end;
368056     %end;
368057     %end;
368058     %mend varDept;
368059     %macro optCode(outdata=fcmpdata);
368060     %global fcmpStart;
368061     %let fcmpStart = 0;
368062     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
368063     %let NumNodes=9;
368064     %do k=1 %to &NumNodes;
368065     %vardept(fcmpdata=&outdata, id=&k);
368066     %end;
368067     %mend optCode;
368068     %optcode(outData=EMWS8.Ensmbl48_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 87 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 63 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 24 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 72 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

368069     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
368070     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
368071     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
368072     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

368073     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
368074     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
368075     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
368076     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

368077     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
368078     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
368078   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

368079     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

368080     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
368081     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
368082     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

368083     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
368084     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
368085     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
368086     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

368087     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
368088     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
368089     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
368090     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

368091     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
368092     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
368092   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

368093     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

368094     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
368095     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
368096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

368097     filename _pref
368097   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMPUBLISHSCORE.sas";
368098     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
368099     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMPUBLISHSCORE.sas.
368100    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
368101    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
368102    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
368103    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
368104    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
368105    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
368106    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
368107    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
368108    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
368109    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
368110    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
368111    +LENGTH _WARN_ $4
368112    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
368113    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
368114    +
368115    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
368116    +
368117    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
368118    +
368119    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
368120    +
368121    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
368122    +
368123    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
368124    +
368125    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
368126    +
368127    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
368128    +
368129    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
368130    +
368131    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
368132    +
368133    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
368134    +
368135    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
368136    +
368137    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
368138    +
368139    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
368140    +
368141    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
368142    +
368143    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
368144    +
368145    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
368146    +
368147    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
368148    +
368149    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
368150    +
368151    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
368152    +
368153    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
368154    +
368155    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
368156    +
368157    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
368158    +
368159    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
368160    +
368161    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
368162    +
368163    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
368164    +
368165    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
368166    +
368167    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
368168    +
368169    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
368170    +
368171    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
368172    +
368173    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
368174    +
368175    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
368176    +
368177    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
368178    +
368179    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
368180    +
368181    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
368182    +
368183    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
368184    +
368185    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
368186    +
368187    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
368188    +
368189    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
368190    +
368191    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
368192    +
368193    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
368194    +
368195    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
368196    +
368197    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
368198    +
368199    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
368200    +
368201    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
368202    +
368203    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
368204    +
368205    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
368206    +
368207    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
368208    +
368209    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
368210    +
368211    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
368212    +
368213    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
368214    +
368215    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
368216    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
368217    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
368218    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
368219    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368220    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368221    +end;
MPRINT(EM_DIAGRAM):   end;
368222    +else do;
MPRINT(EM_DIAGRAM):   else do;
368223    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368224    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
368225    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368226    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
368227    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
368228    +   end;
MPRINT(EM_DIAGRAM):   end;
368229    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
368230    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
368231    +   end;
MPRINT(EM_DIAGRAM):   end;
368232    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368233    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
368234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368236    +   end;
MPRINT(EM_DIAGRAM):   end;
368237    +end;
MPRINT(EM_DIAGRAM):   end;
368238    +
368239    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
368240    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
368241    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
368242    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
368243    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
368244    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
368245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368247    +end;
MPRINT(EM_DIAGRAM):   end;
368248    +else do;
MPRINT(EM_DIAGRAM):   else do;
368249    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368250    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
368251    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368252    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
368253    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
368254    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
368255    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
368256    +   end;
MPRINT(EM_DIAGRAM):   end;
368257    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
368258    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
368259    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
368260    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
368261    +   end;
MPRINT(EM_DIAGRAM):   end;
368262    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368263    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
368264    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
368265    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
368266    +   end;
MPRINT(EM_DIAGRAM):   end;
368267    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368268    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
368269    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
368270    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
368271    +   end;
MPRINT(EM_DIAGRAM):   end;
368272    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368273    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
368274    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
368275    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
368276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368278    +   end;
MPRINT(EM_DIAGRAM):   end;
368279    +end;
MPRINT(EM_DIAGRAM):   end;
The SAS System

368280    +
368281    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
368282    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
368283    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
368284    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
368285    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
368286    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
368287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368289    +end;
MPRINT(EM_DIAGRAM):   end;
368290    +else do;
MPRINT(EM_DIAGRAM):   else do;
368291    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368292    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
368293    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368294    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
368295    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
368296    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
368297    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
368298    +   end;
MPRINT(EM_DIAGRAM):   end;
368299    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368300    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
368301    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
368302    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
368303    +   end;
MPRINT(EM_DIAGRAM):   end;
368304    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
368305    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
368306    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
368307    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
368308    +   end;
MPRINT(EM_DIAGRAM):   end;
368309    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368310    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
368311    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
368312    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
368313    +   end;
MPRINT(EM_DIAGRAM):   end;
368314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368315    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
368316    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
368317    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
368318    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368319    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368320    +   end;
MPRINT(EM_DIAGRAM):   end;
368321    +end;
MPRINT(EM_DIAGRAM):   end;
368322    +
368323    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
368324    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
368325    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
368326    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
368327    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
368328    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
368329    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368331    +end;
MPRINT(EM_DIAGRAM):   end;
368332    +else do;
MPRINT(EM_DIAGRAM):   else do;
368333    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368334    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
368335    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368336    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368337    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
368338    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
368339    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
368340    +   end;
MPRINT(EM_DIAGRAM):   end;
368341    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368342    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
368343    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
368344    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
368345    +   end;
MPRINT(EM_DIAGRAM):   end;
368346    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368347    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
368348    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
368349    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
368350    +   end;
MPRINT(EM_DIAGRAM):   end;
368351    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368352    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
368353    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
368354    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
368355    +   end;
MPRINT(EM_DIAGRAM):   end;
368356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368357    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
368358    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
368359    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
368360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368362    +   end;
MPRINT(EM_DIAGRAM):   end;
368363    +end;
MPRINT(EM_DIAGRAM):   end;
368364    +
368365    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
368366    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
368367    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
368368    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
368369    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
368370    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
368371    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368372    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368373    +end;
MPRINT(EM_DIAGRAM):   end;
368374    +else do;
MPRINT(EM_DIAGRAM):   else do;
368375    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368376    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
368377    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368378    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368379    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
368380    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
368381    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
368382    +   end;
MPRINT(EM_DIAGRAM):   end;
368383    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368384    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
368385    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
368386    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
368387    +   end;
MPRINT(EM_DIAGRAM):   end;
368388    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368389    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
368390    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
368391    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
368392    +   end;
MPRINT(EM_DIAGRAM):   end;
368393    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368394    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
368395    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
368396    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
368397    +   end;
MPRINT(EM_DIAGRAM):   end;
368398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368399    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
368400    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
368401    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
368402    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368403    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368404    +   end;
MPRINT(EM_DIAGRAM):   end;
368405    +end;
MPRINT(EM_DIAGRAM):   end;
368406    +
368407    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
368408    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
368409    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
368410    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
368411    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
368412    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
368413    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368414    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368415    +end;
MPRINT(EM_DIAGRAM):   end;
368416    +else do;
MPRINT(EM_DIAGRAM):   else do;
368417    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368418    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
368419    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368420    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368421    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
368422    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
368423    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
368424    +   end;
MPRINT(EM_DIAGRAM):   end;
368425    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368426    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
368427    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
368428    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
368429    +   end;
MPRINT(EM_DIAGRAM):   end;
368430    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368431    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
368432    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
368433    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
368434    +   end;
MPRINT(EM_DIAGRAM):   end;
368435    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368436    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
368437    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
368438    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
368439    +   end;
MPRINT(EM_DIAGRAM):   end;
368440    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368441    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
368442    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
368443    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
368444    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368445    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368446    +   end;
MPRINT(EM_DIAGRAM):   end;
368447    +end;
MPRINT(EM_DIAGRAM):   end;
368448    +
368449    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
368450    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
368451    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
368452    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
368453    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
368454    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
368455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368457    +end;
MPRINT(EM_DIAGRAM):   end;
368458    +else do;
MPRINT(EM_DIAGRAM):   else do;
368459    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368460    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
368461    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368462    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368463    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
368464    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
368465    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
368466    +   end;
MPRINT(EM_DIAGRAM):   end;
368467    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368468    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
368469    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
368470    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
368471    +   end;
MPRINT(EM_DIAGRAM):   end;
368472    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368473    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
368474    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
368475    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
368476    +   end;
MPRINT(EM_DIAGRAM):   end;
368477    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368478    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
368479    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
368480    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
368481    +   end;
MPRINT(EM_DIAGRAM):   end;
368482    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368483    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
368484    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
368485    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
368486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368488    +   end;
MPRINT(EM_DIAGRAM):   end;
368489    +end;
MPRINT(EM_DIAGRAM):   end;
368490    +
368491    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
368492    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
368493    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
368494    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
368495    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
368496    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
368497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368499    +end;
MPRINT(EM_DIAGRAM):   end;
368500    +else do;
MPRINT(EM_DIAGRAM):   else do;
368501    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368502    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
368503    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368504    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368505    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
368506    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
368507    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
368508    +   end;
MPRINT(EM_DIAGRAM):   end;
368509    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368510    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
368511    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
368512    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
368513    +   end;
MPRINT(EM_DIAGRAM):   end;
368514    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368515    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
368516    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
368517    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
368518    +   end;
MPRINT(EM_DIAGRAM):   end;
368519    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368520    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
368521    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
368522    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
368523    +   end;
MPRINT(EM_DIAGRAM):   end;
368524    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368525    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
368526    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
368527    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
368528    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368529    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368530    +   end;
MPRINT(EM_DIAGRAM):   end;
368531    +end;
MPRINT(EM_DIAGRAM):   end;
368532    +
368533    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
368534    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
368535    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
368536    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
368537    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
368538    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368539    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368540    +end;
MPRINT(EM_DIAGRAM):   end;
368541    +else do;
MPRINT(EM_DIAGRAM):   else do;
368542    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368543    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
368544    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368545    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368546    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
368547    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
368548    +   end;
MPRINT(EM_DIAGRAM):   end;
368549    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368550    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
368551    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
368552    +   end;
MPRINT(EM_DIAGRAM):   end;
368553    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368554    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
368555    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
368556    +   end;
MPRINT(EM_DIAGRAM):   end;
368557    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368558    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
368559    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
368560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368562    +   end;
MPRINT(EM_DIAGRAM):   end;
368563    +end;
MPRINT(EM_DIAGRAM):   end;
368564    +
368565    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
368566    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
368567    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
368568    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
368569    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
368570    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
368571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368573    +end;
MPRINT(EM_DIAGRAM):   end;
368574    +else do;
MPRINT(EM_DIAGRAM):   else do;
368575    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368576    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
368577    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368578    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
368579    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
368580    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
368581    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
368582    +   end;
MPRINT(EM_DIAGRAM):   end;
368583    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368584    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
368585    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
368586    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
368587    +   end;
MPRINT(EM_DIAGRAM):   end;
368588    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368589    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
368590    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
368591    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
368592    +   end;
MPRINT(EM_DIAGRAM):   end;
368593    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
368594    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
368595    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
368596    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
368597    +   end;
MPRINT(EM_DIAGRAM):   end;
368598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368599    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
368600    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
368601    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
368602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368604    +   end;
MPRINT(EM_DIAGRAM):   end;
368605    +end;
MPRINT(EM_DIAGRAM):   end;
368606    +
368607    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
368608    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
368609    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
368610    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
368611    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
368612    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
368613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368615    +end;
MPRINT(EM_DIAGRAM):   end;
368616    +else do;
MPRINT(EM_DIAGRAM):   else do;
368617    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368618    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
368619    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368620    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368621    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
368622    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
368623    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
368624    +   end;
MPRINT(EM_DIAGRAM):   end;
368625    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368626    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
368627    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
368628    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
368629    +   end;
MPRINT(EM_DIAGRAM):   end;
368630    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368631    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
368632    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
368633    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
368634    +   end;
MPRINT(EM_DIAGRAM):   end;
368635    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368636    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
368637    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
368638    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
368639    +   end;
MPRINT(EM_DIAGRAM):   end;
368640    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368641    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
368642    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
368643    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
368644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368646    +   end;
MPRINT(EM_DIAGRAM):   end;
368647    +end;
MPRINT(EM_DIAGRAM):   end;
368648    +
368649    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
368650    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
368651    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
368652    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
368653    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
368654    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
368655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368657    +end;
MPRINT(EM_DIAGRAM):   end;
368658    +else do;
MPRINT(EM_DIAGRAM):   else do;
368659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368660    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
368661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368662    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
368663    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
368664    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
368665    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
368666    +   end;
MPRINT(EM_DIAGRAM):   end;
368667    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
368668    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
368669    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
368670    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
368671    +   end;
MPRINT(EM_DIAGRAM):   end;
368672    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368673    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
368674    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
368675    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
368676    +   end;
MPRINT(EM_DIAGRAM):   end;
368677    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368678    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
368679    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
368680    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
368681    +   end;
MPRINT(EM_DIAGRAM):   end;
368682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368683    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
368684    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
368685    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
368686    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368687    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368688    +   end;
MPRINT(EM_DIAGRAM):   end;
368689    +end;
MPRINT(EM_DIAGRAM):   end;
368690    +
368691    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
368692    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
368693    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
368694    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
368695    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
368696    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
368697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368699    +end;
MPRINT(EM_DIAGRAM):   end;
368700    +else do;
MPRINT(EM_DIAGRAM):   else do;
368701    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368702    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
368703    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368704    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
368705    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
368706    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
368707    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
368708    +   end;
MPRINT(EM_DIAGRAM):   end;
368709    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
368710    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
368711    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
368712    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
368713    +   end;
MPRINT(EM_DIAGRAM):   end;
368714    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368715    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
368716    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
368717    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
368718    +   end;
MPRINT(EM_DIAGRAM):   end;
368719    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368720    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
368721    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
368722    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
368723    +   end;
MPRINT(EM_DIAGRAM):   end;
368724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368725    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
368726    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
368727    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
368728    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368729    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368730    +   end;
MPRINT(EM_DIAGRAM):   end;
368731    +end;
MPRINT(EM_DIAGRAM):   end;
368732    +
368733    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
368734    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
368735    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
368736    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
368737    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
368738    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
368739    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
368740    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368741    +end;
MPRINT(EM_DIAGRAM):   end;
368742    +else do;
MPRINT(EM_DIAGRAM):   else do;
368743    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
368744    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
368745    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
368746    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
368747    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
368748    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
368749    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
368750    +   end;
MPRINT(EM_DIAGRAM):   end;
368751    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
368752    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
368753    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
368754    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
368755    +   end;
MPRINT(EM_DIAGRAM):   end;
368756    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
368757    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
368758    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
368759    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
368760    +   end;
MPRINT(EM_DIAGRAM):   end;
368761    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
368762    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
368763    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
368764    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
368765    +   end;
MPRINT(EM_DIAGRAM):   end;
368766    +   else do;
MPRINT(EM_DIAGRAM):   else do;
368767    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
368768    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
368769    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
368770    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
368771    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368772    +   end;
MPRINT(EM_DIAGRAM):   end;
368773    +end;
MPRINT(EM_DIAGRAM):   end;
368774    +
368775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368776    +*** Checking missing input Interval
368777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
368778    +
368779    +IF NMISS(
368780    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
368781    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
368782    +
368783    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
368784    +END;
MPRINT(EM_DIAGRAM):   END;
368785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368786    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
368787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368788    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
368789    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
368790    +END;
MPRINT(EM_DIAGRAM):   END;
368791    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
368792    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
368793    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
368794    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
368795    +END;
MPRINT(EM_DIAGRAM):   END;
368796    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368797    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
368798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368800    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
368801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368802    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
368803    +   H1x1_1  =     1.28407338963657 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.28407338963657 * S_Year_Birth ;
368804    +   H1x1_2  =     2.38810822597472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.38810822597472 * S_Year_Birth ;
368805    +   H1x1_3  =     -0.7204801808304 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.7204801808304 * S_Year_Birth ;
368806    +   H1x1_4  =    -0.06539124294592 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.06539124294592 * S_Year_Birth ;
368807    +   H1x1_5  =     0.03236440118268 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.03236440118268 * S_Year_Birth ;
368808    +   H1x1_1  = H1x1_1  +     2.33808165856563 * GRP_AcceptedCmp52
368809    +          +    -0.22986949765805 * GRP_Frq2  +     0.35082837363653 * GRP_Frq3
368810    +          +    -0.81539338849938 * GRP_Frq4  +     0.02220909701196 *
368811    +        GRP_Income2  +    -0.13099501713971 * GRP_Income3
368812    +          +     -0.0804536656406 * GRP_Income4  +    -1.59663744670427 *
368813    +        GRP_Mnt2  +    -0.75210072607852 * GRP_Mnt3  +     2.54348518711375 *
368814    +        GRP_Mnt4  +    -1.10495982071076 * GRP_MntFishProducts2
368815    +          +     0.01777635572399 * GRP_MntFishProducts3
368816    +          +     0.64964482065317 * GRP_MntFishProducts4
368817    +          +    -1.04611988857835 * GRP_MntGoldProds2
368818    +          +    -0.78605743432786 * GRP_MntGoldProds3
368819    +          +    -0.66472335544579 * GRP_MntGoldProds4
368820    +          +     1.30740864871492 * GRP_MntMeatProducts2
368821    +          +     2.64958489779167 * GRP_MntMeatProducts3
368822    +          +    -0.07163049651484 * GRP_MntMeatProducts4
368823    +          +     0.25422937257394 * GRP_MntWines2  +     4.96131673300801 *
368824    +        GRP_MntWines3  +     1.19639467926964 * GRP_MntWines4
368825    +          +     1.95336043181706 * GRP_NumCatalogPurchases3
368826    +          +    -1.04651597352668 * GRP_NumCatalogPurchases4
368827    +          +     2.10673800243141 * GRP_NumDistPurchases2
368828    +          +     1.49840431617564 * GRP_NumDistPurchases3
368829    +          +     2.97897302921808 * GRP_NumDistPurchases4
368830    +          +    -0.06881799061639 * GRP_NumWebPurchases2
368831    +          +     2.06509459645382 * GRP_NumWebPurchases3
368832    +          +     2.82361840359249 * GRP_NumWebPurchases4
368833    +          +    -0.22785891000012 * GRP_RFMstat2  +     0.11731067369321 *
368834    +        GRP_RFMstat3  +      2.1473773933678 * GRP_RFMstat4
368835    +          +    -0.84256952222829 * GRP_RMntFrq2  +     0.14220513090593 *
368836    +        GRP_RMntFrq3  +    -0.12372171572674 * GRP_RMntFrq4
368837    +          +    -0.31743815181215 * GRP_Recency2  +    -1.98918978493071 *
368838    +        GRP_Recency3  +    -0.65545972977238 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.33808165856563 * GRP_AcceptedCmp52 + 
-0.22986949765805 * GRP_Frq2 + 0.35082837363653 * GRP_Frq3 + -0.81539338849938 * GRP_Frq4 + 
0.02220909701196 * GRP_Income2 + -0.13099501713971 * GRP_Income3 + -0.0804536656406 * 
GRP_Income4 + -1.59663744670427 * GRP_Mnt2 + -0.75210072607852 * GRP_Mnt3 + 2.54348518711375 * 
GRP_Mnt4 + -1.10495982071076 * GRP_MntFishProducts2 + 0.01777635572399 * GRP_MntFishProducts3 
+ 0.64964482065317 * GRP_MntFishProducts4 + -1.04611988857835 * GRP_MntGoldProds2 + 
-0.78605743432786 * GRP_MntGoldProds3 + -0.66472335544579 * GRP_MntGoldProds4 + 
1.30740864871492 * GRP_MntMeatProducts2 + 2.64958489779167 * GRP_MntMeatProducts3 + 
-0.07163049651484 * GRP_MntMeatProducts4 + 0.25422937257394 * GRP_MntWines2 + 4.96131673300801 
* GRP_MntWines3 + 1.19639467926964 * GRP_MntWines4 + 1.95336043181706 * 
GRP_NumCatalogPurchases3 + -1.04651597352668 * GRP_NumCatalogPurchases4 + 2.10673800243141 * 
GRP_NumDistPurchases2 + 1.49840431617564 * GRP_NumDistPurchases3 + 2.97897302921808 * 
GRP_NumDistPurchases4 + -0.06881799061639 * GRP_NumWebPurchases2 + 2.06509459645382 * 
GRP_NumWebPurchases3 + 2.82361840359249 * GRP_NumWebPurchases4 + -0.22785891000012 * 
GRP_RFMstat2 + 0.11731067369321 * GRP_RFMstat3 + 2.1473773933678 * GRP_RFMstat4 + 
-0.84256952222829 * GRP_RMntFrq2 + 0.14220513090593 * GRP_RMntFrq3 + -0.12372171572674 * 
GRP_RMntFrq4 + -0.31743815181215 * GRP_Recency2 + -1.98918978493071 * GRP_Recency3 + 
-0.65545972977238 * GRP_Recency4 ;
368839    +   H1x1_2  = H1x1_2  +     0.33200444555787 * GRP_AcceptedCmp52
368840    +          +     -0.8934566312976 * GRP_Frq2  +    -0.00243983936395 * GRP_Frq3
368841    +          +     0.63648993363629 * GRP_Frq4  +     0.05197343322571 *
368842    +        GRP_Income2  +     0.68177129296873 * GRP_Income3
368843    +          +     1.16889856198675 * GRP_Income4  +     0.52345733778819 *
368844    +        GRP_Mnt2  +     0.86891568330214 * GRP_Mnt3  +    -1.01013818778187 *
368845    +        GRP_Mnt4  +     0.01260306109505 * GRP_MntFishProducts2
368846    +          +     0.36267476732712 * GRP_MntFishProducts3
368847    +          +     -0.0117944700646 * GRP_MntFishProducts4
368848    +          +    -2.60247007794362 * GRP_MntGoldProds2
368849    +          +     1.49175629619075 * GRP_MntGoldProds3
368850    +          +     1.15735621033648 * GRP_MntGoldProds4
368851    +          +     -0.8857925625722 * GRP_MntMeatProducts2
368852    +          +    -1.11977905267757 * GRP_MntMeatProducts3
368853    +          +     0.89317411392862 * GRP_MntMeatProducts4
368854    +          +     1.08362434913444 * GRP_MntWines2  +    -2.34573154102981 *
368855    +        GRP_MntWines3  +    -1.04821908065864 * GRP_MntWines4
368856    +          +    -1.24280966967211 * GRP_NumCatalogPurchases3
368857    +          +      3.0326089053041 * GRP_NumCatalogPurchases4
368858    +          +     0.04779959574354 * GRP_NumDistPurchases2
368859    +          +     1.71017115843439 * GRP_NumDistPurchases3
368860    +          +     0.53628643929359 * GRP_NumDistPurchases4
368861    +          +     0.89950827667194 * GRP_NumWebPurchases2
368862    +          +    -0.92684592689592 * GRP_NumWebPurchases3
368863    +          +     2.96876986636503 * GRP_NumWebPurchases4
368864    +          +     0.63124526160033 * GRP_RFMstat2  +     1.50566150377083 *
368865    +        GRP_RFMstat3  +     1.62201671855053 * GRP_RFMstat4
368866    +          +     1.20404881746786 * GRP_RMntFrq2  +    -0.61586201148662 *
368867    +        GRP_RMntFrq3  +    -1.45102172370413 * GRP_RMntFrq4
368868    +          +     0.89969425569035 * GRP_Recency2  +     0.72245574147873 *
368869    +        GRP_Recency3  +     2.83083807801553 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.33200444555787 * GRP_AcceptedCmp52 + 
-0.8934566312976 * GRP_Frq2 + -0.00243983936395 * GRP_Frq3 + 0.63648993363629 * GRP_Frq4 + 
0.05197343322571 * GRP_Income2 + 0.68177129296873 * GRP_Income3 + 1.16889856198675 * 
GRP_Income4 + 0.52345733778819 * GRP_Mnt2 + 0.86891568330214 * GRP_Mnt3 + -1.01013818778187 * 
GRP_Mnt4 + 0.01260306109505 * GRP_MntFishProducts2 + 0.36267476732712 * GRP_MntFishProducts3 + 
-0.0117944700646 * GRP_MntFishProducts4 + -2.60247007794362 * GRP_MntGoldProds2 + 
1.49175629619075 * GRP_MntGoldProds3 + 1.15735621033648 * GRP_MntGoldProds4 + -0.8857925625722 
* GRP_MntMeatProducts2 + -1.11977905267757 * GRP_MntMeatProducts3 + 0.89317411392862 * 
GRP_MntMeatProducts4 + 1.08362434913444 * GRP_MntWines2 + -2.34573154102981 * GRP_MntWines3 + 
-1.04821908065864 * GRP_MntWines4 + -1.24280966967211 * GRP_NumCatalogPurchases3 + 
3.0326089053041 * GRP_NumCatalogPurchases4 + 0.04779959574354 * GRP_NumDistPurchases2 + 
1.71017115843439 * GRP_NumDistPurchases3 + 0.53628643929359 * GRP_NumDistPurchases4 + 
0.89950827667194 * GRP_NumWebPurchases2 + -0.92684592689592 * GRP_NumWebPurchases3 + 
2.96876986636503 * GRP_NumWebPurchases4 + 0.63124526160033 * GRP_RFMstat2 + 1.50566150377083 * 
GRP_RFMstat3 + 1.62201671855053 * GRP_RFMstat4 + 1.20404881746786 * GRP_RMntFrq2 + 
-0.61586201148662 * GRP_RMntFrq3 + -1.45102172370413 * GRP_RMntFrq4 + 0.89969425569035 * 
GRP_Recency2 + 0.72245574147873 * GRP_Recency3 + 2.83083807801553 * GRP_Recency4 ;
368870    +   H1x1_3  = H1x1_3  +    -0.49052681984122 * GRP_AcceptedCmp52
368871    +          +     0.05710791956099 * GRP_Frq2  +     1.88983418164026 * GRP_Frq3
368872    +          +     0.23283788572694 * GRP_Frq4  +    -0.80169095220425 *
368873    +        GRP_Income2  +    -1.74093887199998 * GRP_Income3
368874    +          +    -0.35184466623661 * GRP_Income4  +     0.02791690171447 *
368875    +        GRP_Mnt2  +    -2.20424160961867 * GRP_Mnt3  +     0.50765331628654 *
368876    +        GRP_Mnt4  +     0.29403246554661 * GRP_MntFishProducts2
368877    +          +    -0.83380418052364 * GRP_MntFishProducts3
368878    +          +    -1.82543627661138 * GRP_MntFishProducts4
368879    +          +     0.39365380396703 * GRP_MntGoldProds2
368880    +          +     0.03998618589682 * GRP_MntGoldProds3
368881    +          +    -1.56455277750616 * GRP_MntGoldProds4
368882    +          +     0.07220994129439 * GRP_MntMeatProducts2
368883    +          +     1.10999034367361 * GRP_MntMeatProducts3
368884    +          +     0.63528886514116 * GRP_MntMeatProducts4
368885    +          +    -1.82455352991516 * GRP_MntWines2  +    -0.37467219689144 *
368886    +        GRP_MntWines3  +     0.51071844252207 * GRP_MntWines4
368887    +          +    -0.21422031720258 * GRP_NumCatalogPurchases3
368888    +          +    -3.11364867963994 * GRP_NumCatalogPurchases4
368889    +          +    -0.08758432252505 * GRP_NumDistPurchases2
368890    +          +    -0.24735131829279 * GRP_NumDistPurchases3
368891    +          +     1.22135970166178 * GRP_NumDistPurchases4
368892    +          +     0.57769775812299 * GRP_NumWebPurchases2
368893    +          +     4.20512829375782 * GRP_NumWebPurchases3
368894    +          +    -0.77892811708123 * GRP_NumWebPurchases4
368895    +          +    -1.48591575907258 * GRP_RFMstat2  +    -0.02715745890283 *
368896    +        GRP_RFMstat3  +    -1.82753253216976 * GRP_RFMstat4
368897    +          +     0.63517164755033 * GRP_RMntFrq2  +     3.41625861410136 *
368898    +        GRP_RMntFrq3  +    -1.06016238729643 * GRP_RMntFrq4
368899    +          +     0.96560069161334 * GRP_Recency2  +     2.60413272119793 *
368900    +        GRP_Recency3  +    -1.02278922860839 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.49052681984122 * GRP_AcceptedCmp52 + 
0.05710791956099 * GRP_Frq2 + 1.88983418164026 * GRP_Frq3 + 0.23283788572694 * GRP_Frq4 + 
-0.80169095220425 * GRP_Income2 + -1.74093887199998 * GRP_Income3 + -0.35184466623661 * 
GRP_Income4 + 0.02791690171447 * GRP_Mnt2 + -2.20424160961867 * GRP_Mnt3 + 0.50765331628654 * 
GRP_Mnt4 + 0.29403246554661 * GRP_MntFishProducts2 + -0.83380418052364 * GRP_MntFishProducts3 
+ -1.82543627661138 * GRP_MntFishProducts4 + 0.39365380396703 * GRP_MntGoldProds2 + 
0.03998618589682 * GRP_MntGoldProds3 + -1.56455277750616 * GRP_MntGoldProds4 + 
0.07220994129439 * GRP_MntMeatProducts2 + 1.10999034367361 * GRP_MntMeatProducts3 + 
0.63528886514116 * GRP_MntMeatProducts4 + -1.82455352991516 * GRP_MntWines2 + 
-0.37467219689144 * GRP_MntWines3 + 0.51071844252207 * GRP_MntWines4 + -0.21422031720258 * 
GRP_NumCatalogPurchases3 + -3.11364867963994 * GRP_NumCatalogPurchases4 + -0.08758432252505 * 
GRP_NumDistPurchases2 + -0.24735131829279 * GRP_NumDistPurchases3 + 1.22135970166178 * 
GRP_NumDistPurchases4 + 0.57769775812299 * GRP_NumWebPurchases2 + 4.20512829375782 * 
GRP_NumWebPurchases3 + -0.77892811708123 * GRP_NumWebPurchases4 + -1.48591575907258 * 
GRP_RFMstat2 + -0.02715745890283 * GRP_RFMstat3 + -1.82753253216976 * GRP_RFMstat4 + 
0.63517164755033 * GRP_RMntFrq2 + 3.41625861410136 * GRP_RMntFrq3 + -1.06016238729643 * 
GRP_RMntFrq4 + 0.96560069161334 * GRP_Recency2 + 2.60413272119793 * GRP_Recency3 + 
-1.02278922860839 * GRP_Recency4 ;
368901    +   H1x1_4  = H1x1_4  +    -3.02372554661072 * GRP_AcceptedCmp52
368902    +          +     1.03599850000215 * GRP_Frq2  +     2.24242470356718 * GRP_Frq3
368903    +          +      3.4718187916521 * GRP_Frq4  +     1.28707236613409 *
368904    +        GRP_Income2  +    -1.54838965127225 * GRP_Income3
368905    +          +     2.52665199719571 * GRP_Income4  +    -2.14598289769275 *
368906    +        GRP_Mnt2  +    -1.04082723723167 * GRP_Mnt3  +    -1.68747662808983 *
368907    +        GRP_Mnt4  +     -0.8736100922486 * GRP_MntFishProducts2
368908    +          +     0.12779836724514 * GRP_MntFishProducts3
368909    +          +     0.60216313416651 * GRP_MntFishProducts4
368910    +          +     0.68165487174749 * GRP_MntGoldProds2
368911    +          +    -0.89672475622939 * GRP_MntGoldProds3
368912    +          +    -1.77795912962804 * GRP_MntGoldProds4
368913    +          +    -0.74193637631708 * GRP_MntMeatProducts2
368914    +          +    -3.00981763564253 * GRP_MntMeatProducts3
368915    +          +    -0.98818439514034 * GRP_MntMeatProducts4
368916    +          +    -0.81552449599254 * GRP_MntWines2  +    -1.24481835102021 *
368917    +        GRP_MntWines3  +     0.58877118654504 * GRP_MntWines4
368918    +          +    -0.10424789545355 * GRP_NumCatalogPurchases3
368919    +          +    -1.76322947168567 * GRP_NumCatalogPurchases4
368920    +          +     0.28024987640988 * GRP_NumDistPurchases2
368921    +          +    -0.26195842187994 * GRP_NumDistPurchases3
368922    +          +     1.27465783090106 * GRP_NumDistPurchases4
368923    +          +     0.56044035795721 * GRP_NumWebPurchases2
368924    +          +     -1.0019608410124 * GRP_NumWebPurchases3
368925    +          +    -1.00438490557229 * GRP_NumWebPurchases4
368926    +          +      0.1961165620509 * GRP_RFMstat2  +    -0.64166582924081 *
368927    +        GRP_RFMstat3  +     1.80597898183848 * GRP_RFMstat4
368928    +          +       0.012135091764 * GRP_RMntFrq2  +     -1.6713653901367 *
368929    +        GRP_RMntFrq3  +    -0.99155260811599 * GRP_RMntFrq4
368930    +          +    -1.41207701933445 * GRP_Recency2  +    -1.44162495285758 *
368931    +        GRP_Recency3  +    -1.33328278459656 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -3.02372554661072 * GRP_AcceptedCmp52 + 
1.03599850000215 * GRP_Frq2 + 2.24242470356718 * GRP_Frq3 + 3.4718187916521 * GRP_Frq4 + 
1.28707236613409 * GRP_Income2 + -1.54838965127225 * GRP_Income3 + 2.52665199719571 * 
GRP_Income4 + -2.14598289769275 * GRP_Mnt2 + -1.04082723723167 * GRP_Mnt3 + -1.68747662808983 
* GRP_Mnt4 + -0.8736100922486 * GRP_MntFishProducts2 + 0.12779836724514 * GRP_MntFishProducts3 
+ 0.60216313416651 * GRP_MntFishProducts4 + 0.68165487174749 * GRP_MntGoldProds2 + 
-0.89672475622939 * GRP_MntGoldProds3 + -1.77795912962804 * GRP_MntGoldProds4 + 
-0.74193637631708 * GRP_MntMeatProducts2 + -3.00981763564253 * GRP_MntMeatProducts3 + 
-0.98818439514034 * GRP_MntMeatProducts4 + -0.81552449599254 * GRP_MntWines2 + 
-1.24481835102021 * GRP_MntWines3 + 0.58877118654504 * GRP_MntWines4 + -0.10424789545355 * 
GRP_NumCatalogPurchases3 + -1.76322947168567 * GRP_NumCatalogPurchases4 + 0.28024987640988 * 
GRP_NumDistPurchases2 + -0.26195842187994 * GRP_NumDistPurchases3 + 1.27465783090106 * 
GRP_NumDistPurchases4 + 0.56044035795721 * GRP_NumWebPurchases2 + -1.0019608410124 * 
GRP_NumWebPurchases3 + -1.00438490557229 * GRP_NumWebPurchases4 + 0.1961165620509 * 
GRP_RFMstat2 + -0.64166582924081 * GRP_RFMstat3 + 1.80597898183848 * GRP_RFMstat4 + 
0.012135091764 * GRP_RMntFrq2 + -1.6713653901367 * GRP_RMntFrq3 + -0.99155260811599 * 
GRP_RMntFrq4 + -1.41207701933445 * GRP_Recency2 + -1.44162495285758 * GRP_Recency3 + 
-1.33328278459656 * GRP_Recency4 ;
368932    +   H1x1_5  = H1x1_5  +    -2.91353005427803 * GRP_AcceptedCmp52
368933    +          +    -0.01308096407334 * GRP_Frq2  +    -0.45559322170718 * GRP_Frq3
368934    +          +    -0.49751279425547 * GRP_Frq4  +     0.02860594561374 *
368935    +        GRP_Income2  +     1.41758925806391 * GRP_Income3
368936    +          +     0.03726548596251 * GRP_Income4  +    -1.57900147909252 *
368937    +        GRP_Mnt2  +      2.3511697752438 * GRP_Mnt3  +     0.88048248424859 *
368938    +        GRP_Mnt4  +    -0.56545409501904 * GRP_MntFishProducts2
368939    +          +    -3.10608760567335 * GRP_MntFishProducts3
368940    +          +     1.06400320622897 * GRP_MntFishProducts4
368941    +          +     2.68670541844486 * GRP_MntGoldProds2
368942    +          +     0.07232195736653 * GRP_MntGoldProds3
368943    +          +     1.85531703888295 * GRP_MntGoldProds4
368944    +          +    -1.87162230531925 * GRP_MntMeatProducts2
368945    +          +    -1.13875662802599 * GRP_MntMeatProducts3
368946    +          +    -0.24099135606782 * GRP_MntMeatProducts4
368947    +          +    -0.13235213570702 * GRP_MntWines2  +    -0.50193070898101 *
368948    +        GRP_MntWines3  +     -0.1999771853027 * GRP_MntWines4
368949    +          +    -1.59837823433046 * GRP_NumCatalogPurchases3
368950    +          +    -3.92043146311091 * GRP_NumCatalogPurchases4
368951    +          +    -0.99805577329855 * GRP_NumDistPurchases2
368952    +          +     -2.4067364238872 * GRP_NumDistPurchases3
368953    +          +     0.25924131471222 * GRP_NumDistPurchases4
368954    +          +     0.70743157783391 * GRP_NumWebPurchases2
368955    +          +    -2.55740259562506 * GRP_NumWebPurchases3
368956    +          +     1.49837454147543 * GRP_NumWebPurchases4
368957    +          +     0.02282459900932 * GRP_RFMstat2  +     2.49823188893146 *
368958    +        GRP_RFMstat3  +      0.0125770688182 * GRP_RFMstat4
368959    +          +    -0.52646059416986 * GRP_RMntFrq2  +     0.48734306173312 *
368960    +        GRP_RMntFrq3  +     1.20982084491791 * GRP_RMntFrq4
368961    +          +     1.46024730556461 * GRP_Recency2  +     1.39328521843098 *
368962    +        GRP_Recency3  +     0.07072877455933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.91353005427803 * GRP_AcceptedCmp52 + 
-0.01308096407334 * GRP_Frq2 + -0.45559322170718 * GRP_Frq3 + -0.49751279425547 * GRP_Frq4 + 
0.02860594561374 * GRP_Income2 + 1.41758925806391 * GRP_Income3 + 0.03726548596251 * 
GRP_Income4 + -1.57900147909252 * GRP_Mnt2 + 2.3511697752438 * GRP_Mnt3 + 0.88048248424859 * 
GRP_Mnt4 + -0.56545409501904 * GRP_MntFishProducts2 + -3.10608760567335 * GRP_MntFishProducts3 
+ 1.06400320622897 * GRP_MntFishProducts4 + 2.68670541844486 * GRP_MntGoldProds2 + 
0.07232195736653 * GRP_MntGoldProds3 + 1.85531703888295 * GRP_MntGoldProds4 + 
-1.87162230531925 * GRP_MntMeatProducts2 + -1.13875662802599 * GRP_MntMeatProducts3 + 
-0.24099135606782 * GRP_MntMeatProducts4 + -0.13235213570702 * GRP_MntWines2 + 
-0.50193070898101 * GRP_MntWines3 + -0.1999771853027 * GRP_MntWines4 + -1.59837823433046 * 
GRP_NumCatalogPurchases3 + -3.92043146311091 * GRP_NumCatalogPurchases4 + -0.99805577329855 * 
GRP_NumDistPurchases2 + -2.4067364238872 * GRP_NumDistPurchases3 + 0.25924131471222 * 
GRP_NumDistPurchases4 + 0.70743157783391 * GRP_NumWebPurchases2 + -2.55740259562506 * 
GRP_NumWebPurchases3 + 1.49837454147543 * GRP_NumWebPurchases4 + 0.02282459900932 * 
GRP_RFMstat2 + 2.49823188893146 * GRP_RFMstat3 + 0.0125770688182 * GRP_RFMstat4 + 
-0.52646059416986 * GRP_RMntFrq2 + 0.48734306173312 * GRP_RMntFrq3 + 1.20982084491791 * 
GRP_RMntFrq4 + 1.46024730556461 * GRP_Recency2 + 1.39328521843098 * GRP_Recency3 + 
0.07072877455933 * GRP_Recency4 ;
368963    +   H1x1_1  =     2.28517939702199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.28517939702199 + H1x1_1 ;
368964    +   H1x1_2  =      0.8100923065727 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.8100923065727 + H1x1_2 ;
368965    +   H1x1_3  =    -1.33120225377486 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.33120225377486 + H1x1_3 ;
368966    +   H1x1_4  =    -0.45230391783078 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.45230391783078 + H1x1_4 ;
368967    +   H1x1_5  =    -0.40460344381081 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.40460344381081 + H1x1_5 ;
368968    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
368969    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
368970    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
368971    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
368972    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
368973    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
368974    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
368975    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
368976    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
368977    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
368978    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
368979    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
368980    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
368981    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
368982    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
368983    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
368984    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
368985    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
368986    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
368987    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
368988    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
368989    +END;
MPRINT(EM_DIAGRAM):   END;
368990    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
368991    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
368992    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
368993    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
368994    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
368995    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
368996    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
368997    +END;
MPRINT(EM_DIAGRAM):   END;
368998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
368999    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
369000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
369001    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
369002    +   P_DepVar1  =    -2.81431269255211 * H1x1_1  +       3.440967475001 * H1x1_2
369003    +          +     0.80588527631153 * H1x1_3  +    -2.86385782353564 * H1x1_4
369004    +          +     4.10205776026281 * H1x1_5  +    -2.89048426961502 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.81431269255211 * H1x1_1 + 3.440967475001 * H1x1_2 + 
0.80588527631153 * H1x1_3 + -2.86385782353564 * H1x1_4 + 4.10205776026281 * H1x1_5 + 
-2.89048426961502 * H1x1_6 ;
369005    +   P_DepVar1  =    -1.38440437244113 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.38440437244113 + P_DepVar1 ;
369006    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
369007    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
369008    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
369009    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
369010    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
369011    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
369012    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
369013    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
369014    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
369015    +END;
MPRINT(EM_DIAGRAM):   END;
369016    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
369017    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
369018    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
369019    +END;
MPRINT(EM_DIAGRAM):   END;
369020    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
369021    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
369022    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
369023    +END;
MPRINT(EM_DIAGRAM):   END;
369024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
369025    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
369026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
369027    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
369028    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
369029    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
369030    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
369031    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
369032    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
369033    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
369034    +END;
MPRINT(EM_DIAGRAM):   END;
369035    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
369036    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
369037    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
369038    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
369039     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
369040     quit;
369041     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
369042     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
369043     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
369044     retain ID 2 Node "AutoNeural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural21";
369045     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
369046     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2322 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2322 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369047     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
369048     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369049     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2322 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2322 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369050     proc sort data=EMWS8.AutoNeural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural21_variableset out=_temp2(keep=NAME 
CREATOR);
369051     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369052     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369053     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369054     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
369055     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
369056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369057     proc contents data=EMWS8.AutoNeural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural21_train out=_meta(keep=NAME) noprint;
369058     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369059     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
369060     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369061     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369062     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369063     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
369064     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369065     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369066     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
369067     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
369067   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1111 rows and 5 columns.

369068     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369069     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
369070     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1111 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1111 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369071     filename _pref
369071   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
369072     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
369073     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
369074    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
369075    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
369076    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
369077    +
369078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369079    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
369080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369081    +LABEL GRP_AcceptedCmp5 =
369082    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
369083    +
369084    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
369085    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
369086    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
369087    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
369088    +end;
MPRINT(EM_DIAGRAM):   end;
369089    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
369090    +if (_UFORMAT eq '0'
369091    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
369092    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
369093    +end;
MPRINT(EM_DIAGRAM):   end;
369094    +else
369095    +if (_UFORMAT eq '1'
369096    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
369097    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
369098    +end;
MPRINT(EM_DIAGRAM):   end;
369099    +else do;
MPRINT(EM_DIAGRAM):   else do;
369100    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
369101    +end;
MPRINT(EM_DIAGRAM):   end;
369102    +end;
MPRINT(EM_DIAGRAM):   end;
369103    +
369104    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369105    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
369106    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369107    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
369108    +
369109    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
369110    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
369111    +end;
MPRINT(EM_DIAGRAM):   end;
369112    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
369113    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
369114    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
369115    +end;
MPRINT(EM_DIAGRAM):   end;
369116    +else
369117    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
369118    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
369119    +end;
MPRINT(EM_DIAGRAM):   end;
369120    +else
369121    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
369122    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
369123    +end;
MPRINT(EM_DIAGRAM):   end;
369124    +else
369125    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
369126    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
369127    +end;
MPRINT(EM_DIAGRAM):   end;
369128    +end;
MPRINT(EM_DIAGRAM):   end;
369129    +
369130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369131    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
369132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369133    +LABEL GRP_Income =
369134    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
369135    +
369136    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
369137    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
369138    +end;
MPRINT(EM_DIAGRAM):   end;
369139    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
369140    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
369141    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
369142    +end;
MPRINT(EM_DIAGRAM):   end;
369143    +else
369144    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
369145    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
369146    +end;
MPRINT(EM_DIAGRAM):   end;
369147    +else
369148    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
369149    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
369150    +end;
MPRINT(EM_DIAGRAM):   end;
369151    +else
369152    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
369153    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
369154    +end;
MPRINT(EM_DIAGRAM):   end;
369155    +end;
MPRINT(EM_DIAGRAM):   end;
369156    +
369157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369158    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
369159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369160    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
369161    +
369162    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
369163    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
369164    +end;
MPRINT(EM_DIAGRAM):   end;
369165    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
369166    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
369167    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
369168    +end;
MPRINT(EM_DIAGRAM):   end;
369169    +else
369170    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
369171    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
369172    +end;
MPRINT(EM_DIAGRAM):   end;
369173    +else
369174    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
369175    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
369176    +end;
MPRINT(EM_DIAGRAM):   end;
369177    +else
369178    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
369179    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
369180    +end;
MPRINT(EM_DIAGRAM):   end;
369181    +end;
MPRINT(EM_DIAGRAM):   end;
369182    +
369183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369184    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
369185    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369186    +LABEL GRP_MntFishProducts =
369187    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
369188    +
369189    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
369190    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
369191    +end;
MPRINT(EM_DIAGRAM):   end;
369192    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
369193    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
369194    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
369195    +end;
MPRINT(EM_DIAGRAM):   end;
369196    +else
369197    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
369198    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
369199    +end;
MPRINT(EM_DIAGRAM):   end;
369200    +else
369201    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
369202    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
369203    +end;
MPRINT(EM_DIAGRAM):   end;
369204    +else
369205    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
369206    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
369207    +end;
MPRINT(EM_DIAGRAM):   end;
369208    +end;
MPRINT(EM_DIAGRAM):   end;
369209    +
369210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369211    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
369212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369213    +LABEL GRP_MntGoldProds =
369214    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
369215    +
369216    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
369217    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
369218    +end;
MPRINT(EM_DIAGRAM):   end;
369219    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
369220    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
369221    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
369222    +end;
MPRINT(EM_DIAGRAM):   end;
369223    +else
369224    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
369225    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
369226    +end;
MPRINT(EM_DIAGRAM):   end;
369227    +else
369228    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
369229    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
369230    +end;
MPRINT(EM_DIAGRAM):   end;
369231    +else
369232    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
369233    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
369234    +end;
MPRINT(EM_DIAGRAM):   end;
369235    +end;
MPRINT(EM_DIAGRAM):   end;
369236    +
369237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369238    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
369239    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369240    +LABEL GRP_MntMeatProducts =
369241    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
369242    +
369243    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
369244    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
369245    +end;
MPRINT(EM_DIAGRAM):   end;
369246    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
369247    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
369248    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
369249    +end;
MPRINT(EM_DIAGRAM):   end;
369250    +else
369251    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
369252    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
369253    +end;
MPRINT(EM_DIAGRAM):   end;
369254    +else
369255    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
369256    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
369257    +end;
MPRINT(EM_DIAGRAM):   end;
369258    +else
369259    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
369260    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
369261    +end;
MPRINT(EM_DIAGRAM):   end;
369262    +end;
MPRINT(EM_DIAGRAM):   end;
369263    +
369264    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369265    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
369266    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369267    +LABEL GRP_MntWines =
369268    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
369269    +
369270    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
369271    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
369272    +end;
MPRINT(EM_DIAGRAM):   end;
369273    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
369274    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
369275    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
369276    +end;
MPRINT(EM_DIAGRAM):   end;
369277    +else
369278    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
369279    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
369280    +end;
MPRINT(EM_DIAGRAM):   end;
369281    +else
369282    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
369283    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
369284    +end;
MPRINT(EM_DIAGRAM):   end;
369285    +else
369286    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
369287    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
369288    +end;
MPRINT(EM_DIAGRAM):   end;
369289    +end;
MPRINT(EM_DIAGRAM):   end;
369290    +
369291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369292    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
369293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369294    +LABEL GRP_NumCatalogPurchases =
369295    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
369296    +
369297    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
369298    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
369299    +end;
MPRINT(EM_DIAGRAM):   end;
369300    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
369301    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
369302    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
369303    +end;
MPRINT(EM_DIAGRAM):   end;
369304    +else
369305    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
369306    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
369307    +end;
MPRINT(EM_DIAGRAM):   end;
369308    +else
369309    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
369310    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
369311    +end;
MPRINT(EM_DIAGRAM):   end;
369312    +else
369313    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
369314    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
369315    +end;
MPRINT(EM_DIAGRAM):   end;
369316    +end;
MPRINT(EM_DIAGRAM):   end;
369317    +
369318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369319    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
369320    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369321    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
369322    +
369323    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
369324    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
369325    +end;
MPRINT(EM_DIAGRAM):   end;
369326    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
369327    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
369328    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
369329    +end;
MPRINT(EM_DIAGRAM):   end;
369330    +else
369331    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
369332    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
369333    +end;
MPRINT(EM_DIAGRAM):   end;
369334    +else
369335    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
369336    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
369337    +end;
MPRINT(EM_DIAGRAM):   end;
369338    +else
369339    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
369340    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
369341    +end;
MPRINT(EM_DIAGRAM):   end;
369342    +end;
MPRINT(EM_DIAGRAM):   end;
369343    +
369344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369345    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
369346    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369347    +LABEL GRP_NumWebPurchases =
369348    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
369349    +
369350    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
369351    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
369352    +end;
MPRINT(EM_DIAGRAM):   end;
369353    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
369354    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
369355    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
369356    +end;
MPRINT(EM_DIAGRAM):   end;
369357    +else
369358    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
369359    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
369360    +end;
MPRINT(EM_DIAGRAM):   end;
369361    +else
369362    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
369363    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
369364    +end;
MPRINT(EM_DIAGRAM):   end;
369365    +else
369366    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
369367    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
369368    +end;
MPRINT(EM_DIAGRAM):   end;
369369    +end;
MPRINT(EM_DIAGRAM):   end;
369370    +
369371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369372    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
369373    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369374    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
369375    +
369376    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
369377    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
369378    +end;
MPRINT(EM_DIAGRAM):   end;
369379    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
369380    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
369381    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
369382    +end;
MPRINT(EM_DIAGRAM):   end;
369383    +else
369384    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
369385    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
369386    +end;
MPRINT(EM_DIAGRAM):   end;
369387    +else
369388    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
369389    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
369390    +end;
MPRINT(EM_DIAGRAM):   end;
369391    +else
369392    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
369393    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
369394    +end;
MPRINT(EM_DIAGRAM):   end;
369395    +end;
MPRINT(EM_DIAGRAM):   end;
369396    +
369397    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369398    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
369399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369400    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
369401    +
369402    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
369403    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
369404    +end;
MPRINT(EM_DIAGRAM):   end;
369405    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
369406    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
369407    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
369408    +end;
MPRINT(EM_DIAGRAM):   end;
369409    +else
369410    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
369411    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
369412    +end;
MPRINT(EM_DIAGRAM):   end;
369413    +else
369414    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
369415    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
369416    +end;
MPRINT(EM_DIAGRAM):   end;
369417    +else
369418    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
369419    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
369420    +end;
MPRINT(EM_DIAGRAM):   end;
369421    +end;
MPRINT(EM_DIAGRAM):   end;
369422    +
369423    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369424    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
369425    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369426    +LABEL GRP_Recency =
369427    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
369428    +
369429    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
369430    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
369431    +end;
MPRINT(EM_DIAGRAM):   end;
369432    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
369433    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
369434    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
369435    +end;
MPRINT(EM_DIAGRAM):   end;
369436    +else
369437    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
369438    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
369439    +end;
MPRINT(EM_DIAGRAM):   end;
369440    +else
369441    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
369442    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
369443    +end;
MPRINT(EM_DIAGRAM):   end;
369444    +else
369445    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
369446    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
369447    +end;
MPRINT(EM_DIAGRAM):   end;
369448    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
369449     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
369450     quit;
369451     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
369452     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
369453     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
369454     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
369455     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
369456     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369457     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
369458     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369459     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369460     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
369461     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369462     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369463     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369464     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
369465     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
369466     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369467     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
369468     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369469     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
369470     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369472     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369473     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
369474     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369475     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369476     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
369477     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
369477   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

369478     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369479     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
369480     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1126 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369481     filename _pref
369481   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
369482     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
369483     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
369484    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369485    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
369486    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
369487    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
369488    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
369489    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
369490     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
369491     quit;
369492     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
369493     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
369494     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
369495     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
369496     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
369497     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369498     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
369499     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369500     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369501     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
369502     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

369504     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369505     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
369506     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
369507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369508     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
369509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

369510     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
369511     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369512     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369513     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369514     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
369515     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369516     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369517     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
369518     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
369518   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

369519     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369520     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
369521     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369522     filename _pref
369522   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
369523     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
369524     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
369525    +
369526    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
369527    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
369527   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
369528    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
369529    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
369530    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
369531    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
369532    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
369533     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
369534     quit;
369535     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
369536     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
369537     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
369538     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
369539     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
369540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369541     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
369542     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369543     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369544     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
369545     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369547     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369548     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
369549     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
369550     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369551     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
369552     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369553     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
369554     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369556     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369557     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
369558     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369559     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369560     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
369561     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
369561   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

369562     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369563     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
369564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1169 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369565     filename _pref
369565   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
369566     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
369567     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
369568    +
369569    +
369570    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
369571    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
369572    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
369573    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
369574    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
369575    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369576    +
369577    +
369578    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
369579    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
369580    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
369581    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
369582    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
369583    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369584    +
369585    +
369586    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
369587    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
369588    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
369589    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
369590    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
369591    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369592    +
369593    +
369594    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
369595    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
369596    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
369597    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
369598    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
369599    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369600    +
369601    +
369602    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
369603    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
369604    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
369605    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
369606    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
369607    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369608    +
369609    +
369610    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
369611    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
369612    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
369613    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
369614    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
369615    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369616    +
369617    +
369618    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
369619    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
369620    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
369621    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
369622    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
369623    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369624    +
369625    +
369626    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
369627    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
369628    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
369629    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
369630    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
369631    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
369632    +if
369633    +_FILTERNORM1 not in ( '.')
369634    + and
369635    +_FILTERNORM2 not in ( '.')
369636    + and
369637    +_FILTERNORM3 not in ( '.')
369638    + and
369639    +_FILTERNORM4 not in ( '.')
369640    + and
369641    +_FILTERNORM5 not in ( '.')
369642    + and
369643    +_FILTERNORM6 not in ( '.')
369644    + and
369645    +_FILTERNORM7 not in ( ' ')
369646    + and
369647    +_FILTERNORM8 not in ( ' ')
369648    +and
369649    +( Dt_Customer ne .)
369650    +and ( Income ne . and (Income<=107000))
369651    +and ( Kidhome ne .)
369652    +and ( MntFishProducts ne .)
369653    +and ( MntFruits ne .)
369654    +and ( MntGoldProds ne .)
369655    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
369656    +and ( MntSweetProducts ne .)
369657    +and ( MntWines ne .)
369658    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
369659    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
369660    +and ( NumStorePurchases ne .)
369661    +and ( NumWebPurchases ne .)
369662    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
369663    +and ( Recency ne .)
369664    +and ( Teenhome ne .)
369665    +and ( Year_Birth ne .)
369666    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
369667    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
369668    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
369669    +end;
MPRINT(EM_DIAGRAM):   end;
369670    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
369671    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
369672     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
369673     quit;
369674     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
369675     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
369676     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
369677     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
369678     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
369679     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369680     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
369681     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369682     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369683     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
369684     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369685     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369686     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369687     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
369688     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
369689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369690     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
369691     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

369692     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
369693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369694     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369695     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
369696     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
369697     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
369698     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369699     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
369700     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
369700   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

369701     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369702     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
369703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1235 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369704     %macro varDept(fcmpdata=,id=);
369705     %global nobs&id scoreFlag&id;
369706     %let scoreFlag&id = 0;
369707     %if &id=1 or ^&fcmpStart %then %do;
369708     proc sort data=&fcmpdata out=_temp&id nodupkey;
369709     by NAME;
369710     where id=&id and LHS in( %let j=1;
369711     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
369712     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
369713     "&var" %let j = %eval(&j+1);
369714     %end;
369715     );
369716     run;
369717     %let dsid = %sysfunc(open(_temp&id));
369718     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
369719     %let dsid = %sysfunc(close(&dsid));
369720     %if &&nobs&id %then %do;
369721     %let scoreFlag&id = 1;
369722     %let fcmpStart = 1;
369723     %end;
369724     %else %let fcmpStart = 0;
369725     %end;
369726     %else %do;
369727     proc sort data=&fcmpdata out=_tempid;
369728     where id=&id;
369729     by LHS;
369730     run;
369731     %let dsid = %sysfunc(open(_tempid));
369732     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
369733     %let dsid = %sysfunc(close(&dsid));
369734     %if ^&&nobs&id %then %do;
369735     proc datasets lib=work nolist;
369736     delete _tempid;
369737     run;
369738     quit;
369739     %end;
369740     %else %do;
369741     data _tempAll;
369742     set %let j=%eval(&id-1);
369743     %do x=1 %to &j;
369744     %if &&nobs&x %then %do;
369745     _temp&x %end;
369746     %end;
369747     ;
369748     run;
369749     proc sql;
369750     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
369750   ! work._tempid p2 where p.name=p2.lhs;
369751     quit;
369752     data _temp&id;
369753     set _temp&id;
369754     where LHS ne '' and NAME ne '' and Node ne '';
369755     run;
369756     proc datasets lib=work nolist;
369757     delete _tempAll;
369758     run;
369759     %let dsid = %sysfunc(open(_temp&id));
369760     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
369761     %let dsid = %sysfunc(close(&dsid));
369762     %if ^&&nobs&id %then %do;
369763     proc datasets lib=work nolist;
369764     delete _temp&id;
369765     run;
369766     quit;
369767     %end;
369768     %else %do;
369769     %let scoreFlag&id = 1;
369770     data _temp&id;
369771     set _temp&id;
369772     where LHS ne NAME and node ne '';
369773     run;
369774     %let dsid = %sysfunc(open(_temp&id));
369775     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
369776     %let dsid = %sysfunc(close(&dsid));
369777     %if ^&&nobs&id %then %do;
369778     proc datasets lib=work nolist;
369779     delete _temp&id;
369780     run;
369781     quit;
369782     %end;
369783     %else %do;
369784     proc sort data=_temp&id nodupkey;
369785     by LHS NAME;
369786     run;
369787     %end;
369788     %end;
369789     %end;
369790     %end;
369791     %mend varDept;
369792     %macro optCode(outdata=fcmpdata);
369793     %global fcmpStart;
369794     %let fcmpStart = 0;
369795     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
369796     %let NumNodes=9;
369797     %do k=1 %to &NumNodes;
369798     %vardept(fcmpdata=&outdata, id=&k);
369799     %end;
369800     %mend optCode;
369801     %optcode(outData=EMWS8.Ensmbl48_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 84 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 61 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 23 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 39 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 71 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

369802     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
369803     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
369804     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
369805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369806     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
369807     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
369808     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
369809     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369810     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
369811     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
369811   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

369812     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369813     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
369814     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
369815     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369816     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
369817     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
369818     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
369819     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369820     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
369821     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
369822     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
369823     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369824     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
369825     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
369825   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

369826     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

369827     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
369828     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
369829     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

369830     filename _pref
369830   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMPUBLISHSCORE.sas";
369831     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
369832     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural20\EMPUBLISHSCORE.sas.
369833    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
369834    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
369835    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
369836    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
369837    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
369838    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
369839    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
369840    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
369841    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
369842    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
369843    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
369844    +LENGTH _WARN_ $4
369845    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
369846    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
369847    +
369848    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
369849    +
369850    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
369851    +
369852    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
369853    +
369854    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
369855    +
369856    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
369857    +
369858    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
369859    +
369860    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
369861    +
369862    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
369863    +
369864    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
369865    +
369866    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
369867    +
369868    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
369869    +
369870    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
369871    +
369872    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
369873    +
369874    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
369875    +
369876    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
369877    +
369878    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
369879    +
369880    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
369881    +
369882    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
369883    +
369884    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
369885    +
369886    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
369887    +
369888    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
369889    +
369890    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
369891    +
369892    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
369893    +
369894    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
369895    +
369896    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
369897    +
369898    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
369899    +
369900    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
369901    +
369902    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
369903    +
369904    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
369905    +
369906    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
369907    +
369908    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
369909    +
369910    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
369911    +
369912    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
369913    +
369914    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
369915    +
369916    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
369917    +
369918    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
369919    +
369920    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
369921    +
369922    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
369923    +
369924    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
369925    +
369926    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
369927    +
369928    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
369929    +
369930    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
369931    +
369932    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
369933    +
369934    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
369935    +
369936    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
369937    +
369938    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
369939    +
369940    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
369941    +
369942    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
369943    +
369944    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
369945    +
369946    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
369947    +
369948    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
369949    +
369950    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
369951    +
369952    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
369953    +
369954    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
369955    +
369956    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
369957    +
369958    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
369959    +
369960    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
369961    +
369962    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
369963    +
369964    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
369965    +
369966    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
369967    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
369968    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
369969    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
369970    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
369971    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
369972    +end;
MPRINT(EM_DIAGRAM):   end;
369973    +else do;
MPRINT(EM_DIAGRAM):   else do;
369974    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
369975    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
369976    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
369977    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
369978    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
369979    +   end;
MPRINT(EM_DIAGRAM):   end;
369980    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
369981    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
369982    +   end;
MPRINT(EM_DIAGRAM):   end;
369983    +   else do;
MPRINT(EM_DIAGRAM):   else do;
369984    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
369985    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
369986    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
369987    +   end;
MPRINT(EM_DIAGRAM):   end;
369988    +end;
MPRINT(EM_DIAGRAM):   end;
369989    +
369990    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
369991    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
369992    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
369993    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
369994    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
369995    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
369996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
369997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
369998    +end;
MPRINT(EM_DIAGRAM):   end;
369999    +else do;
MPRINT(EM_DIAGRAM):   else do;
370000    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370001    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
370002    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370003    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
370004    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
370005    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
370006    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
370007    +   end;
MPRINT(EM_DIAGRAM):   end;
370008    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
370009    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
370010    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
370011    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
370012    +   end;
MPRINT(EM_DIAGRAM):   end;
370013    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370014    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
370015    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
370016    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
370017    +   end;
MPRINT(EM_DIAGRAM):   end;
370018    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370019    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
370020    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
370021    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
370022    +   end;
MPRINT(EM_DIAGRAM):   end;
370023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370024    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
370025    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
370026    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
370027    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370028    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370029    +   end;
MPRINT(EM_DIAGRAM):   end;
370030    +end;
MPRINT(EM_DIAGRAM):   end;
370031    +
370032    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
370033    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
370034    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
370035    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
370036    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
370037    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
370038    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370039    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370040    +end;
MPRINT(EM_DIAGRAM):   end;
370041    +else do;
MPRINT(EM_DIAGRAM):   else do;
370042    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370043    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
370044    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370045    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
370046    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
370047    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
370048    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
370049    +   end;
MPRINT(EM_DIAGRAM):   end;
370050    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370051    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
370052    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
370053    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
370054    +   end;
MPRINT(EM_DIAGRAM):   end;
370055    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
370056    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
370057    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
370058    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
370059    +   end;
MPRINT(EM_DIAGRAM):   end;
370060    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370061    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
370062    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
370063    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
370064    +   end;
MPRINT(EM_DIAGRAM):   end;
370065    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370066    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
370067    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
370068    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
370069    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370070    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370071    +   end;
MPRINT(EM_DIAGRAM):   end;
370072    +end;
MPRINT(EM_DIAGRAM):   end;
370073    +
370074    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
370075    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
370076    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
370077    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
370078    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
370079    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
370080    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370081    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370082    +end;
MPRINT(EM_DIAGRAM):   end;
370083    +else do;
MPRINT(EM_DIAGRAM):   else do;
370084    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370085    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
370086    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370087    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370088    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
370089    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
370090    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
370091    +   end;
MPRINT(EM_DIAGRAM):   end;
370092    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370093    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
370094    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
370095    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
370096    +   end;
MPRINT(EM_DIAGRAM):   end;
370097    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370098    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
370099    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
370100    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
370101    +   end;
MPRINT(EM_DIAGRAM):   end;
370102    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370103    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
370104    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
370105    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
370106    +   end;
MPRINT(EM_DIAGRAM):   end;
370107    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370108    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
370109    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
370110    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
370111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370113    +   end;
MPRINT(EM_DIAGRAM):   end;
370114    +end;
MPRINT(EM_DIAGRAM):   end;
370115    +
370116    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
370117    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
370118    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
370119    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
370120    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
370121    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
370122    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370123    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370124    +end;
MPRINT(EM_DIAGRAM):   end;
370125    +else do;
MPRINT(EM_DIAGRAM):   else do;
370126    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370127    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
370128    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370129    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370130    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
370131    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
370132    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
370133    +   end;
MPRINT(EM_DIAGRAM):   end;
370134    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370135    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
370136    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
370137    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
370138    +   end;
MPRINT(EM_DIAGRAM):   end;
370139    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370140    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
370141    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
370142    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
370143    +   end;
MPRINT(EM_DIAGRAM):   end;
370144    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370145    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
370146    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
370147    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
370148    +   end;
MPRINT(EM_DIAGRAM):   end;
370149    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370150    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
370151    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
370152    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
370153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370155    +   end;
MPRINT(EM_DIAGRAM):   end;
370156    +end;
MPRINT(EM_DIAGRAM):   end;
370157    +
370158    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
370159    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
370160    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
370161    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
370162    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
370163    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
370164    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370166    +end;
MPRINT(EM_DIAGRAM):   end;
370167    +else do;
MPRINT(EM_DIAGRAM):   else do;
370168    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370169    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
370170    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370171    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370172    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
370173    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
370174    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
370175    +   end;
MPRINT(EM_DIAGRAM):   end;
370176    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370177    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
370178    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
370179    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
370180    +   end;
MPRINT(EM_DIAGRAM):   end;
370181    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370182    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
370183    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
370184    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
370185    +   end;
MPRINT(EM_DIAGRAM):   end;
370186    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370187    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
370188    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
370189    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
370190    +   end;
MPRINT(EM_DIAGRAM):   end;
370191    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370192    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
370193    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
370194    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
370195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370197    +   end;
MPRINT(EM_DIAGRAM):   end;
370198    +end;
MPRINT(EM_DIAGRAM):   end;
370199    +
370200    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
370201    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
370202    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
370203    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
370204    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
370205    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
370206    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370207    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370208    +end;
MPRINT(EM_DIAGRAM):   end;
370209    +else do;
MPRINT(EM_DIAGRAM):   else do;
370210    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370211    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
370212    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370213    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370214    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
370215    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
370216    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
370217    +   end;
MPRINT(EM_DIAGRAM):   end;
370218    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370219    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
370220    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
370221    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
370222    +   end;
MPRINT(EM_DIAGRAM):   end;
370223    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370224    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
370225    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
370226    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
370227    +   end;
MPRINT(EM_DIAGRAM):   end;
370228    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370229    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
370230    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
370231    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
370232    +   end;
MPRINT(EM_DIAGRAM):   end;
370233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370234    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
370235    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
370236    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
370237    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370238    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370239    +   end;
MPRINT(EM_DIAGRAM):   end;
370240    +end;
MPRINT(EM_DIAGRAM):   end;
370241    +
370242    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
370243    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
370244    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
370245    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
370246    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
370247    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
370248    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370249    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370250    +end;
MPRINT(EM_DIAGRAM):   end;
370251    +else do;
MPRINT(EM_DIAGRAM):   else do;
370252    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370253    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
370254    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370255    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370256    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
370257    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
370258    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
370259    +   end;
MPRINT(EM_DIAGRAM):   end;
370260    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370261    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
370262    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
370263    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
370264    +   end;
MPRINT(EM_DIAGRAM):   end;
370265    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370266    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
370267    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
370268    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
370269    +   end;
MPRINT(EM_DIAGRAM):   end;
370270    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370271    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
370272    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
370273    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
370274    +   end;
MPRINT(EM_DIAGRAM):   end;
370275    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370276    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
370277    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
370278    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
370279    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370280    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370281    +   end;
MPRINT(EM_DIAGRAM):   end;
370282    +end;
MPRINT(EM_DIAGRAM):   end;
370283    +
370284    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
370285    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
370286    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
370287    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
370288    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
370289    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370290    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370291    +end;
MPRINT(EM_DIAGRAM):   end;
370292    +else do;
MPRINT(EM_DIAGRAM):   else do;
370293    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370294    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
370295    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370296    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370297    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
370298    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
370299    +   end;
MPRINT(EM_DIAGRAM):   end;
370300    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370301    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
370302    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
370303    +   end;
MPRINT(EM_DIAGRAM):   end;
370304    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370305    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
370306    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
370307    +   end;
MPRINT(EM_DIAGRAM):   end;
370308    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370309    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
370310    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
370311    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370312    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370313    +   end;
MPRINT(EM_DIAGRAM):   end;
370314    +end;
MPRINT(EM_DIAGRAM):   end;
370315    +
370316    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
370317    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
370318    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
370319    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
370320    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
370321    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
370322    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370323    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370324    +end;
MPRINT(EM_DIAGRAM):   end;
370325    +else do;
MPRINT(EM_DIAGRAM):   else do;
370326    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370327    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
370328    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370329    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
370330    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
370331    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
370332    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
370333    +   end;
MPRINT(EM_DIAGRAM):   end;
370334    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370335    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
370336    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
370337    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
370338    +   end;
MPRINT(EM_DIAGRAM):   end;
370339    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370340    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
370341    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
370342    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
370343    +   end;
MPRINT(EM_DIAGRAM):   end;
370344    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
370345    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
370346    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
370347    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
370348    +   end;
MPRINT(EM_DIAGRAM):   end;
370349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370350    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
370351    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
370352    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
370353    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370354    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370355    +   end;
MPRINT(EM_DIAGRAM):   end;
370356    +end;
MPRINT(EM_DIAGRAM):   end;
370357    +
370358    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
370359    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
370360    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
370361    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
370362    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
370363    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
370364    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370365    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370366    +end;
MPRINT(EM_DIAGRAM):   end;
370367    +else do;
MPRINT(EM_DIAGRAM):   else do;
370368    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370369    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
370370    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370371    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370372    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
370373    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
370374    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
370375    +   end;
MPRINT(EM_DIAGRAM):   end;
370376    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370377    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
370378    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
370379    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
370380    +   end;
MPRINT(EM_DIAGRAM):   end;
370381    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370382    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
370383    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
370384    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
370385    +   end;
MPRINT(EM_DIAGRAM):   end;
370386    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370387    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
370388    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
370389    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
370390    +   end;
MPRINT(EM_DIAGRAM):   end;
370391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370392    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
370393    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
370394    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
370395    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370396    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370397    +   end;
MPRINT(EM_DIAGRAM):   end;
370398    +end;
MPRINT(EM_DIAGRAM):   end;
370399    +
370400    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
370401    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
370402    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
370403    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
370404    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
370405    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
370406    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370408    +end;
MPRINT(EM_DIAGRAM):   end;
370409    +else do;
MPRINT(EM_DIAGRAM):   else do;
370410    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370411    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
370412    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370413    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
370414    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
370415    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
370416    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
370417    +   end;
MPRINT(EM_DIAGRAM):   end;
370418    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
370419    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
370420    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
370421    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
370422    +   end;
MPRINT(EM_DIAGRAM):   end;
370423    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370424    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
370425    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
370426    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
370427    +   end;
MPRINT(EM_DIAGRAM):   end;
370428    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370429    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
370430    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
370431    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
370432    +   end;
MPRINT(EM_DIAGRAM):   end;
370433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370434    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
370435    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
370436    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
370437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370439    +   end;
MPRINT(EM_DIAGRAM):   end;
370440    +end;
MPRINT(EM_DIAGRAM):   end;
370441    +
370442    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
370443    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
370444    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
370445    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
370446    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
370447    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
370448    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370449    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370450    +end;
MPRINT(EM_DIAGRAM):   end;
370451    +else do;
MPRINT(EM_DIAGRAM):   else do;
370452    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370453    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
370454    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370455    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
370456    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
370457    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
370458    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
370459    +   end;
MPRINT(EM_DIAGRAM):   end;
370460    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
370461    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
370462    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
370463    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
370464    +   end;
MPRINT(EM_DIAGRAM):   end;
370465    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370466    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
370467    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
370468    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
370469    +   end;
MPRINT(EM_DIAGRAM):   end;
370470    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370471    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
370472    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
370473    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
370474    +   end;
MPRINT(EM_DIAGRAM):   end;
370475    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370476    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
370477    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
370478    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
370479    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370480    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370481    +   end;
MPRINT(EM_DIAGRAM):   end;
370482    +end;
MPRINT(EM_DIAGRAM):   end;
370483    +
370484    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
370485    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
370486    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
370487    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
370488    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
370489    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
370490    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
370491    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370492    +end;
MPRINT(EM_DIAGRAM):   end;
370493    +else do;
MPRINT(EM_DIAGRAM):   else do;
370494    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
370495    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
370496    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
370497    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
370498    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
370499    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
370500    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
370501    +   end;
MPRINT(EM_DIAGRAM):   end;
370502    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
370503    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
370504    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
370505    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
370506    +   end;
MPRINT(EM_DIAGRAM):   end;
370507    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
370508    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
370509    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
370510    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
370511    +   end;
MPRINT(EM_DIAGRAM):   end;
370512    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
370513    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
370514    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
370515    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
370516    +   end;
MPRINT(EM_DIAGRAM):   end;
370517    +   else do;
MPRINT(EM_DIAGRAM):   else do;
370518    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
370519    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
370520    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
370521    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
370522    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370523    +   end;
MPRINT(EM_DIAGRAM):   end;
370524    +end;
MPRINT(EM_DIAGRAM):   end;
370525    +
370526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370527    +*** Checking missing input Interval
370528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
370529    +
370530    +IF NMISS(
370531    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
370532    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
370533    +
370534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
370535    +END;
MPRINT(EM_DIAGRAM):   END;
370536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370537    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
370538    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370539    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
370540    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
370541    +END;
MPRINT(EM_DIAGRAM):   END;
370542    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
370543    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
370544    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
370545    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
370546    +END;
MPRINT(EM_DIAGRAM):   END;
370547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370548    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
370549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370551    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
370552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370553    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
370554    +   H1x1_1  =      1.0311746583126 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0311746583126 * S_Year_Birth ;
370555    +   H1x1_2  =     1.67119181587557 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.67119181587557 * S_Year_Birth ;
370556    +   H1x1_3  =    -2.17540349820814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.17540349820814 * S_Year_Birth ;
370557    +   H1x1_4  =    -2.56679893298362 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.56679893298362 * S_Year_Birth ;
370558    +   H1x1_5  =    -0.60932306642258 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.60932306642258 * S_Year_Birth ;
370559    +   H1x1_1  = H1x1_1  +     0.72534982243417 * GRP_AcceptedCmp52
370560    +          +     0.33166960090157 * GRP_Frq2  +     1.71697127611163 * GRP_Frq3
370561    +          +     0.81002020807326 * GRP_Frq4  +     0.48027973945372 *
370562    +        GRP_Income2  +    -1.09550149543369 * GRP_Income3
370563    +          +    -0.22235642667559 * GRP_Income4  +    -0.00978473434282 *
370564    +        GRP_Mnt2  +    -0.11796310741854 * GRP_Mnt3  +    -0.42227802637743 *
370565    +        GRP_Mnt4  +    -0.60021395849859 * GRP_MntFishProducts2
370566    +          +    -1.92253913417034 * GRP_MntFishProducts3
370567    +          +     0.11236967036572 * GRP_MntFishProducts4
370568    +          +     1.55117451498964 * GRP_MntGoldProds2
370569    +          +    -2.17638819155912 * GRP_MntGoldProds3
370570    +          +     1.12471370225173 * GRP_MntGoldProds4
370571    +          +     0.73773441156548 * GRP_MntMeatProducts2
370572    +          +     2.07738910661633 * GRP_MntMeatProducts3
370573    +          +    -0.64280630173292 * GRP_MntMeatProducts4
370574    +          +     0.77316083192112 * GRP_MntWines2  +     2.15867403144607 *
370575    +        GRP_MntWines3  +     2.47891578910494 * GRP_MntWines4
370576    +          +     0.27137671258246 * GRP_NumCatalogPurchases3
370577    +          +     1.17769351442984 * GRP_NumCatalogPurchases4
370578    +          +     1.22104662684375 * GRP_NumDistPurchases2
370579    +          +      3.4956187335148 * GRP_NumDistPurchases3
370580    +          +     1.44110988448724 * GRP_NumDistPurchases4
370581    +          +    -0.15910531424988 * GRP_NumWebPurchases2
370582    +          +      2.0651216353476 * GRP_NumWebPurchases3
370583    +          +     1.88264340284474 * GRP_NumWebPurchases4
370584    +          +    -0.51356035467324 * GRP_RFMstat2  +    -0.97145618762825 *
370585    +        GRP_RFMstat3  +     1.44865956224608 * GRP_RFMstat4
370586    +          +    -0.02171623156521 * GRP_RMntFrq2  +     2.25871822244977 *
370587    +        GRP_RMntFrq3  +    -0.95854946562766 * GRP_RMntFrq4
370588    +          +    -0.19279939282854 * GRP_Recency2  +    -0.59440462375689 *
370589    +        GRP_Recency3  +     -2.1494171625282 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.72534982243417 * GRP_AcceptedCmp52 + 
0.33166960090157 * GRP_Frq2 + 1.71697127611163 * GRP_Frq3 + 0.81002020807326 * GRP_Frq4 + 
0.48027973945372 * GRP_Income2 + -1.09550149543369 * GRP_Income3 + -0.22235642667559 * 
GRP_Income4 + -0.00978473434282 * GRP_Mnt2 + -0.11796310741854 * GRP_Mnt3 + -0.42227802637743 
* GRP_Mnt4 + -0.60021395849859 * GRP_MntFishProducts2 + -1.92253913417034 * 
GRP_MntFishProducts3 + 0.11236967036572 * GRP_MntFishProducts4 + 1.55117451498964 * 
GRP_MntGoldProds2 + -2.17638819155912 * GRP_MntGoldProds3 + 1.12471370225173 * 
GRP_MntGoldProds4 + 0.73773441156548 * GRP_MntMeatProducts2 + 2.07738910661633 * 
GRP_MntMeatProducts3 + -0.64280630173292 * GRP_MntMeatProducts4 + 0.77316083192112 * 
GRP_MntWines2 + 2.15867403144607 * GRP_MntWines3 + 2.47891578910494 * GRP_MntWines4 + 
0.27137671258246 * GRP_NumCatalogPurchases3 + 1.17769351442984 * GRP_NumCatalogPurchases4 + 
1.22104662684375 * GRP_NumDistPurchases2 + 3.4956187335148 * GRP_NumDistPurchases3 + 
1.44110988448724 * GRP_NumDistPurchases4 + -0.15910531424988 * GRP_NumWebPurchases2 + 
2.0651216353476 * GRP_NumWebPurchases3 + 1.88264340284474 * GRP_NumWebPurchases4 + 
-0.51356035467324 * GRP_RFMstat2 + -0.97145618762825 * GRP_RFMstat3 + 1.44865956224608 * 
GRP_RFMstat4 + -0.02171623156521 * GRP_RMntFrq2 + 2.25871822244977 * GRP_RMntFrq3 + 
-0.95854946562766 * GRP_RMntFrq4 + -0.19279939282854 * GRP_Recency2 + -0.59440462375689 * 
GRP_Recency3 + -2.1494171625282 * GRP_Recency4 ;
370590    +   H1x1_2  = H1x1_2  +    -1.10416749938295 * GRP_AcceptedCmp52
370591    +          +     2.11163264556083 * GRP_Frq2  +    -0.30443521786246 * GRP_Frq3
370592    +          +     2.19401599825923 * GRP_Frq4  +    -0.38326784930815 *
370593    +        GRP_Income2  +    -0.07594895187003 * GRP_Income3
370594    +          +     0.98207007879144 * GRP_Income4  +    -1.92634732130472 *
370595    +        GRP_Mnt2  +     0.64603066612326 * GRP_Mnt3  +     0.62922821521966 *
370596    +        GRP_Mnt4  +     -0.4161962895106 * GRP_MntFishProducts2
370597    +          +     0.69185352158005 * GRP_MntFishProducts3
370598    +          +    -0.03493178084029 * GRP_MntFishProducts4
370599    +          +     1.51100187776315 * GRP_MntGoldProds2
370600    +          +     0.06501688279193 * GRP_MntGoldProds3
370601    +          +    -0.39137744731231 * GRP_MntGoldProds4
370602    +          +    -1.71718837423104 * GRP_MntMeatProducts2
370603    +          +    -2.21915390243757 * GRP_MntMeatProducts3
370604    +          +    -0.56748587906854 * GRP_MntMeatProducts4
370605    +          +     0.62307046604402 * GRP_MntWines2  +     0.47352126999194 *
370606    +        GRP_MntWines3  +      0.2191426110263 * GRP_MntWines4
370607    +          +     1.48903401021544 * GRP_NumCatalogPurchases3
370608    +          +     1.17263293507207 * GRP_NumCatalogPurchases4
370609    +          +     1.51105230747578 * GRP_NumDistPurchases2
370610    +          +     0.77634340058478 * GRP_NumDistPurchases3
370611    +          +    -0.03088809375301 * GRP_NumDistPurchases4
370612    +          +    -0.96601789395554 * GRP_NumWebPurchases2
370613    +          +     0.85040977160083 * GRP_NumWebPurchases3
370614    +          +     2.40308918299781 * GRP_NumWebPurchases4
370615    +          +     0.12282845458333 * GRP_RFMstat2  +    -0.98545061581559 *
370616    +        GRP_RFMstat3  +     1.25668440586033 * GRP_RFMstat4
370617    +          +     0.46767962398497 * GRP_RMntFrq2  +    -0.80481923203399 *
370618    +        GRP_RMntFrq3  +    -1.57392798605208 * GRP_RMntFrq4
370619    +          +     0.85109569398847 * GRP_Recency2  +     0.29456403684394 *
370620    +        GRP_Recency3  +     2.66867988462295 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.10416749938295 * GRP_AcceptedCmp52 + 
2.11163264556083 * GRP_Frq2 + -0.30443521786246 * GRP_Frq3 + 2.19401599825923 * GRP_Frq4 + 
-0.38326784930815 * GRP_Income2 + -0.07594895187003 * GRP_Income3 + 0.98207007879144 * 
GRP_Income4 + -1.92634732130472 * GRP_Mnt2 + 0.64603066612326 * GRP_Mnt3 + 0.62922821521966 * 
GRP_Mnt4 + -0.4161962895106 * GRP_MntFishProducts2 + 0.69185352158005 * GRP_MntFishProducts3 + 
-0.03493178084029 * GRP_MntFishProducts4 + 1.51100187776315 * GRP_MntGoldProds2 + 
0.06501688279193 * GRP_MntGoldProds3 + -0.39137744731231 * GRP_MntGoldProds4 + 
-1.71718837423104 * GRP_MntMeatProducts2 + -2.21915390243757 * GRP_MntMeatProducts3 + 
-0.56748587906854 * GRP_MntMeatProducts4 + 0.62307046604402 * GRP_MntWines2 + 0.47352126999194 
* GRP_MntWines3 + 0.2191426110263 * GRP_MntWines4 + 1.48903401021544 * 
GRP_NumCatalogPurchases3 + 1.17263293507207 * GRP_NumCatalogPurchases4 + 1.51105230747578 * 
GRP_NumDistPurchases2 + 0.77634340058478 * GRP_NumDistPurchases3 + -0.03088809375301 * 
GRP_NumDistPurchases4 + -0.96601789395554 * GRP_NumWebPurchases2 + 0.85040977160083 * 
GRP_NumWebPurchases3 + 2.40308918299781 * GRP_NumWebPurchases4 + 0.12282845458333 * 
GRP_RFMstat2 + -0.98545061581559 * GRP_RFMstat3 + 1.25668440586033 * GRP_RFMstat4 + 
0.46767962398497 * GRP_RMntFrq2 + -0.80481923203399 * GRP_RMntFrq3 + -1.57392798605208 * 
GRP_RMntFrq4 + 0.85109569398847 * GRP_Recency2 + 0.29456403684394 * GRP_Recency3 + 
2.66867988462295 * GRP_Recency4 ;
370621    +   H1x1_3  = H1x1_3  +    -3.01879385716191 * GRP_AcceptedCmp52
370622    +          +    -0.13662280353682 * GRP_Frq2  +     2.51930889376721 * GRP_Frq3
370623    +          +     1.76895510412356 * GRP_Frq4  +     -0.5692048618965 *
370624    +        GRP_Income2  +     1.18033291239845 * GRP_Income3
370625    +          +    -0.64679354804447 * GRP_Income4  +    -1.28802047381892 *
370626    +        GRP_Mnt2  +    -2.46267752020506 * GRP_Mnt3  +     0.17133913926957 *
370627    +        GRP_Mnt4  +     1.27283832451603 * GRP_MntFishProducts2
370628    +          +    -0.25133476006515 * GRP_MntFishProducts3
370629    +          +     1.43382012526151 * GRP_MntFishProducts4
370630    +          +      0.6587510367878 * GRP_MntGoldProds2
370631    +          +    -2.29815972364167 * GRP_MntGoldProds3
370632    +          +    -1.17878838514109 * GRP_MntGoldProds4
370633    +          +    -1.45630165039671 * GRP_MntMeatProducts2
370634    +          +    -0.11970663820977 * GRP_MntMeatProducts3
370635    +          +    -0.76333182688138 * GRP_MntMeatProducts4
370636    +          +    -2.52565926826767 * GRP_MntWines2  +     0.00775439635111 *
370637    +        GRP_MntWines3  +    -1.79940008598217 * GRP_MntWines4
370638    +          +    -1.25235345037614 * GRP_NumCatalogPurchases3
370639    +          +    -3.32950963282576 * GRP_NumCatalogPurchases4
370640    +          +    -0.83062872942088 * GRP_NumDistPurchases2
370641    +          +      1.2644984519337 * GRP_NumDistPurchases3
370642    +          +     0.62516412515385 * GRP_NumDistPurchases4
370643    +          +    -0.91932392687811 * GRP_NumWebPurchases2
370644    +          +     0.63985001179952 * GRP_NumWebPurchases3
370645    +          +     0.11379774354586 * GRP_NumWebPurchases4
370646    +          +    -0.83336515651784 * GRP_RFMstat2  +    -0.76327708518862 *
370647    +        GRP_RFMstat3  +    -1.65882578353771 * GRP_RFMstat4
370648    +          +     0.96912805482142 * GRP_RMntFrq2  +     0.89830852536378 *
370649    +        GRP_RMntFrq3  +    -0.80853907149434 * GRP_RMntFrq4
370650    +          +    -1.09357609598677 * GRP_Recency2  +    -0.36348291669233 *
370651    +        GRP_Recency3  +    -1.63045870617841 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.01879385716191 * GRP_AcceptedCmp52 + 
-0.13662280353682 * GRP_Frq2 + 2.51930889376721 * GRP_Frq3 + 1.76895510412356 * GRP_Frq4 + 
-0.5692048618965 * GRP_Income2 + 1.18033291239845 * GRP_Income3 + -0.64679354804447 * 
GRP_Income4 + -1.28802047381892 * GRP_Mnt2 + -2.46267752020506 * GRP_Mnt3 + 0.17133913926957 * 
GRP_Mnt4 + 1.27283832451603 * GRP_MntFishProducts2 + -0.25133476006515 * GRP_MntFishProducts3 
+ 1.43382012526151 * GRP_MntFishProducts4 + 0.6587510367878 * GRP_MntGoldProds2 + 
-2.29815972364167 * GRP_MntGoldProds3 + -1.17878838514109 * GRP_MntGoldProds4 + 
-1.45630165039671 * GRP_MntMeatProducts2 + -0.11970663820977 * GRP_MntMeatProducts3 + 
-0.76333182688138 * GRP_MntMeatProducts4 + -2.52565926826767 * GRP_MntWines2 + 
0.00775439635111 * GRP_MntWines3 + -1.79940008598217 * GRP_MntWines4 + -1.25235345037614 * 
GRP_NumCatalogPurchases3 + -3.32950963282576 * GRP_NumCatalogPurchases4 + -0.83062872942088 * 
GRP_NumDistPurchases2 + 1.2644984519337 * GRP_NumDistPurchases3 + 0.62516412515385 * 
GRP_NumDistPurchases4 + -0.91932392687811 * GRP_NumWebPurchases2 + 0.63985001179952 * 
GRP_NumWebPurchases3 + 0.11379774354586 * GRP_NumWebPurchases4 + -0.83336515651784 * 
GRP_RFMstat2 + -0.76327708518862 * GRP_RFMstat3 + -1.65882578353771 * GRP_RFMstat4 + 
0.96912805482142 * GRP_RMntFrq2 + 0.89830852536378 * GRP_RMntFrq3 + -0.80853907149434 * 
GRP_RMntFrq4 + -1.09357609598677 * GRP_Recency2 + -0.36348291669233 * GRP_Recency3 + 
-1.63045870617841 * GRP_Recency4 ;
370652    +   H1x1_4  = H1x1_4  +    -0.22003392209515 * GRP_AcceptedCmp52
370653    +          +    -0.37446340795406 * GRP_Frq2  +    -0.00569020240777 * GRP_Frq3
370654    +          +     0.38116150545111 * GRP_Frq4  +    -0.36688806155078 *
370655    +        GRP_Income2  +     -4.2575032053121 * GRP_Income3
370656    +          +     1.51798546961788 * GRP_Income4  +    -0.88579848196414 *
370657    +        GRP_Mnt2  +     1.84159465073955 * GRP_Mnt3  +     0.11670514600746 *
370658    +        GRP_Mnt4  +    -3.46232646407418 * GRP_MntFishProducts2
370659    +          +     0.25005234850524 * GRP_MntFishProducts3
370660    +          +    -0.07970714752313 * GRP_MntFishProducts4
370661    +          +     -0.7495440064059 * GRP_MntGoldProds2
370662    +          +     -0.0659148563739 * GRP_MntGoldProds3
370663    +          +    -1.42445075896946 * GRP_MntGoldProds4
370664    +          +      0.1738975461322 * GRP_MntMeatProducts2
370665    +          +    -2.24799164386156 * GRP_MntMeatProducts3
370666    +          +    -1.67754357341899 * GRP_MntMeatProducts4
370667    +          +    -0.05307351478942 * GRP_MntWines2  +     -2.2168800511889 *
370668    +        GRP_MntWines3  +    -1.48732327222777 * GRP_MntWines4
370669    +          +    -0.36761319556449 * GRP_NumCatalogPurchases3
370670    +          +    -2.89167685306869 * GRP_NumCatalogPurchases4
370671    +          +    -0.48267351716569 * GRP_NumDistPurchases2
370672    +          +     0.93211719554417 * GRP_NumDistPurchases3
370673    +          +      1.1708430486506 * GRP_NumDistPurchases4
370674    +          +     0.03811902892169 * GRP_NumWebPurchases2
370675    +          +    -1.51477371309928 * GRP_NumWebPurchases3
370676    +          +     1.07378297590898 * GRP_NumWebPurchases4
370677    +          +     1.68393431629797 * GRP_RFMstat2  +     1.58685880164611 *
370678    +        GRP_RFMstat3  +     0.80759821340467 * GRP_RFMstat4
370679    +          +     1.66879117439255 * GRP_RMntFrq2  +     0.80834322412036 *
370680    +        GRP_RMntFrq3  +     0.23086766354714 * GRP_RMntFrq4
370681    +          +      1.3218682104263 * GRP_Recency2  +    -1.73155287312103 *
370682    +        GRP_Recency3  +     0.90108611111458 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.22003392209515 * GRP_AcceptedCmp52 + 
-0.37446340795406 * GRP_Frq2 + -0.00569020240777 * GRP_Frq3 + 0.38116150545111 * GRP_Frq4 + 
-0.36688806155078 * GRP_Income2 + -4.2575032053121 * GRP_Income3 + 1.51798546961788 * 
GRP_Income4 + -0.88579848196414 * GRP_Mnt2 + 1.84159465073955 * GRP_Mnt3 + 0.11670514600746 * 
GRP_Mnt4 + -3.46232646407418 * GRP_MntFishProducts2 + 0.25005234850524 * GRP_MntFishProducts3 
+ -0.07970714752313 * GRP_MntFishProducts4 + -0.7495440064059 * GRP_MntGoldProds2 + 
-0.0659148563739 * GRP_MntGoldProds3 + -1.42445075896946 * GRP_MntGoldProds4 + 0.1738975461322 
* GRP_MntMeatProducts2 + -2.24799164386156 * GRP_MntMeatProducts3 + -1.67754357341899 * 
GRP_MntMeatProducts4 + -0.05307351478942 * GRP_MntWines2 + -2.2168800511889 * GRP_MntWines3 + 
-1.48732327222777 * GRP_MntWines4 + -0.36761319556449 * GRP_NumCatalogPurchases3 + 
-2.89167685306869 * GRP_NumCatalogPurchases4 + -0.48267351716569 * GRP_NumDistPurchases2 + 
0.93211719554417 * GRP_NumDistPurchases3 + 1.1708430486506 * GRP_NumDistPurchases4 + 
0.03811902892169 * GRP_NumWebPurchases2 + -1.51477371309928 * GRP_NumWebPurchases3 + 
1.07378297590898 * GRP_NumWebPurchases4 + 1.68393431629797 * GRP_RFMstat2 + 1.58685880164611 * 
GRP_RFMstat3 + 0.80759821340467 * GRP_RFMstat4 + 1.66879117439255 * GRP_RMntFrq2 + 
0.80834322412036 * GRP_RMntFrq3 + 0.23086766354714 * GRP_RMntFrq4 + 1.3218682104263 * 
GRP_Recency2 + -1.73155287312103 * GRP_Recency3 + 0.90108611111458 * GRP_Recency4 ;
370683    +   H1x1_5  = H1x1_5  +    -2.25400715952368 * GRP_AcceptedCmp52
370684    +          +    -0.68951263089678 * GRP_Frq2  +    -1.06579468283295 * GRP_Frq3
370685    +          +    -2.03202371442661 * GRP_Frq4  +      0.1036760802752 *
370686    +        GRP_Income2  +    -0.92046251438792 * GRP_Income3
370687    +          +     1.24075371479112 * GRP_Income4  +    -2.19069916142209 *
370688    +        GRP_Mnt2  +     1.76084360929533 * GRP_Mnt3  +     0.20732134279897 *
370689    +        GRP_Mnt4  +    -1.25213582301524 * GRP_MntFishProducts2
370690    +          +    -1.49559041774587 * GRP_MntFishProducts3
370691    +          +     1.29292270443546 * GRP_MntFishProducts4
370692    +          +     3.28109415592287 * GRP_MntGoldProds2
370693    +          +     0.40523569115651 * GRP_MntGoldProds3
370694    +          +        0.70305704265 * GRP_MntGoldProds4
370695    +          +    -1.85351989681271 * GRP_MntMeatProducts2
370696    +          +    -0.63625311683955 * GRP_MntMeatProducts3
370697    +          +     0.27320544681113 * GRP_MntMeatProducts4
370698    +          +     1.96095600251535 * GRP_MntWines2  +     2.24427494885455 *
370699    +        GRP_MntWines3  +    -0.88569250661863 * GRP_MntWines4
370700    +          +    -0.42794019910524 * GRP_NumCatalogPurchases3
370701    +          +    -2.32852367141603 * GRP_NumCatalogPurchases4
370702    +          +    -1.40970961318877 * GRP_NumDistPurchases2
370703    +          +     -2.5780841761751 * GRP_NumDistPurchases3
370704    +          +    -0.35557998232484 * GRP_NumDistPurchases4
370705    +          +     1.27746944985248 * GRP_NumWebPurchases2
370706    +          +     0.69463977283169 * GRP_NumWebPurchases3
370707    +          +    -0.54397813851169 * GRP_NumWebPurchases4
370708    +          +    -0.31669101358561 * GRP_RFMstat2  +     2.18799717857163 *
370709    +        GRP_RFMstat3  +    -0.42571916720282 * GRP_RFMstat4
370710    +          +     -0.8273646010144 * GRP_RMntFrq2  +     0.34575371088075 *
370711    +        GRP_RMntFrq3  +    -0.85751874647054 * GRP_RMntFrq4
370712    +          +    -1.53759054703623 * GRP_Recency2  +      0.1907268514387 *
370713    +        GRP_Recency3  +    -0.73522914565387 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -2.25400715952368 * GRP_AcceptedCmp52 + 
-0.68951263089678 * GRP_Frq2 + -1.06579468283295 * GRP_Frq3 + -2.03202371442661 * GRP_Frq4 + 
0.1036760802752 * GRP_Income2 + -0.92046251438792 * GRP_Income3 + 1.24075371479112 * 
GRP_Income4 + -2.19069916142209 * GRP_Mnt2 + 1.76084360929533 * GRP_Mnt3 + 0.20732134279897 * 
GRP_Mnt4 + -1.25213582301524 * GRP_MntFishProducts2 + -1.49559041774587 * GRP_MntFishProducts3 
+ 1.29292270443546 * GRP_MntFishProducts4 + 3.28109415592287 * GRP_MntGoldProds2 + 
0.40523569115651 * GRP_MntGoldProds3 + 0.70305704265 * GRP_MntGoldProds4 + -1.85351989681271 * 
GRP_MntMeatProducts2 + -0.63625311683955 * GRP_MntMeatProducts3 + 0.27320544681113 * 
GRP_MntMeatProducts4 + 1.96095600251535 * GRP_MntWines2 + 2.24427494885455 * GRP_MntWines3 + 
-0.88569250661863 * GRP_MntWines4 + -0.42794019910524 * GRP_NumCatalogPurchases3 + 
-2.32852367141603 * GRP_NumCatalogPurchases4 + -1.40970961318877 * GRP_NumDistPurchases2 + 
-2.5780841761751 * GRP_NumDistPurchases3 + -0.35557998232484 * GRP_NumDistPurchases4 + 
1.27746944985248 * GRP_NumWebPurchases2 + 0.69463977283169 * GRP_NumWebPurchases3 + 
-0.54397813851169 * GRP_NumWebPurchases4 + -0.31669101358561 * GRP_RFMstat2 + 2.18799717857163 
* GRP_RFMstat3 + -0.42571916720282 * GRP_RFMstat4 + -0.8273646010144 * GRP_RMntFrq2 + 
0.34575371088075 * GRP_RMntFrq3 + -0.85751874647054 * GRP_RMntFrq4 + -1.53759054703623 * 
GRP_Recency2 + 0.1907268514387 * GRP_Recency3 + -0.73522914565387 * GRP_Recency4 ;
370714    +   H1x1_1  =     0.19335754651259 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.19335754651259 + H1x1_1 ;
370715    +   H1x1_2  =     2.09010164778105 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.09010164778105 + H1x1_2 ;
370716    +   H1x1_3  =    -0.06489378657176 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.06489378657176 + H1x1_3 ;
370717    +   H1x1_4  =    -0.14814564965512 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14814564965512 + H1x1_4 ;
370718    +   H1x1_5  =      1.2298003293092 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.2298003293092 + H1x1_5 ;
370719    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
370720    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
370721    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
370722    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
370723    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
370724    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
370725    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
370726    +END;
MPRINT(EM_DIAGRAM):   END;
370727    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
370728    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
370729    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
370730    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
370731    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
370732    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
370733    +END;
MPRINT(EM_DIAGRAM):   END;
370734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370735    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
370736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370737    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
370738    +   H1x2_1  =    -1.88709734442083 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.88709734442083 * S_Year_Birth ;
370739    +   H1x2_2  =     0.39337522313841 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.39337522313841 * S_Year_Birth ;
370740    +   H1x2_3  =    -0.80137600943997 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.80137600943997 * S_Year_Birth ;
370741    +   H1x2_4  =     0.56552045600061 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.56552045600061 * S_Year_Birth ;
370742    +   H1x2_5  =     0.08757939638091 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.08757939638091 * S_Year_Birth ;
370743    +   H1x2_1  = H1x2_1  +    -0.80297380803583 * GRP_AcceptedCmp52
370744    +          +     0.77171658129897 * GRP_Frq2  +    -1.90373500999925 * GRP_Frq3
370745    +          +     0.34067508173447 * GRP_Frq4  +    -3.40546398001194 *
370746    +        GRP_Income2  +      2.4308303101124 * GRP_Income3
370747    +          +      1.7371902933386 * GRP_Income4  +    -1.19436336479656 *
370748    +        GRP_Mnt2  +    -0.40996866110225 * GRP_Mnt3  +     1.04801669037568 *
370749    +        GRP_Mnt4  +     1.95500373096914 * GRP_MntFishProducts2
370750    +          +     2.51364109656281 * GRP_MntFishProducts3
370751    +          +    -1.42490007484769 * GRP_MntFishProducts4
370752    +          +    -0.45125943648795 * GRP_MntGoldProds2
370753    +          +     2.47102254724134 * GRP_MntGoldProds3
370754    +          +     -1.9039173262792 * GRP_MntGoldProds4
370755    +          +     0.19349291706995 * GRP_MntMeatProducts2
370756    +          +     1.13475826324844 * GRP_MntMeatProducts3
370757    +          +    -0.33642288502432 * GRP_MntMeatProducts4
370758    +          +     1.11286337512828 * GRP_MntWines2  +    -1.73349392468621 *
370759    +        GRP_MntWines3  +     0.82891272252224 * GRP_MntWines4
370760    +          +     0.15659125827236 * GRP_NumCatalogPurchases3
370761    +          +     0.32817066335176 * GRP_NumCatalogPurchases4
370762    +          +    -0.67313821415044 * GRP_NumDistPurchases2
370763    +          +    -0.96239937857546 * GRP_NumDistPurchases3
370764    +          +     0.32058507897383 * GRP_NumDistPurchases4
370765    +          +     0.02503658374779 * GRP_NumWebPurchases2
370766    +          +    -2.42182777667863 * GRP_NumWebPurchases3
370767    +          +     1.09934791830799 * GRP_NumWebPurchases4
370768    +          +     0.99647285457344 * GRP_RFMstat2  +    -1.81285090299632 *
370769    +        GRP_RFMstat3  +      0.6907946914019 * GRP_RFMstat4
370770    +          +    -0.96741541040827 * GRP_RMntFrq2  +     1.54078374992995 *
370771    +        GRP_RMntFrq3  +     -0.5606172121429 * GRP_RMntFrq4
370772    +          +     1.09972681443966 * GRP_Recency2  +     0.40240053086114 *
370773    +        GRP_Recency3  +     3.54622644138557 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.80297380803583 * GRP_AcceptedCmp52 + 
0.77171658129897 * GRP_Frq2 + -1.90373500999925 * GRP_Frq3 + 0.34067508173447 * GRP_Frq4 + 
-3.40546398001194 * GRP_Income2 + 2.4308303101124 * GRP_Income3 + 1.7371902933386 * 
GRP_Income4 + -1.19436336479656 * GRP_Mnt2 + -0.40996866110225 * GRP_Mnt3 + 1.04801669037568 * 
GRP_Mnt4 + 1.95500373096914 * GRP_MntFishProducts2 + 2.51364109656281 * GRP_MntFishProducts3 + 
-1.42490007484769 * GRP_MntFishProducts4 + -0.45125943648795 * GRP_MntGoldProds2 + 
2.47102254724134 * GRP_MntGoldProds3 + -1.9039173262792 * GRP_MntGoldProds4 + 0.19349291706995 
* GRP_MntMeatProducts2 + 1.13475826324844 * GRP_MntMeatProducts3 + -0.33642288502432 * 
GRP_MntMeatProducts4 + 1.11286337512828 * GRP_MntWines2 + -1.73349392468621 * GRP_MntWines3 + 
0.82891272252224 * GRP_MntWines4 + 0.15659125827236 * GRP_NumCatalogPurchases3 + 
0.32817066335176 * GRP_NumCatalogPurchases4 + -0.67313821415044 * GRP_NumDistPurchases2 + 
-0.96239937857546 * GRP_NumDistPurchases3 + 0.32058507897383 * GRP_NumDistPurchases4 + 
0.02503658374779 * GRP_NumWebPurchases2 + -2.42182777667863 * GRP_NumWebPurchases3 + 
1.09934791830799 * GRP_NumWebPurchases4 + 0.99647285457344 * GRP_RFMstat2 + -1.81285090299632 
* GRP_RFMstat3 + 0.6907946914019 * GRP_RFMstat4 + -0.96741541040827 * GRP_RMntFrq2 + 
1.54078374992995 * GRP_RMntFrq3 + -0.5606172121429 * GRP_RMntFrq4 + 1.09972681443966 * 
GRP_Recency2 + 0.40240053086114 * GRP_Recency3 + 3.54622644138557 * GRP_Recency4 ;
370774    +   H1x2_2  = H1x2_2  +    -0.84257803770334 * GRP_AcceptedCmp52
370775    +          +    -1.76147524199782 * GRP_Frq2  +     0.76968937743693 * GRP_Frq3
370776    +          +     1.10861276861184 * GRP_Frq4  +    -2.23247622323833 *
370777    +        GRP_Income2  +    -0.30655302009971 * GRP_Income3
370778    +          +    -0.67421319601147 * GRP_Income4  +    -0.41833926468843 *
370779    +        GRP_Mnt2  +     0.52496961087688 * GRP_Mnt3  +     2.22224381605808 *
370780    +        GRP_Mnt4  +     1.90603665409631 * GRP_MntFishProducts2
370781    +          +    -0.68769529687639 * GRP_MntFishProducts3
370782    +          +     0.91046416847697 * GRP_MntFishProducts4
370783    +          +     1.93581182421904 * GRP_MntGoldProds2
370784    +          +     0.00795466624941 * GRP_MntGoldProds3
370785    +          +    -0.22854189252742 * GRP_MntGoldProds4
370786    +          +     0.51645804440055 * GRP_MntMeatProducts2
370787    +          +    -0.73677565057958 * GRP_MntMeatProducts3
370788    +          +    -3.38222954402665 * GRP_MntMeatProducts4
370789    +          +    -0.52703533326761 * GRP_MntWines2  +     2.68998648323277 *
370790    +        GRP_MntWines3  +    -1.01553943004578 * GRP_MntWines4
370791    +          +    -0.25257542492254 * GRP_NumCatalogPurchases3
370792    +          +     0.92868654767551 * GRP_NumCatalogPurchases4
370793    +          +    -0.18642581919214 * GRP_NumDistPurchases2
370794    +          +     0.32117397006136 * GRP_NumDistPurchases3
370795    +          +    -0.59059080451748 * GRP_NumDistPurchases4
370796    +          +    -1.05057528699441 * GRP_NumWebPurchases2
370797    +          +    -0.84936431958655 * GRP_NumWebPurchases3
370798    +          +     0.43322339989668 * GRP_NumWebPurchases4
370799    +          +    -0.27462600263662 * GRP_RFMstat2  +    -2.25150384807365 *
370800    +        GRP_RFMstat3  +    -0.00267009939433 * GRP_RFMstat4
370801    +          +     1.27314966261257 * GRP_RMntFrq2  +     0.27127797709217 *
370802    +        GRP_RMntFrq3  +     1.12101959838801 * GRP_RMntFrq4
370803    +          +     0.79686140512362 * GRP_Recency2  +      -3.204314799241 *
370804    +        GRP_Recency3  +    -0.17063922919112 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.84257803770334 * GRP_AcceptedCmp52 + 
-1.76147524199782 * GRP_Frq2 + 0.76968937743693 * GRP_Frq3 + 1.10861276861184 * GRP_Frq4 + 
-2.23247622323833 * GRP_Income2 + -0.30655302009971 * GRP_Income3 + -0.67421319601147 * 
GRP_Income4 + -0.41833926468843 * GRP_Mnt2 + 0.52496961087688 * GRP_Mnt3 + 2.22224381605808 * 
GRP_Mnt4 + 1.90603665409631 * GRP_MntFishProducts2 + -0.68769529687639 * GRP_MntFishProducts3 
+ 0.91046416847697 * GRP_MntFishProducts4 + 1.93581182421904 * GRP_MntGoldProds2 + 
0.00795466624941 * GRP_MntGoldProds3 + -0.22854189252742 * GRP_MntGoldProds4 + 
0.51645804440055 * GRP_MntMeatProducts2 + -0.73677565057958 * GRP_MntMeatProducts3 + 
-3.38222954402665 * GRP_MntMeatProducts4 + -0.52703533326761 * GRP_MntWines2 + 
2.68998648323277 * GRP_MntWines3 + -1.01553943004578 * GRP_MntWines4 + -0.25257542492254 * 
GRP_NumCatalogPurchases3 + 0.92868654767551 * GRP_NumCatalogPurchases4 + -0.18642581919214 * 
GRP_NumDistPurchases2 + 0.32117397006136 * GRP_NumDistPurchases3 + -0.59059080451748 * 
GRP_NumDistPurchases4 + -1.05057528699441 * GRP_NumWebPurchases2 + -0.84936431958655 * 
GRP_NumWebPurchases3 + 0.43322339989668 * GRP_NumWebPurchases4 + -0.27462600263662 * 
GRP_RFMstat2 + -2.25150384807365 * GRP_RFMstat3 + -0.00267009939433 * GRP_RFMstat4 + 
1.27314966261257 * GRP_RMntFrq2 + 0.27127797709217 * GRP_RMntFrq3 + 1.12101959838801 * 
GRP_RMntFrq4 + 0.79686140512362 * GRP_Recency2 + -3.204314799241 * GRP_Recency3 + 
-0.17063922919112 * GRP_Recency4 ;
370805    +   H1x2_3  = H1x2_3  +     0.61950412844712 * GRP_AcceptedCmp52
370806    +          +     0.65265389665714 * GRP_Frq2  +     0.12876759740294 * GRP_Frq3
370807    +          +    -0.38017417695108 * GRP_Frq4  +    -0.54457623826836 *
370808    +        GRP_Income2  +     2.06545795697617 * GRP_Income3
370809    +          +     -0.2725653040132 * GRP_Income4  +     0.59334688450758 *
370810    +        GRP_Mnt2  +    -2.75668429292834 * GRP_Mnt3  +    -0.19086776143213 *
370811    +        GRP_Mnt4  +     -3.7490211951959 * GRP_MntFishProducts2
370812    +          +     -0.2747383185488 * GRP_MntFishProducts3
370813    +          +     0.05699547232616 * GRP_MntFishProducts4
370814    +          +     1.78340082221807 * GRP_MntGoldProds2
370815    +          +    -0.21272258173805 * GRP_MntGoldProds3
370816    +          +    -0.63881612523162 * GRP_MntGoldProds4
370817    +          +     0.35743242018534 * GRP_MntMeatProducts2
370818    +          +     0.39288166088974 * GRP_MntMeatProducts3
370819    +          +     0.68623350973697 * GRP_MntMeatProducts4
370820    +          +    -1.04284335042439 * GRP_MntWines2  +    -0.97636647224011 *
370821    +        GRP_MntWines3  +    -1.75436887389742 * GRP_MntWines4
370822    +          +     0.38349558810511 * GRP_NumCatalogPurchases3
370823    +          +     0.94944817324412 * GRP_NumCatalogPurchases4
370824    +          +     0.87924710032772 * GRP_NumDistPurchases2
370825    +          +     0.54658799433949 * GRP_NumDistPurchases3
370826    +          +     1.85594529989185 * GRP_NumDistPurchases4
370827    +          +    -0.66471569231333 * GRP_NumWebPurchases2
370828    +          +    -0.59461900037355 * GRP_NumWebPurchases3
370829    +          +     0.12806083458682 * GRP_NumWebPurchases4
370830    +          +    -0.75799558259662 * GRP_RFMstat2  +     1.03472328046295 *
370831    +        GRP_RFMstat3  +     0.35460394964665 * GRP_RFMstat4
370832    +          +     2.35757770027854 * GRP_RMntFrq2  +    -1.60760048151685 *
370833    +        GRP_RMntFrq3  +       1.734911990241 * GRP_RMntFrq4
370834    +          +    -0.50983934759213 * GRP_Recency2  +     1.22056684902473 *
370835    +        GRP_Recency3  +    -0.53617918353506 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.61950412844712 * GRP_AcceptedCmp52 + 
0.65265389665714 * GRP_Frq2 + 0.12876759740294 * GRP_Frq3 + -0.38017417695108 * GRP_Frq4 + 
-0.54457623826836 * GRP_Income2 + 2.06545795697617 * GRP_Income3 + -0.2725653040132 * 
GRP_Income4 + 0.59334688450758 * GRP_Mnt2 + -2.75668429292834 * GRP_Mnt3 + -0.19086776143213 * 
GRP_Mnt4 + -3.7490211951959 * GRP_MntFishProducts2 + -0.2747383185488 * GRP_MntFishProducts3 + 
0.05699547232616 * GRP_MntFishProducts4 + 1.78340082221807 * GRP_MntGoldProds2 + 
-0.21272258173805 * GRP_MntGoldProds3 + -0.63881612523162 * GRP_MntGoldProds4 + 
0.35743242018534 * GRP_MntMeatProducts2 + 0.39288166088974 * GRP_MntMeatProducts3 + 
0.68623350973697 * GRP_MntMeatProducts4 + -1.04284335042439 * GRP_MntWines2 + 
-0.97636647224011 * GRP_MntWines3 + -1.75436887389742 * GRP_MntWines4 + 0.38349558810511 * 
GRP_NumCatalogPurchases3 + 0.94944817324412 * GRP_NumCatalogPurchases4 + 0.87924710032772 * 
GRP_NumDistPurchases2 + 0.54658799433949 * GRP_NumDistPurchases3 + 1.85594529989185 * 
GRP_NumDistPurchases4 + -0.66471569231333 * GRP_NumWebPurchases2 + -0.59461900037355 * 
GRP_NumWebPurchases3 + 0.12806083458682 * GRP_NumWebPurchases4 + -0.75799558259662 * 
GRP_RFMstat2 + 1.03472328046295 * GRP_RFMstat3 + 0.35460394964665 * GRP_RFMstat4 + 
2.35757770027854 * GRP_RMntFrq2 + -1.60760048151685 * GRP_RMntFrq3 + 1.734911990241 * 
GRP_RMntFrq4 + -0.50983934759213 * GRP_Recency2 + 1.22056684902473 * GRP_Recency3 + 
-0.53617918353506 * GRP_Recency4 ;
370836    +   H1x2_4  = H1x2_4  +     1.26170976978884 * GRP_AcceptedCmp52
370837    +          +    -0.32711952545891 * GRP_Frq2  +    -1.19397195692697 * GRP_Frq3
370838    +          +    -1.91237681986457 * GRP_Frq4  +    -0.79449068445985 *
370839    +        GRP_Income2  +    -1.22812902448096 * GRP_Income3
370840    +          +     0.34997306488077 * GRP_Income4  +     0.97887573619442 *
370841    +        GRP_Mnt2  +    -0.47207479147139 * GRP_Mnt3  +    -0.72610866749196 *
370842    +        GRP_Mnt4  +    -1.02568945709262 * GRP_MntFishProducts2
370843    +          +    -0.50962348735329 * GRP_MntFishProducts3
370844    +          +    -1.75841654964734 * GRP_MntFishProducts4
370845    +          +     2.14839745385174 * GRP_MntGoldProds2
370846    +          +      2.4716387157729 * GRP_MntGoldProds3
370847    +          +     0.61286996367418 * GRP_MntGoldProds4
370848    +          +     1.45427097683349 * GRP_MntMeatProducts2
370849    +          +    -0.34990206215878 * GRP_MntMeatProducts3
370850    +          +     2.25284175811484 * GRP_MntMeatProducts4
370851    +          +      0.9855268124051 * GRP_MntWines2  +    -0.12203915234087 *
370852    +        GRP_MntWines3  +     0.25102207151836 * GRP_MntWines4
370853    +          +     1.02272173939472 * GRP_NumCatalogPurchases3
370854    +          +    -0.86507841983648 * GRP_NumCatalogPurchases4
370855    +          +    -0.44080685652484 * GRP_NumDistPurchases2
370856    +          +     2.40613428385819 * GRP_NumDistPurchases3
370857    +          +     0.26317801067025 * GRP_NumDistPurchases4
370858    +          +     2.34961138802546 * GRP_NumWebPurchases2
370859    +          +     2.35826990005342 * GRP_NumWebPurchases3
370860    +          +     0.18496434892584 * GRP_NumWebPurchases4
370861    +          +     1.79795147677472 * GRP_RFMstat2  +     0.58420175726653 *
370862    +        GRP_RFMstat3  +    -1.31222644039147 * GRP_RFMstat4
370863    +          +    -0.47605088519028 * GRP_RMntFrq2  +    -1.93444600786423 *
370864    +        GRP_RMntFrq3  +    -1.73270719079454 * GRP_RMntFrq4
370865    +          +    -0.07465628796168 * GRP_Recency2  +     0.39933484299815 *
370866    +        GRP_Recency3  +     1.24718444803263 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.26170976978884 * GRP_AcceptedCmp52 + 
-0.32711952545891 * GRP_Frq2 + -1.19397195692697 * GRP_Frq3 + -1.91237681986457 * GRP_Frq4 + 
-0.79449068445985 * GRP_Income2 + -1.22812902448096 * GRP_Income3 + 0.34997306488077 * 
GRP_Income4 + 0.97887573619442 * GRP_Mnt2 + -0.47207479147139 * GRP_Mnt3 + -0.72610866749196 * 
GRP_Mnt4 + -1.02568945709262 * GRP_MntFishProducts2 + -0.50962348735329 * GRP_MntFishProducts3 
+ -1.75841654964734 * GRP_MntFishProducts4 + 2.14839745385174 * GRP_MntGoldProds2 + 
2.4716387157729 * GRP_MntGoldProds3 + 0.61286996367418 * GRP_MntGoldProds4 + 1.45427097683349 
* GRP_MntMeatProducts2 + -0.34990206215878 * GRP_MntMeatProducts3 + 2.25284175811484 * 
GRP_MntMeatProducts4 + 0.9855268124051 * GRP_MntWines2 + -0.12203915234087 * GRP_MntWines3 + 
0.25102207151836 * GRP_MntWines4 + 1.02272173939472 * GRP_NumCatalogPurchases3 + 
-0.86507841983648 * GRP_NumCatalogPurchases4 + -0.44080685652484 * GRP_NumDistPurchases2 + 
2.40613428385819 * GRP_NumDistPurchases3 + 0.26317801067025 * GRP_NumDistPurchases4 + 
2.34961138802546 * GRP_NumWebPurchases2 + 2.35826990005342 * GRP_NumWebPurchases3 + 
0.18496434892584 * GRP_NumWebPurchases4 + 1.79795147677472 * GRP_RFMstat2 + 0.58420175726653 * 
GRP_RFMstat3 + -1.31222644039147 * GRP_RFMstat4 + -0.47605088519028 * GRP_RMntFrq2 + 
-1.93444600786423 * GRP_RMntFrq3 + -1.73270719079454 * GRP_RMntFrq4 + -0.07465628796168 * 
GRP_Recency2 + 0.39933484299815 * GRP_Recency3 + 1.24718444803263 * GRP_Recency4 ;
370867    +   H1x2_5  = H1x2_5  +     0.87459488954875 * GRP_AcceptedCmp52
370868    +          +    -0.84011640362753 * GRP_Frq2  +     0.77937376717729 * GRP_Frq3
370869    +          +    -1.82978666358622 * GRP_Frq4  +    -0.03003575117499 *
370870    +        GRP_Income2  +    -0.09211385255865 * GRP_Income3
370871    +          +    -1.94207051248492 * GRP_Income4  +     0.73641935783417 *
370872    +        GRP_Mnt2  +      -0.495669562808 * GRP_Mnt3  +    -0.04058774225968 *
370873    +        GRP_Mnt4  +     1.81606017533935 * GRP_MntFishProducts2
370874    +          +     -2.3817205567109 * GRP_MntFishProducts3
370875    +          +      1.4356293091772 * GRP_MntFishProducts4
370876    +          +    -1.03209023546079 * GRP_MntGoldProds2
370877    +          +     1.93949728331263 * GRP_MntGoldProds3
370878    +          +     0.44849194130528 * GRP_MntGoldProds4
370879    +          +     1.34973896956794 * GRP_MntMeatProducts2
370880    +          +     1.40989126474294 * GRP_MntMeatProducts3
370881    +          +     0.74435387703611 * GRP_MntMeatProducts4
370882    +          +     0.94293940682329 * GRP_MntWines2  +     0.71988830572011 *
370883    +        GRP_MntWines3  +     0.43603082498929 * GRP_MntWines4
370884    +          +     1.65449574071289 * GRP_NumCatalogPurchases3
370885    +          +    -0.66380394478337 * GRP_NumCatalogPurchases4
370886    +          +    -0.76749528874396 * GRP_NumDistPurchases2
370887    +          +     1.83370965910825 * GRP_NumDistPurchases3
370888    +          +    -0.73709156569506 * GRP_NumDistPurchases4
370889    +          +     0.09215124428658 * GRP_NumWebPurchases2
370890    +          +      1.0403096068891 * GRP_NumWebPurchases3
370891    +          +     0.59317560741224 * GRP_NumWebPurchases4
370892    +          +     1.75844403152209 * GRP_RFMstat2  +     -0.8733964014922 *
370893    +        GRP_RFMstat3  +    -0.76258024821499 * GRP_RFMstat4
370894    +          +    -1.62335267331435 * GRP_RMntFrq2  +     0.16774877520829 *
370895    +        GRP_RMntFrq3  +    -0.59672894733807 * GRP_RMntFrq4
370896    +          +     -0.1207352636629 * GRP_Recency2  +    -3.91419195768202 *
370897    +        GRP_Recency3  +    -1.81688897411428 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.87459488954875 * GRP_AcceptedCmp52 + 
-0.84011640362753 * GRP_Frq2 + 0.77937376717729 * GRP_Frq3 + -1.82978666358622 * GRP_Frq4 + 
-0.03003575117499 * GRP_Income2 + -0.09211385255865 * GRP_Income3 + -1.94207051248492 * 
GRP_Income4 + 0.73641935783417 * GRP_Mnt2 + -0.495669562808 * GRP_Mnt3 + -0.04058774225968 * 
GRP_Mnt4 + 1.81606017533935 * GRP_MntFishProducts2 + -2.3817205567109 * GRP_MntFishProducts3 + 
1.4356293091772 * GRP_MntFishProducts4 + -1.03209023546079 * GRP_MntGoldProds2 + 
1.93949728331263 * GRP_MntGoldProds3 + 0.44849194130528 * GRP_MntGoldProds4 + 1.34973896956794 
* GRP_MntMeatProducts2 + 1.40989126474294 * GRP_MntMeatProducts3 + 0.74435387703611 * 
GRP_MntMeatProducts4 + 0.94293940682329 * GRP_MntWines2 + 0.71988830572011 * GRP_MntWines3 + 
0.43603082498929 * GRP_MntWines4 + 1.65449574071289 * GRP_NumCatalogPurchases3 + 
-0.66380394478337 * GRP_NumCatalogPurchases4 + -0.76749528874396 * GRP_NumDistPurchases2 + 
1.83370965910825 * GRP_NumDistPurchases3 + -0.73709156569506 * GRP_NumDistPurchases4 + 
0.09215124428658 * GRP_NumWebPurchases2 + 1.0403096068891 * GRP_NumWebPurchases3 + 
0.59317560741224 * GRP_NumWebPurchases4 + 1.75844403152209 * GRP_RFMstat2 + -0.8733964014922 * 
GRP_RFMstat3 + -0.76258024821499 * GRP_RFMstat4 + -1.62335267331435 * GRP_RMntFrq2 + 
0.16774877520829 * GRP_RMntFrq3 + -0.59672894733807 * GRP_RMntFrq4 + -0.1207352636629 * 
GRP_Recency2 + -3.91419195768202 * GRP_Recency3 + -1.81688897411428 * GRP_Recency4 ;
370898    +   H1x2_1  =     0.53421261957097 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.53421261957097 + H1x2_1 ;
370899    +   H1x2_2  =     0.61690490910033 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.61690490910033 + H1x2_2 ;
370900    +   H1x2_3  =    -1.82311183459857 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.82311183459857 + H1x2_3 ;
370901    +   H1x2_4  =    -0.21816223161936 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.21816223161936 + H1x2_4 ;
370902    +   H1x2_5  =     -0.4592254459549 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4592254459549 + H1x2_5 ;
370903    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
370904    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
370905    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
370906    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
370907    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
370908    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
370909    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
370910    +END;
MPRINT(EM_DIAGRAM):   END;
370911    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
370912    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
370913    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
370914    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
370915    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
370916    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
370917    +END;
MPRINT(EM_DIAGRAM):   END;
370918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370919    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
370920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370921    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
370922    +   H2x1_1  =    -0.10131311732967 * H1x1_1  +     2.09604760546585 * H1x1_2
370923    +          +     0.75964449684316 * H1x1_3  +    -3.05899403391852 * H1x1_4
370924    +          +    -2.64491525760726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.10131311732967 * H1x1_1 + 2.09604760546585 * H1x1_2 + 
0.75964449684316 * H1x1_3 + -3.05899403391852 * H1x1_4 + -2.64491525760726 * H1x1_5 ;
370925    +   H2x1_2  =     2.09816176126174 * H1x1_1  +     -2.7170504295107 * H1x1_2
370926    +          +    -4.28573382707654 * H1x1_3  +     -0.4124455577826 * H1x1_4
370927    +          +    -1.74219234169061 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.09816176126174 * H1x1_1 + -2.7170504295107 * H1x1_2 + 
-4.28573382707654 * H1x1_3 + -0.4124455577826 * H1x1_4 + -1.74219234169061 * H1x1_5 ;
370928    +   H2x1_3  =     -0.0908396989213 * H1x1_1  +    -2.13315935484498 * H1x1_2
370929    +          +      -0.041102734605 * H1x1_3  +     0.44906302354183 * H1x1_4
370930    +          +     2.22045400368613 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.0908396989213 * H1x1_1 + -2.13315935484498 * H1x1_2 + 
-0.041102734605 * H1x1_3 + 0.44906302354183 * H1x1_4 + 2.22045400368613 * H1x1_5 ;
370931    +   H2x1_4  =    -3.59138952025597 * H1x1_1  +     1.29340469653348 * H1x1_2
370932    +          +       1.689672422487 * H1x1_3  +    -2.31797692991787 * H1x1_4
370933    +          +    -2.53540958111863 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.59138952025597 * H1x1_1 + 1.29340469653348 * H1x1_2 + 
1.689672422487 * H1x1_3 + -2.31797692991787 * H1x1_4 + -2.53540958111863 * H1x1_5 ;
370934    +   H2x1_5  =    -1.20648019467275 * H1x1_1  +      1.9669218225267 * H1x1_2
370935    +          +     2.04494536709697 * H1x1_3  +    -2.33648894116384 * H1x1_4
370936    +          +    -1.60853492956388 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.20648019467275 * H1x1_1 + 1.9669218225267 * H1x1_2 + 
2.04494536709697 * H1x1_3 + -2.33648894116384 * H1x1_4 + -1.60853492956388 * H1x1_5 ;
370937    +   H2x1_1  = H2x1_1  +    -1.45345171601353 * H1x2_1
370938    +          +    -0.03179259597665 * H1x2_2  +     -2.9887894366399 * H1x2_3
370939    +          +     0.68029332905711 * H1x2_4  +     0.76926185571867 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.45345171601353 * H1x2_1 + -0.03179259597665 * 
H1x2_2 + -2.9887894366399 * H1x2_3 + 0.68029332905711 * H1x2_4 + 0.76926185571867 * H1x2_5 ;
370940    +   H2x1_2  = H2x1_2  +    -1.21280301577117 * H1x2_1
370941    +          +      2.9525914680029 * H1x2_2  +    -0.55393861346072 * H1x2_3
370942    +          +     1.77793175958897 * H1x2_4  +     2.51042321881699 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.21280301577117 * H1x2_1 + 2.9525914680029 * H1x2_2 
+ -0.55393861346072 * H1x2_3 + 1.77793175958897 * H1x2_4 + 2.51042321881699 * H1x2_5 ;
370943    +   H2x1_3  = H2x1_3  +     1.57047941405239 * H1x2_1
370944    +          +    -1.31134127121564 * H1x2_2  +      2.1322025881706 * H1x2_3
370945    +          +    -0.61230583564273 * H1x2_4  +     0.14627232119209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.57047941405239 * H1x2_1 + -1.31134127121564 * H1x2_2 
+ 2.1322025881706 * H1x2_3 + -0.61230583564273 * H1x2_4 + 0.14627232119209 * H1x2_5 ;
370946    +   H2x1_4  = H2x1_4  +    -1.29890984989779 * H1x2_1
370947    +          +    -1.37863865683621 * H1x2_2  +    -0.15093392936569 * H1x2_3
370948    +          +     2.15628991822961 * H1x2_4  +    -0.04564203403522 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.29890984989779 * H1x2_1 + -1.37863865683621 * 
H1x2_2 + -0.15093392936569 * H1x2_3 + 2.15628991822961 * H1x2_4 + -0.04564203403522 * H1x2_5 ;
370949    +   H2x1_5  = H2x1_5  +    -1.82286870874677 * H1x2_1
370950    +          +    -1.06116903038863 * H1x2_2  +    -1.77472301413445 * H1x2_3
370951    +          +     0.17320934910404 * H1x2_4  +    -0.96172965375973 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.82286870874677 * H1x2_1 + -1.06116903038863 * 
H1x2_2 + -1.77472301413445 * H1x2_3 + 0.17320934910404 * H1x2_4 + -0.96172965375973 * H1x2_5 ;
370952    +   H2x1_1  =     0.61260716175728 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.61260716175728 + H2x1_1 ;
370953    +   H2x1_2  =    -1.78716565467594 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.78716565467594 + H2x1_2 ;
370954    +   H2x1_3  =    -0.88082814085488 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.88082814085488 + H2x1_3 ;
370955    +   H2x1_4  =     0.33869525080862 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33869525080862 + H2x1_4 ;
370956    +   H2x1_5  =      2.0506883431914 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.0506883431914 + H2x1_5 ;
370957    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
370958    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
370959    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
370960    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
370961    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
370962    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
370963    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
370964    +END;
MPRINT(EM_DIAGRAM):   END;
370965    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
370966    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
370967    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
370968    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
370969    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
370970    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
370971    +END;
MPRINT(EM_DIAGRAM):   END;
370972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370973    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
370974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370975    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
370976    +   P_DepVar1  =     5.44508928953974 * H2x1_1  +    -7.80342156600058 * H2x1_2
370977    +          +    -4.34349012782915 * H2x1_3  +     6.80870509597821 * H2x1_4
370978    +          +     5.61199728345116 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.44508928953974 * H2x1_1 + -7.80342156600058 * H2x1_2 + 
-4.34349012782915 * H2x1_3 + 6.80870509597821 * H2x1_4 + 5.61199728345116 * H2x1_5 ;
370979    +   P_DepVar1  =    -3.84280322129048 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84280322129048 + P_DepVar1 ;
370980    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
370981    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
370982    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
370983    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
370984    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
370985    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
370986    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
370987    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
370988    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
370989    +END;
MPRINT(EM_DIAGRAM):   END;
370990    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
370991    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
370992    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
370993    +END;
MPRINT(EM_DIAGRAM):   END;
370994    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
370995    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
370996    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
370997    +END;
MPRINT(EM_DIAGRAM):   END;
370998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
370999    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
371000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371001    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
371002    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
371003    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
371004    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
371005    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
371006    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
371007    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
371008    +END;
MPRINT(EM_DIAGRAM):   END;
371009    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371010    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
371011    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371012    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371013     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371014     quit;
371015     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
371016     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
371017     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
371018     retain ID 2 Node "AutoNeural20";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural20";
371019     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
371020     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3617 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3617 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371021     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
371022     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371023     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3617 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3617 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

371024     proc sort data=EMWS8.AutoNeural20_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural20_variableset out=_temp2(keep=NAME 
CREATOR);
371025     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371026     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL20_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371027     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371028     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
371029     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
371030     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371031     proc contents data=EMWS8.AutoNeural20_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural20_train out=_meta(keep=NAME) noprint;
371032     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 82 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

371033     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
371034     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371035     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 82 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 82 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371036     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371037     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
371038     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371039     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 82 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 82 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371040     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
371041     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
371041   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1520 rows and 5 columns.

371042     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371043     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
371044     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1520 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371045     filename _pref
371045   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
371046     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
371047     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
371048    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
371049    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
371050    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
371051    +
371052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371053    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
371054    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371055    +LABEL GRP_AcceptedCmp5 =
371056    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
371057    +
371058    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
371059    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
371060    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
371061    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
371062    +end;
MPRINT(EM_DIAGRAM):   end;
371063    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
371064    +if (_UFORMAT eq '0'
371065    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
371066    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
371067    +end;
MPRINT(EM_DIAGRAM):   end;
371068    +else
371069    +if (_UFORMAT eq '1'
371070    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
371071    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
371072    +end;
MPRINT(EM_DIAGRAM):   end;
371073    +else do;
MPRINT(EM_DIAGRAM):   else do;
371074    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
371075    +end;
MPRINT(EM_DIAGRAM):   end;
371076    +end;
MPRINT(EM_DIAGRAM):   end;
371077    +
371078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371079    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
371080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371081    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
371082    +
371083    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
371084    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
371085    +end;
MPRINT(EM_DIAGRAM):   end;
371086    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
371087    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
371088    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
371089    +end;
MPRINT(EM_DIAGRAM):   end;
371090    +else
371091    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
371092    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
371093    +end;
MPRINT(EM_DIAGRAM):   end;
371094    +else
371095    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
371096    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
371097    +end;
MPRINT(EM_DIAGRAM):   end;
371098    +else
371099    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
371100    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
371101    +end;
MPRINT(EM_DIAGRAM):   end;
371102    +end;
MPRINT(EM_DIAGRAM):   end;
371103    +
371104    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371105    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
371106    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371107    +LABEL GRP_Income =
371108    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
371109    +
371110    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
371111    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
371112    +end;
MPRINT(EM_DIAGRAM):   end;
371113    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
371114    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
371115    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
371116    +end;
MPRINT(EM_DIAGRAM):   end;
371117    +else
371118    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
371119    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
371120    +end;
MPRINT(EM_DIAGRAM):   end;
371121    +else
371122    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
371123    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
371124    +end;
MPRINT(EM_DIAGRAM):   end;
371125    +else
371126    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
371127    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
371128    +end;
MPRINT(EM_DIAGRAM):   end;
371129    +end;
MPRINT(EM_DIAGRAM):   end;
371130    +
371131    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371132    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
371133    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371134    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
371135    +
371136    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
371137    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
371138    +end;
MPRINT(EM_DIAGRAM):   end;
371139    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
371140    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
371141    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
371142    +end;
MPRINT(EM_DIAGRAM):   end;
371143    +else
371144    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
371145    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
371146    +end;
MPRINT(EM_DIAGRAM):   end;
371147    +else
371148    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
371149    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
371150    +end;
MPRINT(EM_DIAGRAM):   end;
371151    +else
371152    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
371153    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
371154    +end;
MPRINT(EM_DIAGRAM):   end;
371155    +end;
MPRINT(EM_DIAGRAM):   end;
371156    +
371157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371158    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
371159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371160    +LABEL GRP_MntFishProducts =
371161    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
371162    +
371163    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
371164    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
371165    +end;
MPRINT(EM_DIAGRAM):   end;
371166    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
371167    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
371168    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
371169    +end;
MPRINT(EM_DIAGRAM):   end;
371170    +else
371171    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
371172    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
371173    +end;
MPRINT(EM_DIAGRAM):   end;
371174    +else
371175    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
371176    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
371177    +end;
MPRINT(EM_DIAGRAM):   end;
371178    +else
371179    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
371180    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
371181    +end;
MPRINT(EM_DIAGRAM):   end;
371182    +end;
MPRINT(EM_DIAGRAM):   end;
371183    +
371184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371185    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
371186    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371187    +LABEL GRP_MntGoldProds =
371188    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
371189    +
371190    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
371191    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
371192    +end;
MPRINT(EM_DIAGRAM):   end;
371193    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
371194    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
371195    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
371196    +end;
MPRINT(EM_DIAGRAM):   end;
371197    +else
371198    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
371199    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
371200    +end;
MPRINT(EM_DIAGRAM):   end;
371201    +else
371202    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
371203    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
371204    +end;
MPRINT(EM_DIAGRAM):   end;
371205    +else
371206    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
371207    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
371208    +end;
MPRINT(EM_DIAGRAM):   end;
371209    +end;
MPRINT(EM_DIAGRAM):   end;
371210    +
371211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371212    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
371213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371214    +LABEL GRP_MntMeatProducts =
371215    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
371216    +
371217    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
371218    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
371219    +end;
MPRINT(EM_DIAGRAM):   end;
371220    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
371221    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
371222    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
371223    +end;
MPRINT(EM_DIAGRAM):   end;
371224    +else
371225    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
371226    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
371227    +end;
MPRINT(EM_DIAGRAM):   end;
371228    +else
371229    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
371230    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
371231    +end;
MPRINT(EM_DIAGRAM):   end;
371232    +else
371233    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
371234    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
371235    +end;
MPRINT(EM_DIAGRAM):   end;
371236    +end;
MPRINT(EM_DIAGRAM):   end;
371237    +
371238    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371239    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
371240    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371241    +LABEL GRP_MntWines =
371242    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
371243    +
371244    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
371245    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
371246    +end;
MPRINT(EM_DIAGRAM):   end;
371247    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
371248    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
371249    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
371250    +end;
MPRINT(EM_DIAGRAM):   end;
371251    +else
371252    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
371253    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
371254    +end;
MPRINT(EM_DIAGRAM):   end;
371255    +else
371256    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
371257    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
371258    +end;
MPRINT(EM_DIAGRAM):   end;
371259    +else
371260    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
371261    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
371262    +end;
MPRINT(EM_DIAGRAM):   end;
371263    +end;
MPRINT(EM_DIAGRAM):   end;
371264    +
371265    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371266    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
371267    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371268    +LABEL GRP_NumCatalogPurchases =
371269    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
371270    +
371271    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
371272    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
371273    +end;
MPRINT(EM_DIAGRAM):   end;
371274    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
371275    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
371276    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
371277    +end;
MPRINT(EM_DIAGRAM):   end;
371278    +else
371279    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
371280    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
371281    +end;
MPRINT(EM_DIAGRAM):   end;
371282    +else
371283    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
371284    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
371285    +end;
MPRINT(EM_DIAGRAM):   end;
371286    +else
371287    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
371288    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
371289    +end;
MPRINT(EM_DIAGRAM):   end;
371290    +end;
MPRINT(EM_DIAGRAM):   end;
371291    +
371292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371293    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
371294    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371295    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
371296    +
371297    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
371298    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
371299    +end;
MPRINT(EM_DIAGRAM):   end;
371300    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
371301    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
371302    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
371303    +end;
MPRINT(EM_DIAGRAM):   end;
371304    +else
371305    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
371306    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
371307    +end;
MPRINT(EM_DIAGRAM):   end;
371308    +else
371309    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
371310    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
371311    +end;
MPRINT(EM_DIAGRAM):   end;
371312    +else
371313    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
371314    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
371315    +end;
MPRINT(EM_DIAGRAM):   end;
371316    +end;
MPRINT(EM_DIAGRAM):   end;
371317    +
371318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371319    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
371320    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371321    +LABEL GRP_NumWebPurchases =
371322    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
371323    +
371324    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
371325    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
371326    +end;
MPRINT(EM_DIAGRAM):   end;
371327    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
371328    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
371329    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
371330    +end;
MPRINT(EM_DIAGRAM):   end;
371331    +else
371332    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
371333    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
371334    +end;
MPRINT(EM_DIAGRAM):   end;
371335    +else
371336    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
371337    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
371338    +end;
MPRINT(EM_DIAGRAM):   end;
371339    +else
371340    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
371341    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
371342    +end;
MPRINT(EM_DIAGRAM):   end;
371343    +end;
MPRINT(EM_DIAGRAM):   end;
371344    +
371345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371346    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
371347    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371348    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
371349    +
371350    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
371351    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
371352    +end;
MPRINT(EM_DIAGRAM):   end;
371353    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
371354    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
371355    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
371356    +end;
MPRINT(EM_DIAGRAM):   end;
371357    +else
371358    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
371359    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
371360    +end;
MPRINT(EM_DIAGRAM):   end;
371361    +else
371362    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
371363    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
371364    +end;
MPRINT(EM_DIAGRAM):   end;
371365    +else
371366    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
371367    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
371368    +end;
MPRINT(EM_DIAGRAM):   end;
371369    +end;
MPRINT(EM_DIAGRAM):   end;
371370    +
371371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371372    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
371373    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371374    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
371375    +
371376    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
371377    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
371378    +end;
MPRINT(EM_DIAGRAM):   end;
371379    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
371380    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
371381    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
371382    +end;
MPRINT(EM_DIAGRAM):   end;
371383    +else
371384    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
371385    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
371386    +end;
MPRINT(EM_DIAGRAM):   end;
371387    +else
371388    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
371389    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
371390    +end;
MPRINT(EM_DIAGRAM):   end;
371391    +else
371392    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
371393    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
371394    +end;
MPRINT(EM_DIAGRAM):   end;
371395    +end;
MPRINT(EM_DIAGRAM):   end;
371396    +
371397    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371398    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
371399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371400    +LABEL GRP_Recency =
371401    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
371402    +
371403    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
371404    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
371405    +end;
MPRINT(EM_DIAGRAM):   end;
371406    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
371407    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
371408    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
371409    +end;
MPRINT(EM_DIAGRAM):   end;
371410    +else
371411    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
371412    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
371413    +end;
MPRINT(EM_DIAGRAM):   end;
371414    +else
371415    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
371416    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
371417    +end;
MPRINT(EM_DIAGRAM):   end;
371418    +else
371419    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
371420    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
371421    +end;
MPRINT(EM_DIAGRAM):   end;
371422    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371423     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371424     quit;
371425     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
371426     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
371427     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
371428     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
371429     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
371430     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371431     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
371432     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371433     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371434     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
371435     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371437     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371438     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
371439     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
371440     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371441     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
371442     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371443     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
371444     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371445     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371446     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371447     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
371448     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371449     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371450     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
371451     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
371451   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

371452     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371453     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
371454     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1535 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371455     filename _pref
371455   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
371456     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
371457     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
371458    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371459    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
371460    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371461    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
371462    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
371463    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371464     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371465     quit;
371466     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
371467     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
371468     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
371469     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
371470     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
371471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371472     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
371473     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371474     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371475     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
371476     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371477     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371478     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371479     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
371480     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
371481     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371482     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
371483     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371484     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
371485     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371486     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371487     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371488     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
371489     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371490     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371491     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
371492     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
371492   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

371493     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371494     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
371495     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1539 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371496     filename _pref
371496   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
371497     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
371498     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
371499    +
371500    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
371501    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
371501   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
371502    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
371503    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
371504    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
371505    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
371506    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371507     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371508     quit;
371509     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
371510     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
371511     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
371512     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
371513     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
371514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371515     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
371516     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371517     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371518     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
371519     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371520     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371521     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371522     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
371523     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
371524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

371525     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
371526     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371527     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
371528     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371529     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371530     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371531     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
371532     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371533     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371534     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
371535     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
371535   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

371536     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371537     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
371538     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1578 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371539     filename _pref
371539   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
371540     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
371541     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
371542    +
371543    +
371544    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
371545    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
371546    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
371547    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
371548    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
371549    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371550    +
371551    +
371552    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
371553    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
371554    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
371555    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
371556    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
371557    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371558    +
371559    +
371560    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
371561    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
371562    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
371563    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
371564    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
371565    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371566    +
371567    +
371568    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
371569    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
371570    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
371571    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
371572    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
371573    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371574    +
371575    +
371576    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
371577    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
371578    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
371579    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
371580    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
371581    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371582    +
371583    +
371584    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
371585    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
371586    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
371587    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
371588    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
371589    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371590    +
371591    +
371592    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
371593    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
371594    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
371595    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
371596    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
371597    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371598    +
371599    +
371600    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
371601    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
371602    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
371603    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
371604    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
371605    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
371606    +if
371607    +_FILTERNORM1 not in ( '.')
371608    + and
371609    +_FILTERNORM2 not in ( '.')
371610    + and
371611    +_FILTERNORM3 not in ( '.')
371612    + and
371613    +_FILTERNORM4 not in ( '.')
371614    + and
371615    +_FILTERNORM5 not in ( '.')
371616    + and
371617    +_FILTERNORM6 not in ( '.')
371618    + and
371619    +_FILTERNORM7 not in ( ' ')
371620    + and
371621    +_FILTERNORM8 not in ( ' ')
371622    +and
371623    +( Dt_Customer ne .)
371624    +and ( Income ne . and (Income<=107000))
371625    +and ( Kidhome ne .)
371626    +and ( MntFishProducts ne .)
371627    +and ( MntFruits ne .)
371628    +and ( MntGoldProds ne .)
371629    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
371630    +and ( MntSweetProducts ne .)
371631    +and ( MntWines ne .)
371632    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
371633    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
371634    +and ( NumStorePurchases ne .)
371635    +and ( NumWebPurchases ne .)
371636    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
371637    +and ( Recency ne .)
371638    +and ( Teenhome ne .)
371639    +and ( Year_Birth ne .)
371640    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
371641    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
371642    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
371643    +end;
MPRINT(EM_DIAGRAM):   end;
371644    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
371645    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371646     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371647     quit;
371648     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
371649     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
371650     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
371651     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
371652     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
371653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371654     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
371655     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371656     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371657     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
371658     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371660     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371661     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
371662     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
371663     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371664     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
371665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371666     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
371667     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371668     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371669     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
371670     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
371671     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
371672     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371673     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
371674     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
371674   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

371675     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371676     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
371677     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1644 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371678     %macro varDept(fcmpdata=,id=);
371679     %global nobs&id scoreFlag&id;
371680     %let scoreFlag&id = 0;
371681     %if &id=1 or ^&fcmpStart %then %do;
371682     proc sort data=&fcmpdata out=_temp&id nodupkey;
371683     by NAME;
371684     where id=&id and LHS in( %let j=1;
371685     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
371686     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
371687     "&var" %let j = %eval(&j+1);
371688     %end;
371689     );
371690     run;
371691     %let dsid = %sysfunc(open(_temp&id));
371692     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
371693     %let dsid = %sysfunc(close(&dsid));
371694     %if &&nobs&id %then %do;
371695     %let scoreFlag&id = 1;
371696     %let fcmpStart = 1;
371697     %end;
371698     %else %let fcmpStart = 0;
371699     %end;
371700     %else %do;
371701     proc sort data=&fcmpdata out=_tempid;
371702     where id=&id;
371703     by LHS;
371704     run;
371705     %let dsid = %sysfunc(open(_tempid));
371706     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
371707     %let dsid = %sysfunc(close(&dsid));
371708     %if ^&&nobs&id %then %do;
371709     proc datasets lib=work nolist;
371710     delete _tempid;
371711     run;
371712     quit;
371713     %end;
371714     %else %do;
371715     data _tempAll;
371716     set %let j=%eval(&id-1);
371717     %do x=1 %to &j;
371718     %if &&nobs&x %then %do;
371719     _temp&x %end;
371720     %end;
371721     ;
371722     run;
371723     proc sql;
371724     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
371724   ! work._tempid p2 where p.name=p2.lhs;
371725     quit;
371726     data _temp&id;
371727     set _temp&id;
371728     where LHS ne '' and NAME ne '' and Node ne '';
371729     run;
371730     proc datasets lib=work nolist;
371731     delete _tempAll;
371732     run;
371733     %let dsid = %sysfunc(open(_temp&id));
371734     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
371735     %let dsid = %sysfunc(close(&dsid));
371736     %if ^&&nobs&id %then %do;
371737     proc datasets lib=work nolist;
371738     delete _temp&id;
371739     run;
371740     quit;
371741     %end;
371742     %else %do;
371743     %let scoreFlag&id = 1;
371744     data _temp&id;
371745     set _temp&id;
371746     where LHS ne NAME and node ne '';
371747     run;
371748     %let dsid = %sysfunc(open(_temp&id));
371749     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
371750     %let dsid = %sysfunc(close(&dsid));
371751     %if ^&&nobs&id %then %do;
371752     proc datasets lib=work nolist;
371753     delete _temp&id;
371754     run;
371755     quit;
371756     %end;
371757     %else %do;
371758     proc sort data=_temp&id nodupkey;
371759     by LHS NAME;
371760     run;
371761     %end;
371762     %end;
371763     %end;
371764     %end;
371765     %mend varDept;
371766     %macro optCode(outdata=fcmpdata);
371767     %global fcmpStart;
371768     %let fcmpStart = 0;
371769     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
371770     %let NumNodes=9;
371771     %do k=1 %to &NumNodes;
371772     %vardept(fcmpdata=&outdata, id=&k);
371773     %end;
371774     %mend optCode;
371775     %optcode(outData=EMWS8.Ensmbl48_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 111 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 46 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 48 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

371776     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
371777     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
371778     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
371779     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371780     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
371781     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
371782     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
371783     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371784     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
371785     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
371785   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

371786     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371787     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
371788     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
371789     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371790     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
371791     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
371792     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
371793     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371794     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
371795     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
371796     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
371797     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371798     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
371799     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
371799   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

371800     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

371801     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
371802     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
371803     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

371804     filename _pref
371804   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas";
371805     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
371806     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas.
371807    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371808    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
371809    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371810    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
371811    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
371812    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
371813    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
371814    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
371815    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
371816    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
371817    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
371818    +LENGTH _WARN_ $4
371819    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
371820    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
371821    +
371822    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
371823    +
371824    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
371825    +
371826    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
371827    +
371828    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
371829    +
371830    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
371831    +
371832    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
371833    +
371834    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
371835    +
371836    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
371837    +
371838    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
371839    +
371840    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
371841    +
371842    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
371843    +
371844    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
371845    +
371846    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
371847    +
371848    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
371849    +
371850    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
371851    +
371852    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
371853    +
371854    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
371855    +
371856    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
371857    +
371858    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
371859    +
371860    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
371861    +
371862    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
371863    +
371864    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
371865    +
371866    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
371867    +
371868    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
371869    +
371870    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
371871    +
371872    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
371873    +
371874    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
371875    +
371876    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
371877    +
371878    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
371879    +
371880    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
371881    +
371882    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
371883    +
371884    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
371885    +
371886    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
371887    +
371888    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
371889    +
371890    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
371891    +
371892    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
371893    +
371894    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
371895    +
371896    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
371897    +
371898    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
371899    +
371900    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
371901    +
371902    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
371903    +
371904    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
371905    +
371906    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
371907    +
371908    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
371909    +
371910    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
371911    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
371912    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
371913    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
371914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371916    +end;
MPRINT(EM_DIAGRAM):   end;
371917    +else do;
MPRINT(EM_DIAGRAM):   else do;
371918    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371919    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
371920    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371921    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
371922    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
371923    +   end;
MPRINT(EM_DIAGRAM):   end;
371924    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
371925    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
371926    +   end;
MPRINT(EM_DIAGRAM):   end;
371927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371928    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
371929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371931    +   end;
MPRINT(EM_DIAGRAM):   end;
371932    +end;
MPRINT(EM_DIAGRAM):   end;
371933    +
371934    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
371935    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
371936    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
371937    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
371938    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
371939    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
371940    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371941    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371942    +end;
MPRINT(EM_DIAGRAM):   end;
371943    +else do;
MPRINT(EM_DIAGRAM):   else do;
371944    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371945    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
371946    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371947    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
371948    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
371949    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
371950    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
371951    +   end;
MPRINT(EM_DIAGRAM):   end;
371952    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
371953    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
371954    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
371955    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
371956    +   end;
MPRINT(EM_DIAGRAM):   end;
371957    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
371958    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
371959    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
371960    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
371961    +   end;
MPRINT(EM_DIAGRAM):   end;
371962    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
371963    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
371964    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
371965    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
371966    +   end;
MPRINT(EM_DIAGRAM):   end;
371967    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371968    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
371969    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
371970    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
371971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371973    +   end;
MPRINT(EM_DIAGRAM):   end;
371974    +end;
MPRINT(EM_DIAGRAM):   end;
371975    +
371976    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
371977    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
371978    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
371979    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
371980    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
371981    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
371982    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371983    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371984    +end;
MPRINT(EM_DIAGRAM):   end;
371985    +else do;
MPRINT(EM_DIAGRAM):   else do;
371986    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371987    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
371988    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371989    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
371990    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
371991    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
371992    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
371993    +   end;
MPRINT(EM_DIAGRAM):   end;
371994    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
371995    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
371996    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
371997    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
371998    +   end;
MPRINT(EM_DIAGRAM):   end;
371999    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
372000    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
372001    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
372002    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
372003    +   end;
MPRINT(EM_DIAGRAM):   end;
372004    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372005    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
372006    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
372007    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
372008    +   end;
MPRINT(EM_DIAGRAM):   end;
372009    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372010    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
372011    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
372012    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
372013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372015    +   end;
MPRINT(EM_DIAGRAM):   end;
372016    +end;
MPRINT(EM_DIAGRAM):   end;
372017    +
372018    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
372019    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
372020    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
372021    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
372022    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
372023    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
372024    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372026    +end;
MPRINT(EM_DIAGRAM):   end;
372027    +else do;
MPRINT(EM_DIAGRAM):   else do;
372028    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372029    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
372030    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372031    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372032    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
372033    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
372034    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
372035    +   end;
MPRINT(EM_DIAGRAM):   end;
372036    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372037    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
372038    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
372039    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
372040    +   end;
MPRINT(EM_DIAGRAM):   end;
372041    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372042    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
372043    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
372044    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
372045    +   end;
MPRINT(EM_DIAGRAM):   end;
372046    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372047    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
372048    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
372049    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
372050    +   end;
MPRINT(EM_DIAGRAM):   end;
372051    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372052    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
372053    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
372054    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
372055    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372056    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372057    +   end;
MPRINT(EM_DIAGRAM):   end;
372058    +end;
MPRINT(EM_DIAGRAM):   end;
372059    +
372060    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
372061    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
372062    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
372063    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
372064    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
372065    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
372066    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372067    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372068    +end;
MPRINT(EM_DIAGRAM):   end;
372069    +else do;
MPRINT(EM_DIAGRAM):   else do;
372070    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372071    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
372072    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372073    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372074    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
372075    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
372076    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
372077    +   end;
MPRINT(EM_DIAGRAM):   end;
372078    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372079    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
372080    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
372081    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
372082    +   end;
MPRINT(EM_DIAGRAM):   end;
372083    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372084    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
372085    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
372086    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
372087    +   end;
MPRINT(EM_DIAGRAM):   end;
372088    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372089    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
372090    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
372091    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
372092    +   end;
MPRINT(EM_DIAGRAM):   end;
372093    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372094    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
372095    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
372096    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
372097    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372098    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372099    +   end;
MPRINT(EM_DIAGRAM):   end;
372100    +end;
MPRINT(EM_DIAGRAM):   end;
372101    +
372102    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
372103    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
372104    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
372105    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
372106    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
372107    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
372108    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372109    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372110    +end;
MPRINT(EM_DIAGRAM):   end;
372111    +else do;
MPRINT(EM_DIAGRAM):   else do;
372112    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372113    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
372114    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372115    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372116    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
372117    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
372118    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
372119    +   end;
MPRINT(EM_DIAGRAM):   end;
372120    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372121    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
372122    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
372123    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
372124    +   end;
MPRINT(EM_DIAGRAM):   end;
372125    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372126    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
372127    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
372128    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
372129    +   end;
MPRINT(EM_DIAGRAM):   end;
372130    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372131    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
372132    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
372133    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
372134    +   end;
MPRINT(EM_DIAGRAM):   end;
372135    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372136    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
372137    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
372138    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
372139    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372140    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372141    +   end;
MPRINT(EM_DIAGRAM):   end;
372142    +end;
MPRINT(EM_DIAGRAM):   end;
372143    +
372144    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
372145    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
372146    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
372147    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
372148    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
372149    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
372150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372152    +end;
MPRINT(EM_DIAGRAM):   end;
372153    +else do;
MPRINT(EM_DIAGRAM):   else do;
372154    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372155    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
372156    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372157    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372158    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
372159    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
372160    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
372161    +   end;
MPRINT(EM_DIAGRAM):   end;
372162    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372163    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
372164    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
372165    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
372166    +   end;
MPRINT(EM_DIAGRAM):   end;
372167    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372168    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
372169    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
372170    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
372171    +   end;
MPRINT(EM_DIAGRAM):   end;
372172    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372173    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
372174    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
372175    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
372176    +   end;
MPRINT(EM_DIAGRAM):   end;
372177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372178    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
372179    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
372180    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
372181    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372182    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372183    +   end;
MPRINT(EM_DIAGRAM):   end;
372184    +end;
MPRINT(EM_DIAGRAM):   end;
372185    +
372186    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
372187    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
372188    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
372189    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
372190    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
372191    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
372192    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372193    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372194    +end;
MPRINT(EM_DIAGRAM):   end;
372195    +else do;
MPRINT(EM_DIAGRAM):   else do;
372196    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372197    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
372198    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372199    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372200    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
372201    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
372202    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
372203    +   end;
MPRINT(EM_DIAGRAM):   end;
372204    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372205    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
372206    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
372207    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
372208    +   end;
MPRINT(EM_DIAGRAM):   end;
372209    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372210    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
372211    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
372212    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
372213    +   end;
MPRINT(EM_DIAGRAM):   end;
372214    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372215    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
372216    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
372217    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
372218    +   end;
MPRINT(EM_DIAGRAM):   end;
372219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372220    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
372221    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
372222    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
372223    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372224    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372225    +   end;
MPRINT(EM_DIAGRAM):   end;
372226    +end;
MPRINT(EM_DIAGRAM):   end;
372227    +
372228    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
372229    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
372230    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
372231    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
372232    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
372233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372235    +end;
MPRINT(EM_DIAGRAM):   end;
372236    +else do;
MPRINT(EM_DIAGRAM):   else do;
372237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372238    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
372239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372240    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372241    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
372242    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
372243    +   end;
MPRINT(EM_DIAGRAM):   end;
372244    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372245    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
372246    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
372247    +   end;
MPRINT(EM_DIAGRAM):   end;
372248    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372249    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
372250    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
372251    +   end;
MPRINT(EM_DIAGRAM):   end;
372252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372253    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
372254    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
372255    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372256    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372257    +   end;
MPRINT(EM_DIAGRAM):   end;
372258    +end;
MPRINT(EM_DIAGRAM):   end;
372259    +
372260    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
372261    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
372262    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
372263    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
372264    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
372265    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
372266    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372268    +end;
MPRINT(EM_DIAGRAM):   end;
372269    +else do;
MPRINT(EM_DIAGRAM):   else do;
372270    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372271    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
372272    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372273    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
372274    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
372275    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
372276    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
372277    +   end;
MPRINT(EM_DIAGRAM):   end;
372278    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372279    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
372280    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
372281    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
372282    +   end;
MPRINT(EM_DIAGRAM):   end;
372283    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372284    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
372285    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
372286    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
372287    +   end;
MPRINT(EM_DIAGRAM):   end;
372288    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
372289    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
372290    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
372291    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
372292    +   end;
MPRINT(EM_DIAGRAM):   end;
372293    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372294    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
372295    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
372296    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
372297    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372298    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372299    +   end;
MPRINT(EM_DIAGRAM):   end;
372300    +end;
MPRINT(EM_DIAGRAM):   end;
372301    +
372302    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
372303    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
372304    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
372305    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
372306    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
372307    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
372308    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372309    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372310    +end;
MPRINT(EM_DIAGRAM):   end;
372311    +else do;
MPRINT(EM_DIAGRAM):   else do;
372312    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372313    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
372314    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372315    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372316    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
372317    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
372318    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
372319    +   end;
MPRINT(EM_DIAGRAM):   end;
372320    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372321    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
372322    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
372323    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
372324    +   end;
MPRINT(EM_DIAGRAM):   end;
372325    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372326    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
372327    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
372328    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
372329    +   end;
MPRINT(EM_DIAGRAM):   end;
372330    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372331    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
372332    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
372333    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
372334    +   end;
MPRINT(EM_DIAGRAM):   end;
372335    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372336    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
372337    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
372338    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
372339    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372340    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372341    +   end;
MPRINT(EM_DIAGRAM):   end;
372342    +end;
MPRINT(EM_DIAGRAM):   end;
372343    +
372344    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
372345    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
372346    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
372347    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
372348    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
372349    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
372350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372352    +end;
MPRINT(EM_DIAGRAM):   end;
372353    +else do;
MPRINT(EM_DIAGRAM):   else do;
372354    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372355    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
372356    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372357    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
372358    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
372359    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
372360    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
372361    +   end;
MPRINT(EM_DIAGRAM):   end;
372362    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
372363    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
372364    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
372365    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
372366    +   end;
MPRINT(EM_DIAGRAM):   end;
372367    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372368    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
372369    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
372370    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
372371    +   end;
MPRINT(EM_DIAGRAM):   end;
372372    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372373    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
372374    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
372375    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
372376    +   end;
MPRINT(EM_DIAGRAM):   end;
372377    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372378    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
372379    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
372380    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
372381    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372382    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372383    +   end;
MPRINT(EM_DIAGRAM):   end;
372384    +end;
MPRINT(EM_DIAGRAM):   end;
372385    +
372386    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
372387    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
372388    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
372389    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
372390    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
372391    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
372392    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372393    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372394    +end;
MPRINT(EM_DIAGRAM):   end;
372395    +else do;
MPRINT(EM_DIAGRAM):   else do;
372396    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372397    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
372398    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372399    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
372400    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
372401    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
372402    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
372403    +   end;
MPRINT(EM_DIAGRAM):   end;
372404    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
372405    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
372406    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
372407    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
372408    +   end;
MPRINT(EM_DIAGRAM):   end;
372409    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372410    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
372411    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
372412    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
372413    +   end;
MPRINT(EM_DIAGRAM):   end;
372414    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372415    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
372416    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
372417    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
372418    +   end;
MPRINT(EM_DIAGRAM):   end;
372419    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372420    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
372421    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
372422    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
372423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372425    +   end;
MPRINT(EM_DIAGRAM):   end;
372426    +end;
MPRINT(EM_DIAGRAM):   end;
372427    +
372428    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
372429    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
372430    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
372431    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
372432    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
372433    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
372434    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372435    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372436    +end;
MPRINT(EM_DIAGRAM):   end;
372437    +else do;
MPRINT(EM_DIAGRAM):   else do;
372438    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372439    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
372440    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372441    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
372442    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
372443    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
372444    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
372445    +   end;
MPRINT(EM_DIAGRAM):   end;
372446    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
372447    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
372448    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
372449    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
372450    +   end;
MPRINT(EM_DIAGRAM):   end;
372451    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
372452    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
372453    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
372454    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
372455    +   end;
MPRINT(EM_DIAGRAM):   end;
372456    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
372457    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
372458    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
372459    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
372460    +   end;
MPRINT(EM_DIAGRAM):   end;
372461    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372462    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
372463    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
372464    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
372465    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372466    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372467    +   end;
MPRINT(EM_DIAGRAM):   end;
372468    +end;
MPRINT(EM_DIAGRAM):   end;
372469    +
372470    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372471    +*** Checking missing input Interval
372472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
372473    +
372474    +IF NMISS(
372475    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
372476    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
372477    +
372478    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372479    +END;
MPRINT(EM_DIAGRAM):   END;
372480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372481    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
372482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372483    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372484    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
372485    +END;
MPRINT(EM_DIAGRAM):   END;
372486    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372487    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
372488    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
372489    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
372490    +END;
MPRINT(EM_DIAGRAM):   END;
372491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372492    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
372493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372495    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
372496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372497    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372498    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
372499    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
372500    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
372501    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
372502    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
372503    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
372504    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
372505    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
372506    +          +     0.11895902038445 * GRP_MntFishProducts3
372507    +          +     -0.0194508409368 * GRP_MntFishProducts4
372508    +          +    -0.27172158371684 * GRP_MntGoldProds2
372509    +          +    -0.06617094209943 * GRP_MntGoldProds3
372510    +          +     0.04665050332743 * GRP_MntGoldProds4
372511    +          +    -0.97879858925028 * GRP_MntMeatProducts2
372512    +          +    -0.16953024357929 * GRP_MntMeatProducts3
372513    +          +     0.36702521764699 * GRP_MntMeatProducts4
372514    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
372515    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
372516    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
372517    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
372518    +          +    -1.86131730329435 * GRP_NumDistPurchases2
372519    +          +     -0.1744815262149 * GRP_NumDistPurchases3
372520    +          +     0.29974863559738 * GRP_NumDistPurchases4
372521    +          +     0.08237783693138 * GRP_NumWebPurchases2
372522    +          +     0.08904902237334 * GRP_NumWebPurchases3
372523    +          +     0.01729681908858 * GRP_NumWebPurchases4
372524    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
372525    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
372526    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
372527    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
372528    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
372529    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 + 
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 + 
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 * 
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 * 
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 + 
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 + 
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 + 
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 + 
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708 
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 * 
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 * 
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 * 
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 * 
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 * 
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 + 
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 * 
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 + 
-0.57834308365674 * GRP_Recency4 ;
372530    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
372531    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
372532    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
372533    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
372534    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
372535    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
372536    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
372537    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
372538    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
372539    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
372540    +END;
MPRINT(EM_DIAGRAM):   END;
372541    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372542    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
372543    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
372544    +END;
MPRINT(EM_DIAGRAM):   END;
372545    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
372546    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
372547    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
372548    +END;
MPRINT(EM_DIAGRAM):   END;
372549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372550    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
372551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372552    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
372553    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
372554    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
372555    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
372556    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
372557    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
372558    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
372559    +END;
MPRINT(EM_DIAGRAM):   END;
372560    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
372561    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
372562    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
372563    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
372564     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
372565     quit;
372566     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
372567     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
372568     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
372569     retain ID 2 Node "AutoNeural26";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural26";
372570     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
372571     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1290 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1290 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372572     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
372573     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
372574     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1290 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1290 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372575     proc sort data=EMWS8.AutoNeural26_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural26_variableset out=_temp2(keep=NAME 
CREATOR);
372576     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
372577     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL26_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

372578     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
372579     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
372580     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
372581     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372582     proc contents data=EMWS8.AutoNeural26_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural26_train out=_meta(keep=NAME) noprint;
372583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

372584     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
372585     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
372586     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

372587     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
372588     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
372589     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
372590     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372591     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
372592     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
372592   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 775 rows and 5 columns.

372593     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372594     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
The SAS System

MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
372595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 775 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 775 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

372596     filename _pref
372596   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
372597     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
372598     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
372599    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
372600    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
372601    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
372602    +
372603    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372604    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
372605    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372606    +LABEL GRP_AcceptedCmp5 =
372607    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
372608    +
372609    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
372610    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
372611    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
372612    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
372613    +end;
MPRINT(EM_DIAGRAM):   end;
372614    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
372615    +if (_UFORMAT eq '0'
372616    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
372617    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
372618    +end;
MPRINT(EM_DIAGRAM):   end;
372619    +else
372620    +if (_UFORMAT eq '1'
372621    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
372622    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
372623    +end;
MPRINT(EM_DIAGRAM):   end;
372624    +else do;
MPRINT(EM_DIAGRAM):   else do;
372625    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
372626    +end;
MPRINT(EM_DIAGRAM):   end;
372627    +end;
MPRINT(EM_DIAGRAM):   end;
372628    +
372629    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372630    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
372631    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372632    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
372633    +
372634    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
372635    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
372636    +end;
MPRINT(EM_DIAGRAM):   end;
372637    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
372638    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
372639    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
372640    +end;
MPRINT(EM_DIAGRAM):   end;
372641    +else
372642    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
372643    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
372644    +end;
MPRINT(EM_DIAGRAM):   end;
372645    +else
372646    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
372647    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
372648    +end;
MPRINT(EM_DIAGRAM):   end;
372649    +else
372650    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
372651    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
372652    +end;
MPRINT(EM_DIAGRAM):   end;
372653    +end;
MPRINT(EM_DIAGRAM):   end;
372654    +
372655    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372656    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
372657    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372658    +LABEL GRP_Income =
372659    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
372660    +
372661    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
372662    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
372663    +end;
MPRINT(EM_DIAGRAM):   end;
372664    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
372665    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
372666    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
372667    +end;
MPRINT(EM_DIAGRAM):   end;
372668    +else
372669    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
372670    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
372671    +end;
MPRINT(EM_DIAGRAM):   end;
372672    +else
372673    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
372674    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
372675    +end;
MPRINT(EM_DIAGRAM):   end;
372676    +else
372677    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
372678    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
372679    +end;
MPRINT(EM_DIAGRAM):   end;
372680    +end;
MPRINT(EM_DIAGRAM):   end;
372681    +
372682    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372683    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
372684    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372685    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
372686    +
372687    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
372688    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
372689    +end;
MPRINT(EM_DIAGRAM):   end;
372690    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
372691    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
372692    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
372693    +end;
MPRINT(EM_DIAGRAM):   end;
372694    +else
372695    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
372696    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
372697    +end;
MPRINT(EM_DIAGRAM):   end;
372698    +else
372699    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
372700    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
372701    +end;
MPRINT(EM_DIAGRAM):   end;
372702    +else
372703    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
372704    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
372705    +end;
MPRINT(EM_DIAGRAM):   end;
372706    +end;
MPRINT(EM_DIAGRAM):   end;
372707    +
372708    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372709    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
372710    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372711    +LABEL GRP_MntFishProducts =
372712    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
372713    +
372714    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
372715    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
372716    +end;
MPRINT(EM_DIAGRAM):   end;
372717    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
372718    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
372719    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
372720    +end;
MPRINT(EM_DIAGRAM):   end;
372721    +else
372722    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
372723    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
372724    +end;
MPRINT(EM_DIAGRAM):   end;
372725    +else
372726    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
372727    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
372728    +end;
MPRINT(EM_DIAGRAM):   end;
372729    +else
372730    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
372731    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
372732    +end;
MPRINT(EM_DIAGRAM):   end;
372733    +end;
MPRINT(EM_DIAGRAM):   end;
372734    +
372735    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372736    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
372737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372738    +LABEL GRP_MntGoldProds =
372739    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
372740    +
372741    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
372742    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
372743    +end;
MPRINT(EM_DIAGRAM):   end;
372744    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
372745    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
372746    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
372747    +end;
MPRINT(EM_DIAGRAM):   end;
372748    +else
372749    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
372750    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
372751    +end;
MPRINT(EM_DIAGRAM):   end;
372752    +else
372753    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
372754    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
372755    +end;
MPRINT(EM_DIAGRAM):   end;
372756    +else
372757    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
372758    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
372759    +end;
MPRINT(EM_DIAGRAM):   end;
372760    +end;
MPRINT(EM_DIAGRAM):   end;
372761    +
372762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372763    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
372764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372765    +LABEL GRP_MntMeatProducts =
372766    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
372767    +
372768    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
372769    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
372770    +end;
MPRINT(EM_DIAGRAM):   end;
372771    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
372772    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
372773    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
372774    +end;
MPRINT(EM_DIAGRAM):   end;
372775    +else
372776    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
372777    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
372778    +end;
MPRINT(EM_DIAGRAM):   end;
372779    +else
372780    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
372781    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
372782    +end;
MPRINT(EM_DIAGRAM):   end;
372783    +else
372784    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
372785    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
372786    +end;
MPRINT(EM_DIAGRAM):   end;
372787    +end;
MPRINT(EM_DIAGRAM):   end;
372788    +
372789    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372790    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
372791    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372792    +LABEL GRP_MntWines =
372793    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
372794    +
372795    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
372796    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
372797    +end;
MPRINT(EM_DIAGRAM):   end;
372798    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
372799    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
372800    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
372801    +end;
MPRINT(EM_DIAGRAM):   end;
372802    +else
372803    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
372804    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
372805    +end;
MPRINT(EM_DIAGRAM):   end;
372806    +else
372807    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
372808    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
372809    +end;
MPRINT(EM_DIAGRAM):   end;
372810    +else
372811    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
372812    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
372813    +end;
MPRINT(EM_DIAGRAM):   end;
372814    +end;
MPRINT(EM_DIAGRAM):   end;
372815    +
372816    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372817    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
372818    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372819    +LABEL GRP_NumCatalogPurchases =
372820    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
372821    +
372822    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
372823    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
372824    +end;
MPRINT(EM_DIAGRAM):   end;
372825    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
372826    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
372827    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
372828    +end;
MPRINT(EM_DIAGRAM):   end;
372829    +else
372830    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
372831    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
372832    +end;
MPRINT(EM_DIAGRAM):   end;
372833    +else
372834    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
372835    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
372836    +end;
MPRINT(EM_DIAGRAM):   end;
372837    +else
372838    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
372839    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
372840    +end;
MPRINT(EM_DIAGRAM):   end;
372841    +end;
MPRINT(EM_DIAGRAM):   end;
372842    +
372843    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372844    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
372845    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372846    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
372847    +
372848    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
372849    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
372850    +end;
MPRINT(EM_DIAGRAM):   end;
372851    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
372852    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
372853    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
372854    +end;
MPRINT(EM_DIAGRAM):   end;
372855    +else
372856    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
372857    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
372858    +end;
MPRINT(EM_DIAGRAM):   end;
372859    +else
372860    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
372861    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
372862    +end;
MPRINT(EM_DIAGRAM):   end;
372863    +else
372864    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
372865    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
372866    +end;
MPRINT(EM_DIAGRAM):   end;
372867    +end;
MPRINT(EM_DIAGRAM):   end;
372868    +
372869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372870    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
372871    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372872    +LABEL GRP_NumWebPurchases =
372873    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
372874    +
372875    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
372876    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
372877    +end;
MPRINT(EM_DIAGRAM):   end;
372878    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
372879    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
372880    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
372881    +end;
MPRINT(EM_DIAGRAM):   end;
372882    +else
372883    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
372884    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
372885    +end;
MPRINT(EM_DIAGRAM):   end;
372886    +else
372887    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
372888    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
372889    +end;
MPRINT(EM_DIAGRAM):   end;
372890    +else
372891    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
372892    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
372893    +end;
MPRINT(EM_DIAGRAM):   end;
372894    +end;
MPRINT(EM_DIAGRAM):   end;
372895    +
372896    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372897    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
372898    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372899    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
372900    +
372901    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
372902    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
372903    +end;
MPRINT(EM_DIAGRAM):   end;
372904    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
372905    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
372906    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
372907    +end;
MPRINT(EM_DIAGRAM):   end;
372908    +else
372909    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
372910    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
372911    +end;
MPRINT(EM_DIAGRAM):   end;
372912    +else
372913    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
372914    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
372915    +end;
MPRINT(EM_DIAGRAM):   end;
372916    +else
372917    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
372918    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
372919    +end;
MPRINT(EM_DIAGRAM):   end;
372920    +end;
MPRINT(EM_DIAGRAM):   end;
372921    +
372922    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372923    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
372924    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372925    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
372926    +
372927    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
372928    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
372929    +end;
MPRINT(EM_DIAGRAM):   end;
372930    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
372931    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
372932    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
372933    +end;
MPRINT(EM_DIAGRAM):   end;
372934    +else
372935    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
372936    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
372937    +end;
MPRINT(EM_DIAGRAM):   end;
372938    +else
372939    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
372940    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
372941    +end;
MPRINT(EM_DIAGRAM):   end;
372942    +else
372943    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
372944    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
372945    +end;
MPRINT(EM_DIAGRAM):   end;
372946    +end;
MPRINT(EM_DIAGRAM):   end;
372947    +
372948    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372949    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
372950    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
372951    +LABEL GRP_Recency =
372952    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
372953    +
372954    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
372955    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
372956    +end;
MPRINT(EM_DIAGRAM):   end;
372957    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
372958    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
372959    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
372960    +end;
MPRINT(EM_DIAGRAM):   end;
372961    +else
372962    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
372963    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
372964    +end;
MPRINT(EM_DIAGRAM):   end;
372965    +else
372966    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
372967    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
372968    +end;
MPRINT(EM_DIAGRAM):   end;
372969    +else
372970    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
372971    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
372972    +end;
MPRINT(EM_DIAGRAM):   end;
372973    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
372974     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
372975     quit;
372976     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
372977     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
372978     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
372979     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
372980     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
372981     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372982     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
372983     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
372984     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372985     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
372986     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
372987     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

372988     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
372989     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
372990     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
372991     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

372992     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
372993     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

372994     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
372995     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
372996     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

372997     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
372998     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
372999     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373000     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373001     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
373002     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
373002   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

373003     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373004     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
373005     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

373006     filename _pref
373006   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
373007     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
373008     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
373009    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
373010    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
373011    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
373012    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
373013    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
373014    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
373015     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
373016     quit;
373017     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
373018     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
373019     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
373020     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
373021     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
373022     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373023     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
373024     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373025     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373026     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
373027     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373028     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

373029     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
373030     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
373031     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
373032     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373033     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
373034     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

373035     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
373036     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373037     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

373038     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
373039     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
373040     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373041     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373042     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
373043     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
373043   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

373044     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373045     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
373046     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 794 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

373047     filename _pref
373047   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
373048     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
373049     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
373050    +
373051    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
373052    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
373052   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
373053    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
373054    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
373055    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
373056    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
373057    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
373058     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
373059     quit;
373060     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
373061     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
373062     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
373063     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
373064     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
373065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373066     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
373067     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373069     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
373070     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373072     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
373073     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
373074     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
373075     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373076     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
373077     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

373078     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
373079     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373080     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373081     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
373082     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
373083     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373084     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373085     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
373086     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
373086   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

373087     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373088     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
373089     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 833 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373090     filename _pref
373090   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
373091     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
373092     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
373093    +
373094    +
373095    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
373096    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
373097    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
373098    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
373099    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
373100    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373101    +
373102    +
373103    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
373104    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
373105    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
373106    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
373107    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
373108    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373109    +
373110    +
373111    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
373112    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
373113    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
373114    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
373115    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
373116    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373117    +
373118    +
373119    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
373120    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
373121    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
373122    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
373123    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
373124    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373125    +
373126    +
373127    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
373128    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
373129    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
373130    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
373131    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
373132    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373133    +
373134    +
373135    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
373136    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
373137    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
373138    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
373139    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
373140    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373141    +
373142    +
373143    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
373144    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
373145    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
373146    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
373147    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
373148    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373149    +
373150    +
373151    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
373152    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
373153    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
373154    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
373155    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
373156    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
373157    +if
373158    +_FILTERNORM1 not in ( '.')
373159    + and
373160    +_FILTERNORM2 not in ( '.')
373161    + and
373162    +_FILTERNORM3 not in ( '.')
373163    + and
373164    +_FILTERNORM4 not in ( '.')
373165    + and
373166    +_FILTERNORM5 not in ( '.')
373167    + and
373168    +_FILTERNORM6 not in ( '.')
373169    + and
373170    +_FILTERNORM7 not in ( ' ')
373171    + and
373172    +_FILTERNORM8 not in ( ' ')
373173    +and
373174    +( Dt_Customer ne .)
373175    +and ( Income ne . and (Income<=107000))
373176    +and ( Kidhome ne .)
373177    +and ( MntFishProducts ne .)
373178    +and ( MntFruits ne .)
373179    +and ( MntGoldProds ne .)
373180    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
373181    +and ( MntSweetProducts ne .)
373182    +and ( MntWines ne .)
373183    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
373184    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
373185    +and ( NumStorePurchases ne .)
373186    +and ( NumWebPurchases ne .)
373187    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
373188    +and ( Recency ne .)
373189    +and ( Teenhome ne .)
373190    +and ( Year_Birth ne .)
373191    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
373192    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
373193    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
373194    +end;
MPRINT(EM_DIAGRAM):   end;
373195    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
373196    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
373197     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
373198     quit;
373199     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
373200     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
373201     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
373202     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
373203     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
373204     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373205     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
373206     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373207     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

373208     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
373209     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373210     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373211     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
373212     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
373213     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
373214     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373215     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
373216     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

373217     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
373218     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373219     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373220     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
373221     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
373222     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373223     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373224     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
373225     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
373225   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

373226     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373227     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
373228     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 899 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373229     %macro varDept(fcmpdata=,id=);
373230     %global nobs&id scoreFlag&id;
373231     %let scoreFlag&id = 0;
373232     %if &id=1 or ^&fcmpStart %then %do;
373233     proc sort data=&fcmpdata out=_temp&id nodupkey;
373234     by NAME;
373235     where id=&id and LHS in( %let j=1;
373236     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
373237     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
373238     "&var" %let j = %eval(&j+1);
373239     %end;
373240     );
373241     run;
373242     %let dsid = %sysfunc(open(_temp&id));
373243     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
373244     %let dsid = %sysfunc(close(&dsid));
373245     %if &&nobs&id %then %do;
373246     %let scoreFlag&id = 1;
373247     %let fcmpStart = 1;
373248     %end;
373249     %else %let fcmpStart = 0;
373250     %end;
373251     %else %do;
373252     proc sort data=&fcmpdata out=_tempid;
373253     where id=&id;
373254     by LHS;
373255     run;
373256     %let dsid = %sysfunc(open(_tempid));
373257     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
373258     %let dsid = %sysfunc(close(&dsid));
373259     %if ^&&nobs&id %then %do;
373260     proc datasets lib=work nolist;
373261     delete _tempid;
373262     run;
373263     quit;
373264     %end;
373265     %else %do;
373266     data _tempAll;
373267     set %let j=%eval(&id-1);
373268     %do x=1 %to &j;
373269     %if &&nobs&x %then %do;
373270     _temp&x %end;
373271     %end;
373272     ;
373273     run;
373274     proc sql;
373275     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
373275   ! work._tempid p2 where p.name=p2.lhs;
373276     quit;
373277     data _temp&id;
373278     set _temp&id;
373279     where LHS ne '' and NAME ne '' and Node ne '';
373280     run;
373281     proc datasets lib=work nolist;
373282     delete _tempAll;
373283     run;
373284     %let dsid = %sysfunc(open(_temp&id));
373285     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
373286     %let dsid = %sysfunc(close(&dsid));
373287     %if ^&&nobs&id %then %do;
373288     proc datasets lib=work nolist;
373289     delete _temp&id;
373290     run;
373291     quit;
373292     %end;
373293     %else %do;
373294     %let scoreFlag&id = 1;
373295     data _temp&id;
373296     set _temp&id;
373297     where LHS ne NAME and node ne '';
373298     run;
373299     %let dsid = %sysfunc(open(_temp&id));
373300     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
373301     %let dsid = %sysfunc(close(&dsid));
373302     %if ^&&nobs&id %then %do;
373303     proc datasets lib=work nolist;
373304     delete _temp&id;
373305     run;
373306     quit;
373307     %end;
373308     %else %do;
373309     proc sort data=_temp&id nodupkey;
373310     by LHS NAME;
373311     run;
373312     %end;
373313     %end;
373314     %end;
373315     %end;
373316     %mend varDept;
373317     %macro optCode(outdata=fcmpdata);
373318     %global fcmpStart;
373319     %let fcmpStart = 0;
373320     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
373321     %let NumNodes=9;
373322     %do k=1 %to &NumNodes;
373323     %vardept(fcmpdata=&outdata, id=&k);
373324     %end;
373325     %mend optCode;
373326     %optcode(outData=EMWS8.Ensmbl48_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

373327     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
373328     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
373329     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
373330     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373331     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
373332     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
373333     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
373334     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373335     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
373336     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
373336   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

373337     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

373338     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
373339     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
373340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373341     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
373342     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
373343     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
373344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373345     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
373346     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
373347     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
373348     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373349     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
373350     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
373350   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

373351     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

373352     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
373353     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
373354     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373355     filename _pref
373355   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMPUBLISHSCORE.sas";
373356     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
373357     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural25\EMPUBLISHSCORE.sas.
373358    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
373359    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
373360    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
373361    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
373362    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
373363    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
373364    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
373365    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
373366    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
373367    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
373368    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
373369    +LENGTH _WARN_ $4
373370    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
373371    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
373372    +
373373    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
373374    +
373375    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
373376    +
373377    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
373378    +
373379    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
373380    +
373381    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
373382    +
373383    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
373384    +
373385    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
373386    +
373387    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
373388    +
373389    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
373390    +
373391    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
373392    +
373393    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
373394    +
373395    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
373396    +
373397    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
373398    +
373399    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
373400    +
373401    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
373402    +
373403    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
373404    +
373405    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
373406    +
373407    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
373408    +
373409    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
373410    +
373411    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
373412    +
373413    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
373414    +
373415    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
373416    +
373417    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
373418    +
373419    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
373420    +
373421    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
373422    +
373423    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
373424    +
373425    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
373426    +
373427    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
373428    +
373429    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
373430    +
373431    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
373432    +
373433    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
373434    +
373435    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
373436    +
373437    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
373438    +
373439    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
373440    +
373441    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
373442    +
373443    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
373444    +
373445    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
373446    +
373447    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
373448    +
373449    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
373450    +
373451    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
373452    +
373453    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
373454    +
373455    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
373456    +
373457    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
373458    +
373459    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
373460    +
373461    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
373462    +
373463    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
373464    +
373465    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
373466    +
373467    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
373468    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
373469    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
373470    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
373471    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373472    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373473    +end;
MPRINT(EM_DIAGRAM):   end;
373474    +else do;
MPRINT(EM_DIAGRAM):   else do;
373475    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373476    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
373477    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373478    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
373479    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
373480    +   end;
MPRINT(EM_DIAGRAM):   end;
373481    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
373482    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
373483    +   end;
MPRINT(EM_DIAGRAM):   end;
373484    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373485    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
373486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373488    +   end;
MPRINT(EM_DIAGRAM):   end;
373489    +end;
MPRINT(EM_DIAGRAM):   end;
373490    +
373491    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
373492    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
373493    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
373494    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
373495    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
373496    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
373497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373499    +end;
MPRINT(EM_DIAGRAM):   end;
373500    +else do;
MPRINT(EM_DIAGRAM):   else do;
373501    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373502    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
373503    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373504    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373505    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
373506    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
373507    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
373508    +   end;
MPRINT(EM_DIAGRAM):   end;
373509    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
373510    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
373511    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
373512    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
373513    +   end;
MPRINT(EM_DIAGRAM):   end;
373514    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373515    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
373516    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
373517    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
373518    +   end;
MPRINT(EM_DIAGRAM):   end;
373519    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373520    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
373521    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
373522    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
373523    +   end;
MPRINT(EM_DIAGRAM):   end;
373524    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373525    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
373526    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
373527    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
373528    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373529    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373530    +   end;
MPRINT(EM_DIAGRAM):   end;
373531    +end;
MPRINT(EM_DIAGRAM):   end;
373532    +
373533    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
373534    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
373535    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
373536    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
373537    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
373538    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
373539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373541    +end;
MPRINT(EM_DIAGRAM):   end;
373542    +else do;
MPRINT(EM_DIAGRAM):   else do;
373543    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373544    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
373545    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373546    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373547    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
373548    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
373549    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
373550    +   end;
MPRINT(EM_DIAGRAM):   end;
373551    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373552    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
373553    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
373554    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
373555    +   end;
MPRINT(EM_DIAGRAM):   end;
373556    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
373557    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
373558    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
373559    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
373560    +   end;
MPRINT(EM_DIAGRAM):   end;
373561    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373562    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
373563    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
373564    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
373565    +   end;
MPRINT(EM_DIAGRAM):   end;
373566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373567    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
373568    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
373569    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
373570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373572    +   end;
MPRINT(EM_DIAGRAM):   end;
373573    +end;
MPRINT(EM_DIAGRAM):   end;
373574    +
373575    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
373576    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
373577    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
373578    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
373579    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
373580    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
373581    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373583    +end;
MPRINT(EM_DIAGRAM):   end;
373584    +else do;
MPRINT(EM_DIAGRAM):   else do;
373585    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373586    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
373587    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373588    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373589    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
373590    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
373591    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
373592    +   end;
MPRINT(EM_DIAGRAM):   end;
373593    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373594    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
373595    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
373596    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
373597    +   end;
MPRINT(EM_DIAGRAM):   end;
373598    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373599    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
373600    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
373601    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
373602    +   end;
MPRINT(EM_DIAGRAM):   end;
373603    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373604    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
373605    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
373606    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
373607    +   end;
MPRINT(EM_DIAGRAM):   end;
373608    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373609    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
373610    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
373611    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
373612    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373613    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373614    +   end;
MPRINT(EM_DIAGRAM):   end;
373615    +end;
MPRINT(EM_DIAGRAM):   end;
373616    +
373617    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
373618    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
373619    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
373620    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
373621    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
373622    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
373623    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373625    +end;
MPRINT(EM_DIAGRAM):   end;
373626    +else do;
MPRINT(EM_DIAGRAM):   else do;
373627    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373628    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
373629    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373630    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373631    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
373632    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
373633    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
373634    +   end;
MPRINT(EM_DIAGRAM):   end;
373635    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373636    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
373637    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
373638    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
373639    +   end;
MPRINT(EM_DIAGRAM):   end;
373640    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373641    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
373642    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
373643    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
373644    +   end;
MPRINT(EM_DIAGRAM):   end;
373645    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373646    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
373647    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
373648    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
373649    +   end;
MPRINT(EM_DIAGRAM):   end;
373650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373651    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
373652    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
373653    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
373654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373656    +   end;
MPRINT(EM_DIAGRAM):   end;
373657    +end;
MPRINT(EM_DIAGRAM):   end;
373658    +
373659    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
373660    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
373661    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
373662    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
373663    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
373664    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
373665    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373666    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373667    +end;
MPRINT(EM_DIAGRAM):   end;
373668    +else do;
MPRINT(EM_DIAGRAM):   else do;
373669    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373670    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
373671    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373672    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373673    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
373674    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
373675    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
373676    +   end;
MPRINT(EM_DIAGRAM):   end;
373677    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373678    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
373679    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
373680    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
373681    +   end;
MPRINT(EM_DIAGRAM):   end;
373682    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373683    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
373684    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
373685    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
373686    +   end;
MPRINT(EM_DIAGRAM):   end;
373687    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373688    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
373689    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
373690    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
373691    +   end;
MPRINT(EM_DIAGRAM):   end;
373692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373693    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
373694    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
373695    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
373696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373698    +   end;
MPRINT(EM_DIAGRAM):   end;
373699    +end;
MPRINT(EM_DIAGRAM):   end;
373700    +
373701    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
373702    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
373703    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
373704    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
373705    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
373706    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
373707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373709    +end;
MPRINT(EM_DIAGRAM):   end;
373710    +else do;
MPRINT(EM_DIAGRAM):   else do;
373711    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373712    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
373713    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373714    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373715    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
373716    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
373717    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
373718    +   end;
MPRINT(EM_DIAGRAM):   end;
373719    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373720    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
373721    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
373722    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
373723    +   end;
MPRINT(EM_DIAGRAM):   end;
373724    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373725    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
373726    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
373727    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
373728    +   end;
MPRINT(EM_DIAGRAM):   end;
373729    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373730    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
373731    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
373732    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
373733    +   end;
MPRINT(EM_DIAGRAM):   end;
373734    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373735    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
373736    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
373737    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
373738    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373739    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373740    +   end;
MPRINT(EM_DIAGRAM):   end;
373741    +end;
MPRINT(EM_DIAGRAM):   end;
373742    +
373743    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
373744    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
373745    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
373746    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
373747    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
373748    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
373749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373751    +end;
MPRINT(EM_DIAGRAM):   end;
373752    +else do;
MPRINT(EM_DIAGRAM):   else do;
373753    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373754    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
373755    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373756    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373757    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
373758    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
373759    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
373760    +   end;
MPRINT(EM_DIAGRAM):   end;
373761    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373762    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
373763    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
373764    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
373765    +   end;
MPRINT(EM_DIAGRAM):   end;
373766    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373767    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
373768    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
373769    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
373770    +   end;
MPRINT(EM_DIAGRAM):   end;
373771    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373772    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
373773    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
373774    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
373775    +   end;
MPRINT(EM_DIAGRAM):   end;
373776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373777    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
373778    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
373779    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
373780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373782    +   end;
MPRINT(EM_DIAGRAM):   end;
373783    +end;
MPRINT(EM_DIAGRAM):   end;
373784    +
373785    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
373786    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
373787    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
373788    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
373789    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
373790    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373791    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373792    +end;
MPRINT(EM_DIAGRAM):   end;
373793    +else do;
MPRINT(EM_DIAGRAM):   else do;
373794    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373795    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
373796    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373797    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373798    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
373799    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
373800    +   end;
MPRINT(EM_DIAGRAM):   end;
373801    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373802    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
373803    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
373804    +   end;
MPRINT(EM_DIAGRAM):   end;
373805    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373806    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
373807    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
373808    +   end;
MPRINT(EM_DIAGRAM):   end;
373809    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373810    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
373811    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
373812    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373813    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373814    +   end;
MPRINT(EM_DIAGRAM):   end;
373815    +end;
MPRINT(EM_DIAGRAM):   end;
373816    +
373817    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
373818    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
373819    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
373820    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
373821    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
373822    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
373823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373825    +end;
MPRINT(EM_DIAGRAM):   end;
373826    +else do;
MPRINT(EM_DIAGRAM):   else do;
373827    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373828    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
373829    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373830    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373831    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
373832    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
373833    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
373834    +   end;
MPRINT(EM_DIAGRAM):   end;
373835    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373836    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
373837    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
373838    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
373839    +   end;
MPRINT(EM_DIAGRAM):   end;
373840    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373841    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
373842    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
373843    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
373844    +   end;
MPRINT(EM_DIAGRAM):   end;
373845    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
373846    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
373847    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
373848    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
373849    +   end;
MPRINT(EM_DIAGRAM):   end;
373850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373851    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
373852    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
373853    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
373854    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373855    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373856    +   end;
MPRINT(EM_DIAGRAM):   end;
373857    +end;
MPRINT(EM_DIAGRAM):   end;
373858    +
373859    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
373860    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
373861    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
373862    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
373863    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
373864    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
373865    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373867    +end;
MPRINT(EM_DIAGRAM):   end;
373868    +else do;
MPRINT(EM_DIAGRAM):   else do;
373869    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373870    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
373871    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373872    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373873    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
373874    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
373875    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
373876    +   end;
MPRINT(EM_DIAGRAM):   end;
373877    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373878    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
373879    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
373880    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
373881    +   end;
MPRINT(EM_DIAGRAM):   end;
373882    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373883    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
373884    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
373885    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
373886    +   end;
MPRINT(EM_DIAGRAM):   end;
373887    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373888    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
373889    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
373890    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
373891    +   end;
MPRINT(EM_DIAGRAM):   end;
373892    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373893    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
373894    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
373895    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
373896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373898    +   end;
MPRINT(EM_DIAGRAM):   end;
373899    +end;
MPRINT(EM_DIAGRAM):   end;
373900    +
373901    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
373902    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
373903    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
373904    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
373905    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
373906    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
373907    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373908    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373909    +end;
MPRINT(EM_DIAGRAM):   end;
373910    +else do;
MPRINT(EM_DIAGRAM):   else do;
373911    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373912    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
373913    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373914    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
373915    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
373916    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
373917    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
373918    +   end;
MPRINT(EM_DIAGRAM):   end;
373919    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
373920    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
373921    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
373922    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
373923    +   end;
MPRINT(EM_DIAGRAM):   end;
373924    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373925    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
373926    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
373927    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
373928    +   end;
MPRINT(EM_DIAGRAM):   end;
373929    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373930    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
373931    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
373932    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
373933    +   end;
MPRINT(EM_DIAGRAM):   end;
373934    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373935    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
373936    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
373937    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
373938    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373939    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373940    +   end;
MPRINT(EM_DIAGRAM):   end;
373941    +end;
MPRINT(EM_DIAGRAM):   end;
373942    +
373943    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
373944    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
373945    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
373946    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
373947    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
373948    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
373949    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373950    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373951    +end;
MPRINT(EM_DIAGRAM):   end;
373952    +else do;
MPRINT(EM_DIAGRAM):   else do;
373953    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373954    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
373955    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373956    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
373957    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
373958    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
373959    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
373960    +   end;
MPRINT(EM_DIAGRAM):   end;
373961    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
373962    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
373963    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
373964    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
373965    +   end;
MPRINT(EM_DIAGRAM):   end;
373966    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
373967    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
373968    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
373969    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
373970    +   end;
MPRINT(EM_DIAGRAM):   end;
373971    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
373972    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
373973    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
373974    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
373975    +   end;
MPRINT(EM_DIAGRAM):   end;
373976    +   else do;
MPRINT(EM_DIAGRAM):   else do;
373977    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
373978    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
373979    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
373980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
373981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373982    +   end;
MPRINT(EM_DIAGRAM):   end;
373983    +end;
MPRINT(EM_DIAGRAM):   end;
373984    +
373985    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
373986    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
373987    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
373988    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
373989    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
373990    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
373991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
373992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
373993    +end;
MPRINT(EM_DIAGRAM):   end;
373994    +else do;
MPRINT(EM_DIAGRAM):   else do;
373995    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
373996    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
373997    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
373998    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
373999    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
374000    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
374001    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
374002    +   end;
MPRINT(EM_DIAGRAM):   end;
374003    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
374004    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
374005    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
374006    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
374007    +   end;
MPRINT(EM_DIAGRAM):   end;
374008    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
374009    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
374010    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
374011    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
374012    +   end;
MPRINT(EM_DIAGRAM):   end;
374013    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
374014    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
374015    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
374016    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
374017    +   end;
MPRINT(EM_DIAGRAM):   end;
374018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
374019    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
374020    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
374021    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
374022    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
374023    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374024    +   end;
MPRINT(EM_DIAGRAM):   end;
374025    +end;
MPRINT(EM_DIAGRAM):   end;
374026    +
374027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374028    +*** Checking missing input Interval
374029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
374030    +
374031    +IF NMISS(
374032    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
374033    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
374034    +
374035    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
374036    +END;
MPRINT(EM_DIAGRAM):   END;
374037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374038    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
374039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374040    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
374041    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
374042    +END;
MPRINT(EM_DIAGRAM):   END;
374043    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
374044    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
374045    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
374046    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
374047    +END;
MPRINT(EM_DIAGRAM):   END;
374048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374049    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
374050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374052    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
374053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374054    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
374055    +   H1x1_1  =     0.38021638611764 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.38021638611764 * S_Year_Birth ;
374056    +   H1x1_2  =      -1.088276895346 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.088276895346 * S_Year_Birth ;
374057    +   H1x1_3  =    -0.21044864474556 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21044864474556 * S_Year_Birth ;
374058    +   H1x1_1  = H1x1_1  +    -1.19598236721657 * GRP_AcceptedCmp52
374059    +          +     0.89556920543007 * GRP_Frq2  +    -1.28633632438875 * GRP_Frq3
374060    +          +     1.09957277812081 * GRP_Frq4  +     1.66129248688789 *
374061    +        GRP_Income2  +    -0.02208859809261 * GRP_Income3
374062    +          +     0.13742442233856 * GRP_Income4  +     -0.8762617114278 *
374063    +        GRP_Mnt2  +     0.14483268386758 * GRP_Mnt3  +     1.46115917633769 *
374064    +        GRP_Mnt4  +     -0.6421408902491 * GRP_MntFishProducts2
374065    +          +      0.1128138472044 * GRP_MntFishProducts3
374066    +          +     1.21562636748698 * GRP_MntFishProducts4
374067    +          +     0.97422300880066 * GRP_MntGoldProds2
374068    +          +    -0.78007036389535 * GRP_MntGoldProds3
374069    +          +    -0.13814365615145 * GRP_MntGoldProds4
374070    +          +     1.35693955555286 * GRP_MntMeatProducts2
374071    +          +    -0.27598973191035 * GRP_MntMeatProducts3
374072    +          +     0.24526165671667 * GRP_MntMeatProducts4
374073    +          +    -2.07253692193163 * GRP_MntWines2  +    -0.82406684176795 *
374074    +        GRP_MntWines3  +     1.33606527822464 * GRP_MntWines4
374075    +          +    -1.54679770016919 * GRP_NumCatalogPurchases3
374076    +          +    -2.28037541698712 * GRP_NumCatalogPurchases4
374077    +          +     0.40979012613952 * GRP_NumDistPurchases2
374078    +          +     0.01840169060266 * GRP_NumDistPurchases3
374079    +          +     0.45490355508206 * GRP_NumDistPurchases4
374080    +          +     -2.5216795172343 * GRP_NumWebPurchases2
374081    +          +    -1.84801006282457 * GRP_NumWebPurchases3
374082    +          +    -1.97644985842889 * GRP_NumWebPurchases4
374083    +          +     1.42008839453911 * GRP_RFMstat2  +    -1.47553685202484 *
374084    +        GRP_RFMstat3  +     0.87098855427631 * GRP_RFMstat4
374085    +          +     1.05400168422125 * GRP_RMntFrq2  +    -0.41630002795032 *
374086    +        GRP_RMntFrq3  +     0.32151577305352 * GRP_RMntFrq4
374087    +          +    -0.40892574480582 * GRP_Recency2  +    -0.38760854674907 *
374088    +        GRP_Recency3  +    -1.01062906861757 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.19598236721657 * GRP_AcceptedCmp52 + 
0.89556920543007 * GRP_Frq2 + -1.28633632438875 * GRP_Frq3 + 1.09957277812081 * GRP_Frq4 + 
1.66129248688789 * GRP_Income2 + -0.02208859809261 * GRP_Income3 + 0.13742442233856 * 
GRP_Income4 + -0.8762617114278 * GRP_Mnt2 + 0.14483268386758 * GRP_Mnt3 + 1.46115917633769 * 
GRP_Mnt4 + -0.6421408902491 * GRP_MntFishProducts2 + 0.1128138472044 * GRP_MntFishProducts3 + 
1.21562636748698 * GRP_MntFishProducts4 + 0.97422300880066 * GRP_MntGoldProds2 + 
-0.78007036389535 * GRP_MntGoldProds3 + -0.13814365615145 * GRP_MntGoldProds4 + 
1.35693955555286 * GRP_MntMeatProducts2 + -0.27598973191035 * GRP_MntMeatProducts3 + 
0.24526165671667 * GRP_MntMeatProducts4 + -2.07253692193163 * GRP_MntWines2 + 
-0.82406684176795 * GRP_MntWines3 + 1.33606527822464 * GRP_MntWines4 + -1.54679770016919 * 
GRP_NumCatalogPurchases3 + -2.28037541698712 * GRP_NumCatalogPurchases4 + 0.40979012613952 * 
GRP_NumDistPurchases2 + 0.01840169060266 * GRP_NumDistPurchases3 + 0.45490355508206 * 
GRP_NumDistPurchases4 + -2.5216795172343 * GRP_NumWebPurchases2 + -1.84801006282457 * 
GRP_NumWebPurchases3 + -1.97644985842889 * GRP_NumWebPurchases4 + 1.42008839453911 * 
GRP_RFMstat2 + -1.47553685202484 * GRP_RFMstat3 + 0.87098855427631 * GRP_RFMstat4 + 
1.05400168422125 * GRP_RMntFrq2 + -0.41630002795032 * GRP_RMntFrq3 + 0.32151577305352 * 
GRP_RMntFrq4 + -0.40892574480582 * GRP_Recency2 + -0.38760854674907 * GRP_Recency3 + 
-1.01062906861757 * GRP_Recency4 ;
374089    +   H1x1_2  = H1x1_2  +    -0.22087092765683 * GRP_AcceptedCmp52
374090    +          +     0.86410922322484 * GRP_Frq2  +     1.63807214492524 * GRP_Frq3
374091    +          +    -1.25641751320277 * GRP_Frq4  +    -2.06319605492297 *
374092    +        GRP_Income2  +    -0.19570512199776 * GRP_Income3
374093    +          +    -1.02783445665559 * GRP_Income4  +     0.15804947667697 *
374094    +        GRP_Mnt2  +    -1.89927129454089 * GRP_Mnt3  +    -2.03683593435912 *
374095    +        GRP_Mnt4  +    -1.52161150732597 * GRP_MntFishProducts2
374096    +          +     1.31452667544583 * GRP_MntFishProducts3
374097    +          +     -1.7257971559668 * GRP_MntFishProducts4
374098    +          +     2.35872511454228 * GRP_MntGoldProds2
374099    +          +    -2.18519280701813 * GRP_MntGoldProds3
374100    +          +     2.11958828863486 * GRP_MntGoldProds4
374101    +          +     0.96289877666679 * GRP_MntMeatProducts2
374102    +          +     0.23432155256273 * GRP_MntMeatProducts3
374103    +          +     1.73039772995976 * GRP_MntMeatProducts4
374104    +          +    -0.42501510787424 * GRP_MntWines2  +    -1.52486822377888 *
374105    +        GRP_MntWines3  +      1.6227654564975 * GRP_MntWines4
374106    +          +    -1.89995561867666 * GRP_NumCatalogPurchases3
374107    +          +     0.67482053398184 * GRP_NumCatalogPurchases4
374108    +          +     0.66331524792021 * GRP_NumDistPurchases2
374109    +          +    -3.51633711874744 * GRP_NumDistPurchases3
374110    +          +    -2.78868266001809 * GRP_NumDistPurchases4
374111    +          +     0.48911700629841 * GRP_NumWebPurchases2
374112    +          +    -2.04233990579849 * GRP_NumWebPurchases3
374113    +          +     0.61493436153841 * GRP_NumWebPurchases4
374114    +          +    -0.04998034532745 * GRP_RFMstat2  +     0.70675221202708 *
374115    +        GRP_RFMstat3  +      1.1835788842441 * GRP_RFMstat4
374116    +          +    -1.59293821911804 * GRP_RMntFrq2  +    -2.00649847294694 *
374117    +        GRP_RMntFrq3  +     1.51867097620424 * GRP_RMntFrq4
374118    +          +     0.80524037758297 * GRP_Recency2  +     0.46947615167497 *
374119    +        GRP_Recency3  +    -0.02984024000355 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22087092765683 * GRP_AcceptedCmp52 + 
0.86410922322484 * GRP_Frq2 + 1.63807214492524 * GRP_Frq3 + -1.25641751320277 * GRP_Frq4 + 
-2.06319605492297 * GRP_Income2 + -0.19570512199776 * GRP_Income3 + -1.02783445665559 * 
GRP_Income4 + 0.15804947667697 * GRP_Mnt2 + -1.89927129454089 * GRP_Mnt3 + -2.03683593435912 * 
GRP_Mnt4 + -1.52161150732597 * GRP_MntFishProducts2 + 1.31452667544583 * GRP_MntFishProducts3 
+ -1.7257971559668 * GRP_MntFishProducts4 + 2.35872511454228 * GRP_MntGoldProds2 + 
-2.18519280701813 * GRP_MntGoldProds3 + 2.11958828863486 * GRP_MntGoldProds4 + 
0.96289877666679 * GRP_MntMeatProducts2 + 0.23432155256273 * GRP_MntMeatProducts3 + 
1.73039772995976 * GRP_MntMeatProducts4 + -0.42501510787424 * GRP_MntWines2 + 
-1.52486822377888 * GRP_MntWines3 + 1.6227654564975 * GRP_MntWines4 + -1.89995561867666 * 
GRP_NumCatalogPurchases3 + 0.67482053398184 * GRP_NumCatalogPurchases4 + 0.66331524792021 * 
GRP_NumDistPurchases2 + -3.51633711874744 * GRP_NumDistPurchases3 + -2.78868266001809 * 
GRP_NumDistPurchases4 + 0.48911700629841 * GRP_NumWebPurchases2 + -2.04233990579849 * 
GRP_NumWebPurchases3 + 0.61493436153841 * GRP_NumWebPurchases4 + -0.04998034532745 * 
GRP_RFMstat2 + 0.70675221202708 * GRP_RFMstat3 + 1.1835788842441 * GRP_RFMstat4 + 
-1.59293821911804 * GRP_RMntFrq2 + -2.00649847294694 * GRP_RMntFrq3 + 1.51867097620424 * 
GRP_RMntFrq4 + 0.80524037758297 * GRP_Recency2 + 0.46947615167497 * GRP_Recency3 + 
-0.02984024000355 * GRP_Recency4 ;
374120    +   H1x1_3  = H1x1_3  +     0.63511799928422 * GRP_AcceptedCmp52
374121    +          +      -2.298606068807 * GRP_Frq2  +     3.16864487857804 * GRP_Frq3
374122    +          +     3.03519261062887 * GRP_Frq4  +    -1.85162718986086 *
374123    +        GRP_Income2  +     0.41526825199627 * GRP_Income3
374124    +          +    -0.80593312350255 * GRP_Income4  +     1.66777476102634 *
374125    +        GRP_Mnt2  +     2.08848488119875 * GRP_Mnt3  +     0.65051244257971 *
374126    +        GRP_Mnt4  +     0.71847095407349 * GRP_MntFishProducts2
374127    +          +    -1.10257815890641 * GRP_MntFishProducts3
374128    +          +     2.17792588671141 * GRP_MntFishProducts4
374129    +          +     2.50223152259939 * GRP_MntGoldProds2
374130    +          +    -1.72156085851201 * GRP_MntGoldProds3
374131    +          +    -3.91709431063923 * GRP_MntGoldProds4
374132    +          +     -1.0779971381482 * GRP_MntMeatProducts2
374133    +          +    -1.47970774146601 * GRP_MntMeatProducts3
374134    +          +     1.27022891132009 * GRP_MntMeatProducts4
374135    +          +     0.48048593774493 * GRP_MntWines2  +     2.90436921022208 *
374136    +        GRP_MntWines3  +    -3.52082955604777 * GRP_MntWines4
374137    +          +    -0.04446993636304 * GRP_NumCatalogPurchases3
374138    +          +     0.63669224655802 * GRP_NumCatalogPurchases4
374139    +          +    -3.14645279004965 * GRP_NumDistPurchases2
374140    +          +    -2.33190469508132 * GRP_NumDistPurchases3
374141    +          +    -0.62827451633899 * GRP_NumDistPurchases4
374142    +          +    -1.01851610127648 * GRP_NumWebPurchases2
374143    +          +    -1.48934390537683 * GRP_NumWebPurchases3
374144    +          +    -0.53741548796796 * GRP_NumWebPurchases4
374145    +          +    -0.75492549718573 * GRP_RFMstat2  +     -0.7937620334965 *
374146    +        GRP_RFMstat3  +     1.16856250505521 * GRP_RFMstat4
374147    +          +     2.45700945744116 * GRP_RMntFrq2  +      2.6192187092108 *
374148    +        GRP_RMntFrq3  +    -0.99545519667238 * GRP_RMntFrq4
374149    +          +     -0.8178492657671 * GRP_Recency2  +     0.13605490470692 *
374150    +        GRP_Recency3  +    -0.93901422840588 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.63511799928422 * GRP_AcceptedCmp52 + -2.298606068807 
* GRP_Frq2 + 3.16864487857804 * GRP_Frq3 + 3.03519261062887 * GRP_Frq4 + -1.85162718986086 * 
GRP_Income2 + 0.41526825199627 * GRP_Income3 + -0.80593312350255 * GRP_Income4 + 
1.66777476102634 * GRP_Mnt2 + 2.08848488119875 * GRP_Mnt3 + 0.65051244257971 * GRP_Mnt4 + 
0.71847095407349 * GRP_MntFishProducts2 + -1.10257815890641 * GRP_MntFishProducts3 + 
2.17792588671141 * GRP_MntFishProducts4 + 2.50223152259939 * GRP_MntGoldProds2 + 
-1.72156085851201 * GRP_MntGoldProds3 + -3.91709431063923 * GRP_MntGoldProds4 + 
-1.0779971381482 * GRP_MntMeatProducts2 + -1.47970774146601 * GRP_MntMeatProducts3 + 
1.27022891132009 * GRP_MntMeatProducts4 + 0.48048593774493 * GRP_MntWines2 + 2.90436921022208 
* GRP_MntWines3 + -3.52082955604777 * GRP_MntWines4 + -0.04446993636304 * 
GRP_NumCatalogPurchases3 + 0.63669224655802 * GRP_NumCatalogPurchases4 + -3.14645279004965 * 
GRP_NumDistPurchases2 + -2.33190469508132 * GRP_NumDistPurchases3 + -0.62827451633899 * 
GRP_NumDistPurchases4 + -1.01851610127648 * GRP_NumWebPurchases2 + -1.48934390537683 * 
GRP_NumWebPurchases3 + -0.53741548796796 * GRP_NumWebPurchases4 + -0.75492549718573 * 
GRP_RFMstat2 + -0.7937620334965 * GRP_RFMstat3 + 1.16856250505521 * GRP_RFMstat4 + 
2.45700945744116 * GRP_RMntFrq2 + 2.6192187092108 * GRP_RMntFrq3 + -0.99545519667238 * 
GRP_RMntFrq4 + -0.8178492657671 * GRP_Recency2 + 0.13605490470692 * GRP_Recency3 + 
-0.93901422840588 * GRP_Recency4 ;
374151    +   H1x1_1  =      1.8884999595718 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.8884999595718 + H1x1_1 ;
374152    +   H1x1_2  =    -0.51989390923325 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.51989390923325 + H1x1_2 ;
374153    +   H1x1_3  =     2.10213347257206 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.10213347257206 + H1x1_3 ;
374154    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
374155    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
374156    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
374157    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
374158    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
374159    +END;
MPRINT(EM_DIAGRAM):   END;
374160    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
374161    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
374162    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
374163    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
374164    +END;
MPRINT(EM_DIAGRAM):   END;
374165    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374166    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
374167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374168    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
374169    +   P_DepVar1  =    -2.62984121710329 * H1x1_1  +    -2.65642038715706 * H1x1_2
374170    +          +    -4.24846513249504 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.62984121710329 * H1x1_1 + -2.65642038715706 * H1x1_2 + 
-4.24846513249504 * H1x1_3 ;
374171    +   P_DepVar1  =     3.19982150134729 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.19982150134729 + P_DepVar1 ;
374172    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
374173    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
374174    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
374175    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
374176    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
374177    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
374178    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
374179    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
374180    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
374181    +END;
MPRINT(EM_DIAGRAM):   END;
374182    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
374183    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
374184    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
374185    +END;
MPRINT(EM_DIAGRAM):   END;
374186    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
374187    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
374188    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
374189    +END;
MPRINT(EM_DIAGRAM):   END;
374190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374191    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
374192    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
374193    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
374194    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
374195    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
374196    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
374197    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
374198    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
374199    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
374200    +END;
MPRINT(EM_DIAGRAM):   END;
374201    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
374202    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
374203    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
374204    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
374205     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
374206     quit;
374207     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
374208     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
374209     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
374210     retain ID 2 Node "AutoNeural25";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural25";
374211     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
374212     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1737 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1737 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374213     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
374214     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374215     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1737 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1737 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374216     proc sort data=EMWS8.AutoNeural25_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural25_variableset out=_temp2(keep=NAME 
CREATOR);
374217     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374218     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL25_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374219     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374220     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
374221     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
374222     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374223     proc contents data=EMWS8.AutoNeural25_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural25_train out=_meta(keep=NAME) noprint;
374224     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

374225     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
374226     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374227     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 70 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374228     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374229     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
374230     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374231     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 70 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 70 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374232     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
374233     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
374233   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 916 rows and 5 columns.

374234     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374235     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
374236     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 916 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 916 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374237     filename _pref
374237   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
374238     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
374239     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
374240    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
374241    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
374242    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
374243    +
374244    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374245    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
374246    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374247    +LABEL GRP_AcceptedCmp5 =
374248    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
374249    +
374250    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
374251    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
374252    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
374253    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
374254    +end;
MPRINT(EM_DIAGRAM):   end;
374255    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
374256    +if (_UFORMAT eq '0'
374257    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
374258    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
374259    +end;
MPRINT(EM_DIAGRAM):   end;
374260    +else
374261    +if (_UFORMAT eq '1'
374262    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
374263    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
374264    +end;
MPRINT(EM_DIAGRAM):   end;
374265    +else do;
MPRINT(EM_DIAGRAM):   else do;
374266    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
374267    +end;
MPRINT(EM_DIAGRAM):   end;
374268    +end;
MPRINT(EM_DIAGRAM):   end;
374269    +
374270    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374271    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
374272    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374273    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
374274    +
374275    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
374276    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
374277    +end;
MPRINT(EM_DIAGRAM):   end;
374278    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
374279    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
374280    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
374281    +end;
MPRINT(EM_DIAGRAM):   end;
374282    +else
374283    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
374284    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
374285    +end;
MPRINT(EM_DIAGRAM):   end;
374286    +else
374287    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
374288    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
374289    +end;
MPRINT(EM_DIAGRAM):   end;
374290    +else
374291    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
374292    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
374293    +end;
MPRINT(EM_DIAGRAM):   end;
374294    +end;
MPRINT(EM_DIAGRAM):   end;
374295    +
374296    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374297    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
374298    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374299    +LABEL GRP_Income =
374300    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
374301    +
374302    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
374303    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
374304    +end;
MPRINT(EM_DIAGRAM):   end;
374305    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
374306    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
374307    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
374308    +end;
MPRINT(EM_DIAGRAM):   end;
374309    +else
374310    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
374311    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
374312    +end;
MPRINT(EM_DIAGRAM):   end;
374313    +else
374314    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
374315    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
374316    +end;
MPRINT(EM_DIAGRAM):   end;
374317    +else
374318    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
374319    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
374320    +end;
MPRINT(EM_DIAGRAM):   end;
374321    +end;
MPRINT(EM_DIAGRAM):   end;
374322    +
374323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374324    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
374325    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374326    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
374327    +
374328    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
374329    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
374330    +end;
MPRINT(EM_DIAGRAM):   end;
374331    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
374332    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
374333    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
374334    +end;
MPRINT(EM_DIAGRAM):   end;
374335    +else
374336    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
374337    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
374338    +end;
MPRINT(EM_DIAGRAM):   end;
374339    +else
374340    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
374341    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
374342    +end;
MPRINT(EM_DIAGRAM):   end;
374343    +else
374344    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
374345    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
374346    +end;
MPRINT(EM_DIAGRAM):   end;
374347    +end;
MPRINT(EM_DIAGRAM):   end;
374348    +
374349    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374350    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
374351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374352    +LABEL GRP_MntFishProducts =
374353    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
374354    +
374355    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
374356    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
374357    +end;
MPRINT(EM_DIAGRAM):   end;
374358    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
374359    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
374360    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
374361    +end;
MPRINT(EM_DIAGRAM):   end;
374362    +else
374363    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
374364    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
374365    +end;
MPRINT(EM_DIAGRAM):   end;
374366    +else
374367    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
374368    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
374369    +end;
MPRINT(EM_DIAGRAM):   end;
374370    +else
374371    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
374372    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
374373    +end;
MPRINT(EM_DIAGRAM):   end;
374374    +end;
MPRINT(EM_DIAGRAM):   end;
374375    +
374376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374377    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
374378    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374379    +LABEL GRP_MntGoldProds =
374380    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
374381    +
374382    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
374383    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
374384    +end;
MPRINT(EM_DIAGRAM):   end;
374385    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
374386    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
374387    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
374388    +end;
MPRINT(EM_DIAGRAM):   end;
374389    +else
374390    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
374391    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
374392    +end;
MPRINT(EM_DIAGRAM):   end;
374393    +else
374394    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
374395    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
374396    +end;
MPRINT(EM_DIAGRAM):   end;
374397    +else
374398    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
374399    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
374400    +end;
MPRINT(EM_DIAGRAM):   end;
374401    +end;
MPRINT(EM_DIAGRAM):   end;
374402    +
374403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374404    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
374405    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374406    +LABEL GRP_MntMeatProducts =
374407    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
374408    +
374409    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
374410    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
374411    +end;
MPRINT(EM_DIAGRAM):   end;
374412    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
374413    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
374414    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
374415    +end;
MPRINT(EM_DIAGRAM):   end;
374416    +else
374417    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
374418    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
374419    +end;
MPRINT(EM_DIAGRAM):   end;
374420    +else
374421    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
374422    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
374423    +end;
MPRINT(EM_DIAGRAM):   end;
374424    +else
374425    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
374426    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
374427    +end;
MPRINT(EM_DIAGRAM):   end;
374428    +end;
MPRINT(EM_DIAGRAM):   end;
374429    +
374430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374431    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
374432    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374433    +LABEL GRP_MntWines =
374434    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
374435    +
374436    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
374437    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
374438    +end;
MPRINT(EM_DIAGRAM):   end;
374439    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
374440    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
374441    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
374442    +end;
MPRINT(EM_DIAGRAM):   end;
374443    +else
374444    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
374445    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
374446    +end;
MPRINT(EM_DIAGRAM):   end;
374447    +else
374448    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
374449    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
374450    +end;
MPRINT(EM_DIAGRAM):   end;
374451    +else
374452    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
374453    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
374454    +end;
MPRINT(EM_DIAGRAM):   end;
374455    +end;
MPRINT(EM_DIAGRAM):   end;
374456    +
374457    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374458    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
374459    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374460    +LABEL GRP_NumCatalogPurchases =
374461    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
374462    +
374463    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
374464    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
374465    +end;
MPRINT(EM_DIAGRAM):   end;
374466    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
374467    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
374468    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
374469    +end;
MPRINT(EM_DIAGRAM):   end;
374470    +else
374471    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
374472    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
374473    +end;
MPRINT(EM_DIAGRAM):   end;
374474    +else
374475    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
374476    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
374477    +end;
MPRINT(EM_DIAGRAM):   end;
374478    +else
374479    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
374480    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
374481    +end;
MPRINT(EM_DIAGRAM):   end;
374482    +end;
MPRINT(EM_DIAGRAM):   end;
374483    +
374484    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374485    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
374486    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374487    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
374488    +
374489    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
374490    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
374491    +end;
MPRINT(EM_DIAGRAM):   end;
374492    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
374493    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
374494    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
374495    +end;
MPRINT(EM_DIAGRAM):   end;
374496    +else
374497    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
374498    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
374499    +end;
MPRINT(EM_DIAGRAM):   end;
374500    +else
374501    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
374502    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
374503    +end;
MPRINT(EM_DIAGRAM):   end;
374504    +else
374505    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
374506    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
374507    +end;
MPRINT(EM_DIAGRAM):   end;
374508    +end;
MPRINT(EM_DIAGRAM):   end;
374509    +
374510    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374511    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
374512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374513    +LABEL GRP_NumWebPurchases =
374514    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
374515    +
374516    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
374517    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
374518    +end;
MPRINT(EM_DIAGRAM):   end;
374519    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
374520    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
374521    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
374522    +end;
MPRINT(EM_DIAGRAM):   end;
374523    +else
374524    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
374525    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
374526    +end;
MPRINT(EM_DIAGRAM):   end;
374527    +else
374528    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
374529    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
374530    +end;
MPRINT(EM_DIAGRAM):   end;
374531    +else
374532    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
374533    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
374534    +end;
MPRINT(EM_DIAGRAM):   end;
374535    +end;
MPRINT(EM_DIAGRAM):   end;
374536    +
374537    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374538    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
374539    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374540    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
374541    +
374542    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
374543    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
374544    +end;
MPRINT(EM_DIAGRAM):   end;
374545    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
374546    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
374547    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
374548    +end;
MPRINT(EM_DIAGRAM):   end;
374549    +else
374550    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
374551    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
374552    +end;
MPRINT(EM_DIAGRAM):   end;
374553    +else
374554    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
374555    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
374556    +end;
MPRINT(EM_DIAGRAM):   end;
374557    +else
374558    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
374559    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
374560    +end;
MPRINT(EM_DIAGRAM):   end;
374561    +end;
MPRINT(EM_DIAGRAM):   end;
374562    +
374563    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374564    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
374565    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374566    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
374567    +
374568    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
374569    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
374570    +end;
MPRINT(EM_DIAGRAM):   end;
374571    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
374572    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
374573    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
374574    +end;
MPRINT(EM_DIAGRAM):   end;
374575    +else
374576    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
374577    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
374578    +end;
MPRINT(EM_DIAGRAM):   end;
374579    +else
374580    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
374581    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
374582    +end;
MPRINT(EM_DIAGRAM):   end;
374583    +else
374584    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
374585    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
374586    +end;
MPRINT(EM_DIAGRAM):   end;
374587    +end;
MPRINT(EM_DIAGRAM):   end;
374588    +
374589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374590    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
374591    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374592    +LABEL GRP_Recency =
374593    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
374594    +
374595    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
374596    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
374597    +end;
MPRINT(EM_DIAGRAM):   end;
374598    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
374599    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
374600    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
374601    +end;
MPRINT(EM_DIAGRAM):   end;
374602    +else
374603    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
374604    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
374605    +end;
MPRINT(EM_DIAGRAM):   end;
374606    +else
374607    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
374608    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
374609    +end;
MPRINT(EM_DIAGRAM):   end;
374610    +else
374611    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
374612    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
374613    +end;
MPRINT(EM_DIAGRAM):   end;
374614    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
374615     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
374616     quit;
374617     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
374618     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
374619     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
374620     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
374621     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
374622     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374623     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
374624     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374625     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374626     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
374627     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374628     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374629     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374630     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
374631     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
374632     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374633     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
374634     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

374635     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
374636     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374637     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374638     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374639     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
374640     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374641     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.01 seconds
      

374642     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
374643     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
374643   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

374644     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374645     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
374646     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 931 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374647     filename _pref
374647   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
374648     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
374649     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
374650    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374651    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
374652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
374653    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
374654    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
374655    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
374656     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
374657     quit;
374658     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
374659     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
374660     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
374661     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
374662     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
374663     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374664     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
374665     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374666     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

374667     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
374668     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374669     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374670     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374671     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
374672     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
374673     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374674     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
374675     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

374676     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
374677     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374678     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374679     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374680     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
374681     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374682     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374683     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
374684     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
374684   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

374685     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374686     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
374687     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 935 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374688     filename _pref
374688   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
374689     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
374690     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
374691    +
374692    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
374693    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
374693   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
374694    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
374695    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
374696    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
374697    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
374698    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
374699     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
374700     quit;
374701     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
374702     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
374703     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
374704     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
374705     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
374706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374707     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
374708     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374709     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374710     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
374711     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374712     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374713     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374714     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
374715     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
374716     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374717     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
374718     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374719     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
374720     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374721     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374722     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374723     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
374724     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374725     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374726     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
374727     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
374727   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

374728     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374729     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
374730     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374731     filename _pref
374731   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
374732     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
374733     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
374734    +
374735    +
374736    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
374737    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
374738    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
374739    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
374740    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
374741    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374742    +
374743    +
374744    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
374745    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
374746    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
374747    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
374748    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
374749    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374750    +
374751    +
374752    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
374753    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
374754    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
374755    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
374756    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
374757    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374758    +
374759    +
374760    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
374761    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
374762    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
374763    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
374764    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
374765    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374766    +
374767    +
374768    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
374769    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
374770    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
374771    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
374772    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
374773    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374774    +
374775    +
374776    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
374777    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
374778    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
374779    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
374780    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
374781    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374782    +
374783    +
374784    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
374785    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
374786    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
374787    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
374788    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
374789    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374790    +
374791    +
374792    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
374793    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
374794    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
374795    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
374796    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
374797    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
374798    +if
374799    +_FILTERNORM1 not in ( '.')
374800    + and
374801    +_FILTERNORM2 not in ( '.')
374802    + and
374803    +_FILTERNORM3 not in ( '.')
374804    + and
374805    +_FILTERNORM4 not in ( '.')
374806    + and
374807    +_FILTERNORM5 not in ( '.')
374808    + and
374809    +_FILTERNORM6 not in ( '.')
374810    + and
374811    +_FILTERNORM7 not in ( ' ')
374812    + and
374813    +_FILTERNORM8 not in ( ' ')
374814    +and
374815    +( Dt_Customer ne .)
374816    +and ( Income ne . and (Income<=107000))
374817    +and ( Kidhome ne .)
374818    +and ( MntFishProducts ne .)
374819    +and ( MntFruits ne .)
374820    +and ( MntGoldProds ne .)
374821    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
374822    +and ( MntSweetProducts ne .)
374823    +and ( MntWines ne .)
374824    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
374825    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
374826    +and ( NumStorePurchases ne .)
374827    +and ( NumWebPurchases ne .)
374828    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
374829    +and ( Recency ne .)
374830    +and ( Teenhome ne .)
374831    +and ( Year_Birth ne .)
374832    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
374833    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
374834    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
374835    +end;
MPRINT(EM_DIAGRAM):   end;
374836    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
374837    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
374838     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
374839     quit;
374840     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
374841     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
374842     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
374843     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
374844     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
374845     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374846     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
374847     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374849     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
374850     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374851     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374852     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374853     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
374854     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
374855     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374856     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
374857     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

374858     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
374859     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374861     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
374862     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
374863     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
374864     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374865     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
374866     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
374866   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

374867     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374868     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
374869     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

374870     %macro varDept(fcmpdata=,id=);
374871     %global nobs&id scoreFlag&id;
374872     %let scoreFlag&id = 0;
374873     %if &id=1 or ^&fcmpStart %then %do;
374874     proc sort data=&fcmpdata out=_temp&id nodupkey;
374875     by NAME;
374876     where id=&id and LHS in( %let j=1;
374877     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
374878     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
374879     "&var" %let j = %eval(&j+1);
374880     %end;
374881     );
374882     run;
374883     %let dsid = %sysfunc(open(_temp&id));
374884     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
374885     %let dsid = %sysfunc(close(&dsid));
374886     %if &&nobs&id %then %do;
374887     %let scoreFlag&id = 1;
374888     %let fcmpStart = 1;
374889     %end;
374890     %else %let fcmpStart = 0;
374891     %end;
374892     %else %do;
374893     proc sort data=&fcmpdata out=_tempid;
374894     where id=&id;
374895     by LHS;
374896     run;
374897     %let dsid = %sysfunc(open(_tempid));
374898     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
374899     %let dsid = %sysfunc(close(&dsid));
374900     %if ^&&nobs&id %then %do;
374901     proc datasets lib=work nolist;
374902     delete _tempid;
374903     run;
374904     quit;
374905     %end;
374906     %else %do;
374907     data _tempAll;
374908     set %let j=%eval(&id-1);
374909     %do x=1 %to &j;
374910     %if &&nobs&x %then %do;
374911     _temp&x %end;
374912     %end;
374913     ;
374914     run;
374915     proc sql;
374916     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
374916   ! work._tempid p2 where p.name=p2.lhs;
374917     quit;
374918     data _temp&id;
374919     set _temp&id;
374920     where LHS ne '' and NAME ne '' and Node ne '';
374921     run;
374922     proc datasets lib=work nolist;
374923     delete _tempAll;
374924     run;
374925     %let dsid = %sysfunc(open(_temp&id));
374926     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
374927     %let dsid = %sysfunc(close(&dsid));
374928     %if ^&&nobs&id %then %do;
374929     proc datasets lib=work nolist;
374930     delete _temp&id;
374931     run;
374932     quit;
374933     %end;
374934     %else %do;
374935     %let scoreFlag&id = 1;
374936     data _temp&id;
374937     set _temp&id;
374938     where LHS ne NAME and node ne '';
374939     run;
374940     %let dsid = %sysfunc(open(_temp&id));
374941     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
374942     %let dsid = %sysfunc(close(&dsid));
374943     %if ^&&nobs&id %then %do;
374944     proc datasets lib=work nolist;
374945     delete _temp&id;
374946     run;
374947     quit;
374948     %end;
374949     %else %do;
374950     proc sort data=_temp&id nodupkey;
374951     by LHS NAME;
374952     run;
374953     %end;
374954     %end;
374955     %end;
374956     %end;
374957     %mend varDept;
374958     %macro optCode(outdata=fcmpdata);
374959     %global fcmpStart;
374960     %let fcmpStart = 0;
374961     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
374962     %let NumNodes=9;
374963     %do k=1 %to &NumNodes;
374964     %vardept(fcmpdata=&outdata, id=&k);
374965     %end;
374966     %mend optCode;
374967     %optcode(outData=EMWS8.Ensmbl48_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 75 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 55 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

374968     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
374969     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
374970     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
374971     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374972     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
374973     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
374974     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
374975     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374976     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
374977     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
374977   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

374978     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374979     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
374980     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
374981     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374982     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
374983     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
374984     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
374985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374986     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
374987     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
374988     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
374989     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374990     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
374991     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
374991   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

374992     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

374993     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
374994     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
374995     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

374996     filename _pref
374996   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural23\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural23\EMPUBLISHSCORE.sas";
374997     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
374998     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural23\EMPUBLISHSCORE.sas.
374999    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
375000    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
375001    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
375002    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
375003    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
375004    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
375005    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
375006    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
375007    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
375008    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
375009    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
375010    +LENGTH _WARN_ $4
375011    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
375012    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
375013    +
375014    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
375015    +
375016    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
375017    +
375018    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
375019    +
375020    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
375021    +
375022    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
375023    +
375024    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
375025    +
375026    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
375027    +
375028    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
375029    +
375030    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
375031    +
375032    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
375033    +
375034    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
375035    +
375036    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
375037    +
375038    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
375039    +
375040    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
375041    +
375042    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
375043    +
375044    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
375045    +
375046    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
375047    +
375048    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
375049    +
375050    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
375051    +
375052    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
375053    +
375054    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
375055    +
375056    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
375057    +
375058    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
375059    +
375060    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
375061    +
375062    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
375063    +
375064    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
375065    +
375066    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
375067    +
375068    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
375069    +
375070    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
375071    +
375072    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
375073    +
375074    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
375075    +
375076    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
375077    +
375078    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
375079    +
375080    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
375081    +
375082    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
375083    +
375084    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
375085    +
375086    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
375087    +
375088    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
375089    +
375090    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
375091    +
375092    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
375093    +
375094    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
375095    +
375096    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
375097    +
375098    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
375099    +
375100    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
375101    +
375102    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
375103    +
375104    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
375105    +
375106    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
375107    +
375108    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
375109    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
375110    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
375111    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
375112    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375113    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375114    +end;
MPRINT(EM_DIAGRAM):   end;
375115    +else do;
MPRINT(EM_DIAGRAM):   else do;
375116    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375117    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
375118    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375119    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
375120    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
375121    +   end;
MPRINT(EM_DIAGRAM):   end;
375122    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
375123    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
375124    +   end;
MPRINT(EM_DIAGRAM):   end;
375125    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375126    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
375127    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375128    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375129    +   end;
MPRINT(EM_DIAGRAM):   end;
375130    +end;
MPRINT(EM_DIAGRAM):   end;
375131    +
375132    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
375133    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
375134    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
375135    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
375136    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
375137    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
375138    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375139    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375140    +end;
MPRINT(EM_DIAGRAM):   end;
375141    +else do;
MPRINT(EM_DIAGRAM):   else do;
375142    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375143    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
375144    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375145    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
375146    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
375147    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
375148    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
375149    +   end;
MPRINT(EM_DIAGRAM):   end;
375150    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
375151    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
375152    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
375153    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
375154    +   end;
MPRINT(EM_DIAGRAM):   end;
375155    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375156    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
375157    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
375158    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
375159    +   end;
MPRINT(EM_DIAGRAM):   end;
375160    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375161    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
375162    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
375163    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
375164    +   end;
MPRINT(EM_DIAGRAM):   end;
375165    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375166    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
375167    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
375168    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
375169    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375170    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375171    +   end;
MPRINT(EM_DIAGRAM):   end;
375172    +end;
MPRINT(EM_DIAGRAM):   end;
375173    +
375174    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
375175    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
375176    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
375177    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
375178    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
375179    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
375180    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375181    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375182    +end;
MPRINT(EM_DIAGRAM):   end;
375183    +else do;
MPRINT(EM_DIAGRAM):   else do;
375184    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375185    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
375186    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375187    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
375188    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
375189    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
375190    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
375191    +   end;
MPRINT(EM_DIAGRAM):   end;
375192    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375193    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
375194    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
375195    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
375196    +   end;
MPRINT(EM_DIAGRAM):   end;
375197    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
375198    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
375199    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
375200    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
375201    +   end;
MPRINT(EM_DIAGRAM):   end;
375202    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375203    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
375204    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
375205    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
375206    +   end;
MPRINT(EM_DIAGRAM):   end;
375207    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375208    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
375209    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
375210    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
375211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375213    +   end;
MPRINT(EM_DIAGRAM):   end;
375214    +end;
MPRINT(EM_DIAGRAM):   end;
375215    +
375216    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
375217    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
375218    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
375219    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
375220    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
375221    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
375222    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375223    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375224    +end;
MPRINT(EM_DIAGRAM):   end;
375225    +else do;
MPRINT(EM_DIAGRAM):   else do;
375226    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375227    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
375228    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375229    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375230    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
375231    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
375232    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
375233    +   end;
MPRINT(EM_DIAGRAM):   end;
375234    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375235    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
375236    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
375237    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
375238    +   end;
MPRINT(EM_DIAGRAM):   end;
375239    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375240    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
375241    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
375242    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
375243    +   end;
MPRINT(EM_DIAGRAM):   end;
375244    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375245    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
375246    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
375247    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
375248    +   end;
MPRINT(EM_DIAGRAM):   end;
375249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375250    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
375251    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
375252    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
375253    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375254    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375255    +   end;
MPRINT(EM_DIAGRAM):   end;
375256    +end;
MPRINT(EM_DIAGRAM):   end;
375257    +
375258    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
375259    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
375260    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
375261    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
375262    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
375263    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
375264    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375265    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375266    +end;
MPRINT(EM_DIAGRAM):   end;
375267    +else do;
MPRINT(EM_DIAGRAM):   else do;
375268    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375269    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
375270    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375271    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375272    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
375273    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
375274    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
375275    +   end;
MPRINT(EM_DIAGRAM):   end;
375276    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375277    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
375278    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
375279    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
375280    +   end;
MPRINT(EM_DIAGRAM):   end;
375281    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375282    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
375283    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
375284    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
375285    +   end;
MPRINT(EM_DIAGRAM):   end;
375286    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375287    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
375288    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
375289    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
375290    +   end;
MPRINT(EM_DIAGRAM):   end;
375291    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375292    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
375293    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
375294    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
375295    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375296    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375297    +   end;
MPRINT(EM_DIAGRAM):   end;
375298    +end;
MPRINT(EM_DIAGRAM):   end;
375299    +
375300    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
375301    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
375302    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
375303    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
375304    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
375305    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
375306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375308    +end;
MPRINT(EM_DIAGRAM):   end;
375309    +else do;
MPRINT(EM_DIAGRAM):   else do;
375310    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375311    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
375312    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375313    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375314    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
375315    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
375316    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
375317    +   end;
MPRINT(EM_DIAGRAM):   end;
375318    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375319    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
375320    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
375321    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
375322    +   end;
MPRINT(EM_DIAGRAM):   end;
375323    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375324    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
375325    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
375326    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
375327    +   end;
MPRINT(EM_DIAGRAM):   end;
375328    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375329    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
375330    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
375331    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
375332    +   end;
MPRINT(EM_DIAGRAM):   end;
375333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375334    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
375335    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
375336    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
375337    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375338    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375339    +   end;
MPRINT(EM_DIAGRAM):   end;
375340    +end;
MPRINT(EM_DIAGRAM):   end;
375341    +
375342    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
375343    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
375344    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
375345    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
375346    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
375347    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
375348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375350    +end;
MPRINT(EM_DIAGRAM):   end;
375351    +else do;
MPRINT(EM_DIAGRAM):   else do;
375352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375353    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
375354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375355    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375356    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
375357    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
375358    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
375359    +   end;
MPRINT(EM_DIAGRAM):   end;
375360    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375361    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
375362    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
375363    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
375364    +   end;
MPRINT(EM_DIAGRAM):   end;
375365    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375366    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
375367    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
375368    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
375369    +   end;
MPRINT(EM_DIAGRAM):   end;
375370    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375371    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
375372    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
375373    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
375374    +   end;
MPRINT(EM_DIAGRAM):   end;
375375    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375376    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
375377    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
375378    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
375379    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375380    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375381    +   end;
MPRINT(EM_DIAGRAM):   end;
375382    +end;
MPRINT(EM_DIAGRAM):   end;
375383    +
375384    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
375385    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
375386    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
375387    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
375388    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
375389    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
375390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375392    +end;
MPRINT(EM_DIAGRAM):   end;
375393    +else do;
MPRINT(EM_DIAGRAM):   else do;
375394    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375395    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
375396    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375397    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375398    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
375399    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
375400    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
375401    +   end;
MPRINT(EM_DIAGRAM):   end;
375402    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375403    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
375404    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
375405    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
375406    +   end;
MPRINT(EM_DIAGRAM):   end;
375407    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375408    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
375409    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
375410    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
375411    +   end;
MPRINT(EM_DIAGRAM):   end;
375412    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375413    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
375414    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
375415    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
375416    +   end;
MPRINT(EM_DIAGRAM):   end;
375417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375418    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
375419    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
375420    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
375421    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375422    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375423    +   end;
MPRINT(EM_DIAGRAM):   end;
375424    +end;
MPRINT(EM_DIAGRAM):   end;
375425    +
375426    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
375427    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
375428    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
375429    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
375430    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
375431    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375432    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375433    +end;
MPRINT(EM_DIAGRAM):   end;
375434    +else do;
MPRINT(EM_DIAGRAM):   else do;
375435    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375436    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
375437    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375438    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375439    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
375440    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
375441    +   end;
MPRINT(EM_DIAGRAM):   end;
375442    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375443    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
375444    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
375445    +   end;
MPRINT(EM_DIAGRAM):   end;
375446    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375447    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
375448    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
375449    +   end;
MPRINT(EM_DIAGRAM):   end;
375450    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375451    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
375452    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
375453    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375454    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375455    +   end;
MPRINT(EM_DIAGRAM):   end;
375456    +end;
MPRINT(EM_DIAGRAM):   end;
375457    +
375458    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
375459    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
375460    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
375461    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
375462    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
375463    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
375464    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375465    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375466    +end;
MPRINT(EM_DIAGRAM):   end;
375467    +else do;
MPRINT(EM_DIAGRAM):   else do;
375468    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375469    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
375470    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375471    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
375472    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
375473    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
375474    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
375475    +   end;
MPRINT(EM_DIAGRAM):   end;
375476    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375477    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
375478    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
375479    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
375480    +   end;
MPRINT(EM_DIAGRAM):   end;
375481    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375482    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
375483    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
375484    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
375485    +   end;
MPRINT(EM_DIAGRAM):   end;
375486    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
375487    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
375488    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
375489    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
375490    +   end;
MPRINT(EM_DIAGRAM):   end;
375491    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375492    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
375493    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
375494    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
375495    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375496    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375497    +   end;
MPRINT(EM_DIAGRAM):   end;
375498    +end;
MPRINT(EM_DIAGRAM):   end;
375499    +
375500    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
375501    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
375502    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
375503    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
375504    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
375505    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
375506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375508    +end;
MPRINT(EM_DIAGRAM):   end;
375509    +else do;
MPRINT(EM_DIAGRAM):   else do;
375510    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375511    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
375512    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375513    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375514    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
375515    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
375516    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
375517    +   end;
MPRINT(EM_DIAGRAM):   end;
375518    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375519    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
375520    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
375521    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
375522    +   end;
MPRINT(EM_DIAGRAM):   end;
375523    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375524    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
375525    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
375526    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
375527    +   end;
MPRINT(EM_DIAGRAM):   end;
375528    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375529    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
375530    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
375531    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
375532    +   end;
MPRINT(EM_DIAGRAM):   end;
375533    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375534    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
375535    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
375536    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
375537    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375538    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375539    +   end;
MPRINT(EM_DIAGRAM):   end;
375540    +end;
MPRINT(EM_DIAGRAM):   end;
375541    +
375542    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
375543    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
375544    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
375545    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
375546    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
375547    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
375548    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375549    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375550    +end;
MPRINT(EM_DIAGRAM):   end;
375551    +else do;
MPRINT(EM_DIAGRAM):   else do;
375552    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375553    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
375554    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375555    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
375556    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
375557    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
375558    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
375559    +   end;
MPRINT(EM_DIAGRAM):   end;
375560    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
375561    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
375562    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
375563    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
375564    +   end;
MPRINT(EM_DIAGRAM):   end;
375565    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375566    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
375567    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
375568    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
375569    +   end;
MPRINT(EM_DIAGRAM):   end;
375570    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375571    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
375572    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
375573    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
375574    +   end;
MPRINT(EM_DIAGRAM):   end;
375575    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375576    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
375577    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
375578    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
375579    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375580    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375581    +   end;
MPRINT(EM_DIAGRAM):   end;
375582    +end;
MPRINT(EM_DIAGRAM):   end;
375583    +
375584    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
375585    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
375586    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
375587    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
375588    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
375589    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
375590    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375591    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375592    +end;
MPRINT(EM_DIAGRAM):   end;
375593    +else do;
MPRINT(EM_DIAGRAM):   else do;
375594    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375595    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
375596    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375597    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
375598    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
375599    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
375600    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
375601    +   end;
MPRINT(EM_DIAGRAM):   end;
375602    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
375603    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
375604    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
375605    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
375606    +   end;
MPRINT(EM_DIAGRAM):   end;
375607    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375608    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
375609    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
375610    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
375611    +   end;
MPRINT(EM_DIAGRAM):   end;
375612    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375613    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
375614    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
375615    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
375616    +   end;
MPRINT(EM_DIAGRAM):   end;
375617    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375618    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
375619    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
375620    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
375621    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375622    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375623    +   end;
MPRINT(EM_DIAGRAM):   end;
375624    +end;
MPRINT(EM_DIAGRAM):   end;
375625    +
375626    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
375627    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
375628    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
375629    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
375630    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
375631    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
375632    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
375633    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375634    +end;
MPRINT(EM_DIAGRAM):   end;
375635    +else do;
MPRINT(EM_DIAGRAM):   else do;
375636    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
375637    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
375638    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
375639    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
375640    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
375641    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
375642    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
375643    +   end;
MPRINT(EM_DIAGRAM):   end;
375644    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
375645    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
375646    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
375647    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
375648    +   end;
MPRINT(EM_DIAGRAM):   end;
375649    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
375650    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
375651    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
375652    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
375653    +   end;
MPRINT(EM_DIAGRAM):   end;
375654    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
375655    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
375656    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
375657    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
375658    +   end;
MPRINT(EM_DIAGRAM):   end;
375659    +   else do;
MPRINT(EM_DIAGRAM):   else do;
375660    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
375661    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
375662    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
375663    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
375664    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375665    +   end;
MPRINT(EM_DIAGRAM):   end;
375666    +end;
MPRINT(EM_DIAGRAM):   end;
375667    +
375668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375669    +*** Checking missing input Interval
375670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
375671    +
375672    +IF NMISS(
375673    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
375674    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
375675    +
375676    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
375677    +END;
MPRINT(EM_DIAGRAM):   END;
375678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375679    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
375680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375681    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375682    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
375683    +END;
MPRINT(EM_DIAGRAM):   END;
375684    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375685    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
375686    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
375687    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
375688    +END;
MPRINT(EM_DIAGRAM):   END;
375689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375690    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
375691    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375693    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
375694    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375695    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375696    +   H1x1_1  =     1.95381025032439 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.95381025032439 * S_Year_Birth ;
375697    +   H1x1_1  = H1x1_1  +     1.14916728016472 * GRP_AcceptedCmp52
375698    +          +    -5.96780006482557 * GRP_Frq2  +     4.49682337069914 * GRP_Frq3
375699    +          +    -1.00084168387427 * GRP_Frq4  +    -4.56848186498493 *
375700    +        GRP_Income2  +    -6.08290839556081 * GRP_Income3
375701    +          +        -1.9523756063 * GRP_Income4  +     2.25453632912582 *
375702    +        GRP_Mnt2  +     0.79226665009331 * GRP_Mnt3  +     4.62693684609359 *
375703    +        GRP_Mnt4  +     4.80720961994346 * GRP_MntFishProducts2
375704    +          +     5.98129040124117 * GRP_MntFishProducts3
375705    +          +    -7.67060692838644 * GRP_MntFishProducts4
375706    +          +    -2.17396725012949 * GRP_MntGoldProds2
375707    +          +     0.85597521158935 * GRP_MntGoldProds3
375708    +          +      2.1173332536462 * GRP_MntGoldProds4
375709    +          +     7.10141475402441 * GRP_MntMeatProducts2
375710    +          +     -4.9090455486088 * GRP_MntMeatProducts3
375711    +          +     2.83142638000959 * GRP_MntMeatProducts4
375712    +          +     3.69328975873193 * GRP_MntWines2  +      2.1695090110711 *
375713    +        GRP_MntWines3  +    -5.30256986722649 * GRP_MntWines4
375714    +          +     0.29736312872725 * GRP_NumCatalogPurchases3
375715    +          +     4.11382044060245 * GRP_NumCatalogPurchases4
375716    +          +    -6.25823764999595 * GRP_NumDistPurchases2
375717    +          +    -0.67901515881598 * GRP_NumDistPurchases3
375718    +          +     7.85932256128371 * GRP_NumDistPurchases4
375719    +          +     3.53767704202566 * GRP_NumWebPurchases2
375720    +          +    -6.48408913826017 * GRP_NumWebPurchases3
375721    +          +     4.25220646709256 * GRP_NumWebPurchases4
375722    +          +     1.52518398177008 * GRP_RFMstat2  +    -8.45537513058681 *
375723    +        GRP_RFMstat3  +      1.7628190243685 * GRP_RFMstat4
375724    +          +    -2.26342656707522 * GRP_RMntFrq2  +     0.15141321171269 *
375725    +        GRP_RMntFrq3  +     4.77478604851781 * GRP_RMntFrq4
375726    +          +     7.94049700164507 * GRP_Recency2  +     6.59302318386937 *
375727    +        GRP_Recency3  +    -1.94583979914797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.14916728016472 * GRP_AcceptedCmp52 + 
-5.96780006482557 * GRP_Frq2 + 4.49682337069914 * GRP_Frq3 + -1.00084168387427 * GRP_Frq4 + 
-4.56848186498493 * GRP_Income2 + -6.08290839556081 * GRP_Income3 + -1.9523756063 * 
GRP_Income4 + 2.25453632912582 * GRP_Mnt2 + 0.79226665009331 * GRP_Mnt3 + 4.62693684609359 * 
GRP_Mnt4 + 4.80720961994346 * GRP_MntFishProducts2 + 5.98129040124117 * GRP_MntFishProducts3 + 
-7.67060692838644 * GRP_MntFishProducts4 + -2.17396725012949 * GRP_MntGoldProds2 + 
0.85597521158935 * GRP_MntGoldProds3 + 2.1173332536462 * GRP_MntGoldProds4 + 7.10141475402441 
* GRP_MntMeatProducts2 + -4.9090455486088 * GRP_MntMeatProducts3 + 2.83142638000959 * 
GRP_MntMeatProducts4 + 3.69328975873193 * GRP_MntWines2 + 2.1695090110711 * GRP_MntWines3 + 
-5.30256986722649 * GRP_MntWines4 + 0.29736312872725 * GRP_NumCatalogPurchases3 + 
4.11382044060245 * GRP_NumCatalogPurchases4 + -6.25823764999595 * GRP_NumDistPurchases2 + 
-0.67901515881598 * GRP_NumDistPurchases3 + 7.85932256128371 * GRP_NumDistPurchases4 + 
3.53767704202566 * GRP_NumWebPurchases2 + -6.48408913826017 * GRP_NumWebPurchases3 + 
4.25220646709256 * GRP_NumWebPurchases4 + 1.52518398177008 * GRP_RFMstat2 + -8.45537513058681 
* GRP_RFMstat3 + 1.7628190243685 * GRP_RFMstat4 + -2.26342656707522 * GRP_RMntFrq2 + 
0.15141321171269 * GRP_RMntFrq3 + 4.77478604851781 * GRP_RMntFrq4 + 7.94049700164507 * 
GRP_Recency2 + 6.59302318386937 * GRP_Recency3 + -1.94583979914797 * GRP_Recency4 ;
375728    +   H1x1_1  =     0.17797650232548 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.17797650232548 + H1x1_1 ;
375729    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
375730    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
375731    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
375732    +END;
MPRINT(EM_DIAGRAM):   END;
375733    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375734    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
375735    +END;
MPRINT(EM_DIAGRAM):   END;
375736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375737    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
375738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375739    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375740    +   H1x2_1  =     -0.4803749248586 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.4803749248586 * S_Year_Birth ;
375741    +   H1x2_1  = H1x2_1  +      -2.709334396045 * GRP_AcceptedCmp52
375742    +          +    -0.72996008627086 * GRP_Frq2  +     1.18917091356785 * GRP_Frq3
375743    +          +    -0.84357839249772 * GRP_Frq4  +    -1.34210240870748 *
375744    +        GRP_Income2  +    -2.49305097670051 * GRP_Income3
375745    +          +     0.47903160451188 * GRP_Income4  +    -0.21389782834045 *
375746    +        GRP_Mnt2  +    -2.96981107340783 * GRP_Mnt3  +     0.25136923781697 *
375747    +        GRP_Mnt4  +    -1.77015468345115 * GRP_MntFishProducts2
375748    +          +    -2.01927730228967 * GRP_MntFishProducts3
375749    +          +    -1.75480602447555 * GRP_MntFishProducts4
375750    +          +     0.42274303160257 * GRP_MntGoldProds2
375751    +          +     1.56137884413542 * GRP_MntGoldProds3
375752    +          +     0.84731732911707 * GRP_MntGoldProds4
375753    +          +     0.81025189254107 * GRP_MntMeatProducts2
375754    +          +     1.96319534444801 * GRP_MntMeatProducts3
375755    +          +     0.96127142865074 * GRP_MntMeatProducts4
375756    +          +    -0.93806166213097 * GRP_MntWines2  +     0.05312243237158 *
375757    +        GRP_MntWines3  +     0.84972126175769 * GRP_MntWines4
375758    +          +    -1.06178615974842 * GRP_NumCatalogPurchases3
375759    +          +     0.40580399494511 * GRP_NumCatalogPurchases4
375760    +          +      0.0678513615184 * GRP_NumDistPurchases2
375761    +          +     0.02437151967393 * GRP_NumDistPurchases3
375762    +          +     0.69402606373719 * GRP_NumDistPurchases4
375763    +          +       0.411121097653 * GRP_NumWebPurchases2
375764    +          +     0.82481677575773 * GRP_NumWebPurchases3
375765    +          +     1.41988866790215 * GRP_NumWebPurchases4
375766    +          +     0.85026610914091 * GRP_RFMstat2  +    -2.24707947369438 *
375767    +        GRP_RFMstat3  +     -1.1790000875996 * GRP_RFMstat4
375768    +          +     0.87106199482984 * GRP_RMntFrq2  +    -0.83130886232946 *
375769    +        GRP_RMntFrq3  +    -0.14994298443333 * GRP_RMntFrq4
375770    +          +      0.4148069318585 * GRP_Recency2  +     1.81524210481359 *
375771    +        GRP_Recency3  +    -0.14279288009067 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.709334396045 * GRP_AcceptedCmp52 + 
-0.72996008627086 * GRP_Frq2 + 1.18917091356785 * GRP_Frq3 + -0.84357839249772 * GRP_Frq4 + 
-1.34210240870748 * GRP_Income2 + -2.49305097670051 * GRP_Income3 + 0.47903160451188 * 
GRP_Income4 + -0.21389782834045 * GRP_Mnt2 + -2.96981107340783 * GRP_Mnt3 + 0.25136923781697 * 
GRP_Mnt4 + -1.77015468345115 * GRP_MntFishProducts2 + -2.01927730228967 * GRP_MntFishProducts3 
+ -1.75480602447555 * GRP_MntFishProducts4 + 0.42274303160257 * GRP_MntGoldProds2 + 
1.56137884413542 * GRP_MntGoldProds3 + 0.84731732911707 * GRP_MntGoldProds4 + 0.81025189254107 
* GRP_MntMeatProducts2 + 1.96319534444801 * GRP_MntMeatProducts3 + 0.96127142865074 * 
GRP_MntMeatProducts4 + -0.93806166213097 * GRP_MntWines2 + 0.05312243237158 * GRP_MntWines3 + 
0.84972126175769 * GRP_MntWines4 + -1.06178615974842 * GRP_NumCatalogPurchases3 + 
0.40580399494511 * GRP_NumCatalogPurchases4 + 0.0678513615184 * GRP_NumDistPurchases2 + 
0.02437151967393 * GRP_NumDistPurchases3 + 0.69402606373719 * GRP_NumDistPurchases4 + 
0.411121097653 * GRP_NumWebPurchases2 + 0.82481677575773 * GRP_NumWebPurchases3 + 
1.41988866790215 * GRP_NumWebPurchases4 + 0.85026610914091 * GRP_RFMstat2 + -2.24707947369438 
* GRP_RFMstat3 + -1.1790000875996 * GRP_RFMstat4 + 0.87106199482984 * GRP_RMntFrq2 + 
-0.83130886232946 * GRP_RMntFrq3 + -0.14994298443333 * GRP_RMntFrq4 + 0.4148069318585 * 
GRP_Recency2 + 1.81524210481359 * GRP_Recency3 + -0.14279288009067 * GRP_Recency4 ;
375772    +   H1x2_1  =    -1.10844381917328 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.10844381917328 + H1x2_1 ;
375773    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
375774    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
375775    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
375776    +END;
MPRINT(EM_DIAGRAM):   END;
375777    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375778    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
375779    +END;
MPRINT(EM_DIAGRAM):   END;
375780    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375781    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
375782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375783    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375784    +   H2x1_1  =    -4.35637031258639 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -4.35637031258639 * H1x1_1 ;
375785    +   H2x1_1  = H2x1_1  +    -3.33687841316643 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.33687841316643 * H1x2_1 ;
375786    +   H2x1_1  =     3.05963926783565 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.05963926783565 + H2x1_1 ;
375787    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
375788    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
375789    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
375790    +END;
MPRINT(EM_DIAGRAM):   END;
375791    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375792    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
375793    +END;
MPRINT(EM_DIAGRAM):   END;
375794    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375795    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
375796    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375797    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
375798    +   P_DepVar1  =    -6.02136211154727 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.02136211154727 * H2x1_1 ;
375799    +   P_DepVar1  =     0.37595575621801 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37595575621801 + P_DepVar1 ;
375800    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
375801    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
375802    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
375803    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
375804    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
375805    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
375806    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
375807    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
375808    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
375809    +END;
MPRINT(EM_DIAGRAM):   END;
375810    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
375811    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
375812    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
375813    +END;
MPRINT(EM_DIAGRAM):   END;
375814    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
375815    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
375816    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
375817    +END;
MPRINT(EM_DIAGRAM):   END;
375818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375819    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
375820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
375821    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
375822    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
375823    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
375824    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
375825    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
375826    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
375827    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
375828    +END;
MPRINT(EM_DIAGRAM):   END;
375829    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
375830    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
375831    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
375832    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
375833     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
375834     quit;
375835     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
375836     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
375837     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
375838     retain ID 2 Node "AutoNeural23";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural23";
375839     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
375840     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

375841     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
375842     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
375843     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

375844     proc sort data=EMWS8.AutoNeural23_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural23_variableset out=_temp2(keep=NAME 
CREATOR);
375845     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
375846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL23_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

375847     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
375848     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
375849     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
375850     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

375851     proc contents data=EMWS8.AutoNeural23_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural23_train out=_meta(keep=NAME) noprint;
375852     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

375853     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
375854     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
375855     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 70 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 70 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

375856     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
375857     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
375858     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
375859     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 70 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 70 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

375860     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
375861     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
375861   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 920 rows and 5 columns.

375862     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

375863     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
375864     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 920 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 920 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

375865     filename _pref
375865   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
375866     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
375867     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
375868    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
375869    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
375870    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
375871    +
375872    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375873    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
375874    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375875    +LABEL GRP_AcceptedCmp5 =
375876    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
375877    +
375878    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
375879    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
375880    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
375881    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
375882    +end;
MPRINT(EM_DIAGRAM):   end;
375883    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
375884    +if (_UFORMAT eq '0'
375885    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
375886    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
375887    +end;
MPRINT(EM_DIAGRAM):   end;
375888    +else
375889    +if (_UFORMAT eq '1'
375890    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
375891    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
375892    +end;
MPRINT(EM_DIAGRAM):   end;
375893    +else do;
MPRINT(EM_DIAGRAM):   else do;
375894    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
375895    +end;
MPRINT(EM_DIAGRAM):   end;
375896    +end;
MPRINT(EM_DIAGRAM):   end;
375897    +
375898    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375899    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
375900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375901    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
375902    +
375903    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
375904    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
375905    +end;
MPRINT(EM_DIAGRAM):   end;
375906    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
375907    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
375908    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
375909    +end;
MPRINT(EM_DIAGRAM):   end;
375910    +else
375911    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
375912    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
375913    +end;
MPRINT(EM_DIAGRAM):   end;
375914    +else
375915    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
375916    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
375917    +end;
MPRINT(EM_DIAGRAM):   end;
375918    +else
375919    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
375920    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
375921    +end;
MPRINT(EM_DIAGRAM):   end;
375922    +end;
MPRINT(EM_DIAGRAM):   end;
375923    +
375924    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375925    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
375926    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375927    +LABEL GRP_Income =
375928    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
375929    +
375930    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
375931    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
375932    +end;
MPRINT(EM_DIAGRAM):   end;
375933    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
375934    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
375935    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
375936    +end;
MPRINT(EM_DIAGRAM):   end;
375937    +else
375938    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
375939    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
375940    +end;
MPRINT(EM_DIAGRAM):   end;
375941    +else
375942    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
375943    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
375944    +end;
MPRINT(EM_DIAGRAM):   end;
375945    +else
375946    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
375947    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
375948    +end;
MPRINT(EM_DIAGRAM):   end;
375949    +end;
MPRINT(EM_DIAGRAM):   end;
375950    +
375951    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375952    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
375953    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375954    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
375955    +
375956    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
375957    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
375958    +end;
MPRINT(EM_DIAGRAM):   end;
375959    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
375960    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
375961    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
375962    +end;
MPRINT(EM_DIAGRAM):   end;
375963    +else
375964    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
375965    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
375966    +end;
MPRINT(EM_DIAGRAM):   end;
375967    +else
375968    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
375969    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
375970    +end;
MPRINT(EM_DIAGRAM):   end;
375971    +else
375972    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
375973    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
375974    +end;
MPRINT(EM_DIAGRAM):   end;
375975    +end;
MPRINT(EM_DIAGRAM):   end;
375976    +
375977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375978    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
375979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
375980    +LABEL GRP_MntFishProducts =
375981    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
375982    +
375983    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
375984    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
375985    +end;
MPRINT(EM_DIAGRAM):   end;
375986    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
375987    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
375988    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
375989    +end;
MPRINT(EM_DIAGRAM):   end;
375990    +else
375991    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
375992    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
375993    +end;
MPRINT(EM_DIAGRAM):   end;
375994    +else
375995    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
375996    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
375997    +end;
MPRINT(EM_DIAGRAM):   end;
375998    +else
375999    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
376000    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
376001    +end;
MPRINT(EM_DIAGRAM):   end;
376002    +end;
MPRINT(EM_DIAGRAM):   end;
376003    +
376004    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376005    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
376006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376007    +LABEL GRP_MntGoldProds =
376008    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
376009    +
376010    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
376011    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
376012    +end;
MPRINT(EM_DIAGRAM):   end;
376013    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
376014    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
376015    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
376016    +end;
MPRINT(EM_DIAGRAM):   end;
376017    +else
376018    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
376019    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
376020    +end;
MPRINT(EM_DIAGRAM):   end;
376021    +else
376022    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
376023    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
376024    +end;
MPRINT(EM_DIAGRAM):   end;
376025    +else
376026    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
376027    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
376028    +end;
MPRINT(EM_DIAGRAM):   end;
376029    +end;
MPRINT(EM_DIAGRAM):   end;
376030    +
376031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376032    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
376033    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376034    +LABEL GRP_MntMeatProducts =
376035    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
376036    +
376037    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
376038    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
376039    +end;
MPRINT(EM_DIAGRAM):   end;
376040    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
376041    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
376042    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
376043    +end;
MPRINT(EM_DIAGRAM):   end;
376044    +else
376045    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
376046    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
376047    +end;
MPRINT(EM_DIAGRAM):   end;
376048    +else
376049    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
376050    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
376051    +end;
MPRINT(EM_DIAGRAM):   end;
376052    +else
376053    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
376054    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
376055    +end;
MPRINT(EM_DIAGRAM):   end;
376056    +end;
MPRINT(EM_DIAGRAM):   end;
376057    +
376058    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376059    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
376060    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376061    +LABEL GRP_MntWines =
376062    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
376063    +
376064    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
376065    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
376066    +end;
MPRINT(EM_DIAGRAM):   end;
376067    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
376068    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
376069    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
376070    +end;
MPRINT(EM_DIAGRAM):   end;
376071    +else
376072    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
376073    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
376074    +end;
MPRINT(EM_DIAGRAM):   end;
376075    +else
376076    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
376077    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
376078    +end;
MPRINT(EM_DIAGRAM):   end;
376079    +else
376080    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
376081    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
376082    +end;
MPRINT(EM_DIAGRAM):   end;
376083    +end;
MPRINT(EM_DIAGRAM):   end;
376084    +
376085    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376086    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
376087    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376088    +LABEL GRP_NumCatalogPurchases =
376089    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
376090    +
376091    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
376092    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
376093    +end;
MPRINT(EM_DIAGRAM):   end;
376094    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
376095    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
376096    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
376097    +end;
MPRINT(EM_DIAGRAM):   end;
376098    +else
376099    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
376100    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
376101    +end;
MPRINT(EM_DIAGRAM):   end;
376102    +else
376103    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
376104    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
376105    +end;
MPRINT(EM_DIAGRAM):   end;
376106    +else
376107    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
376108    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
376109    +end;
MPRINT(EM_DIAGRAM):   end;
376110    +end;
MPRINT(EM_DIAGRAM):   end;
376111    +
376112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376113    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
376114    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376115    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
376116    +
376117    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
376118    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
376119    +end;
MPRINT(EM_DIAGRAM):   end;
376120    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
376121    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
376122    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
376123    +end;
MPRINT(EM_DIAGRAM):   end;
376124    +else
376125    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
376126    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
376127    +end;
MPRINT(EM_DIAGRAM):   end;
376128    +else
376129    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
376130    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
376131    +end;
MPRINT(EM_DIAGRAM):   end;
376132    +else
376133    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
376134    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
376135    +end;
MPRINT(EM_DIAGRAM):   end;
376136    +end;
MPRINT(EM_DIAGRAM):   end;
376137    +
376138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376139    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
376140    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376141    +LABEL GRP_NumWebPurchases =
376142    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
376143    +
376144    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
376145    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
376146    +end;
MPRINT(EM_DIAGRAM):   end;
376147    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
376148    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
376149    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
376150    +end;
MPRINT(EM_DIAGRAM):   end;
376151    +else
376152    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
376153    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
376154    +end;
MPRINT(EM_DIAGRAM):   end;
376155    +else
376156    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
376157    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
376158    +end;
MPRINT(EM_DIAGRAM):   end;
376159    +else
376160    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
376161    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
376162    +end;
MPRINT(EM_DIAGRAM):   end;
376163    +end;
MPRINT(EM_DIAGRAM):   end;
376164    +
376165    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376166    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
376167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376168    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
376169    +
376170    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
376171    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
376172    +end;
MPRINT(EM_DIAGRAM):   end;
376173    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
376174    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
376175    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
376176    +end;
MPRINT(EM_DIAGRAM):   end;
376177    +else
376178    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
376179    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
376180    +end;
MPRINT(EM_DIAGRAM):   end;
376181    +else
376182    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
376183    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
376184    +end;
MPRINT(EM_DIAGRAM):   end;
376185    +else
376186    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
376187    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
376188    +end;
MPRINT(EM_DIAGRAM):   end;
376189    +end;
MPRINT(EM_DIAGRAM):   end;
376190    +
376191    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376192    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
376193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376194    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
376195    +
376196    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
376197    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
376198    +end;
MPRINT(EM_DIAGRAM):   end;
376199    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
376200    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
376201    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
376202    +end;
MPRINT(EM_DIAGRAM):   end;
376203    +else
376204    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
376205    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
376206    +end;
MPRINT(EM_DIAGRAM):   end;
376207    +else
376208    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
376209    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
376210    +end;
MPRINT(EM_DIAGRAM):   end;
376211    +else
376212    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
376213    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
376214    +end;
MPRINT(EM_DIAGRAM):   end;
376215    +end;
MPRINT(EM_DIAGRAM):   end;
376216    +
376217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376218    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
376219    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376220    +LABEL GRP_Recency =
376221    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
376222    +
376223    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
376224    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
376225    +end;
MPRINT(EM_DIAGRAM):   end;
376226    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
376227    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
376228    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
376229    +end;
MPRINT(EM_DIAGRAM):   end;
376230    +else
376231    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
376232    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
376233    +end;
MPRINT(EM_DIAGRAM):   end;
376234    +else
376235    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
376236    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
376237    +end;
MPRINT(EM_DIAGRAM):   end;
376238    +else
376239    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
376240    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
376241    +end;
MPRINT(EM_DIAGRAM):   end;
376242    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
376243     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
376244     quit;
376245     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
376246     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
376247     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
376248     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
376249     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
376250     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376251     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
376252     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376253     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376254     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
376255     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376256     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376257     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376258     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
376259     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
376260     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376261     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
376262     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

376263     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
376264     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376265     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376266     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376267     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
376268     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376269     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376270     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
376271     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
376271   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

376272     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

376273     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
376274     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 935 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376275     filename _pref
376275   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
376276     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
376277     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
376278    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376279    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
376280    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
376281    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
376282    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
376283    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
376284     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
376285     quit;
376286     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
376287     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
376288     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
376289     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
376290     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
376291     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376292     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
376293     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376294     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376295     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
376296     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376297     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376298     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376299     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
376300     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
376301     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376302     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
376303     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376304     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
376305     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376306     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376307     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376308     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
376309     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376310     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376311     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
376312     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
376312   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

376313     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376314     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
376315     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 939 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376316     filename _pref
376316   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
376317     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
376318     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
376319    +
376320    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
376321    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
376321   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
376322    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
376323    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
376324    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
376325    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
376326    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
376327     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
376328     quit;
376329     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
376330     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
376331     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
376332     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
376333     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
376334     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376335     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
376336     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376337     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376338     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
376339     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376341     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376342     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
376343     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
376344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376345     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
376346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376347     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
376348     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376349     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376350     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376351     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
376352     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376353     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376354     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
376355     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
376355   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

376356     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376357     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
376358     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 978 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376359     filename _pref
376359   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
376360     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
376361     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
376362    +
376363    +
376364    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
376365    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
376366    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
376367    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
376368    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
376369    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376370    +
376371    +
376372    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
376373    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
376374    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
376375    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
376376    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
376377    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376378    +
376379    +
376380    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
376381    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
376382    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
376383    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
376384    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
376385    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376386    +
376387    +
376388    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
376389    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
376390    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
376391    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
376392    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
376393    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376394    +
376395    +
376396    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
376397    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
376398    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
376399    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
376400    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
376401    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376402    +
376403    +
376404    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
376405    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
376406    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
376407    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
376408    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
376409    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376410    +
376411    +
376412    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
376413    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
376414    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
376415    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
376416    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
376417    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376418    +
376419    +
376420    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
376421    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
376422    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
376423    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
376424    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
376425    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
376426    +if
376427    +_FILTERNORM1 not in ( '.')
376428    + and
376429    +_FILTERNORM2 not in ( '.')
376430    + and
376431    +_FILTERNORM3 not in ( '.')
376432    + and
376433    +_FILTERNORM4 not in ( '.')
376434    + and
376435    +_FILTERNORM5 not in ( '.')
376436    + and
376437    +_FILTERNORM6 not in ( '.')
376438    + and
376439    +_FILTERNORM7 not in ( ' ')
376440    + and
376441    +_FILTERNORM8 not in ( ' ')
376442    +and
376443    +( Dt_Customer ne .)
376444    +and ( Income ne . and (Income<=107000))
376445    +and ( Kidhome ne .)
376446    +and ( MntFishProducts ne .)
376447    +and ( MntFruits ne .)
376448    +and ( MntGoldProds ne .)
376449    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
376450    +and ( MntSweetProducts ne .)
376451    +and ( MntWines ne .)
376452    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
376453    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
376454    +and ( NumStorePurchases ne .)
376455    +and ( NumWebPurchases ne .)
376456    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
376457    +and ( Recency ne .)
376458    +and ( Teenhome ne .)
376459    +and ( Year_Birth ne .)
376460    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
376461    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
376462    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
376463    +end;
MPRINT(EM_DIAGRAM):   end;
376464    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
376465    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
376466     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
376467     quit;
376468     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
376469     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
376470     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
376471     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
376472     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
376473     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

376474     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
376475     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376476     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376477     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
376478     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376479     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376480     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376481     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
376482     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
376483     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376484     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
376485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

376486     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
376487     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376488     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376489     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
376490     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
376491     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
376492     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376493     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
376494     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
376494   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

376495     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376496     proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl48_FCMP data=_tempx;
376497     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL48_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL48_FCMP has 1044 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376498     %macro varDept(fcmpdata=,id=);
376499     %global nobs&id scoreFlag&id;
376500     %let scoreFlag&id = 0;
376501     %if &id=1 or ^&fcmpStart %then %do;
376502     proc sort data=&fcmpdata out=_temp&id nodupkey;
376503     by NAME;
376504     where id=&id and LHS in( %let j=1;
376505     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
376506     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
376507     "&var" %let j = %eval(&j+1);
376508     %end;
376509     );
376510     run;
376511     %let dsid = %sysfunc(open(_temp&id));
376512     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
376513     %let dsid = %sysfunc(close(&dsid));
376514     %if &&nobs&id %then %do;
376515     %let scoreFlag&id = 1;
376516     %let fcmpStart = 1;
376517     %end;
376518     %else %let fcmpStart = 0;
376519     %end;
376520     %else %do;
376521     proc sort data=&fcmpdata out=_tempid;
376522     where id=&id;
376523     by LHS;
376524     run;
376525     %let dsid = %sysfunc(open(_tempid));
376526     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
376527     %let dsid = %sysfunc(close(&dsid));
376528     %if ^&&nobs&id %then %do;
376529     proc datasets lib=work nolist;
376530     delete _tempid;
376531     run;
376532     quit;
376533     %end;
376534     %else %do;
376535     data _tempAll;
376536     set %let j=%eval(&id-1);
376537     %do x=1 %to &j;
376538     %if &&nobs&x %then %do;
376539     _temp&x %end;
376540     %end;
376541     ;
376542     run;
376543     proc sql;
376544     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
376544   ! work._tempid p2 where p.name=p2.lhs;
376545     quit;
376546     data _temp&id;
376547     set _temp&id;
376548     where LHS ne '' and NAME ne '' and Node ne '';
376549     run;
376550     proc datasets lib=work nolist;
376551     delete _tempAll;
376552     run;
376553     %let dsid = %sysfunc(open(_temp&id));
376554     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
376555     %let dsid = %sysfunc(close(&dsid));
376556     %if ^&&nobs&id %then %do;
376557     proc datasets lib=work nolist;
376558     delete _temp&id;
376559     run;
376560     quit;
376561     %end;
376562     %else %do;
376563     %let scoreFlag&id = 1;
376564     data _temp&id;
376565     set _temp&id;
376566     where LHS ne NAME and node ne '';
376567     run;
376568     %let dsid = %sysfunc(open(_temp&id));
376569     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
376570     %let dsid = %sysfunc(close(&dsid));
376571     %if ^&&nobs&id %then %do;
376572     proc datasets lib=work nolist;
376573     delete _temp&id;
376574     run;
376575     quit;
376576     %end;
376577     %else %do;
376578     proc sort data=_temp&id nodupkey;
376579     by LHS NAME;
376580     run;
376581     %end;
376582     %end;
376583     %end;
376584     %end;
376585     %mend varDept;
376586     %macro optCode(outdata=fcmpdata);
376587     %global fcmpStart;
376588     %let fcmpStart = 0;
376589     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
376590     %let NumNodes=9;
376591     %do k=1 %to &NumNodes;
376592     %vardept(fcmpdata=&outdata, id=&k);
376593     %end;
376594     %mend optCode;
376595     %optcode(outData=EMWS8.Ensmbl48_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 75 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 55 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
The SAS System

      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl48_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL48_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

376596     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
376597     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
376598     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
376599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376600     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
376601     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
376602     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
376603     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

376604     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
376605     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
376605   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

376606     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376607     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
376608     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
376609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376610     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
376611     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
376612     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
376613     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376614     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
376615     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
376616     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
376617     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376618     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
376619     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
376619   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

376620     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376621     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
376622     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
376623     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376624     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
376625     * Ensmbl48: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Computing metadata for TRAIN data;
376626     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL48_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl48\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl48_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl48_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl48_TRAIN out=WORK.M07QDGCB noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07QDGCB;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M07QDGCB(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07QDGCB;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M07QDGCB;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3G71K1R NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3G71K1R;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G71K1R;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FK2UOP(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G71K1R;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3G71K1R;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G71K1R;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3G71K1R;
MPRINT(EMADVISECOLUMNS):   set WORK.M3G71K1R;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural24_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural24_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl48_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl48";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl48";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl48: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl48";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
376938     data EMWS8.Ensmbl48_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl48_EMINFO;
376939     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
376940     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
376941     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL48_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
376945     run;
376946     proc sort data = EMWS8.Ensmbl48_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl48_EMINFO NOTHREADS;
376947     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
376948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL48_EMINFO.
NOTE: The data set EMWS8.ENSMBL48_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376949     proc sort data = EMWS8.AutoNeural24_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural24_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
376950     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
376951     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL24_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376952     proc sort data = EMWS8.Ensmbl48_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl48_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
376953     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
376954     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL48_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

376955     data EMWS8.Ensmbl48_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl48_EMINFO;
376956     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
376957     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
376958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL48_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

376959     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
376960     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
376961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
376962     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL48_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL48_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
