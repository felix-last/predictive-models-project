MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0LUCOZT 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0LUCOZT new;
MPRINT(EM_DIAGRAM):   run;
277197     filename emflow
277197   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring AUTONEURAL32_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277198     *------------------------------------------------------------*;
277199     * Ensmbl20: Scoring AUTONEURAL32_TRAIN data;
277200     *------------------------------------------------------------*;
277201     data EMWS8.Ensmbl20_TRAIN
277202     / view=EMWS8.Ensmbl20_TRAIN
277203     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_TRAIN / view=EMWS8.Ensmbl20_TRAIN ;
277204     set EMWS8.AutoNeural32_TRAIN
277205     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_TRAIN ;
277206     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas.
277207    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277208    +* Ensmbl20: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Combine model for DepVar;
277209    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277210    +* Ensmbl20: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 1 of 7;
277211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277213    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
277214    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
277215    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
277216    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277218    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
277219    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
277220    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
277221    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277222    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277223    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
277224    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
277225    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
277226    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277227    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277228    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
277229    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
277230    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
277231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277232    +
277233    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
277234    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
277234   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
277235    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
277236    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
277237    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
277238    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
277239    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
277240    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277241    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
277242    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
277243    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
277244    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277245    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277246    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
277247    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277248    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
277249    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
277250    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
277251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277252    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
277253    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
277254    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
277255    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277256    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277257    +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
277258    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
277259    +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
277260    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277261    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
277262    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
277263    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
277264    +
277265    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
277266    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
277267    +
277268    +
277269    +/*----G_Marital_Status begin----*/
277270    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
277271    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
277272    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277273    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
277274    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
277275    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
277276    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
277277    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
277278    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
277279    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
277280    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
277281    +end;
MPRINT(EM_DIAGRAM):   end;
277282    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
277283    +/*----G_Marital_Status end----*/
277284    +
277285    +
277286    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
277287    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
277288    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
277289    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277290    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
277291    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
277292    +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
277293    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277294    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277295    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
277296    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277297    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
277298    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
277299    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
277300    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
277301    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
277302    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
277303    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
277304    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
277305    +LENGTH _WARN_ $4
277306    +      F_DepVar  $ 12
277307    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
277308    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
277309    +
277310    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
277311    +
277312    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
277313    +
277314    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
277315    +
277316    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
277317    +
277318    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
277319    +
277320    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
277321    +
277322    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
277323    +
277324    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
277325    +
277326    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
277327    +
277328    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
277329    +
277330    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
277331    +
277332    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
277333    +
277334    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
277335    +
277336    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
277337    +
277338    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
277339    +
277340    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
277341    +
277342    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
277343    +
277344    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
277345    +
277346    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
277347    +
277348    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
277349    +
277350    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
277351    +
277352    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
277353    +
277354    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
277355    +
277356    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
277357    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
277358    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
277359    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
277360    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
277361    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277362    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277363    +end;
MPRINT(EM_DIAGRAM):   end;
277364    +else do;
MPRINT(EM_DIAGRAM):   else do;
277365    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277366    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
277367    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277368    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
277369    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
277370    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
277371    +   end;
MPRINT(EM_DIAGRAM):   end;
277372    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
277373    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
277374    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
277375    +   end;
MPRINT(EM_DIAGRAM):   end;
277376    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
277377    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
277378    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
277379    +   end;
MPRINT(EM_DIAGRAM):   end;
277380    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277381    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
277382    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
277383    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277384    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277385    +   end;
MPRINT(EM_DIAGRAM):   end;
277386    +end;
MPRINT(EM_DIAGRAM):   end;
277387    +
277388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277389    +*** Checking missing input Interval
277390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
277391    +
277392    +IF NMISS(
277393    +   AcceptedCmpTotal ,
277394    +   Frq ,
277395    +   Income ,
277396    +   Mnt ,
277397    +   MntGoldProds ,
277398    +   MntMeatProducts ,
277399    +   MntWines ,
277400    +   NumDistPurchases ,
277401    +   RFMstat ,
277402    +   RMntFrq ,
277403    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
277404    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
277405    +
277406    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277407    +END;
MPRINT(EM_DIAGRAM):   END;
277408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277409    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
277410    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277411    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277412    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
277413    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
277414    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
277415    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
277416    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
277417    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
277418    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
277419    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
277420    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
277421    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
277422    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
277423    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
277424    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
277425    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
277426    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
277427    +END;
MPRINT(EM_DIAGRAM):   END;
277428    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277429    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
277430    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
277431    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
277432    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
277433    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
277434    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
277435    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
277436    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
277437    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
277438    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
277439    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
277440    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
277441    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
277442    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
277443    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
277444    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
277445    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
277446    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
277447    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
277448    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
277449    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
277450    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
277451    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
277452    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
277453    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
277454    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
277455    +END;
MPRINT(EM_DIAGRAM):   END;
277456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277457    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
277458    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277460    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
277461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277462    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277463    +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
277464    +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
277465    +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
277466    +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
277467    +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
277468    +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
277469    +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
277470    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
277471    +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
277472    +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
277473    +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
277474    +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
277475    +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
277476    +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
277477    +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
277478    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
277479    +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
277480    +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
277481    +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
277482    +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
277483    +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
277484    +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
277485    +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
277486    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
277487    +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
277488    +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
277489    +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
277490    +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
277491    +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
277492    +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
277493    +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
277494    +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
277495    +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
277496    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
277497    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
277498    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
277499    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
277500    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
277501    +END;
MPRINT(EM_DIAGRAM):   END;
277502    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277503    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
277504    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
277505    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
277506    +END;
MPRINT(EM_DIAGRAM):   END;
277507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277508    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
277509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277510    +
277511    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
277512    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
277513    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
277514    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
277515    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
277516    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277517    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
277518    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
277519    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
277520    +end;
MPRINT(EM_DIAGRAM):   end;
277521    +else do;
MPRINT(EM_DIAGRAM):   else do;
277522    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
277523    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
277524    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
277525    +   end;
MPRINT(EM_DIAGRAM):   end;
277526    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
277527    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
277528    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
277529    +   end;
MPRINT(EM_DIAGRAM):   end;
277530    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277531    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
277532    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
277533    +   end;
MPRINT(EM_DIAGRAM):   end;
277534    +end;
MPRINT(EM_DIAGRAM):   end;
277535    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277536    +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
277537    +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
277538    +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
277539    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
277540    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
277541    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
277542    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
277543    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
277544    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
277545    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
277546    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
277547    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
277548    +END;
MPRINT(EM_DIAGRAM):   END;
277549    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277550    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
277551    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
277552    +END;
MPRINT(EM_DIAGRAM):   END;
277553    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
277554    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
277555    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
277556    +END;
MPRINT(EM_DIAGRAM):   END;
277557    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
277558    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
277559    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
277560    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
277561    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
277562    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
277563    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
277564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277565    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
277566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277567    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
277568    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
277569    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
277570    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
277571    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
277572    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
277573    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
277574    +END;
MPRINT(EM_DIAGRAM):   END;
277575    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
277576    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
277577    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
277578    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
277579    +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
277580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277581    +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
277582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277583    +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
277584    +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
277585    +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
277586    +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
277587    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277588    +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
277589    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277590    +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
277591    +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
277592    +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
277593    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277594    +* Ensmbl20: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 2 of 7;
277595    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277596    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277597    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
277598    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
277599    +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
277600    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277601    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277602    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
277603    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277604    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
277605    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
277606    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
277607    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
277608    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
277609    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
277610    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
277611    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
277612    +LENGTH _WARN_ $4
277613    +      F_DepVar  $ 12
277614    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
277615    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
277616    +
277617    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
277618    +
277619    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
277620    +
277621    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
277622    +
277623    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
277624    +
277625    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
277626    +
277627    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
277628    +
277629    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
277630    +
277631    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
277632    +
277633    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
277634    +
277635    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
277636    +
277637    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
277638    +
277639    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
277640    +
277641    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
277642    +
277643    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
277644    +
277645    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
277646    +
277647    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
277648    +
277649    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
277650    +
277651    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
277652    +
277653    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
277654    +
277655    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
277656    +
277657    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
277658    +
277659    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
277660    +
277661    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
277662    +
277663    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
277664    +
277665    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
277666    +
277667    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
277668    +
277669    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
277670    +
277671    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
277672    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
277673    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
277674    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
277675    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
277676    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
277677    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277678    +end;
MPRINT(EM_DIAGRAM):   end;
277679    +else do;
MPRINT(EM_DIAGRAM):   else do;
277680    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
277681    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
277682    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277683    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
277684    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
277685    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
277686    +   end;
MPRINT(EM_DIAGRAM):   end;
277687    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
277688    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
277689    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
277690    +   end;
MPRINT(EM_DIAGRAM):   end;
277691    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
277692    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
277693    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
277694    +   end;
MPRINT(EM_DIAGRAM):   end;
277695    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277696    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
277697    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
277698    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
277699    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277700    +   end;
MPRINT(EM_DIAGRAM):   end;
277701    +end;
MPRINT(EM_DIAGRAM):   end;
277702    +
277703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277704    +*** Checking missing input Interval
277705    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
277706    +
277707    +IF NMISS(
277708    +   AcceptedCmpTotal ,
277709    +   Frq ,
277710    +   Income ,
277711    +   Mnt ,
277712    +   MntGoldProds ,
277713    +   MntMeatProducts ,
277714    +   MntWines ,
277715    +   NumDistPurchases ,
277716    +   RFMstat ,
277717    +   RMntFrq ,
277718    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
277719    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
277720    +
277721    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
277722    +END;
MPRINT(EM_DIAGRAM):   END;
277723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277724    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
277725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277726    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277727    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
277728    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
277729    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
277730    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
277731    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
277732    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
277733    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
277734    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
277735    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
277736    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
277737    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
277738    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
277739    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
277740    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
277741    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
277742    +END;
MPRINT(EM_DIAGRAM):   END;
277743    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277744    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
277745    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
277746    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
277747    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
277748    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
277749    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
277750    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
277751    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
277752    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
277753    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
277754    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
277755    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
277756    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
277757    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
277758    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
277759    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
277760    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
277761    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
277762    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
277763    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
277764    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
277765    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
277766    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
277767    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
277768    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
277769    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
277770    +END;
MPRINT(EM_DIAGRAM):   END;
277771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277772    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
277773    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277775    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
277776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277777    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277778    +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
277779    +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
277780    +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
277781    +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
277782    +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
277783    +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
277784    +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
277785    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
277786    +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
277787    +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
277788    +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
277789    +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
277790    +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
277791    +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
277792    +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
277793    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
277794    +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
277795    +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
277796    +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
277797    +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
277798    +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
277799    +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
277800    +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
277801    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
277802    +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
277803    +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
277804    +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
277805    +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
277806    +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
277807    +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
277808    +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
277809    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
277810    +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
277811    +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
277812    +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
277813    +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
277814    +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
277815    +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
277816    +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
277817    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
277818    +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
277819    +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
277820    +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
277821    +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
277822    +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
277823    +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
277824    +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
277825    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
277826    +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
277827    +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
277828    +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
277829    +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
277830    +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
277831    +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
277832    +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
277833    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
277834    +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
277835    +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
277836    +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
277837    +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
277838    +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
277839    +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
277840    +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
277841    +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
277842    +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
277843    +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
277844    +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
277845    +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
277846    +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
277847    +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
277848    +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
277849    +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
277850    +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
277851    +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
277852    +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
277853    +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
277854    +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
277855    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
277856    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
277857    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
277858    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
277859    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
277860    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
277861    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
277862    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
277863    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
277864    +END;
MPRINT(EM_DIAGRAM):   END;
277865    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277866    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
277867    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
277868    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
277869    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
277870    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
277871    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
277872    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
277873    +END;
MPRINT(EM_DIAGRAM):   END;
277874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277875    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
277876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277877    +
277878    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
277879    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
277880    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
277881    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
277882    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
277883    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
277884    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
277885    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
277886    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
277887    +end;
MPRINT(EM_DIAGRAM):   end;
277888    +else do;
MPRINT(EM_DIAGRAM):   else do;
277889    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
277890    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
277891    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
277892    +   end;
MPRINT(EM_DIAGRAM):   end;
277893    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
277894    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
277895    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
277896    +   end;
MPRINT(EM_DIAGRAM):   end;
277897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
277898    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
277899    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
277900    +   end;
MPRINT(EM_DIAGRAM):   end;
277901    +end;
MPRINT(EM_DIAGRAM):   end;
277902    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
277903    +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
277904    +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
277905    +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
277906    +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
277907    +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
277908    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
277909    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
277910    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
277911    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
277912    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
277913    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
277914    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
277915    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
277916    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
277917    +END;
MPRINT(EM_DIAGRAM):   END;
277918    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
277919    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
277920    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
277921    +END;
MPRINT(EM_DIAGRAM):   END;
277922    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
277923    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
277924    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
277925    +END;
MPRINT(EM_DIAGRAM):   END;
277926    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
277927    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
277928    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
277929    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
277930    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
277931    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
277932    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
277933    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277934    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
277935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
277936    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
277937    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
277938    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
277939    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
277940    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
277941    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
277942    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
277943    +END;
MPRINT(EM_DIAGRAM):   END;
277944    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
277945    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
277946    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
277947    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
277948    +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
277949    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277950    +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
277951    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277952    +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
277953    +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
277954    +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
277955    +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
277956    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277957    +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
277958    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277959    +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
277960    +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
277961    +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
277962    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277963    +* Ensmbl20: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 3 of 7;
277964    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277965    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277966    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
277967    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
277968    +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
277969    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
277970    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277971    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
277972    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
277973    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
277974    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
277975    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
277976    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
277977    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
277978    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
277979    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
277980    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
277981    +LENGTH _WARN_ $4
277982    +      F_DepVar  $ 12
277983    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
277984    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
277985    +
277986    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
277987    +
277988    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
277989    +
277990    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
277991    +
277992    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
277993    +
277994    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
277995    +
277996    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
277997    +
277998    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
277999    +
278000    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
278001    +
278002    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
278003    +
278004    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
278005    +
278006    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
278007    +
278008    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
278009    +
278010    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
278011    +
278012    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
278013    +
278014    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
278015    +
278016    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
278017    +
278018    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
278019    +
278020    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
278021    +
278022    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
278023    +
278024    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
278025    +
278026    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
278027    +
278028    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
278029    +
278030    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
278031    +
278032    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
278033    +
278034    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
278035    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
278036    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
278037    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
278038    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
278039    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278040    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278041    +end;
MPRINT(EM_DIAGRAM):   end;
278042    +else do;
MPRINT(EM_DIAGRAM):   else do;
278043    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278044    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
278045    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278046    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
278047    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
278048    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
278049    +   end;
MPRINT(EM_DIAGRAM):   end;
278050    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
278051    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
278052    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
278053    +   end;
MPRINT(EM_DIAGRAM):   end;
278054    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
278055    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
278056    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
278057    +   end;
MPRINT(EM_DIAGRAM):   end;
278058    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278059    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
278060    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
278061    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278062    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278063    +   end;
MPRINT(EM_DIAGRAM):   end;
278064    +end;
MPRINT(EM_DIAGRAM):   end;
278065    +
278066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278067    +*** Checking missing input Interval
278068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
278069    +
278070    +IF NMISS(
278071    +   AcceptedCmpTotal ,
278072    +   Frq ,
278073    +   Income ,
278074    +   Mnt ,
278075    +   MntGoldProds ,
278076    +   MntMeatProducts ,
278077    +   MntWines ,
278078    +   NumDistPurchases ,
278079    +   RFMstat ,
278080    +   RMntFrq ,
278081    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
278082    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
278083    +
278084    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278085    +END;
MPRINT(EM_DIAGRAM):   END;
278086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278087    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
278088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278089    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278090    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
278091    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
278092    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
278093    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
278094    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
278095    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
278096    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
278097    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
278098    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
278099    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
278100    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
278101    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
278102    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
278103    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
278104    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
278105    +END;
MPRINT(EM_DIAGRAM):   END;
278106    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278107    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
278108    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
278109    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
278110    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
278111    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
278112    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
278113    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
278114    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
278115    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
278116    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
278117    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
278118    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
278119    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
278120    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
278121    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
278122    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
278123    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
278124    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
278125    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
278126    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
278127    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
278128    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
278129    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
278130    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
278131    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
278132    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
278133    +END;
MPRINT(EM_DIAGRAM):   END;
278134    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278135    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
278136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278138    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
278139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278140    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278141    +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
278142    +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
278143    +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
278144    +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
278145    +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
278146    +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
278147    +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
278148    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
278149    +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
278150    +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
278151    +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
278152    +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
278153    +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
278154    +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
278155    +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
278156    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
278157    +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
278158    +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
278159    +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
278160    +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
278161    +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
278162    +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
278163    +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
278164    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
278165    +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
278166    +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
278167    +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
278168    +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
278169    +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
278170    +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
278171    +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
278172    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
278173    +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
278174    +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
278175    +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
278176    +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
278177    +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
278178    +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
278179    +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
278180    +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
278181    +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
278182    +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
278183    +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
278184    +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
278185    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278186    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278187    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
278188    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
278189    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
278190    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
278191    +END;
MPRINT(EM_DIAGRAM):   END;
278192    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278193    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
278194    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
278195    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
278196    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
278197    +END;
MPRINT(EM_DIAGRAM):   END;
278198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278199    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
278200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278201    +
278202    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
278203    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
278204    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
278205    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
278206    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
278207    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278208    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
278209    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
278210    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
278211    +end;
MPRINT(EM_DIAGRAM):   end;
278212    +else do;
MPRINT(EM_DIAGRAM):   else do;
278213    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
278214    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
278215    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
278216    +   end;
MPRINT(EM_DIAGRAM):   end;
278217    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
278218    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
278219    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
278220    +   end;
MPRINT(EM_DIAGRAM):   end;
278221    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278222    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
278223    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
278224    +   end;
MPRINT(EM_DIAGRAM):   end;
278225    +end;
MPRINT(EM_DIAGRAM):   end;
278226    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278227    +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
278228    +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
278229    +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
278230    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
278231    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
278232    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
278233    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
278234    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
278235    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
278236    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
278237    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
278238    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
278239    +END;
MPRINT(EM_DIAGRAM):   END;
278240    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278241    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
278242    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
278243    +END;
MPRINT(EM_DIAGRAM):   END;
278244    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
278245    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
278246    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
278247    +END;
MPRINT(EM_DIAGRAM):   END;
278248    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
278249    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
278250    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
278251    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
278252    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
278253    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
278254    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
278255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278256    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
278257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278258    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
278259    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
278260    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
278261    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
278262    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
278263    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
278264    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
278265    +END;
MPRINT(EM_DIAGRAM):   END;
278266    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
278267    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
278268    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
278269    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
278270    +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
278271    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278272    +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
278273    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278274    +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
278275    +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
278276    +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
278277    +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
278278    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278279    +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
278280    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278281    +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
278282    +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
278283    +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
278284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278285    +* Ensmbl20: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 4 of 7;
278286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278287    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278288    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
278289    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
278290    +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
278291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
278292    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
278293    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
278294    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
278295    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
278296    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
278297    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
278298    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
278299    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
278300    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
278301    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
278302    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
278303    +LENGTH _WARN_ $4
278304    +      F_DepVar  $ 12
278305    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
278306    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
278307    +
278308    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
278309    +
278310    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
278311    +
278312    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
278313    +
278314    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
278315    +
278316    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
278317    +
278318    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
278319    +
278320    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
278321    +
278322    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
278323    +
278324    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
278325    +
278326    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
278327    +
278328    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
278329    +
278330    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
278331    +
278332    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
278333    +
278334    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
278335    +
278336    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
278337    +
278338    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
278339    +
278340    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
278341    +
278342    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
278343    +
278344    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
278345    +
278346    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
278347    +
278348    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
278349    +
278350    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
278351    +
278352    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
278353    +
278354    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
278355    +
278356    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
278357    +
278358    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
278359    +
278360    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
278361    +
278362    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
278363    +
278364    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
278365    +
278366    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
278367    +
278368    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
278369    +
278370    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
278371    +
278372    +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
278373    +
278374    +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
278375    +
278376    +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
278377    +
278378    +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
278379    +
278380    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
278381    +
278382    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
278383    +
278384    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
278385    +
278386    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
278387    +
278388    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
278389    +
278390    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
278391    +
278392    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
278393    +
278394    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
278395    +
278396    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
278397    +
278398    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
278399    +
278400    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
278401    +
278402    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
278403    +
278404    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
278405    +
278406    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
278407    +
278408    +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
278409    +
278410    +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
278411    +
278412    +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
278413    +
278414    +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
278415    +
278416    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
278417    +
278418    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
278419    +
278420    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
278421    +
278422    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
278423    +
278424    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
278425    +
278426    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
278427    +
278428    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
278429    +
278430    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
278431    +
278432    +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
278433    +
278434    +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
278435    +
278436    +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
278437    +
278438    +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
278439    +
278440    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
278441    +
278442    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
278443    +
278444    +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
278445    +
278446    +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
278447    +
278448    +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
278449    +
278450    +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
278451    +
278452    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
278453    +
278454    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
278455    +
278456    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
278457    +
278458    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
278459    +
278460    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
278461    +
278462    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
278463    +
278464    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
278465    +
278466    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
278467    +
278468    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
278469    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
278470    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
278471    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
278472    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
278473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
278474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278475    +end;
MPRINT(EM_DIAGRAM):   end;
278476    +else do;
MPRINT(EM_DIAGRAM):   else do;
278477    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
278478    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
278479    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
278480    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
278481    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
278482    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
278483    +   end;
MPRINT(EM_DIAGRAM):   end;
278484    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
278485    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
278486    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
278487    +   end;
MPRINT(EM_DIAGRAM):   end;
278488    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
278489    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
278490    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
278491    +   end;
MPRINT(EM_DIAGRAM):   end;
278492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
278493    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
278494    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
278495    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
278496    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278497    +   end;
MPRINT(EM_DIAGRAM):   end;
278498    +end;
MPRINT(EM_DIAGRAM):   end;
278499    +
278500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278501    +*** Checking missing input Interval
278502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
278503    +
278504    +IF NMISS(
278505    +   AcceptedCmpTotal ,
278506    +   Frq ,
278507    +   Income ,
278508    +   Mnt ,
278509    +   MntGoldProds ,
278510    +   MntMeatProducts ,
278511    +   MntWines ,
278512    +   NumDistPurchases ,
278513    +   RFMstat ,
278514    +   RMntFrq ,
278515    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
278516    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
278517    +
278518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
278519    +END;
MPRINT(EM_DIAGRAM):   END;
278520    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278521    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
278522    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278523    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278524    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
278525    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
278526    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
278527    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
278528    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
278529    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
278530    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
278531    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
278532    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
278533    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
278534    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
278535    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
278536    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
278537    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
278538    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
278539    +END;
MPRINT(EM_DIAGRAM):   END;
278540    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278541    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
278542    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
278543    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
278544    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
278545    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
278546    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
278547    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
278548    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
278549    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
278550    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
278551    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
278552    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
278553    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
278554    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
278555    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
278556    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
278557    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
278558    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
278559    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
278560    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
278561    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
278562    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
278563    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
278564    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
278565    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
278566    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
278567    +END;
MPRINT(EM_DIAGRAM):   END;
278568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278569    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
278570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278572    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
278573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278574    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278575    +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
278576    +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
278577    +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
278578    +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
278579    +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
278580    +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
278581    +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
278582    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
278583    +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
278584    +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
278585    +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
278586    +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
278587    +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
278588    +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
278589    +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
278590    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
278591    +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
278592    +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
278593    +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
278594    +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
278595    +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
278596    +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
278597    +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
278598    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
278599    +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
278600    +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
278601    +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
278602    +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
278603    +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
278604    +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
278605    +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
278606    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
278607    +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
278608    +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
278609    +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
278610    +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
278611    +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
278612    +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
278613    +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
278614    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
278615    +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
278616    +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
278617    +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
278618    +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
278619    +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
278620    +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
278621    +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
278622    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
278623    +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
278624    +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
278625    +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
278626    +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
278627    +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
278628    +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
278629    +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
278630    +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
278631    +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
278632    +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
278633    +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
278634    +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
278635    +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
278636    +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
278637    +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
278638    +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
278639    +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
278640    +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
278641    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278642    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278643    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
278644    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
278645    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
278646    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
278647    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
278648    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
278649    +END;
MPRINT(EM_DIAGRAM):   END;
278650    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278651    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
278652    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
278653    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
278654    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
278655    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
278656    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
278657    +END;
MPRINT(EM_DIAGRAM):   END;
278658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278659    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
278660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278661    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278662    +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
278663    +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
278664    +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
278665    +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
278666    +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
278667    +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
278668    +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
278669    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
278670    +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
278671    +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
278672    +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
278673    +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
278674    +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
278675    +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
278676    +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
278677    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
278678    +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
278679    +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
278680    +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
278681    +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
278682    +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
278683    +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
278684    +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
278685    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
278686    +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
278687    +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
278688    +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
278689    +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
278690    +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
278691    +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
278692    +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
278693    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
278694    +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
278695    +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
278696    +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
278697    +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
278698    +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
278699    +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
278700    +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
278701    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
278702    +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
278703    +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
278704    +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
278705    +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
278706    +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
278707    +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
278708    +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
278709    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
278710    +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
278711    +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
278712    +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
278713    +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
278714    +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
278715    +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
278716    +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
278717    +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
278718    +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
278719    +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
278720    +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
278721    +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
278722    +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
278723    +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
278724    +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
278725    +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
278726    +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
278727    +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
278728    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278729    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278730    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
278731    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
278732    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
278733    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
278734    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
278735    +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
278736    +END;
MPRINT(EM_DIAGRAM):   END;
278737    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278738    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
278739    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
278740    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
278741    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
278742    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
278743    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
278744    +END;
MPRINT(EM_DIAGRAM):   END;
278745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278746    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
278747    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278748    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278749    +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
278750    +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
278751    +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
278752    +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
278753    +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
278754    +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
278755    +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
278756    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
278757    +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
278758    +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
278759    +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
278760    +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
278761    +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
278762    +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
278763    +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
278764    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
278765    +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
278766    +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
278767    +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
278768    +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
278769    +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
278770    +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
278771    +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
278772    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
278773    +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
278774    +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
278775    +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
278776    +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
278777    +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
278778    +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
278779    +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
278780    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
278781    +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
278782    +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
278783    +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
278784    +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
278785    +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
278786    +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
278787    +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
278788    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
278789    +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
278790    +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
278791    +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
278792    +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
278793    +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
278794    +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
278795    +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
278796    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
278797    +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
278798    +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
278799    +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
278800    +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
278801    +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
278802    +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
278803    +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
278804    +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
278805    +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
278806    +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
278807    +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
278808    +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
278809    +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
278810    +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
278811    +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
278812    +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
278813    +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
278814    +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
278815    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278816    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278817    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
278818    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
278819    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
278820    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
278821    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
278822    +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
278823    +END;
MPRINT(EM_DIAGRAM):   END;
278824    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278825    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
278826    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
278827    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
278828    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
278829    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
278830    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
278831    +END;
MPRINT(EM_DIAGRAM):   END;
278832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278833    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
278834    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278835    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278836    +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
278837    +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
278838    +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
278839    +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
278840    +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
278841    +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
278842    +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
278843    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
278844    +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
278845    +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
278846    +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
278847    +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
278848    +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
278849    +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
278850    +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
278851    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
278852    +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
278853    +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
278854    +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
278855    +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
278856    +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
278857    +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
278858    +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
278859    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
278860    +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
278861    +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
278862    +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
278863    +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
278864    +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
278865    +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
278866    +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
278867    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
278868    +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
278869    +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
278870    +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
278871    +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
278872    +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
278873    +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
278874    +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
278875    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
278876    +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
278877    +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
278878    +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
278879    +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
278880    +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
278881    +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
278882    +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
278883    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
278884    +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
278885    +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
278886    +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
278887    +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
278888    +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
278889    +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
278890    +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
278891    +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
278892    +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
278893    +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
278894    +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
278895    +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
278896    +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
278897    +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
278898    +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
278899    +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
278900    +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
278901    +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
278902    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
278903    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
278904    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
278905    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
278906    +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
278907    +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
278908    +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
278909    +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
278910    +END;
MPRINT(EM_DIAGRAM):   END;
278911    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
278912    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
278913    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
278914    +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
278915    +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
278916    +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
278917    +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
278918    +END;
MPRINT(EM_DIAGRAM):   END;
278919    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278920    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
278921    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
278922    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
278923    +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
278924    +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
278925    +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
278926    +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
278927    +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
278928    +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
278929    +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
278930    +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
278931    +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
278932    +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
278933    +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
278934    +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
278935    +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
278936    +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
278937    +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
278938    +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
278939    +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
278940    +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
278941    +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
278942    +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
278943    +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
278944    +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
278945    +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
278946    +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
278947    +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
278948    +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
278949    +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
278950    +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
278951    +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
278952    +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
278953    +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
278954    +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
278955    +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
278956    +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
278957    +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
278958    +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
278959    +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
278960    +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
278961    +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
278962    +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
278963    +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
278964    +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
278965    +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
278966    +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
278967    +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
278968    +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
278969    +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
278970    +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
278971    +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
278972    +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
278973    +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
278974    +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
278975    +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
278976    +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
278977    +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
278978    +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
278979    +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
278980    +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
278981    +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
278982    +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
278983    +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
278984    +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
278985    +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
278986    +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
278987    +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
278988    +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
278989    +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
278990    +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
278991    +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
278992    +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
278993    +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
278994    +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
278995    +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
278996    +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
278997    +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
278998    +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
278999    +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
279000    +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
279001    +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
279002    +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
279003    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
279004    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
279005    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279006    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
279007    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
279008    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
279009    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
279010    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
279011    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
279012    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
279013    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
279014    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
279015    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
279016    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
279017    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
279018    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
279019    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
279020    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
279021    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
279022    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
279023    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
279024    +END;
MPRINT(EM_DIAGRAM):   END;
279025    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279026    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
279027    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
279028    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
279029    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
279030    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
279031    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
279032    +END;
MPRINT(EM_DIAGRAM):   END;
279033    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279034    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
279035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279036    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279037    +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
279038    +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
279039    +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
279040    +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
279041    +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
279042    +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
279043    +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
279044    +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
279045    +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
279046    +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
279047    +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
279048    +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
279049    +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
279050    +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
279051    +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
279052    +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
279053    +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
279054    +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
279055    +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
279056    +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
279057    +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
279058    +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
279059    +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
279060    +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
279061    +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
279062    +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
279063    +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
279064    +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
279065    +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
279066    +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
279067    +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
279068    +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
279069    +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
279070    +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
279071    +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
279072    +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
279073    +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
279074    +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
279075    +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
279076    +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
279077    +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
279078    +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
279079    +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
279080    +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
279081    +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
279082    +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
279083    +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
279084    +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
279085    +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
279086    +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
279087    +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
279088    +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
279089    +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
279090    +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
279091    +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
279092    +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
279093    +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
279094    +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
279095    +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
279096    +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
279097    +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
279098    +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
279099    +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
279100    +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
279101    +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
279102    +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
279103    +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
279104    +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
279105    +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
279106    +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
279107    +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
279108    +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
279109    +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
279110    +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
279111    +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
279112    +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
279113    +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
279114    +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
279115    +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
279116    +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
279117    +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
279118    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
279119    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279120    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
279121    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
279122    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
279123    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
279124    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
279125    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
279126    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
279127    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
279128    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
279129    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
279130    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
279131    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
279132    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
279133    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
279134    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
279135    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
279136    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
279137    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
279138    +END;
MPRINT(EM_DIAGRAM):   END;
279139    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279140    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
279141    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
279142    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
279143    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
279144    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
279145    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
279146    +END;
MPRINT(EM_DIAGRAM):   END;
279147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279148    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
279149    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279150    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279151    +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
279152    +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
279153    +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
279154    +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
279155    +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
279156    +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
279157    +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
279158    +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
279159    +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
279160    +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
279161    +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
279162    +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
279163    +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
279164    +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
279165    +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
279166    +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
279167    +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
279168    +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
279169    +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
279170    +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
279171    +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
279172    +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
279173    +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
279174    +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
279175    +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
279176    +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
279177    +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
279178    +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
279179    +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
279180    +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
279181    +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
279182    +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
279183    +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
279184    +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
279185    +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
279186    +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
279187    +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
279188    +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
279189    +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
279190    +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
279191    +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
279192    +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
279193    +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
279194    +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
279195    +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
279196    +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
279197    +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
279198    +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
279199    +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
279200    +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
279201    +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
279202    +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
279203    +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
279204    +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
279205    +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
279206    +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
279207    +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
279208    +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
279209    +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
279210    +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
279211    +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
279212    +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
279213    +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
279214    +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
279215    +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
279216    +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
279217    +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
279218    +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
279219    +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
279220    +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
279221    +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
279222    +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
279223    +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
279224    +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
279225    +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
279226    +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
279227    +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
279228    +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
279229    +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
279230    +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
279231    +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
279232    +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
279233    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279234    +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
279235    +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
279236    +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
279237    +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
279238    +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
279239    +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
279240    +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
279241    +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
279242    +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
279243    +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
279244    +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
279245    +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
279246    +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
279247    +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
279248    +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
279249    +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
279250    +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
279251    +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
279252    +END;
MPRINT(EM_DIAGRAM):   END;
279253    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279254    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
279255    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
279256    +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
279257    +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
279258    +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
279259    +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
279260    +END;
MPRINT(EM_DIAGRAM):   END;
279261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279262    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
279263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279264    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279265    +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
279266    +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
279267    +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
279268    +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
279269    +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
279270    +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
279271    +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
279272    +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
279273    +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
279274    +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
279275    +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
279276    +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
279277    +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
279278    +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
279279    +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
279280    +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
279281    +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
279282    +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
279283    +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
279284    +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
279285    +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
279286    +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
279287    +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
279288    +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
279289    +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
279290    +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
279291    +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
279292    +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
279293    +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
279294    +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
279295    +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
279296    +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
279297    +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
279298    +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
279299    +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
279300    +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
279301    +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
279302    +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
279303    +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
279304    +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
279305    +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
279306    +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
279307    +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
279308    +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
279309    +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
279310    +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
279311    +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
279312    +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
279313    +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
279314    +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
279315    +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
279316    +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
279317    +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
279318    +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
279319    +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
279320    +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
279321    +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
279322    +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
279323    +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
279324    +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
279325    +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
279326    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
279327    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279328    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
279329    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
279330    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
279331    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
279332    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
279333    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
279334    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
279335    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
279336    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
279337    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
279338    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
279339    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
279340    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
279341    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
279342    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
279343    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
279344    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
279345    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
279346    +END;
MPRINT(EM_DIAGRAM):   END;
279347    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279348    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
279349    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
279350    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
279351    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
279352    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
279353    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
279354    +END;
MPRINT(EM_DIAGRAM):   END;
279355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279356    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
279357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279358    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279359    +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
279360    +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
279361    +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
279362    +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
279363    +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
279364    +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
279365    +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
279366    +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
279367    +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
279368    +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
279369    +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
279370    +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
279371    +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
279372    +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
279373    +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
279374    +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
279375    +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
279376    +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
279377    +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
279378    +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
279379    +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
279380    +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
279381    +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
279382    +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
279383    +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
279384    +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
279385    +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
279386    +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
279387    +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
279388    +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
279389    +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
279390    +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
279391    +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
279392    +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
279393    +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
279394    +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
279395    +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
279396    +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
279397    +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
279398    +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
279399    +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
279400    +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
279401    +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
279402    +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
279403    +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
279404    +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
279405    +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
279406    +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
279407    +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
279408    +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
279409    +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
279410    +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
279411    +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
279412    +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
279413    +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
279414    +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
279415    +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
279416    +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
279417    +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
279418    +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
279419    +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
279420    +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
279421    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279422    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
279423    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
279424    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
279425    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
279426    +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
279427    +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
279428    +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
279429    +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
279430    +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
279431    +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
279432    +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
279433    +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
279434    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
279435    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
279436    +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
279437    +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
279438    +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
279439    +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
279440    +END;
MPRINT(EM_DIAGRAM):   END;
279441    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279442    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
279443    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
279444    +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
279445    +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
279446    +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
279447    +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
279448    +END;
MPRINT(EM_DIAGRAM):   END;
279449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279450    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
279451    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279452    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279453    +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
279454    +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
279455    +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
279456    +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
279457    +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
279458    +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
279459    +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
279460    +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
279461    +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
279462    +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
279463    +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
279464    +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
279465    +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
279466    +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
279467    +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
279468    +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
279469    +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
279470    +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
279471    +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
279472    +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
279473    +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
279474    +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
279475    +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
279476    +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
279477    +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
279478    +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
279479    +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
279480    +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
279481    +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
279482    +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
279483    +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
279484    +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
279485    +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
279486    +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
279487    +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
279488    +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
279489    +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
279490    +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
279491    +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
279492    +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
279493    +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
279494    +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
279495    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279496    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
279497    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
279498    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
279499    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
279500    +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
279501    +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
279502    +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
279503    +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
279504    +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
279505    +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
279506    +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
279507    +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
279508    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
279509    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
279510    +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
279511    +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
279512    +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
279513    +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
279514    +END;
MPRINT(EM_DIAGRAM):   END;
279515    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279516    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
279517    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
279518    +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
279519    +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
279520    +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
279521    +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
279522    +END;
MPRINT(EM_DIAGRAM):   END;
279523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279524    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
279525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279526    +
279527    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
279528    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
279529    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
279530    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
279531    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
279532    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279533    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
279534    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
279535    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
279536    +end;
MPRINT(EM_DIAGRAM):   end;
279537    +else do;
MPRINT(EM_DIAGRAM):   else do;
279538    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
279539    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
279540    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
279541    +   end;
MPRINT(EM_DIAGRAM):   end;
279542    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
279543    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
279544    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
279545    +   end;
MPRINT(EM_DIAGRAM):   end;
279546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279547    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
279548    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
279549    +   end;
MPRINT(EM_DIAGRAM):   end;
279550    +end;
MPRINT(EM_DIAGRAM):   end;
279551    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279552    +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
279553    +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
279554    +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
279555    +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
279556    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
279557    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
279558    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279559    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
279560    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
279561    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
279562    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
279563    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
279564    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
279565    +END;
MPRINT(EM_DIAGRAM):   END;
279566    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279567    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
279568    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
279569    +END;
MPRINT(EM_DIAGRAM):   END;
279570    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
279571    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
279572    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
279573    +END;
MPRINT(EM_DIAGRAM):   END;
279574    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
279575    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
279576    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
279577    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
279578    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
279579    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
279580    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
279581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279582    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
279583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279584    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
279585    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
279586    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
279587    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
279588    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
279589    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
279590    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
279591    +END;
MPRINT(EM_DIAGRAM):   END;
279592    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
279593    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
279594    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
279595    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
279596    +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
279597    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279598    +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
279599    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279600    +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
279601    +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
279602    +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
279603    +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
279604    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279605    +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
279606    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279607    +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
279608    +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
279609    +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
279610    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279611    +* Ensmbl20: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 5 of 7;
279612    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279613    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279614    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
279615    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
279616    +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
279617    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279618    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
279619    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
279620    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
279621    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
279622    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
279623    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
279624    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
279625    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
279626    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
279627    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
279628    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
279629    +LENGTH _WARN_ $4
279630    +      F_DepVar  $ 12
279631    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
279632    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
279633    +
279634    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
279635    +
279636    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
279637    +
279638    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
279639    +
279640    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
279641    +
279642    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
279643    +
279644    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
279645    +
279646    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
279647    +
279648    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
279649    +
279650    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
279651    +
279652    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
279653    +
279654    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
279655    +
279656    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
279657    +
279658    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
279659    +
279660    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
279661    +
279662    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
279663    +
279664    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
279665    +
279666    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
279667    +
279668    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
279669    +
279670    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
279671    +
279672    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
279673    +
279674    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
279675    +
279676    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
279677    +
279678    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
279679    +
279680    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
279681    +
279682    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
279683    +
279684    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
279685    +
279686    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
279687    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
279688    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
279689    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
279690    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
279691    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
279692    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279693    +end;
MPRINT(EM_DIAGRAM):   end;
279694    +else do;
MPRINT(EM_DIAGRAM):   else do;
279695    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
279696    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
279697    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279698    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
279699    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
279700    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
279701    +   end;
MPRINT(EM_DIAGRAM):   end;
279702    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
279703    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
279704    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
279705    +   end;
MPRINT(EM_DIAGRAM):   end;
279706    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
279707    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
279708    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
279709    +   end;
MPRINT(EM_DIAGRAM):   end;
279710    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279711    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
279712    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
279713    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
279714    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279715    +   end;
MPRINT(EM_DIAGRAM):   end;
279716    +end;
MPRINT(EM_DIAGRAM):   end;
279717    +
279718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279719    +*** Checking missing input Interval
279720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
279721    +
279722    +IF NMISS(
279723    +   AcceptedCmpTotal ,
279724    +   Frq ,
279725    +   Income ,
279726    +   Mnt ,
279727    +   MntGoldProds ,
279728    +   MntMeatProducts ,
279729    +   MntWines ,
279730    +   NumDistPurchases ,
279731    +   RFMstat ,
279732    +   RMntFrq ,
279733    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
279734    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
279735    +
279736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
279737    +END;
MPRINT(EM_DIAGRAM):   END;
279738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279739    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
279740    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279741    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279742    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
279743    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
279744    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
279745    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
279746    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
279747    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
279748    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
279749    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
279750    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
279751    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
279752    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
279753    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
279754    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
279755    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
279756    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
279757    +END;
MPRINT(EM_DIAGRAM):   END;
279758    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279759    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
279760    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
279761    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
279762    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
279763    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
279764    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
279765    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
279766    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
279767    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
279768    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
279769    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
279770    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
279771    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
279772    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
279773    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
279774    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
279775    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
279776    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
279777    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
279778    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
279779    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
279780    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
279781    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
279782    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
279783    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
279784    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
279785    +END;
MPRINT(EM_DIAGRAM):   END;
279786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279787    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
279788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279790    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
279791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279793    +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
279794    +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
279795    +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
279796    +          +    -0.05910355740416 * S_MntMeatProducts
279797    +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
279798    +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
279799    +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
279800    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq 
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds 
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 * 
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq + 
-1.02114645988925 * S_Recency ;
279801    +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
279802    +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
279803    +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
279804    +          +     0.09400377526937 * S_MntMeatProducts
279805    +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
279806    +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
279807    +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
279808    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq 
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds 
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 * 
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq + 
0.39055670382948 * S_Recency ;
279809    +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
279810    +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
279811    +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
279812    +          +    -1.62740823190029 * S_MntMeatProducts
279813    +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
279814    +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
279815    +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
279816    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq 
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds + 
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 * 
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq + 
0.17699292292485 * S_Recency ;
279817    +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
279818    +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
279819    +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
279820    +          +      0.3965117290354 * S_MntMeatProducts
279821    +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
279822    +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
279823    +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
279824    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq 
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds 
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 * 
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq + 
-0.4091862538023 * S_Recency ;
279825    +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
279826    +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
279827    +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
279828    +          +     1.44231431118379 * S_MntMeatProducts
279829    +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
279830    +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
279831    +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
279832    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq 
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds 
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 * 
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq + 
-0.38411527089703 * S_Recency ;
279833    +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
279834    +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
279835    +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
279836    +          +    -0.44244305964257 * S_MntMeatProducts
279837    +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
279838    +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
279839    +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
279840    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq 
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 * 
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines + 
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 * 
S_RMntFrq + -0.65176917675454 * S_Recency ;
279841    +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
279842    +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 * 
G_Marital_Status1 ;
279843    +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
279844    +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 * 
G_Marital_Status1 ;
279845    +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
279846    +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 * 
G_Marital_Status1 ;
279847    +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
279848    +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 * 
G_Marital_Status1 ;
279849    +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
279850    +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 * 
G_Marital_Status1 ;
279851    +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
279852    +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 * 
G_Marital_Status1 ;
279853    +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
279854    +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
279855    +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
279856    +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
279857    +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
279858    +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
279859    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
279860    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
279861    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
279862    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
279863    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
279864    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
279865    +END;
MPRINT(EM_DIAGRAM):   END;
279866    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279867    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
279868    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
279869    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
279870    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
279871    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
279872    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
279873    +END;
MPRINT(EM_DIAGRAM):   END;
279874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279875    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
279876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279877    +
279878    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
279879    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
279880    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
279881    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
279882    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
279883    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
279884    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
279885    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
279886    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
279887    +end;
MPRINT(EM_DIAGRAM):   end;
279888    +else do;
MPRINT(EM_DIAGRAM):   else do;
279889    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
279890    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
279891    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
279892    +   end;
MPRINT(EM_DIAGRAM):   end;
279893    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
279894    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
279895    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
279896    +   end;
MPRINT(EM_DIAGRAM):   end;
279897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
279898    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
279899    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
279900    +   end;
MPRINT(EM_DIAGRAM):   end;
279901    +end;
MPRINT(EM_DIAGRAM):   end;
279902    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
279903    +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
279904    +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
279905    +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 + 
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361 
* H16 ;
279906    +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
279907    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
279908    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
279909    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
279910    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
279911    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
279912    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
279913    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
279914    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
279915    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
279916    +END;
MPRINT(EM_DIAGRAM):   END;
279917    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
279918    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
279919    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
279920    +END;
MPRINT(EM_DIAGRAM):   END;
279921    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
279922    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
279923    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
279924    +END;
MPRINT(EM_DIAGRAM):   END;
279925    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
279926    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
279927    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
279928    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
279929    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
279930    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
279931    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
279932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279933    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
279934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
279935    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
279936    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
279937    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
279938    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
279939    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
279940    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
279941    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
279942    +END;
MPRINT(EM_DIAGRAM):   END;
279943    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
279944    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
279945    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
279946    +drop
279947    +H11
279948    +H12
279949    +H13
279950    +H14
279951    +H15
279952    +H16
279953    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
279954    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
279955    +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
279956    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279957    +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
279958    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279959    +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
279960    +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
279961    +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
279962    +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
279963    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279964    +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
279965    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279966    +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
279967    +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
279968    +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
279969    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279970    +* Ensmbl20: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 6 of 7;
279971    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279972    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279973    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
279974    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
279975    +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
279976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
279977    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
279978    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
279979    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
279980    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
279981    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
279982    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
279983    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
279984    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
279985    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
279986    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
279987    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
279988    +LENGTH _WARN_ $4
279989    +      F_DepVar  $ 12
279990    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
279991    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
279992    +
279993    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
279994    +
279995    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
279996    +
279997    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
279998    +
279999    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
280000    +
280001    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
280002    +
280003    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
280004    +
280005    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
280006    +
280007    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
280008    +
280009    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
280010    +
280011    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
280012    +
280013    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
280014    +
280015    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
280016    +
280017    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
280018    +
280019    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
280020    +
280021    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
280022    +
280023    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
280024    +
280025    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
280026    +
280027    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
280028    +
280029    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
280030    +
280031    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
280032    +
280033    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
280034    +
280035    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
280036    +
280037    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
280038    +
280039    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
280040    +
280041    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
280042    +
280043    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
280044    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
280045    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
280046    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
280047    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
280048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280050    +end;
MPRINT(EM_DIAGRAM):   end;
280051    +else do;
MPRINT(EM_DIAGRAM):   else do;
280052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280053    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
280054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280055    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
280056    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
280057    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
280058    +   end;
MPRINT(EM_DIAGRAM):   end;
280059    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
280060    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
280061    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
280062    +   end;
MPRINT(EM_DIAGRAM):   end;
280063    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
280064    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
280065    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
280066    +   end;
MPRINT(EM_DIAGRAM):   end;
280067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280068    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
280069    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
280070    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280071    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280072    +   end;
MPRINT(EM_DIAGRAM):   end;
280073    +end;
MPRINT(EM_DIAGRAM):   end;
280074    +
280075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280076    +*** Checking missing input Interval
280077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
280078    +
280079    +IF NMISS(
280080    +   AcceptedCmpTotal ,
280081    +   Frq ,
280082    +   Income ,
280083    +   Mnt ,
280084    +   MntGoldProds ,
280085    +   MntMeatProducts ,
280086    +   MntWines ,
280087    +   NumDistPurchases ,
280088    +   RFMstat ,
280089    +   RMntFrq ,
280090    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
280091    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
280092    +
280093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280094    +END;
MPRINT(EM_DIAGRAM):   END;
280095    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280096    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
280097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280098    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280099    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
280100    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
280101    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
280102    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
280103    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
280104    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
280105    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
280106    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
280107    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
280108    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
280109    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
280110    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
280111    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
280112    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
280113    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
280114    +END;
MPRINT(EM_DIAGRAM):   END;
280115    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280116    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
280117    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
280118    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
280119    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
280120    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
280121    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
280122    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
280123    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
280124    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
280125    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
280126    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
280127    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
280128    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
280129    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
280130    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
280131    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
280132    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
280133    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
280134    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
280135    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
280136    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
280137    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
280138    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
280139    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
280140    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
280141    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
280142    +END;
MPRINT(EM_DIAGRAM):   END;
280143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280144    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
280145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280147    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
280148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280149    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280150    +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
280151    +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
280152    +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
280153    +          +      0.5764056033267 * S_MntMeatProducts
280154    +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
280155    +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
280156    +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
280157    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq 
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds 
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 * 
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq + 
-0.66847972845367 * S_Recency ;
280158    +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
280159    +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
280160    +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
280161    +          +      0.5452732097143 * S_MntMeatProducts
280162    +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
280163    +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
280164    +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
280165    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq 
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds 
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 * 
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq + 
-0.36679237964697 * S_Recency ;
280166    +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
280167    +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
280168    +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
280169    +          +     -0.9040019705776 * S_MntMeatProducts
280170    +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
280171    +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
280172    +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
280173    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq 
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds 
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 * 
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq + 
0.36876094021551 * S_Recency ;
280174    +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
280175    +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
280176    +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
280177    +          +     1.04227983605332 * S_MntMeatProducts
280178    +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
280179    +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
280180    +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
280181    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq 
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 * 
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines + 
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 * 
S_RMntFrq + -0.00929531662146 * S_Recency ;
280182    +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
280183    +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
280184    +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
280185    +          +     0.23454153115636 * S_MntMeatProducts
280186    +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
280187    +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
280188    +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
280189    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq + 
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds + 
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 * 
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq + 
0.62117853933635 * S_Recency ;
280190    +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
280191    +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 * 
G_Marital_Status1 ;
280192    +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
280193    +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 * 
G_Marital_Status1 ;
280194    +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
280195    +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 * 
G_Marital_Status1 ;
280196    +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
280197    +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 * 
G_Marital_Status1 ;
280198    +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
280199    +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 * 
G_Marital_Status1 ;
280200    +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
280201    +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
280202    +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
280203    +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
280204    +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
280205    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
280206    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
280207    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
280208    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
280209    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
280210    +END;
MPRINT(EM_DIAGRAM):   END;
280211    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280212    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
280213    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
280214    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
280215    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
280216    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
280217    +END;
MPRINT(EM_DIAGRAM):   END;
280218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280219    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
280220    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280221    +
280222    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
280223    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
280224    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
280225    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
280226    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
280227    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280228    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
280229    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
280230    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
280231    +end;
MPRINT(EM_DIAGRAM):   end;
280232    +else do;
MPRINT(EM_DIAGRAM):   else do;
280233    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
280234    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
280235    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
280236    +   end;
MPRINT(EM_DIAGRAM):   end;
280237    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
280238    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
280239    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
280240    +   end;
MPRINT(EM_DIAGRAM):   end;
280241    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280242    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
280243    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
280244    +   end;
MPRINT(EM_DIAGRAM):   end;
280245    +end;
MPRINT(EM_DIAGRAM):   end;
280246    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280247    +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
280248    +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
280249    +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 + 
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
280250    +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
280251    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
280252    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
280253    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
280254    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
280255    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
280256    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
280257    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
280258    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
280259    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
280260    +END;
MPRINT(EM_DIAGRAM):   END;
280261    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280262    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
280263    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
280264    +END;
MPRINT(EM_DIAGRAM):   END;
280265    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
280266    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
280267    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
280268    +END;
MPRINT(EM_DIAGRAM):   END;
280269    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
280270    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
280271    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
280272    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
280273    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
280274    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
280275    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
280276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280277    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
280278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280279    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
280280    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
280281    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
280282    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
280283    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
280284    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
280285    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
280286    +END;
MPRINT(EM_DIAGRAM):   END;
280287    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
280288    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
280289    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
280290    +drop
280291    +H11
280292    +H12
280293    +H13
280294    +H14
280295    +H15
280296    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
280297    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
280298    +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
280299    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280300    +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
280301    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280302    +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
280303    +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
280304    +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
280305    +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
280306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280307    +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
280308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280309    +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
280310    +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
280311    +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
280312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280313    +* Ensmbl20: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 7 of 7;
280314    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280316    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
280317    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
280318    +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
280319    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280320    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
280321    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
280322    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
280323    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
280324    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
280325    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
280326    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
280327    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
280328    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
280329    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
280330    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
280331    +LENGTH _WARN_ $4
280332    +      F_DepVar  $ 12
280333    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
280334    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
280335    +
280336    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
280337    +
280338    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
280339    +
280340    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
280341    +
280342    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
280343    +
280344    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
280345    +
280346    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
280347    +
280348    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
280349    +
280350    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
280351    +
280352    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
280353    +
280354    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
280355    +
280356    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
280357    +
280358    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
280359    +
280360    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
280361    +
280362    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
280363    +
280364    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
280365    +
280366    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
280367    +
280368    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
280369    +
280370    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
280371    +
280372    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
280373    +
280374    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
280375    +
280376    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
280377    +
280378    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
280379    +
280380    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
280381    +
280382    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
280383    +
280384    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
280385    +
280386    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
280387    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
280388    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
280389    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
280390    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
280391    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280392    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280393    +end;
MPRINT(EM_DIAGRAM):   end;
280394    +else do;
MPRINT(EM_DIAGRAM):   else do;
280395    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280396    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
280397    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280398    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
280399    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
280400    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
280401    +   end;
MPRINT(EM_DIAGRAM):   end;
280402    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
280403    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
280404    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
280405    +   end;
MPRINT(EM_DIAGRAM):   end;
280406    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
280407    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
280408    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
280409    +   end;
MPRINT(EM_DIAGRAM):   end;
280410    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280411    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
280412    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
280413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280415    +   end;
MPRINT(EM_DIAGRAM):   end;
280416    +end;
MPRINT(EM_DIAGRAM):   end;
280417    +
280418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280419    +*** Checking missing input Interval
280420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
280421    +
280422    +IF NMISS(
280423    +   AcceptedCmpTotal ,
280424    +   Frq ,
280425    +   Income ,
280426    +   Mnt ,
280427    +   MntGoldProds ,
280428    +   MntMeatProducts ,
280429    +   MntWines ,
280430    +   NumDistPurchases ,
280431    +   RFMstat ,
280432    +   RMntFrq ,
280433    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
280434    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
280435    +
280436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280437    +END;
MPRINT(EM_DIAGRAM):   END;
280438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280439    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
280440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280441    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280442    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
280443    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
280444    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
280445    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
280446    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
280447    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
280448    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
280449    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
280450    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
280451    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
280452    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
280453    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
280454    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
280455    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
280456    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
280457    +END;
MPRINT(EM_DIAGRAM):   END;
280458    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280459    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
280460    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
280461    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
280462    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
280463    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
280464    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
280465    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
280466    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
280467    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
280468    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
280469    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
280470    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
280471    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
280472    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
280473    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
280474    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
280475    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
280476    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
280477    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
280478    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
280479    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
280480    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
280481    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
280482    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
280483    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
280484    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
280485    +END;
MPRINT(EM_DIAGRAM):   END;
280486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280487    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
280488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280490    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
280491    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280492    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280493    +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
280494    +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
280495    +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
280496    +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
280497    +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
280498    +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
280499    +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
280500    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
280501    +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
280502    +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
280503    +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
280504    +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
280505    +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
280506    +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
280507    +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
280508    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
280509    +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
280510    +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
280511    +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
280512    +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
280513    +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
280514    +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
280515    +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
280516    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
280517    +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
280518    +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
280519    +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
280520    +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
280521    +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
280522    +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
280523    +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
280524    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
280525    +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
280526    +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
280527    +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
280528    +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
280529    +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
280530    +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
280531    +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
280532    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
280533    +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
280534    +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
280535    +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
280536    +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
280537    +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
280538    +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
280539    +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
280540    +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
280541    +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
280542    +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
280543    +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
280544    +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
280545    +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
280546    +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
280547    +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
280548    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
280549    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
280550    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
280551    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
280552    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
280553    +END;
MPRINT(EM_DIAGRAM):   END;
280554    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280555    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
280556    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
280557    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
280558    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
280559    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
280560    +END;
MPRINT(EM_DIAGRAM):   END;
280561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280562    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
280563    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280564    +
280565    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
280566    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
280567    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
280568    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
280569    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
280570    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280571    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
280572    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
280573    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
280574    +end;
MPRINT(EM_DIAGRAM):   end;
280575    +else do;
MPRINT(EM_DIAGRAM):   else do;
280576    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
280577    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
280578    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
280579    +   end;
MPRINT(EM_DIAGRAM):   end;
280580    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
280581    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
280582    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
280583    +   end;
MPRINT(EM_DIAGRAM):   end;
280584    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280585    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
280586    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
280587    +   end;
MPRINT(EM_DIAGRAM):   end;
280588    +end;
MPRINT(EM_DIAGRAM):   end;
280589    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280590    +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
280591    +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
280592    +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
280593    +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
280594    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
280595    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
280596    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
280597    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
280598    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
280599    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
280600    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
280601    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
280602    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
280603    +END;
MPRINT(EM_DIAGRAM):   END;
280604    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280605    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
280606    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
280607    +END;
MPRINT(EM_DIAGRAM):   END;
280608    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
280609    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
280610    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
280611    +END;
MPRINT(EM_DIAGRAM):   END;
280612    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
280613    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
280614    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
280615    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
280616    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
280617    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
280618    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
280619    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280620    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
280621    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280622    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
280623    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
280624    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
280625    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
280626    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
280627    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
280628    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
280629    +END;
MPRINT(EM_DIAGRAM):   END;
280630    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
280631    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
280632    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
280633    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
280634    +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
280635    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280636    +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
280637    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280638    +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
280639    +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
280640    +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
280641    +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
280642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280643    +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
280644    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280645    +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
280646    +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
280647    +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
280648    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280649    +* Ensmbl20: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Average Posteriors of 7 models;
280650    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280651    +P_DepVar1 = (
280652    +AutoNeural32_P_DepVar1 +
280653    +AutoNeural29_P_DepVar1 +
280654    +AutoNeural33_P_DepVar1 +
280655    +AutoNeural28_P_DepVar1 +
280656    +Neural28_P_DepVar1 +
280657    +Neural27_P_DepVar1 +
280658    +AutoNeural27_P_DepVar1
280659    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural32_P_DepVar1 + AutoNeural29_P_DepVar1 + 
AutoNeural33_P_DepVar1 + AutoNeural28_P_DepVar1 + Neural28_P_DepVar1 + Neural27_P_DepVar1 + 
AutoNeural27_P_DepVar1 )/7;
280660    +P_DepVar0 = (
280661    +AutoNeural32_P_DepVar0 +
280662    +AutoNeural29_P_DepVar0 +
280663    +AutoNeural33_P_DepVar0 +
280664    +AutoNeural28_P_DepVar0 +
280665    +Neural28_P_DepVar0 +
280666    +Neural27_P_DepVar0 +
280667    +AutoNeural27_P_DepVar0
280668    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural32_P_DepVar0 + AutoNeural29_P_DepVar0 + 
AutoNeural33_P_DepVar0 + AutoNeural28_P_DepVar0 + Neural28_P_DepVar0 + Neural27_P_DepVar0 + 
AutoNeural27_P_DepVar0 )/7;
280669    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280670    +* Ensmbl20: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Classification Vars;
280671    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280672    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
280673    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
280674    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
280675    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
280676    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
280677    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
280678    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
280679    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
280680    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
280681    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
280682    +end;
MPRINT(EM_DIAGRAM):   end;
280683    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
280684    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
280685    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
280686    +end;
MPRINT(EM_DIAGRAM):   end;
280687    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
280688    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280689    +* Ensmbl20: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Producing Unformatted variable;
280690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280691    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
280692    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
280693    +else
280694    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
280695    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280696    +* Ensmbl20: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing _WARN_ Variable;
280697    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280698    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
280699    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
280700    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
280701    +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
280701   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
280702    +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
280702   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
280703    +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
280703   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
280704    +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
280704   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
280705    +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
280705   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
280706    +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
280706   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
280707    +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
280707   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
280708    +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
280708   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
280709    +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
280709   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
280710    +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
280710   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
280711    +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
280711   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
280712    +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
280712   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
280713    +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
280713   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
280714    +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
280714   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
280715    +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
280715   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
280716    +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
280716   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
280717    +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
280717   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
280718    +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
280718   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
280719    +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
280719   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
280720    +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
280720   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
280721    +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
280721   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
280722    +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
280722   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
280723    +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
280723   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
280724    +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
280724   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
280725    +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
280725   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
280726    +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
280726   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
280727    +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
280727   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
280728    +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
280728   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
280729    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280730    +* Ensmbl20: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Residual Vars;
280731    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280732    +if
280733    +F_DepVar NE '1'
280734    +AND F_DepVar NE '0'
280735    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
280736    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
280737    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
280738    +end;
MPRINT(EM_DIAGRAM):   end;
280739    +else do;
MPRINT(EM_DIAGRAM):   else do;
280740    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
280741    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
280742    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
280743    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
280744    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
280745    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
280746    +END;
MPRINT(EM_DIAGRAM):   END;
280747    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
280748     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL20_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL32_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
280749     quit;
280750     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
280751     filename emflow
280751   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring AUTONEURAL32_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280752     *------------------------------------------------------------*;
280753     * Ensmbl20: Scoring AUTONEURAL32_VALIDATE data;
280754     *------------------------------------------------------------*;
280755     data EMWS8.Ensmbl20_VALIDATE
280756     / view=EMWS8.Ensmbl20_VALIDATE
280757     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_VALIDATE / view=EMWS8.Ensmbl20_VALIDATE ;
280758     set EMWS8.AutoNeural32_VALIDATE
280759     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_VALIDATE ;
280760     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas.
280761    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280762    +* Ensmbl20: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Combine model for DepVar;
280763    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280764    +* Ensmbl20: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 1 of 7;
280765    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280767    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
280768    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
280769    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
280770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280771    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280772    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
280773    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
280774    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
280775    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280777    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
280778    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
280779    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
280780    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280781    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280782    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
280783    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
280784    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
280785    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280786    +
280787    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
280788    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
280788   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
280789    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
280790    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
280791    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
280792    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
280793    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
280794    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280795    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
280796    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
280797    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
280798    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280799    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280800    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
280801    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280802    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
280803    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
280804    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
280805    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280806    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
280807    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
280808    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
280809    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280810    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280811    +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
280812    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
280813    +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
280814    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280815    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
280816    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
280817    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
280818    +
280819    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
280820    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
280821    +
280822    +
280823    +/*----G_Marital_Status begin----*/
280824    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
280825    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
280826    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280827    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
280828    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
280829    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
280830    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
280831    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
280832    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
280833    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
280834    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
280835    +end;
MPRINT(EM_DIAGRAM):   end;
280836    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
280837    +/*----G_Marital_Status end----*/
280838    +
280839    +
280840    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
280841    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
280842    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
280843    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280844    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
280845    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
280846    +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
280847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
280848    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
280849    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
280850    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
280851    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
280852    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
280853    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
280854    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
280855    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
280856    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
280857    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
280858    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
280859    +LENGTH _WARN_ $4
280860    +      F_DepVar  $ 12
280861    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
280862    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
280863    +
280864    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
280865    +
280866    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
280867    +
280868    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
280869    +
280870    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
280871    +
280872    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
280873    +
280874    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
280875    +
280876    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
280877    +
280878    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
280879    +
280880    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
280881    +
280882    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
280883    +
280884    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
280885    +
280886    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
280887    +
280888    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
280889    +
280890    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
280891    +
280892    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
280893    +
280894    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
280895    +
280896    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
280897    +
280898    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
280899    +
280900    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
280901    +
280902    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
280903    +
280904    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
280905    +
280906    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
280907    +
280908    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
280909    +
280910    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
280911    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
280912    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
280913    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
280914    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
280915    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
280916    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280917    +end;
MPRINT(EM_DIAGRAM):   end;
280918    +else do;
MPRINT(EM_DIAGRAM):   else do;
280919    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
280920    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
280921    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
280922    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
280923    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
280924    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
280925    +   end;
MPRINT(EM_DIAGRAM):   end;
280926    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
280927    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
280928    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
280929    +   end;
MPRINT(EM_DIAGRAM):   end;
280930    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
280931    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
280932    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
280933    +   end;
MPRINT(EM_DIAGRAM):   end;
280934    +   else do;
MPRINT(EM_DIAGRAM):   else do;
280935    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
280936    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
280937    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
280938    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280939    +   end;
MPRINT(EM_DIAGRAM):   end;
280940    +end;
MPRINT(EM_DIAGRAM):   end;
280941    +
280942    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280943    +*** Checking missing input Interval
280944    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
280945    +
280946    +IF NMISS(
280947    +   AcceptedCmpTotal ,
280948    +   Frq ,
280949    +   Income ,
280950    +   Mnt ,
280951    +   MntGoldProds ,
280952    +   MntMeatProducts ,
280953    +   MntWines ,
280954    +   NumDistPurchases ,
280955    +   RFMstat ,
280956    +   RMntFrq ,
280957    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
280958    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
280959    +
280960    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
280961    +END;
MPRINT(EM_DIAGRAM):   END;
280962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280963    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
280964    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
280965    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
280966    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
280967    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
280968    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
280969    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
280970    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
280971    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
280972    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
280973    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
280974    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
280975    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
280976    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
280977    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
280978    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
280979    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
280980    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
280981    +END;
MPRINT(EM_DIAGRAM):   END;
280982    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
280983    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
280984    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
280985    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
280986    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
280987    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
280988    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
280989    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
280990    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
280991    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
280992    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
280993    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
280994    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
280995    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
280996    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
280997    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
280998    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
280999    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
281000    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
281001    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
281002    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
281003    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
281004    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
281005    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
281006    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
281007    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
281008    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
281009    +END;
MPRINT(EM_DIAGRAM):   END;
281010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281011    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
281012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281014    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
281015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281016    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281017    +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
281018    +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
281019    +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
281020    +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
281021    +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
281022    +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
281023    +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
281024    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
281025    +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
281026    +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
281027    +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
281028    +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
281029    +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
281030    +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
281031    +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
281032    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
281033    +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
281034    +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
281035    +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
281036    +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
281037    +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
281038    +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
281039    +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
281040    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
281041    +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
281042    +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
281043    +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
281044    +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
281045    +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
281046    +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
281047    +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
281048    +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
281049    +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
281050    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
281051    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
281052    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
281053    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
281054    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
281055    +END;
MPRINT(EM_DIAGRAM):   END;
281056    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281057    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
281058    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
281059    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
281060    +END;
MPRINT(EM_DIAGRAM):   END;
281061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281062    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
281063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281064    +
281065    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
281066    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
281067    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
281068    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
281069    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
281070    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281071    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
281072    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281073    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281074    +end;
MPRINT(EM_DIAGRAM):   end;
281075    +else do;
MPRINT(EM_DIAGRAM):   else do;
281076    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
281077    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
281078    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
281079    +   end;
MPRINT(EM_DIAGRAM):   end;
281080    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
281081    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
281082    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
281083    +   end;
MPRINT(EM_DIAGRAM):   end;
281084    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281085    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281086    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281087    +   end;
MPRINT(EM_DIAGRAM):   end;
281088    +end;
MPRINT(EM_DIAGRAM):   end;
281089    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281090    +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
281091    +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
281092    +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
281093    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
281094    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
281095    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
281096    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
281097    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
281098    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
281099    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
281100    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
281101    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
281102    +END;
MPRINT(EM_DIAGRAM):   END;
281103    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281104    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
281105    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
281106    +END;
MPRINT(EM_DIAGRAM):   END;
281107    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
281108    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
281109    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
281110    +END;
MPRINT(EM_DIAGRAM):   END;
281111    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
281112    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
281113    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
281114    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
281115    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
281116    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
281117    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
281118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281119    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
281120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281121    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
281122    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
281123    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
281124    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
281125    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
281126    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
281127    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
281128    +END;
MPRINT(EM_DIAGRAM):   END;
281129    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281130    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
281131    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281132    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
281133    +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
281134    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281135    +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
281136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281137    +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
281138    +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
281139    +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
281140    +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
281141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281142    +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
281143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281144    +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
281145    +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
281146    +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
281147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281148    +* Ensmbl20: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 2 of 7;
281149    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281150    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281151    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
281152    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
281153    +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
281154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281155    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281156    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
281157    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281158    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
281159    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
281160    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
281161    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
281162    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
281163    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
281164    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
281165    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
281166    +LENGTH _WARN_ $4
281167    +      F_DepVar  $ 12
281168    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
281169    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
281170    +
281171    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
281172    +
281173    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
281174    +
281175    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
281176    +
281177    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
281178    +
281179    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
281180    +
281181    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
281182    +
281183    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
281184    +
281185    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
281186    +
281187    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
281188    +
281189    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
281190    +
281191    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
281192    +
281193    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
281194    +
281195    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
281196    +
281197    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
281198    +
281199    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
281200    +
281201    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
281202    +
281203    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
281204    +
281205    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
281206    +
281207    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
281208    +
281209    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
281210    +
281211    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
281212    +
281213    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
281214    +
281215    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
281216    +
281217    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
281218    +
281219    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
281220    +
281221    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
281222    +
281223    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
281224    +
281225    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
281226    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
281227    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
281228    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
281229    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
281230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281232    +end;
MPRINT(EM_DIAGRAM):   end;
281233    +else do;
MPRINT(EM_DIAGRAM):   else do;
281234    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281235    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
281236    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281237    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
281238    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
281239    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
281240    +   end;
MPRINT(EM_DIAGRAM):   end;
281241    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
281242    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
281243    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
281244    +   end;
MPRINT(EM_DIAGRAM):   end;
281245    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281246    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
281247    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
281248    +   end;
MPRINT(EM_DIAGRAM):   end;
281249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281250    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
281251    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
281252    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281253    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281254    +   end;
MPRINT(EM_DIAGRAM):   end;
281255    +end;
MPRINT(EM_DIAGRAM):   end;
281256    +
281257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281258    +*** Checking missing input Interval
281259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
281260    +
281261    +IF NMISS(
281262    +   AcceptedCmpTotal ,
281263    +   Frq ,
281264    +   Income ,
281265    +   Mnt ,
281266    +   MntGoldProds ,
281267    +   MntMeatProducts ,
281268    +   MntWines ,
281269    +   NumDistPurchases ,
281270    +   RFMstat ,
281271    +   RMntFrq ,
281272    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
281273    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
281274    +
281275    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281276    +END;
MPRINT(EM_DIAGRAM):   END;
281277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281278    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
281279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281280    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281281    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
281282    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
281283    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
281284    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
281285    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
281286    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
281287    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
281288    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
281289    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
281290    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
281291    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
281292    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
281293    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
281294    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
281295    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
281296    +END;
MPRINT(EM_DIAGRAM):   END;
281297    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281298    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
281299    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
281300    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
281301    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
281302    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
281303    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
281304    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
281305    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
281306    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
281307    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
281308    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
281309    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
281310    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
281311    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
281312    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
281313    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
281314    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
281315    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
281316    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
281317    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
281318    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
281319    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
281320    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
281321    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
281322    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
281323    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
281324    +END;
MPRINT(EM_DIAGRAM):   END;
281325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281326    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
281327    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281329    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
281330    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281331    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281332    +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
281333    +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
281334    +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
281335    +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
281336    +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
281337    +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
281338    +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
281339    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
281340    +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
281341    +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
281342    +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
281343    +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
281344    +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
281345    +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
281346    +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
281347    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
281348    +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
281349    +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
281350    +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
281351    +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
281352    +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
281353    +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
281354    +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
281355    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
281356    +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
281357    +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
281358    +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
281359    +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
281360    +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
281361    +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
281362    +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
281363    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
281364    +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
281365    +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
281366    +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
281367    +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
281368    +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
281369    +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
281370    +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
281371    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
281372    +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
281373    +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
281374    +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
281375    +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
281376    +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
281377    +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
281378    +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
281379    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
281380    +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
281381    +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
281382    +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
281383    +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
281384    +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
281385    +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
281386    +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
281387    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
281388    +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
281389    +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
281390    +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
281391    +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
281392    +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
281393    +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
281394    +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
281395    +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
281396    +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
281397    +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
281398    +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
281399    +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
281400    +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
281401    +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
281402    +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
281403    +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
281404    +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
281405    +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
281406    +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
281407    +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
281408    +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
281409    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
281410    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
281411    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
281412    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
281413    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
281414    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
281415    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
281416    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
281417    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
281418    +END;
MPRINT(EM_DIAGRAM):   END;
281419    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281420    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
281421    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
281422    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
281423    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
281424    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
281425    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
281426    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
281427    +END;
MPRINT(EM_DIAGRAM):   END;
281428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281429    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
281430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281431    +
281432    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
281433    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
281434    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
281435    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
281436    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
281437    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281438    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
281439    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281440    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281441    +end;
MPRINT(EM_DIAGRAM):   end;
281442    +else do;
MPRINT(EM_DIAGRAM):   else do;
281443    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
281444    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
281445    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
281446    +   end;
MPRINT(EM_DIAGRAM):   end;
281447    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
281448    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
281449    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
281450    +   end;
MPRINT(EM_DIAGRAM):   end;
281451    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281452    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281453    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281454    +   end;
MPRINT(EM_DIAGRAM):   end;
281455    +end;
MPRINT(EM_DIAGRAM):   end;
281456    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281457    +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
281458    +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
281459    +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
281460    +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
281461    +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
281462    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
281463    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
281464    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
281465    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
281466    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
281467    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
281468    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
281469    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
281470    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
281471    +END;
MPRINT(EM_DIAGRAM):   END;
281472    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281473    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
281474    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
281475    +END;
MPRINT(EM_DIAGRAM):   END;
281476    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
281477    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
281478    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
281479    +END;
MPRINT(EM_DIAGRAM):   END;
281480    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
281481    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
281482    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
281483    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
281484    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
281485    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
281486    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
281487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281488    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
281489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281490    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
281491    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
281492    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
281493    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
281494    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
281495    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
281496    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
281497    +END;
MPRINT(EM_DIAGRAM):   END;
281498    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281499    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
281500    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281501    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
281502    +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
281503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281504    +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
281505    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281506    +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
281507    +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
281508    +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
281509    +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
281510    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281511    +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
281512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281513    +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
281514    +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
281515    +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
281516    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281517    +* Ensmbl20: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 3 of 7;
281518    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281519    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281520    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
281521    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
281522    +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
281523    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281524    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281525    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
281526    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281527    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
281528    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
281529    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
281530    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
281531    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
281532    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
281533    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
281534    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
281535    +LENGTH _WARN_ $4
281536    +      F_DepVar  $ 12
281537    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
281538    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
281539    +
281540    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
281541    +
281542    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
281543    +
281544    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
281545    +
281546    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
281547    +
281548    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
281549    +
281550    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
281551    +
281552    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
281553    +
281554    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
281555    +
281556    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
281557    +
281558    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
281559    +
281560    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
281561    +
281562    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
281563    +
281564    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
281565    +
281566    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
281567    +
281568    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
281569    +
281570    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
281571    +
281572    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
281573    +
281574    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
281575    +
281576    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
281577    +
281578    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
281579    +
281580    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
281581    +
281582    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
281583    +
281584    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
281585    +
281586    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
281587    +
281588    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
281589    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
281590    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
281591    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
281592    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
281593    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281595    +end;
MPRINT(EM_DIAGRAM):   end;
281596    +else do;
MPRINT(EM_DIAGRAM):   else do;
281597    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281598    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
281599    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281600    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
281601    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
281602    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
281603    +   end;
MPRINT(EM_DIAGRAM):   end;
281604    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
281605    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
281606    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
281607    +   end;
MPRINT(EM_DIAGRAM):   end;
281608    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281609    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
281610    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
281611    +   end;
MPRINT(EM_DIAGRAM):   end;
281612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281613    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
281614    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
281615    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281616    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281617    +   end;
MPRINT(EM_DIAGRAM):   end;
281618    +end;
MPRINT(EM_DIAGRAM):   end;
281619    +
281620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281621    +*** Checking missing input Interval
281622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
281623    +
281624    +IF NMISS(
281625    +   AcceptedCmpTotal ,
281626    +   Frq ,
281627    +   Income ,
281628    +   Mnt ,
281629    +   MntGoldProds ,
281630    +   MntMeatProducts ,
281631    +   MntWines ,
281632    +   NumDistPurchases ,
281633    +   RFMstat ,
281634    +   RMntFrq ,
281635    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
281636    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
281637    +
281638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281639    +END;
MPRINT(EM_DIAGRAM):   END;
281640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281641    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
281642    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281643    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281644    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
281645    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
281646    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
281647    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
281648    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
281649    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
281650    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
281651    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
281652    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
281653    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
281654    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
281655    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
281656    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
281657    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
281658    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
281659    +END;
MPRINT(EM_DIAGRAM):   END;
281660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281661    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
281662    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
281663    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
281664    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
281665    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
281666    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
281667    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
281668    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
281669    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
281670    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
281671    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
281672    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
281673    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
281674    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
281675    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
281676    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
281677    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
281678    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
281679    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
281680    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
281681    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
281682    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
281683    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
281684    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
281685    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
281686    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
281687    +END;
MPRINT(EM_DIAGRAM):   END;
281688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281689    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
281690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281691    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281692    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
281693    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281694    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281695    +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
281696    +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
281697    +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
281698    +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
281699    +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
281700    +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
281701    +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
281702    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
281703    +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
281704    +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
281705    +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
281706    +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
281707    +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
281708    +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
281709    +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
281710    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
281711    +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
281712    +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
281713    +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
281714    +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
281715    +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
281716    +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
281717    +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
281718    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
281719    +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
281720    +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
281721    +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
281722    +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
281723    +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
281724    +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
281725    +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
281726    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
281727    +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
281728    +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
281729    +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
281730    +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
281731    +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
281732    +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
281733    +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
281734    +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
281735    +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
281736    +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
281737    +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
281738    +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
281739    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
281740    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
281741    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
281742    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
281743    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
281744    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
281745    +END;
MPRINT(EM_DIAGRAM):   END;
281746    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281747    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
281748    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
281749    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
281750    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
281751    +END;
MPRINT(EM_DIAGRAM):   END;
281752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281753    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
281754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281755    +
281756    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
281757    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
281758    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
281759    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
281760    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
281761    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281762    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
281763    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281764    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281765    +end;
MPRINT(EM_DIAGRAM):   end;
281766    +else do;
MPRINT(EM_DIAGRAM):   else do;
281767    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
281768    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
281769    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
281770    +   end;
MPRINT(EM_DIAGRAM):   end;
281771    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
281772    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
281773    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
281774    +   end;
MPRINT(EM_DIAGRAM):   end;
281775    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281776    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
281777    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
281778    +   end;
MPRINT(EM_DIAGRAM):   end;
281779    +end;
MPRINT(EM_DIAGRAM):   end;
281780    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281781    +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
281782    +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
281783    +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
281784    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
281785    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
281786    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
281787    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
281788    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
281789    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
281790    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
281791    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
281792    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
281793    +END;
MPRINT(EM_DIAGRAM):   END;
281794    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281795    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
281796    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
281797    +END;
MPRINT(EM_DIAGRAM):   END;
281798    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
281799    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
281800    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
281801    +END;
MPRINT(EM_DIAGRAM):   END;
281802    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
281803    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
281804    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
281805    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
281806    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
281807    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
281808    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
281809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281810    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
281811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281812    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
281813    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
281814    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
281815    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
281816    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
281817    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
281818    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
281819    +END;
MPRINT(EM_DIAGRAM):   END;
281820    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281821    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
281822    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
281823    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
281824    +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
281825    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281826    +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
281827    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281828    +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
281829    +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
281830    +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
281831    +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
281832    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281833    +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
281834    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281835    +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
281836    +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
281837    +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
281838    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281839    +* Ensmbl20: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 4 of 7;
281840    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281841    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281842    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
281843    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
281844    +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
281845    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281846    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281847    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
281848    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281849    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
281850    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
281851    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
281852    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
281853    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
281854    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
281855    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
281856    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
281857    +LENGTH _WARN_ $4
281858    +      F_DepVar  $ 12
281859    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
281860    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
281861    +
281862    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
281863    +
281864    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
281865    +
281866    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
281867    +
281868    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
281869    +
281870    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
281871    +
281872    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
281873    +
281874    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
281875    +
281876    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
281877    +
281878    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
281879    +
281880    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
281881    +
281882    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
281883    +
281884    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
281885    +
281886    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
281887    +
281888    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
281889    +
281890    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
281891    +
281892    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
281893    +
281894    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
281895    +
281896    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
281897    +
281898    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
281899    +
281900    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
281901    +
281902    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
281903    +
281904    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
281905    +
281906    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
281907    +
281908    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
281909    +
281910    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
281911    +
281912    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
281913    +
281914    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
281915    +
281916    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
281917    +
281918    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
281919    +
281920    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
281921    +
281922    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
281923    +
281924    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
281925    +
281926    +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
281927    +
281928    +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
281929    +
281930    +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
281931    +
281932    +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
281933    +
281934    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
281935    +
281936    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
281937    +
281938    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
281939    +
281940    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
281941    +
281942    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
The SAS System

281943    +
281944    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
281945    +
281946    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
281947    +
281948    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
281949    +
281950    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
281951    +
281952    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
281953    +
281954    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
281955    +
281956    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
281957    +
281958    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
281959    +
281960    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
281961    +
281962    +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
281963    +
281964    +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
281965    +
281966    +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
281967    +
281968    +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
281969    +
281970    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
281971    +
281972    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
281973    +
281974    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
281975    +
281976    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
281977    +
281978    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
281979    +
281980    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
281981    +
281982    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
281983    +
281984    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
281985    +
281986    +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
281987    +
281988    +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
281989    +
281990    +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
281991    +
281992    +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
281993    +
281994    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
281995    +
281996    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
281997    +
281998    +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
281999    +
282000    +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
282001    +
282002    +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
282003    +
282004    +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
282005    +
282006    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
282007    +
282008    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
282009    +
282010    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
282011    +
282012    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
282013    +
282014    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
282015    +
282016    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
282017    +
282018    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
282019    +
282020    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
282021    +
282022    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
282023    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
282024    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
282025    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
282026    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
282027    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282028    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282029    +end;
MPRINT(EM_DIAGRAM):   end;
282030    +else do;
MPRINT(EM_DIAGRAM):   else do;
282031    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282032    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
282033    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282034    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
282035    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
282036    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
282037    +   end;
MPRINT(EM_DIAGRAM):   end;
282038    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
282039    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
282040    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
282041    +   end;
MPRINT(EM_DIAGRAM):   end;
282042    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
282043    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
282044    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
282045    +   end;
MPRINT(EM_DIAGRAM):   end;
282046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282047    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
282048    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
282049    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282050    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282051    +   end;
MPRINT(EM_DIAGRAM):   end;
282052    +end;
MPRINT(EM_DIAGRAM):   end;
282053    +
282054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282055    +*** Checking missing input Interval
282056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
282057    +
282058    +IF NMISS(
282059    +   AcceptedCmpTotal ,
282060    +   Frq ,
282061    +   Income ,
282062    +   Mnt ,
282063    +   MntGoldProds ,
282064    +   MntMeatProducts ,
282065    +   MntWines ,
282066    +   NumDistPurchases ,
282067    +   RFMstat ,
282068    +   RMntFrq ,
282069    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
282070    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
282071    +
282072    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282073    +END;
MPRINT(EM_DIAGRAM):   END;
282074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282075    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
282076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282078    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282079    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
282080    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282081    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
282082    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282083    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
282084    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
282085    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282086    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
282087    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
282088    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
282089    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
282090    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
282091    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
282092    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282093    +END;
MPRINT(EM_DIAGRAM):   END;
282094    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282095    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
282096    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282097    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
282098    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
282099    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282100    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
282101    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
282102    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
282103    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282104    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
282105    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
282106    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
282107    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
282108    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282109    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
282110    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
282111    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
282112    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
282113    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
282114    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
282115    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
282116    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
282117    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
282118    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
282119    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
282120    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282121    +END;
MPRINT(EM_DIAGRAM):   END;
282122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282123    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
282124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282126    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
282127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282128    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282129    +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
282130    +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
282131    +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
282132    +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
282133    +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
282134    +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
282135    +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
282136    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
282137    +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
282138    +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
282139    +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
282140    +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
282141    +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
282142    +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
282143    +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
282144    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
282145    +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
282146    +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
282147    +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
282148    +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
282149    +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
282150    +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
282151    +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
282152    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
282153    +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
282154    +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
282155    +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
282156    +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
282157    +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
282158    +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
282159    +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
282160    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
282161    +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
282162    +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
282163    +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
282164    +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
282165    +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
282166    +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
282167    +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
282168    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
282169    +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
282170    +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
282171    +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
282172    +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
282173    +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
282174    +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
282175    +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
282176    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
282177    +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
282178    +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
282179    +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
282180    +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
282181    +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
282182    +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
282183    +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
282184    +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
282185    +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
282186    +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
282187    +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
282188    +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
282189    +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
282190    +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
282191    +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
282192    +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
282193    +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
282194    +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
282195    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282196    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282197    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
282198    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
282199    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
282200    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
282201    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
282202    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
282203    +END;
MPRINT(EM_DIAGRAM):   END;
282204    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282205    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
282206    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
282207    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
282208    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
282209    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
282210    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
282211    +END;
MPRINT(EM_DIAGRAM):   END;
282212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282213    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
282214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282215    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282216    +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
282217    +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
282218    +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
282219    +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
282220    +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
282221    +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
282222    +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
282223    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
282224    +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
282225    +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
282226    +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
282227    +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
282228    +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
282229    +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
282230    +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
282231    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
282232    +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
282233    +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
282234    +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
282235    +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
282236    +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
282237    +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
282238    +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
282239    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
282240    +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
282241    +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
282242    +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
282243    +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
282244    +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
282245    +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
282246    +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
282247    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
282248    +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
282249    +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
282250    +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
282251    +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
282252    +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
282253    +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
282254    +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
282255    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
282256    +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
282257    +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
282258    +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
282259    +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
282260    +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
282261    +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
282262    +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
282263    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
282264    +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
282265    +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
282266    +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
282267    +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
282268    +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
282269    +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
282270    +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
282271    +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
282272    +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
282273    +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
282274    +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
282275    +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
282276    +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
282277    +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
282278    +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
282279    +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
282280    +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
282281    +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
282282    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282283    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282284    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
282285    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
282286    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
282287    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
282288    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
282289    +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
282290    +END;
MPRINT(EM_DIAGRAM):   END;
282291    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282292    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
282293    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
282294    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
282295    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
282296    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
282297    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
282298    +END;
MPRINT(EM_DIAGRAM):   END;
282299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282300    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
282301    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282302    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282303    +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
282304    +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
282305    +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
282306    +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
282307    +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
282308    +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
282309    +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
282310    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
282311    +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
282312    +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
282313    +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
282314    +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
282315    +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
282316    +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
282317    +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
282318    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
282319    +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
282320    +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
282321    +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
282322    +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
282323    +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
282324    +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
282325    +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
282326    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
282327    +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
282328    +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
282329    +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
282330    +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
282331    +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
282332    +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
282333    +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
282334    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
282335    +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
282336    +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
282337    +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
282338    +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
282339    +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
282340    +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
282341    +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
282342    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
282343    +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
282344    +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
282345    +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
282346    +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
282347    +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
282348    +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
282349    +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
282350    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
282351    +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
282352    +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
282353    +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
282354    +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
282355    +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
282356    +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
282357    +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
282358    +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
282359    +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
282360    +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
282361    +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
282362    +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
282363    +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
282364    +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
282365    +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
282366    +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
282367    +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
282368    +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
282369    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282370    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282371    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
282372    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
282373    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
282374    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
282375    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
282376    +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
282377    +END;
MPRINT(EM_DIAGRAM):   END;
282378    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282379    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
282380    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
282381    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
282382    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
282383    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
282384    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
282385    +END;
MPRINT(EM_DIAGRAM):   END;
282386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282387    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
282388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282389    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282390    +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
282391    +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
282392    +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
282393    +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
282394    +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
282395    +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
282396    +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
282397    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
282398    +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
282399    +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
282400    +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
282401    +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
282402    +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
282403    +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
282404    +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
282405    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
282406    +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
282407    +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
282408    +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
282409    +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
282410    +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
282411    +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
282412    +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
282413    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
282414    +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
282415    +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
282416    +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
282417    +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
282418    +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
282419    +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
282420    +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
282421    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
282422    +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
282423    +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
282424    +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
282425    +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
282426    +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
282427    +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
282428    +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
282429    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
282430    +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
282431    +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
282432    +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
282433    +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
282434    +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
282435    +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
282436    +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
282437    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
282438    +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
282439    +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
282440    +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
282441    +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
282442    +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
282443    +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
282444    +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
282445    +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
282446    +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
282447    +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
282448    +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
282449    +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
282450    +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
282451    +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
282452    +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
282453    +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
282454    +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
282455    +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
282456    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
282457    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
282458    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
282459    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
282460    +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
282461    +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
282462    +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
282463    +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
282464    +END;
MPRINT(EM_DIAGRAM):   END;
282465    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282466    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
282467    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
282468    +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
282469    +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
282470    +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
282471    +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
282472    +END;
MPRINT(EM_DIAGRAM):   END;
282473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282474    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
282475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282476    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282477    +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
282478    +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
282479    +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
282480    +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
282481    +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
282482    +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
282483    +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
282484    +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
282485    +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
282486    +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
282487    +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
282488    +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
282489    +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
282490    +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
282491    +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
282492    +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
282493    +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
282494    +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
282495    +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
282496    +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
282497    +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
282498    +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
282499    +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
282500    +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
282501    +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
282502    +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
282503    +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
282504    +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
282505    +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
282506    +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
282507    +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
282508    +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
282509    +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
282510    +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
282511    +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
282512    +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
282513    +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
282514    +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
282515    +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
282516    +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
282517    +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
282518    +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
282519    +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
282520    +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
282521    +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
282522    +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
282523    +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
282524    +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
282525    +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
282526    +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
282527    +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
282528    +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
282529    +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
282530    +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
282531    +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
282532    +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
282533    +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
282534    +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
282535    +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
282536    +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
282537    +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
282538    +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
282539    +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
282540    +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
282541    +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
282542    +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
282543    +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
282544    +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
282545    +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
282546    +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
282547    +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
282548    +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
282549    +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
282550    +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
282551    +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
282552    +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
282553    +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
282554    +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
282555    +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
282556    +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
282557    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
282558    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
282559    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282560    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
282561    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
282562    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
282563    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
282564    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
282565    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
282566    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
282567    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
282568    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
282569    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
282570    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
282571    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
282572    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
282573    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
282574    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
282575    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
282576    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
282577    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
282578    +END;
MPRINT(EM_DIAGRAM):   END;
282579    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282580    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
282581    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
282582    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
282583    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
282584    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
282585    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
282586    +END;
MPRINT(EM_DIAGRAM):   END;
282587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282588    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
282589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282590    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282591    +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
282592    +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
282593    +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
282594    +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
282595    +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
282596    +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
282597    +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
282598    +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
282599    +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
282600    +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
282601    +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
282602    +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
282603    +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
282604    +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
282605    +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
282606    +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
282607    +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
282608    +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
282609    +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
282610    +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
282611    +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
282612    +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
282613    +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
282614    +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
282615    +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
282616    +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
282617    +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
282618    +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
282619    +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
282620    +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
282621    +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
282622    +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
282623    +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
282624    +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
282625    +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
282626    +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
282627    +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
282628    +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
282629    +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
282630    +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
282631    +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
282632    +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
282633    +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
282634    +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
282635    +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
282636    +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
282637    +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
282638    +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
282639    +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
282640    +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
282641    +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
282642    +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
282643    +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
282644    +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
282645    +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
282646    +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
282647    +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
282648    +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
282649    +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
282650    +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
282651    +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
282652    +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
282653    +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
282654    +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
282655    +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
282656    +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
282657    +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
282658    +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
282659    +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
282660    +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
282661    +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
282662    +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
282663    +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
282664    +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
282665    +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
282666    +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
282667    +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
282668    +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
282669    +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
282670    +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
282671    +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
282672    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
282673    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282674    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
282675    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
282676    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
282677    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
282678    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
282679    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
282680    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
282681    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
282682    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
282683    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
282684    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
282685    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
282686    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
282687    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
282688    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
282689    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
282690    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
282691    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
282692    +END;
MPRINT(EM_DIAGRAM):   END;
282693    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282694    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
282695    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
282696    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
282697    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
282698    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
282699    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
282700    +END;
MPRINT(EM_DIAGRAM):   END;
282701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282702    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
282703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282704    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282705    +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
282706    +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
282707    +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
282708    +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
282709    +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
282710    +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
282711    +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
282712    +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
282713    +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
282714    +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
282715    +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
282716    +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
282717    +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
282718    +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
282719    +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
282720    +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
282721    +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
282722    +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
282723    +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
282724    +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
282725    +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
282726    +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
282727    +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
282728    +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
282729    +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
282730    +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
282731    +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
282732    +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
282733    +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
282734    +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
282735    +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
282736    +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
282737    +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
282738    +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
282739    +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
282740    +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
282741    +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
282742    +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
282743    +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
282744    +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
282745    +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
282746    +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
282747    +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
282748    +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
282749    +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
282750    +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
282751    +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
282752    +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
282753    +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
282754    +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
282755    +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
282756    +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
282757    +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
282758    +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
282759    +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
282760    +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
282761    +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
282762    +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
282763    +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
282764    +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
282765    +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
282766    +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
282767    +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
282768    +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
282769    +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
282770    +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
282771    +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
282772    +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
282773    +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
282774    +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
282775    +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
282776    +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
282777    +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
282778    +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
282779    +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
282780    +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
282781    +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
282782    +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
282783    +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
282784    +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
282785    +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
282786    +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
282787    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282788    +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
282789    +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
282790    +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
282791    +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
282792    +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
282793    +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
282794    +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
282795    +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
282796    +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
282797    +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
282798    +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
282799    +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
282800    +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
282801    +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
282802    +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
282803    +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
282804    +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
282805    +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
282806    +END;
MPRINT(EM_DIAGRAM):   END;
282807    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282808    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
282809    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
282810    +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
282811    +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
282812    +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
282813    +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
282814    +END;
MPRINT(EM_DIAGRAM):   END;
282815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282816    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
282817    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282818    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282819    +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
282820    +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
282821    +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
282822    +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
282823    +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
282824    +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
282825    +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
282826    +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
282827    +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
282828    +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
282829    +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
282830    +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
282831    +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
282832    +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
282833    +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
282834    +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
282835    +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
282836    +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
282837    +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
282838    +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
282839    +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
282840    +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
282841    +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
282842    +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
282843    +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
282844    +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
282845    +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
282846    +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
282847    +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
282848    +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
282849    +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
282850    +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
282851    +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
282852    +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
282853    +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
282854    +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
282855    +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
282856    +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
282857    +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
282858    +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
282859    +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
282860    +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
282861    +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
282862    +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
282863    +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
282864    +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
282865    +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
282866    +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
282867    +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
282868    +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
282869    +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
282870    +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
282871    +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
282872    +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
282873    +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
282874    +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
282875    +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
282876    +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
282877    +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
282878    +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
282879    +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
282880    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
282881    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282882    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
282883    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
282884    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
282885    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
282886    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
282887    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
282888    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
282889    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
282890    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
282891    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
282892    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
282893    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
282894    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
282895    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
282896    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
282897    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
282898    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
282899    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
282900    +END;
MPRINT(EM_DIAGRAM):   END;
282901    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282902    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
282903    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
282904    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
282905    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
282906    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
282907    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
282908    +END;
MPRINT(EM_DIAGRAM):   END;
282909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282910    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
282911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282912    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282913    +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
282914    +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
282915    +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
282916    +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
282917    +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
282918    +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
282919    +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
282920    +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
282921    +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
282922    +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
282923    +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
282924    +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
282925    +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
282926    +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
282927    +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
282928    +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
282929    +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
282930    +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
282931    +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
282932    +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
282933    +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
282934    +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
282935    +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
282936    +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
282937    +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
282938    +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
282939    +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
282940    +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
282941    +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
282942    +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
282943    +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
282944    +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
282945    +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
282946    +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
282947    +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
282948    +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
282949    +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
282950    +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
282951    +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
282952    +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
282953    +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
282954    +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
282955    +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
282956    +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
282957    +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
282958    +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
282959    +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
282960    +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
282961    +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
282962    +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
282963    +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
282964    +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
282965    +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
282966    +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
282967    +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
282968    +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
282969    +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
282970    +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
282971    +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
282972    +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
282973    +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
282974    +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
282975    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282976    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
282977    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
282978    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
282979    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
282980    +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
282981    +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
282982    +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
282983    +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
282984    +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
282985    +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
282986    +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
282987    +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
282988    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
282989    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
282990    +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
282991    +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
282992    +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
282993    +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
282994    +END;
MPRINT(EM_DIAGRAM):   END;
282995    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282996    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
282997    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
282998    +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
282999    +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
283000    +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
283001    +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
283002    +END;
MPRINT(EM_DIAGRAM):   END;
283003    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283004    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
283005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283006    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283007    +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
283008    +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
283009    +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
283010    +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
283011    +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
283012    +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
283013    +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
283014    +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
283015    +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
283016    +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
283017    +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
283018    +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
283019    +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
283020    +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
283021    +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
283022    +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
283023    +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
283024    +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
283025    +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
283026    +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
283027    +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
283028    +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
283029    +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
283030    +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
283031    +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
283032    +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
283033    +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
283034    +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
283035    +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
283036    +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
283037    +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
283038    +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
283039    +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
283040    +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
283041    +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
283042    +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
283043    +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
283044    +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
283045    +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
283046    +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
283047    +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
283048    +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
283049    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
283050    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
283051    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
283052    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
283053    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
283054    +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
283055    +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
283056    +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
283057    +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
283058    +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
283059    +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
283060    +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
283061    +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
283062    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
283063    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
283064    +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
283065    +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
283066    +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
283067    +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
283068    +END;
MPRINT(EM_DIAGRAM):   END;
283069    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283070    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
283071    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
283072    +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
283073    +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
283074    +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
283075    +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
283076    +END;
MPRINT(EM_DIAGRAM):   END;
283077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283078    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
283079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283080    +
283081    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
283082    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
283083    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283084    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
283085    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
283086    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283087    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
283088    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283089    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283090    +end;
MPRINT(EM_DIAGRAM):   end;
283091    +else do;
MPRINT(EM_DIAGRAM):   else do;
283092    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
283093    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
283094    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
283095    +   end;
MPRINT(EM_DIAGRAM):   end;
283096    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
283097    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
283098    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
283099    +   end;
MPRINT(EM_DIAGRAM):   end;
283100    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283101    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283102    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283103    +   end;
MPRINT(EM_DIAGRAM):   end;
283104    +end;
MPRINT(EM_DIAGRAM):   end;
283105    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283106    +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
283107    +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
283108    +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
283109    +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
283110    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
283111    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
283112    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
283113    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
283114    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
283115    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
283116    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
283117    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
283118    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
283119    +END;
MPRINT(EM_DIAGRAM):   END;
283120    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283121    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
283122    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
283123    +END;
MPRINT(EM_DIAGRAM):   END;
283124    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
283125    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
283126    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
283127    +END;
MPRINT(EM_DIAGRAM):   END;
283128    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
283129    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
283130    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
283131    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
283132    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
283133    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
283134    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
283135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283136    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
283137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283138    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
283139    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
283140    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
283141    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
283142    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
283143    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
283144    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
283145    +END;
MPRINT(EM_DIAGRAM):   END;
283146    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283147    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
283148    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283149    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
283150    +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
283151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283152    +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
283153    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283154    +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
283155    +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
283156    +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
283157    +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
283158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283159    +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
283160    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283161    +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
283162    +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
283163    +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
283164    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283165    +* Ensmbl20: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 5 of 7;
283166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283168    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
283169    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
283170    +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
283171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283172    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283173    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
283174    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283175    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
283176    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
283177    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
283178    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
283179    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
283180    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
283181    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
283182    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
283183    +LENGTH _WARN_ $4
283184    +      F_DepVar  $ 12
283185    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
283186    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
283187    +
283188    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
283189    +
283190    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
283191    +
283192    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
283193    +
283194    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
283195    +
283196    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
283197    +
283198    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
283199    +
283200    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
283201    +
283202    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
283203    +
283204    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
283205    +
283206    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
283207    +
283208    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
283209    +
283210    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
283211    +
283212    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
283213    +
283214    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
283215    +
283216    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
283217    +
283218    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
283219    +
283220    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
283221    +
283222    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
283223    +
283224    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
283225    +
283226    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283227    +
283228    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
283229    +
283230    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
283231    +
283232    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
283233    +
283234    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
283235    +
283236    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
283237    +
283238    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
283239    +
283240    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
283241    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
283242    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
283243    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
283244    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
283245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283247    +end;
MPRINT(EM_DIAGRAM):   end;
283248    +else do;
MPRINT(EM_DIAGRAM):   else do;
283249    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283250    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
283251    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283252    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
283253    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
283254    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
283255    +   end;
MPRINT(EM_DIAGRAM):   end;
283256    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
283257    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
283258    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
283259    +   end;
MPRINT(EM_DIAGRAM):   end;
283260    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
283261    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
283262    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
283263    +   end;
MPRINT(EM_DIAGRAM):   end;
283264    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283265    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
283266    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
283267    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283268    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283269    +   end;
MPRINT(EM_DIAGRAM):   end;
283270    +end;
MPRINT(EM_DIAGRAM):   end;
283271    +
283272    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283273    +*** Checking missing input Interval
283274    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
283275    +
283276    +IF NMISS(
283277    +   AcceptedCmpTotal ,
283278    +   Frq ,
283279    +   Income ,
283280    +   Mnt ,
283281    +   MntGoldProds ,
283282    +   MntMeatProducts ,
283283    +   MntWines ,
283284    +   NumDistPurchases ,
283285    +   RFMstat ,
283286    +   RMntFrq ,
283287    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
283288    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
283289    +
283290    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283291    +END;
MPRINT(EM_DIAGRAM):   END;
283292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283293    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
283294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283295    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283296    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283297    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
283298    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283299    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
283300    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283301    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
283302    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
283303    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283304    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
283305    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
283306    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
283307    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
283308    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
283309    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
283310    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283311    +END;
MPRINT(EM_DIAGRAM):   END;
283312    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283313    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
283314    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283315    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
283316    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
283317    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283318    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
283319    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
283320    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
283321    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283322    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
283323    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
283324    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
283325    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
283326    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283327    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
283328    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
283329    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
283330    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
283331    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
283332    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
283333    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
283334    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
283335    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
283336    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
283337    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
283338    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283339    +END;
MPRINT(EM_DIAGRAM):   END;
283340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283341    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
283342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283344    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
283345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283346    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283347    +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
283348    +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
283349    +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
283350    +          +    -0.05910355740416 * S_MntMeatProducts
283351    +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
283352    +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
283353    +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
283354    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq 
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds 
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 * 
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq + 
-1.02114645988925 * S_Recency ;
283355    +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
283356    +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
283357    +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
283358    +          +     0.09400377526937 * S_MntMeatProducts
283359    +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
283360    +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
283361    +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
283362    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq 
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds 
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 * 
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq + 
0.39055670382948 * S_Recency ;
283363    +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
283364    +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
283365    +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
283366    +          +    -1.62740823190029 * S_MntMeatProducts
283367    +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
283368    +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
283369    +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
283370    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq 
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds + 
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 * 
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq + 
0.17699292292485 * S_Recency ;
283371    +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
283372    +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
283373    +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
283374    +          +      0.3965117290354 * S_MntMeatProducts
283375    +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
283376    +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
283377    +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
283378    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq 
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds 
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 * 
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq + 
-0.4091862538023 * S_Recency ;
283379    +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
283380    +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
283381    +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
283382    +          +     1.44231431118379 * S_MntMeatProducts
283383    +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
283384    +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
283385    +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
283386    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq 
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds 
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 * 
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq + 
-0.38411527089703 * S_Recency ;
283387    +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
283388    +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
283389    +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
283390    +          +    -0.44244305964257 * S_MntMeatProducts
283391    +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
283392    +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
283393    +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
283394    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq 
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 * 
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines + 
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 * 
S_RMntFrq + -0.65176917675454 * S_Recency ;
283395    +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
283396    +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 * 
G_Marital_Status1 ;
283397    +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
283398    +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 * 
G_Marital_Status1 ;
283399    +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
283400    +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 * 
G_Marital_Status1 ;
283401    +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
283402    +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 * 
G_Marital_Status1 ;
283403    +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
283404    +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 * 
G_Marital_Status1 ;
283405    +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
283406    +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 * 
G_Marital_Status1 ;
283407    +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
283408    +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
283409    +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
283410    +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
283411    +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
283412    +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
283413    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
283414    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
283415    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
283416    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
283417    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
283418    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
283419    +END;
MPRINT(EM_DIAGRAM):   END;
283420    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283421    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
283422    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
283423    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
283424    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
283425    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
283426    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
283427    +END;
MPRINT(EM_DIAGRAM):   END;
283428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283429    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
283430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283431    +
283432    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
283433    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
283434    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283435    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
283436    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
283437    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283438    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
283439    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283440    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283441    +end;
MPRINT(EM_DIAGRAM):   end;
283442    +else do;
MPRINT(EM_DIAGRAM):   else do;
283443    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
283444    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
283445    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
283446    +   end;
MPRINT(EM_DIAGRAM):   end;
283447    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
283448    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
283449    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
283450    +   end;
MPRINT(EM_DIAGRAM):   end;
283451    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283452    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283453    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283454    +   end;
MPRINT(EM_DIAGRAM):   end;
283455    +end;
MPRINT(EM_DIAGRAM):   end;
283456    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283457    +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
283458    +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
283459    +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 + 
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361 
* H16 ;
283460    +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
283461    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
283462    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
283463    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
283464    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
283465    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
283466    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
283467    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
283468    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
283469    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
283470    +END;
MPRINT(EM_DIAGRAM):   END;
283471    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283472    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
283473    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
283474    +END;
MPRINT(EM_DIAGRAM):   END;
283475    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
283476    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
283477    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
283478    +END;
MPRINT(EM_DIAGRAM):   END;
283479    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
283480    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
283481    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
283482    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
283483    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
283484    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
283485    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
283486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283487    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
283488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283489    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
283490    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
283491    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
283492    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
283493    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
283494    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
283495    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
283496    +END;
MPRINT(EM_DIAGRAM):   END;
283497    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283498    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
283499    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283500    +drop
283501    +H11
283502    +H12
283503    +H13
283504    +H14
283505    +H15
283506    +H16
283507    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
283508    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
283509    +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
283510    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283511    +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
283512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283513    +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
283514    +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
283515    +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
283516    +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
283517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283518    +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
283519    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283520    +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
283521    +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
283522    +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
283523    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283524    +* Ensmbl20: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 6 of 7;
283525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283526    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283527    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
283528    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
283529    +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
283530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283531    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283532    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
283533    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283534    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
283535    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
283536    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
283537    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
283538    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
283539    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
283540    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
283541    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
283542    +LENGTH _WARN_ $4
283543    +      F_DepVar  $ 12
283544    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
283545    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
283546    +
283547    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
283548    +
283549    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
283550    +
283551    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
283552    +
283553    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
283554    +
283555    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
283556    +
283557    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
283558    +
283559    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
283560    +
283561    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
283562    +
283563    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
283564    +
283565    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
283566    +
283567    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
283568    +
283569    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
283570    +
283571    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
283572    +
283573    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
283574    +
283575    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
283576    +
283577    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
283578    +
283579    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
283580    +
283581    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
283582    +
283583    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283584    +
283585    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
283586    +
283587    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
283588    +
283589    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
283590    +
283591    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
283592    +
283593    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
283594    +
283595    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
283596    +
283597    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
283598    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
283599    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
283600    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
283601    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
283602    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283603    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283604    +end;
MPRINT(EM_DIAGRAM):   end;
283605    +else do;
MPRINT(EM_DIAGRAM):   else do;
283606    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283607    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
283608    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283609    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
283610    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
283611    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
283612    +   end;
MPRINT(EM_DIAGRAM):   end;
283613    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
283614    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
283615    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
283616    +   end;
MPRINT(EM_DIAGRAM):   end;
283617    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
283618    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
283619    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
283620    +   end;
MPRINT(EM_DIAGRAM):   end;
283621    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283622    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
283623    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
283624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283626    +   end;
MPRINT(EM_DIAGRAM):   end;
283627    +end;
MPRINT(EM_DIAGRAM):   end;
283628    +
283629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283630    +*** Checking missing input Interval
283631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
283632    +
283633    +IF NMISS(
283634    +   AcceptedCmpTotal ,
283635    +   Frq ,
283636    +   Income ,
283637    +   Mnt ,
283638    +   MntGoldProds ,
283639    +   MntMeatProducts ,
283640    +   MntWines ,
283641    +   NumDistPurchases ,
283642    +   RFMstat ,
283643    +   RMntFrq ,
283644    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
283645    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
283646    +
283647    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283648    +END;
MPRINT(EM_DIAGRAM):   END;
283649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283650    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
283651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283652    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283653    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283654    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
283655    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283656    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
283657    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283658    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
283659    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
283660    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283661    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
283662    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
283663    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
283664    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
283665    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
283666    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
283667    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283668    +END;
MPRINT(EM_DIAGRAM):   END;
283669    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283670    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
283671    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283672    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
283673    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
283674    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283675    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
283676    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
283677    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
283678    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
283679    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
283680    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
283681    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
283682    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
283683    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
283684    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
283685    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
283686    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
283687    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
283688    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
283689    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
283690    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
283691    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
283692    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
283693    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
283694    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
283695    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
283696    +END;
MPRINT(EM_DIAGRAM):   END;
283697    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283698    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
283699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283700    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283701    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
283702    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283703    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283704    +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
283705    +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
283706    +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
283707    +          +      0.5764056033267 * S_MntMeatProducts
283708    +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
283709    +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
283710    +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
283711    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq 
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds 
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 * 
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq + 
-0.66847972845367 * S_Recency ;
283712    +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
283713    +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
283714    +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
283715    +          +      0.5452732097143 * S_MntMeatProducts
283716    +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
283717    +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
283718    +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
283719    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq 
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds 
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 * 
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq + 
-0.36679237964697 * S_Recency ;
283720    +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
283721    +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
283722    +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
283723    +          +     -0.9040019705776 * S_MntMeatProducts
283724    +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
283725    +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
283726    +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
283727    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq 
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds 
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 * 
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq + 
0.36876094021551 * S_Recency ;
283728    +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
283729    +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
283730    +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
283731    +          +     1.04227983605332 * S_MntMeatProducts
283732    +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
283733    +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
283734    +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
283735    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq 
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 * 
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines + 
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 * 
S_RMntFrq + -0.00929531662146 * S_Recency ;
283736    +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
283737    +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
283738    +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
283739    +          +     0.23454153115636 * S_MntMeatProducts
283740    +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
283741    +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
283742    +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
283743    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq + 
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds + 
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 * 
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq + 
0.62117853933635 * S_Recency ;
283744    +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
283745    +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 * 
G_Marital_Status1 ;
283746    +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
283747    +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 * 
G_Marital_Status1 ;
283748    +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
283749    +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 * 
G_Marital_Status1 ;
283750    +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
283751    +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 * 
G_Marital_Status1 ;
283752    +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
283753    +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 * 
G_Marital_Status1 ;
283754    +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
283755    +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
283756    +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
283757    +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
283758    +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
283759    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
283760    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
283761    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
283762    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
283763    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
283764    +END;
MPRINT(EM_DIAGRAM):   END;
283765    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283766    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
283767    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
283768    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
283769    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
283770    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
283771    +END;
MPRINT(EM_DIAGRAM):   END;
283772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283773    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
283774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283775    +
283776    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
283777    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
283778    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283779    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
283780    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
283781    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283782    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
283783    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283784    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283785    +end;
MPRINT(EM_DIAGRAM):   end;
283786    +else do;
MPRINT(EM_DIAGRAM):   else do;
283787    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
283788    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
283789    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
283790    +   end;
MPRINT(EM_DIAGRAM):   end;
283791    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
283792    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
283793    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
283794    +   end;
MPRINT(EM_DIAGRAM):   end;
283795    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283796    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283797    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283798    +   end;
MPRINT(EM_DIAGRAM):   end;
283799    +end;
MPRINT(EM_DIAGRAM):   end;
283800    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283801    +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
283802    +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
283803    +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 + 
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
283804    +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
283805    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
283806    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
283807    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
283808    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
283809    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
283810    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
283811    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
283812    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
283813    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
283814    +END;
MPRINT(EM_DIAGRAM):   END;
283815    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283816    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
283817    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
283818    +END;
MPRINT(EM_DIAGRAM):   END;
283819    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
283820    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
283821    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
283822    +END;
MPRINT(EM_DIAGRAM):   END;
283823    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
283824    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
283825    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
283826    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
283827    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
283828    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
283829    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
283830    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283831    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
283832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283833    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
283834    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
283835    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
283836    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
283837    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
283838    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
283839    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
283840    +END;
MPRINT(EM_DIAGRAM):   END;
283841    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283842    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
283843    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283844    +drop
283845    +H11
283846    +H12
283847    +H13
283848    +H14
283849    +H15
283850    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
283851    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
283852    +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
283853    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283854    +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
283855    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283856    +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
283857    +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
283858    +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
283859    +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
283860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283861    +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
283862    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283863    +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
283864    +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
283865    +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
283866    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283867    +* Ensmbl20: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 7 of 7;
283868    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283870    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
283871    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
283872    +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
283873    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
283874    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283875    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
283876    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
283877    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
283878    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
283879    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
283880    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
283881    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
283882    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
283883    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
283884    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
283885    +LENGTH _WARN_ $4
283886    +      F_DepVar  $ 12
283887    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
283888    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
283889    +
283890    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
283891    +
283892    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
283893    +
283894    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
283895    +
283896    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
283897    +
283898    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
283899    +
283900    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
283901    +
283902    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
283903    +
283904    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
283905    +
283906    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
283907    +
283908    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
283909    +
283910    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
283911    +
283912    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
283913    +
283914    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
283915    +
283916    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
283917    +
283918    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
283919    +
283920    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
283921    +
283922    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
283923    +
283924    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
283925    +
283926    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283927    +
283928    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
283929    +
283930    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
283931    +
283932    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
283933    +
283934    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
283935    +
283936    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
283937    +
283938    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
283939    +
283940    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
283941    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
283942    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
283943    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
283944    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
283945    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
283946    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283947    +end;
MPRINT(EM_DIAGRAM):   end;
283948    +else do;
MPRINT(EM_DIAGRAM):   else do;
283949    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
283950    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
283951    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283952    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
283953    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
283954    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
283955    +   end;
MPRINT(EM_DIAGRAM):   end;
283956    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
283957    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
283958    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
283959    +   end;
MPRINT(EM_DIAGRAM):   end;
283960    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
283961    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
283962    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
283963    +   end;
MPRINT(EM_DIAGRAM):   end;
283964    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283965    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
283966    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
283967    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
283968    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283969    +   end;
MPRINT(EM_DIAGRAM):   end;
283970    +end;
MPRINT(EM_DIAGRAM):   end;
283971    +
283972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283973    +*** Checking missing input Interval
283974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
283975    +
283976    +IF NMISS(
283977    +   AcceptedCmpTotal ,
283978    +   Frq ,
283979    +   Income ,
283980    +   Mnt ,
283981    +   MntGoldProds ,
283982    +   MntMeatProducts ,
283983    +   MntWines ,
283984    +   NumDistPurchases ,
283985    +   RFMstat ,
283986    +   RMntFrq ,
283987    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
283988    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
283989    +
283990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
283991    +END;
MPRINT(EM_DIAGRAM):   END;
283992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283993    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
283994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283996    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
283997    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
283998    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
283999    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
284000    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
284001    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
284002    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
284003    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
284004    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
284005    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
284006    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
284007    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
284008    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
284009    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
284010    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
284011    +END;
MPRINT(EM_DIAGRAM):   END;
284012    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284013    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
284014    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
284015    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
284016    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
284017    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
284018    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
284019    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
284020    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
284021    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
284022    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
284023    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
284024    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
284025    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
284026    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
284027    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
284028    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
284029    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
284030    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
284031    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
284032    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
284033    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
284034    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
284035    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
284036    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
284037    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
284038    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
284039    +END;
MPRINT(EM_DIAGRAM):   END;
284040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284041    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
284042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284044    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
284045    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284046    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284047    +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
284048    +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
284049    +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
284050    +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
284051    +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
284052    +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
284053    +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
284054    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
284055    +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
284056    +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
284057    +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
284058    +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
284059    +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
284060    +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
284061    +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
284062    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
284063    +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
284064    +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
284065    +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
284066    +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
284067    +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
284068    +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
284069    +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
284070    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
284071    +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
284072    +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
284073    +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
284074    +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
284075    +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
284076    +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
284077    +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
284078    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
284079    +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
284080    +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
284081    +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
284082    +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
284083    +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
284084    +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
284085    +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
284086    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
284087    +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
284088    +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
284089    +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
284090    +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
284091    +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
284092    +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
284093    +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
284094    +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
284095    +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
284096    +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
284097    +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
284098    +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
284099    +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
284100    +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
284101    +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
284102    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
284103    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
284104    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
284105    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
284106    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
284107    +END;
MPRINT(EM_DIAGRAM):   END;
284108    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284109    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
284110    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
284111    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
284112    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
284113    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
284114    +END;
MPRINT(EM_DIAGRAM):   END;
284115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284116    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
284117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284118    +
284119    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
284120    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
284121    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
284122    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
284123    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
284124    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
284125    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
284126    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
284127    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
284128    +end;
MPRINT(EM_DIAGRAM):   end;
284129    +else do;
MPRINT(EM_DIAGRAM):   else do;
284130    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
284131    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
284132    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
284133    +   end;
MPRINT(EM_DIAGRAM):   end;
284134    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
284135    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
284136    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
284137    +   end;
MPRINT(EM_DIAGRAM):   end;
284138    +   else do;
MPRINT(EM_DIAGRAM):   else do;
284139    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
284140    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
284141    +   end;
MPRINT(EM_DIAGRAM):   end;
284142    +end;
MPRINT(EM_DIAGRAM):   end;
284143    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284144    +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
284145    +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
284146    +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
284147    +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
284148    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
284149    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
284150    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
284151    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
284152    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
284153    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
284154    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
284155    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
284156    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
284157    +END;
MPRINT(EM_DIAGRAM):   END;
284158    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284159    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
284160    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
284161    +END;
MPRINT(EM_DIAGRAM):   END;
284162    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
284163    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
284164    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
284165    +END;
MPRINT(EM_DIAGRAM):   END;
284166    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
284167    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
284168    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
284169    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
284170    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
284171    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
284172    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
284173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284174    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
284175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284176    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
284177    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
284178    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
284179    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
284180    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
284181    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
284182    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
284183    +END;
MPRINT(EM_DIAGRAM):   END;
284184    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284185    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
284186    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284187    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
284188    +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
284189    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284190    +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
284191    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284192    +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
284193    +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
284194    +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
284195    +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
284196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284197    +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
284198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284199    +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
284200    +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
284201    +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
284202    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284203    +* Ensmbl20: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Average Posteriors of 7 models;
284204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284205    +P_DepVar1 = (
284206    +AutoNeural32_P_DepVar1 +
284207    +AutoNeural29_P_DepVar1 +
284208    +AutoNeural33_P_DepVar1 +
284209    +AutoNeural28_P_DepVar1 +
284210    +Neural28_P_DepVar1 +
284211    +Neural27_P_DepVar1 +
284212    +AutoNeural27_P_DepVar1
284213    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural32_P_DepVar1 + AutoNeural29_P_DepVar1 + 
AutoNeural33_P_DepVar1 + AutoNeural28_P_DepVar1 + Neural28_P_DepVar1 + Neural27_P_DepVar1 + 
AutoNeural27_P_DepVar1 )/7;
284214    +P_DepVar0 = (
284215    +AutoNeural32_P_DepVar0 +
284216    +AutoNeural29_P_DepVar0 +
284217    +AutoNeural33_P_DepVar0 +
284218    +AutoNeural28_P_DepVar0 +
284219    +Neural28_P_DepVar0 +
284220    +Neural27_P_DepVar0 +
284221    +AutoNeural27_P_DepVar0
284222    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural32_P_DepVar0 + AutoNeural29_P_DepVar0 + 
AutoNeural33_P_DepVar0 + AutoNeural28_P_DepVar0 + Neural28_P_DepVar0 + Neural27_P_DepVar0 + 
AutoNeural27_P_DepVar0 )/7;
284223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284224    +* Ensmbl20: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Classification Vars;
284225    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284226    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
284227    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
284228    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
284229    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
284230    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
284231    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
284232    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
284233    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
284234    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
284235    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
284236    +end;
MPRINT(EM_DIAGRAM):   end;
284237    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
284238    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
284239    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
284240    +end;
MPRINT(EM_DIAGRAM):   end;
284241    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284242    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284243    +* Ensmbl20: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Producing Unformatted variable;
284244    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284245    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
284246    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
284247    +else
284248    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
284249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284250    +* Ensmbl20: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing _WARN_ Variable;
284251    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284252    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
284253    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
284254    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
284255    +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
284255   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
284256    +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
284256   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
284257    +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
284257   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
284258    +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
284258   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
284259    +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
284259   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
284260    +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
284260   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
284261    +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
284261   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
284262    +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
284262   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
284263    +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
284263   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
284264    +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
284264   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
284265    +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
284265   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
284266    +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
284266   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
284267    +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
284267   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
284268    +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
284268   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
284269    +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
284269   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
284270    +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
284270   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
284271    +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
284271   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
284272    +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
284272   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
284273    +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
284273   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
284274    +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
284274   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
284275    +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
284275   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
284276    +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
284276   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
284277    +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
284277   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
284278    +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
284278   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
284279    +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
284279   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
284280    +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
284280   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
284281    +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
284281   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
284282    +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
284282   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
284283    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284284    +* Ensmbl20: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Residual Vars;
284285    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284286    +if
284287    +F_DepVar NE '1'
284288    +AND F_DepVar NE '0'
284289    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
284290    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
284291    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
284292    +end;
MPRINT(EM_DIAGRAM):   end;
284293    +else do;
MPRINT(EM_DIAGRAM):   else do;
284294    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
284295    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
284296    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
284297    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
284298    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
284299    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
284300    +END;
MPRINT(EM_DIAGRAM):   END;
284301    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284302     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL20_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL32_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284303     quit;
284304     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl20_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl20_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl20_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
284364     filename _pref
284364   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
284365     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284366     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas.
284367    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
284368    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
284369    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
284370    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
284371    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
284372    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
284373    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
284374    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
284375    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
284376    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
284377    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
284378    +LENGTH _WARN_ $4
284379    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
284380    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
284381    +
284382    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
284383    +
284384    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
284385    +
284386    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
284387    +
284388    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
284389    +
284390    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
284391    +
284392    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
284393    +
284394    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
284395    +
284396    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
284397    +
284398    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
284399    +
284400    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
284401    +
284402    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
284403    +
284404    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
284405    +
284406    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
284407    +
284408    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
284409    +
284410    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
284411    +
284412    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
284413    +
284414    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
284415    +
284416    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
284417    +
284418    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
284419    +
284420    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
284421    +
284422    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
284423    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
284424    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
284425    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
284426    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
284427    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
284428    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284429    +end;
MPRINT(EM_DIAGRAM):   end;
284430    +else do;
MPRINT(EM_DIAGRAM):   else do;
284431    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
284432    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
284433    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
284434    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
284435    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
284436    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
284437    +   end;
MPRINT(EM_DIAGRAM):   end;
284438    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
284439    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
284440    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
284441    +   end;
MPRINT(EM_DIAGRAM):   end;
284442    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
284443    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
284444    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
284445    +   end;
MPRINT(EM_DIAGRAM):   end;
284446    +   else do;
MPRINT(EM_DIAGRAM):   else do;
284447    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
284448    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
284449    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
284450    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284451    +   end;
MPRINT(EM_DIAGRAM):   end;
284452    +end;
MPRINT(EM_DIAGRAM):   end;
284453    +
284454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284455    +*** Checking missing input Interval
284456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
284457    +
284458    +IF NMISS(
284459    +   AcceptedCmpTotal ,
284460    +   Frq ,
284461    +   Income ,
284462    +   Mnt ,
284463    +   MntGoldProds ,
284464    +   MntMeatProducts ,
284465    +   MntWines ,
284466    +   NumDistPurchases ,
284467    +   RFMstat ,
284468    +   RMntFrq ,
284469    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
284470    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
284471    +
284472    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
284473    +END;
MPRINT(EM_DIAGRAM):   END;
284474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284475    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
284476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284477    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284478    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
284479    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
284480    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
284481    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
284482    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
284483    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
284484    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
284485    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
284486    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
284487    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
284488    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
284489    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
284490    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
284491    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
284492    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
284493    +END;
MPRINT(EM_DIAGRAM):   END;
284494    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284495    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
284496    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
284497    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
284498    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
284499    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
284500    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
284501    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
284502    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
284503    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
284504    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
284505    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
284506    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
284507    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
284508    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
284509    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
284510    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
284511    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
284512    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
284513    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
284514    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
284515    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
284516    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
284517    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
284518    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
284519    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
284520    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
284521    +END;
MPRINT(EM_DIAGRAM):   END;
284522    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284523    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
284524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284526    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
284527    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284528    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284529    +   H1x1_1  =    -0.38956319781905 * S_AcceptedCmpTotal
284530    +          +    -0.08624585416733 * S_Frq  +     0.14990044515556 * S_Income
284531    +          +     1.26905422062144 * S_Mnt  +    -0.05830961868093 *
284532    +        S_MntGoldProds  +    -0.45655804707903 * S_MntMeatProducts
284533    +          +    -0.29008121030195 * S_MntWines  +    -0.52580257849932 *
284534    +        S_NumDistPurchases  +     -0.1481404693781 * S_RFMstat
284535    +          +    -0.49319351834455 * S_RMntFrq  +     0.54249594661515 *
284536    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.38956319781905 * S_AcceptedCmpTotal + -0.08624585416733 * 
S_Frq + 0.14990044515556 * S_Income + 1.26905422062144 * S_Mnt + -0.05830961868093 * 
S_MntGoldProds + -0.45655804707903 * S_MntMeatProducts + -0.29008121030195 * S_MntWines + 
-0.52580257849932 * S_NumDistPurchases + -0.1481404693781 * S_RFMstat + -0.49319351834455 * 
S_RMntFrq + 0.54249594661515 * S_Recency ;
284537    +   H1x1_2  =     0.38779821527892 * S_AcceptedCmpTotal
284538    +          +    -1.22315175769362 * S_Frq  +      1.1802985172513 * S_Income
284539    +          +     2.08508390361851 * S_Mnt  +     0.42839460332296 *
284540    +        S_MntGoldProds  +      0.9001009517595 * S_MntMeatProducts
284541    +          +     0.43882453107711 * S_MntWines  +    -0.77730415774439 *
284542    +        S_NumDistPurchases  +    -0.48791819347803 * S_RFMstat
284543    +          +    -0.74366268198551 * S_RMntFrq  +    -0.17482075484114 *
284544    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.38779821527892 * S_AcceptedCmpTotal + -1.22315175769362 * 
S_Frq + 1.1802985172513 * S_Income + 2.08508390361851 * S_Mnt + 0.42839460332296 * 
S_MntGoldProds + 0.9001009517595 * S_MntMeatProducts + 0.43882453107711 * S_MntWines + 
-0.77730415774439 * S_NumDistPurchases + -0.48791819347803 * S_RFMstat + -0.74366268198551 * 
S_RMntFrq + -0.17482075484114 * S_Recency ;
284545    +   H1x1_3  =    -0.22134549179782 * S_AcceptedCmpTotal
284546    +          +    -0.06178114920397 * S_Frq  +     -1.4524474173679 * S_Income
284547    +          +    -7.85805111281271 * S_Mnt  +    -0.25260256377303 *
284548    +        S_MntGoldProds  +     2.24650170262612 * S_MntMeatProducts
284549    +          +    -0.28495082016886 * S_MntWines  +     2.83659961242127 *
284550    +        S_NumDistPurchases  +     0.42067169774523 * S_RFMstat
284551    +          +     1.71392925516862 * S_RMntFrq  +    -0.09478915012781 *
284552    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.22134549179782 * S_AcceptedCmpTotal + -0.06178114920397 * 
S_Frq + -1.4524474173679 * S_Income + -7.85805111281271 * S_Mnt + -0.25260256377303 * 
S_MntGoldProds + 2.24650170262612 * S_MntMeatProducts + -0.28495082016886 * S_MntWines + 
2.83659961242127 * S_NumDistPurchases + 0.42067169774523 * S_RFMstat + 1.71392925516862 * 
S_RMntFrq + -0.09478915012781 * S_Recency ;
284553    +   H1x1_1  = H1x1_1  +    -0.22060541309937 * G_Marital_Status0
284554    +          +    -0.46692703876881 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.22060541309937 * G_Marital_Status0 + 
-0.46692703876881 * G_Marital_Status1 ;
284555    +   H1x1_2  = H1x1_2  +     0.47416822018188 * G_Marital_Status0
284556    +          +     -2.1058284684647 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47416822018188 * G_Marital_Status0 + 
-2.1058284684647 * G_Marital_Status1 ;
284557    +   H1x1_3  = H1x1_3  +    -0.44803855270897 * G_Marital_Status0
284558    +          +     1.41026185304551 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.44803855270897 * G_Marital_Status0 + 
1.41026185304551 * G_Marital_Status1 ;
284559    +   H1x1_1  =     1.63085271667721 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.63085271667721 + H1x1_1 ;
284560    +   H1x1_2  =     0.28277859846654 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.28277859846654 + H1x1_2 ;
284561    +   H1x1_3  =     -1.8890871578635 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.8890871578635 + H1x1_3 ;
284562    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
284563    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
284564    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
284565    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
284566    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
284567    +END;
MPRINT(EM_DIAGRAM):   END;
284568    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284569    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
284570    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
284571    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
284572    +END;
MPRINT(EM_DIAGRAM):   END;
284573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284574    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
284575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284576    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
284577    +   P_DepVar1  =    -23.6822744769009 * H1x1_1  +     16.0380566008578 * H1x1_2
284578    +          +     15.3446320724554 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -23.6822744769009 * H1x1_1 + 16.0380566008578 * H1x1_2 + 
15.3446320724554 * H1x1_3 ;
284579    +   P_DepVar1  =     0.67225691696469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.67225691696469 + P_DepVar1 ;
284580    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
284581    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
284582    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
284583    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
284584    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
284585    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
284586    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
284587    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
284588    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
284589    +END;
MPRINT(EM_DIAGRAM):   END;
284590    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
284591    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
284592    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
284593    +END;
MPRINT(EM_DIAGRAM):   END;
284594    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
284595    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
284596    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
284597    +END;
MPRINT(EM_DIAGRAM):   END;
284598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284599    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
284600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
284601    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
284602    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
284603    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
284604    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
284605    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
284606    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
284607    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
284608    +END;
MPRINT(EM_DIAGRAM):   END;
284609    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284610    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
284611    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
284612    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284613     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.14 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284614     quit;
284615     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284616     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284617     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284618     retain ID 2 Node "AutoNeural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural32";
284619     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284620     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 791 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 791 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284621     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284622     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284623     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 791 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 791 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284624     proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME 
CREATOR);
284625     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284626     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284627     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284628     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284629     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284630     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284631     proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
284632     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

284633     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284634     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284635     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284636     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284637     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284638     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284639     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284640     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284641     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284641   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 419 rows and 5 columns.

284642     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284643     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
284644     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 419 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 419 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284645     filename _pref
284645   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
284646     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284647     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
284648    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
284649    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
284650    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
284651    +
284652    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
284653    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
284654    +
284655    +
284656    +/*----G_Marital_Status begin----*/
284657    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
284658    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
284659    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
284660    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
284661    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
284662    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
284663    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
284664    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
284665    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
284666    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
284667    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
284668    +end;
MPRINT(EM_DIAGRAM):   end;
284669    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
284670    +/*----G_Marital_Status end----*/
284671    +
284672    +
284673    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
284674    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
284675    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284676     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284677     quit;
284678     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284679     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284680     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284681     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
284682     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284684     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284685     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284686     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284687     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
284688     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284690     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284691     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284692     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284694     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
284695     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284696     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284697     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284698     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284699     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284700     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284701     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284702     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284703     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284704     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284704   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

284705     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

284706     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
284707     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 422 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284708     filename _pref
284708   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
284709     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284710     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
284711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284712    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
284713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
284714    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
284715    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
284716    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284717     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284718     quit;
284719     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284720     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284721     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284722     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
284723     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284724     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284725     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284726     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284727     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284728     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
284729     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284730     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284731     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284732     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284733     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284734     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284735     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
284736     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

284737     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284738     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284739     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284740     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284741     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284742     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284743     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284744     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284745     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284745   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

284746     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284747     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
284748     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 426 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284749     filename _pref
284749   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
284750     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284751     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
284752    +
284753    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
284754    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
284754   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
284755    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
284756    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
284757    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
284758    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
284759    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284760     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284761     quit;
284762     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284763     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284764     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284765     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
284766     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284768     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284769     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284770     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284771     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
284772     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284773     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284774     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284775     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284776     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284777     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284778     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
284779     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284780     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284781     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284782     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284783     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284784     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284785     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284786     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284787     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284788     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284788   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

284789     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284790     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
284791     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 465 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284792     filename _pref
284792   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
284793     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
284794     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
284795    +
284796    +
284797    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
284798    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
284799    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
284800    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
284801    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
284802    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284803    +
284804    +
284805    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
284806    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
284807    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
284808    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
284809    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
284810    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284811    +
284812    +
284813    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
284814    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
284815    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
284816    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
284817    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
284818    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284819    +
284820    +
284821    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
284822    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
284823    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
284824    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
284825    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
284826    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284827    +
284828    +
284829    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
284830    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
284831    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
284832    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
284833    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
284834    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284835    +
284836    +
284837    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
284838    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
284839    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
284840    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
284841    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
284842    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284843    +
284844    +
284845    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
284846    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
284847    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
284848    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
284849    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
284850    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284851    +
284852    +
284853    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
284854    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
284855    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
284856    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
284857    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
284858    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
284859    +if
284860    +_FILTERNORM1 not in ( '.')
284861    + and
284862    +_FILTERNORM2 not in ( '.')
284863    + and
284864    +_FILTERNORM3 not in ( '.')
284865    + and
284866    +_FILTERNORM4 not in ( '.')
284867    + and
284868    +_FILTERNORM5 not in ( '.')
284869    + and
284870    +_FILTERNORM6 not in ( '.')
284871    + and
284872    +_FILTERNORM7 not in ( ' ')
284873    + and
284874    +_FILTERNORM8 not in ( ' ')
284875    +and
284876    +( Dt_Customer ne .)
284877    +and ( Income ne . and (Income<=107000))
284878    +and ( Kidhome ne .)
284879    +and ( MntFishProducts ne .)
284880    +and ( MntFruits ne .)
284881    +and ( MntGoldProds ne .)
284882    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
284883    +and ( MntSweetProducts ne .)
284884    +and ( MntWines ne .)
284885    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
284886    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
284887    +and ( NumStorePurchases ne .)
284888    +and ( NumWebPurchases ne .)
284889    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
284890    +and ( Recency ne .)
284891    +and ( Teenhome ne .)
284892    +and ( Year_Birth ne .)
284893    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
284894    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
284895    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
284896    +end;
MPRINT(EM_DIAGRAM):   end;
284897    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
284898    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
284899     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
284900     quit;
284901     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
284902     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
284903     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
284904     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
284905     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
284906     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284907     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
284908     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284909     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

284910     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
284911     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284912     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284913     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284914     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
284915     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
284916     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284917     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
284918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

284919     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
284920     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

284922     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
284923     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
284924     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
284925     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284926     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
284927     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
284927   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

284928     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

284929     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
284930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

284931     %macro varDept(fcmpdata=,id=);
284932     %global nobs&id scoreFlag&id;
284933     %let scoreFlag&id = 0;
284934     %if &id=1 or ^&fcmpStart %then %do;
284935     proc sort data=&fcmpdata out=_temp&id nodupkey;
284936     by NAME;
284937     where id=&id and LHS in( %let j=1;
284938     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
284939     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
284940     "&var" %let j = %eval(&j+1);
284941     %end;
284942     );
284943     run;
284944     %let dsid = %sysfunc(open(_temp&id));
284945     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
284946     %let dsid = %sysfunc(close(&dsid));
284947     %if &&nobs&id %then %do;
284948     %let scoreFlag&id = 1;
284949     %let fcmpStart = 1;
284950     %end;
284951     %else %let fcmpStart = 0;
284952     %end;
284953     %else %do;
284954     proc sort data=&fcmpdata out=_tempid;
284955     where id=&id;
284956     by LHS;
284957     run;
284958     %let dsid = %sysfunc(open(_tempid));
284959     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
284960     %let dsid = %sysfunc(close(&dsid));
284961     %if ^&&nobs&id %then %do;
284962     proc datasets lib=work nolist;
284963     delete _tempid;
284964     run;
284965     quit;
284966     %end;
284967     %else %do;
284968     data _tempAll;
284969     set %let j=%eval(&id-1);
284970     %do x=1 %to &j;
284971     %if &&nobs&x %then %do;
284972     _temp&x %end;
284973     %end;
284974     ;
284975     run;
284976     proc sql;
284977     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
284977   ! work._tempid p2 where p.name=p2.lhs;
284978     quit;
284979     data _temp&id;
284980     set _temp&id;
284981     where LHS ne '' and NAME ne '' and Node ne '';
284982     run;
284983     proc datasets lib=work nolist;
284984     delete _tempAll;
284985     run;
284986     %let dsid = %sysfunc(open(_temp&id));
284987     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
284988     %let dsid = %sysfunc(close(&dsid));
284989     %if ^&&nobs&id %then %do;
284990     proc datasets lib=work nolist;
284991     delete _temp&id;
284992     run;
284993     quit;
284994     %end;
284995     %else %do;
284996     %let scoreFlag&id = 1;
284997     data _temp&id;
284998     set _temp&id;
284999     where LHS ne NAME and node ne '';
285000     run;
285001     %let dsid = %sysfunc(open(_temp&id));
285002     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285003     %let dsid = %sysfunc(close(&dsid));
285004     %if ^&&nobs&id %then %do;
285005     proc datasets lib=work nolist;
285006     delete _temp&id;
285007     run;
285008     quit;
285009     %end;
285010     %else %do;
285011     proc sort data=_temp&id nodupkey;
285012     by LHS NAME;
285013     run;
285014     %end;
285015     %end;
285016     %end;
285017     %end;
285018     %mend varDept;
285019     %macro optCode(outdata=fcmpdata);
285020     %global fcmpStart;
285021     %let fcmpStart = 0;
285022     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
285023     %let NumNodes=9;
285024     %do k=1 %to &NumNodes;
285025     %vardept(fcmpdata=&outdata, id=&k);
285026     %end;
285027     %mend optCode;
285028     %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 63 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 57 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

285029     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
285030     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
285031     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
285032     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285033     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
285034     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
285035     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
285036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285037     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285038     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
285038   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

285039     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285040     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
285041     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
285042     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

285043     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
285044     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
285045     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
285046     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285047     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
285048     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
285049     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
285050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285051     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285052     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
285052   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

285053     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285054     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
285055     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
285056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285057     filename _pref
285057   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
285058     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
285059     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas.
285060    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285061    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
285062    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285063    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
285064    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
285065    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
285066    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
285067    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
285068    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
285069    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
285070    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
285071    +LENGTH _WARN_ $4
285072    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
285073    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
285074    +
285075    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
285076    +
285077    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
285078    +
285079    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
285080    +
285081    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
285082    +
285083    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
285084    +
285085    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
285086    +
285087    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
285088    +
285089    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
285090    +
285091    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
285092    +
285093    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
285094    +
285095    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
285096    +
285097    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
285098    +
285099    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
285100    +
285101    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
285102    +
285103    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
285104    +
285105    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
285106    +
285107    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
285108    +
285109    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
285110    +
285111    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
285112    +
285113    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
285114    +
285115    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
285116    +
285117    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
285118    +
285119    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
285120    +
285121    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
285122    +
285123    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
285124    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
285125    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
285126    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
285127    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
285128    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285129    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285130    +end;
MPRINT(EM_DIAGRAM):   end;
285131    +else do;
MPRINT(EM_DIAGRAM):   else do;
285132    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285133    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
285134    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285135    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
285136    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
285137    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
285138    +   end;
MPRINT(EM_DIAGRAM):   end;
285139    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
285140    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
285141    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
285142    +   end;
MPRINT(EM_DIAGRAM):   end;
285143    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
285144    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
285145    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
285146    +   end;
MPRINT(EM_DIAGRAM):   end;
285147    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285148    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
285149    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
285150    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285151    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285152    +   end;
MPRINT(EM_DIAGRAM):   end;
285153    +end;
MPRINT(EM_DIAGRAM):   end;
285154    +
285155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285156    +*** Checking missing input Interval
285157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
285158    +
285159    +IF NMISS(
285160    +   AcceptedCmpTotal ,
285161    +   Frq ,
285162    +   Income ,
285163    +   Mnt ,
285164    +   MntGoldProds ,
285165    +   MntMeatProducts ,
285166    +   MntWines ,
285167    +   NumDistPurchases ,
285168    +   RFMstat ,
285169    +   RMntFrq ,
285170    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
285171    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
285172    +
285173    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285174    +END;
MPRINT(EM_DIAGRAM):   END;
285175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285176    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
285177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285178    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285179    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285180    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
285181    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285182    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
285183    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285184    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
285185    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
285186    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285187    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
285188    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
285189    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
285190    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
285191    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
285192    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
285193    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285194    +END;
MPRINT(EM_DIAGRAM):   END;
285195    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285196    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
285197    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285198    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
285199    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
285200    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285201    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
285202    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
285203    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
285204    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285205    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
285206    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
285207    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
285208    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
285209    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285210    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
285211    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
285212    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
285213    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
285214    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
285215    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
285216    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
285217    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
285218    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
285219    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
285220    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
285221    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285222    +END;
MPRINT(EM_DIAGRAM):   END;
285223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285224    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
285225    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285226    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285227    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
285228    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285229    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285230    +   H1x1_1  =    -1.99300782242957 * S_AcceptedCmpTotal
285231    +          +     2.12004224248217 * S_Frq  +     3.86828667262904 * S_Income
285232    +          +     2.77648198770608 * S_Mnt  +    -2.27326773671069 *
285233    +        S_MntGoldProds  +    -0.27399687657599 * S_MntMeatProducts
285234    +          +     2.26137957922507 * S_MntWines  +     0.14135280902221 *
285235    +        S_NumDistPurchases  +     1.12048709605553 * S_RFMstat
285236    +          +     0.99315934409036 * S_RMntFrq  +     1.21818826467727 *
285237    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.99300782242957 * S_AcceptedCmpTotal + 2.12004224248217 * 
S_Frq + 3.86828667262904 * S_Income + 2.77648198770608 * S_Mnt + -2.27326773671069 * 
S_MntGoldProds + -0.27399687657599 * S_MntMeatProducts + 2.26137957922507 * S_MntWines + 
0.14135280902221 * S_NumDistPurchases + 1.12048709605553 * S_RFMstat + 0.99315934409036 * 
S_RMntFrq + 1.21818826467727 * S_Recency ;
285238    +   H1x1_2  =    -0.46080527925139 * S_AcceptedCmpTotal
285239    +          +     1.22986184660358 * S_Frq  +     1.25416218398238 * S_Income
285240    +          +      0.7698101051046 * S_Mnt  +    -0.24851515302824 *
285241    +        S_MntGoldProds  +    -1.02206883329868 * S_MntMeatProducts
285242    +          +    -2.60436726665032 * S_MntWines  +     1.42856046102253 *
285243    +        S_NumDistPurchases  +     0.23036228891547 * S_RFMstat
285244    +          +    -0.44196680894425 * S_RMntFrq  +     1.47726327092789 *
285245    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.46080527925139 * S_AcceptedCmpTotal + 1.22986184660358 * 
S_Frq + 1.25416218398238 * S_Income + 0.7698101051046 * S_Mnt + -0.24851515302824 * 
S_MntGoldProds + -1.02206883329868 * S_MntMeatProducts + -2.60436726665032 * S_MntWines + 
1.42856046102253 * S_NumDistPurchases + 0.23036228891547 * S_RFMstat + -0.44196680894425 * 
S_RMntFrq + 1.47726327092789 * S_Recency ;
285246    +   H1x1_3  =    -2.72041257472943 * S_AcceptedCmpTotal
285247    +          +     2.18007007875237 * S_Frq  +    -3.41389425682735 * S_Income
285248    +          +     1.22111404132155 * S_Mnt  +     0.13965132551243 *
285249    +        S_MntGoldProds  +    -1.44679609979492 * S_MntMeatProducts
285250    +          +     1.32449625366546 * S_MntWines  +     0.71474658567846 *
285251    +        S_NumDistPurchases  +    -1.11377169665392 * S_RFMstat
285252    +          +    -0.23272811318878 * S_RMntFrq  +     3.38352057173892 *
285253    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.72041257472943 * S_AcceptedCmpTotal + 2.18007007875237 * 
S_Frq + -3.41389425682735 * S_Income + 1.22111404132155 * S_Mnt + 0.13965132551243 * 
S_MntGoldProds + -1.44679609979492 * S_MntMeatProducts + 1.32449625366546 * S_MntWines + 
0.71474658567846 * S_NumDistPurchases + -1.11377169665392 * S_RFMstat + -0.23272811318878 * 
S_RMntFrq + 3.38352057173892 * S_Recency ;
285254    +   H1x1_4  =    -0.53914082027029 * S_AcceptedCmpTotal
285255    +          +     3.52541527909413 * S_Frq  +     0.47386294116539 * S_Income
285256    +          +     1.74856835081997 * S_Mnt  +    -0.31608698854628 *
285257    +        S_MntGoldProds  +    -4.08585161438784 * S_MntMeatProducts
285258    +          +     1.11934057687184 * S_MntWines  +    -4.23069217087257 *
285259    +        S_NumDistPurchases  +    -0.45058242594518 * S_RFMstat
285260    +          +     2.24526854282726 * S_RMntFrq  +     0.46541621801996 *
285261    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.53914082027029 * S_AcceptedCmpTotal + 3.52541527909413 * 
S_Frq + 0.47386294116539 * S_Income + 1.74856835081997 * S_Mnt + -0.31608698854628 * 
S_MntGoldProds + -4.08585161438784 * S_MntMeatProducts + 1.11934057687184 * S_MntWines + 
-4.23069217087257 * S_NumDistPurchases + -0.45058242594518 * S_RFMstat + 2.24526854282726 * 
S_RMntFrq + 0.46541621801996 * S_Recency ;
285262    +   H1x1_5  =     0.16652182962256 * S_AcceptedCmpTotal
285263    +          +    -2.34082830868767 * S_Frq  +     0.06017749299853 * S_Income
285264    +          +    -3.61434433922311 * S_Mnt  +    -0.15794212009402 *
285265    +        S_MntGoldProds  +     5.32833368617196 * S_MntMeatProducts
285266    +          +     1.70496933504273 * S_MntWines  +     2.85445845094536 *
285267    +        S_NumDistPurchases  +     1.88219523605925 * S_RFMstat
285268    +          +     0.75869801637089 * S_RMntFrq  +     0.08064297106734 *
285269    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.16652182962256 * S_AcceptedCmpTotal + -2.34082830868767 * 
S_Frq + 0.06017749299853 * S_Income + -3.61434433922311 * S_Mnt + -0.15794212009402 * 
S_MntGoldProds + 5.32833368617196 * S_MntMeatProducts + 1.70496933504273 * S_MntWines + 
2.85445845094536 * S_NumDistPurchases + 1.88219523605925 * S_RFMstat + 0.75869801637089 * 
S_RMntFrq + 0.08064297106734 * S_Recency ;
285270    +   H1x1_6  =     1.97422379745385 * S_AcceptedCmpTotal
285271    +          +    -0.18806921540808 * S_Frq  +    -1.45393613178942 * S_Income
285272    +          +    -1.71382589206496 * S_Mnt  +    -0.86398659373382 *
285273    +        S_MntGoldProds  +    -0.55933907393534 * S_MntMeatProducts
285274    +          +    -2.04088833388184 * S_MntWines  +     1.33825297425801 *
285275    +        S_NumDistPurchases  +    -1.84916943620006 * S_RFMstat
285276    +          +     1.10268410707441 * S_RMntFrq  +    -3.24538880603902 *
285277    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.97422379745385 * S_AcceptedCmpTotal + -0.18806921540808 * 
S_Frq + -1.45393613178942 * S_Income + -1.71382589206496 * S_Mnt + -0.86398659373382 * 
S_MntGoldProds + -0.55933907393534 * S_MntMeatProducts + -2.04088833388184 * S_MntWines + 
1.33825297425801 * S_NumDistPurchases + -1.84916943620006 * S_RFMstat + 1.10268410707441 * 
S_RMntFrq + -3.24538880603902 * S_Recency ;
285278    +   H1x1_7  =    -0.04334303258083 * S_AcceptedCmpTotal
285279    +          +      1.2911623736286 * S_Frq  +    -2.28992194197276 * S_Income
285280    +          +    -0.46322849796029 * S_Mnt  +    -0.61987255353555 *
285281    +        S_MntGoldProds  +    -0.70448430141235 * S_MntMeatProducts
285282    +          +    -2.07867791807129 * S_MntWines  +    -1.36577325340948 *
285283    +        S_NumDistPurchases  +    -1.20867908080733 * S_RFMstat
285284    +          +     1.13377434281641 * S_RMntFrq  +     0.49995615625441 *
285285    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.04334303258083 * S_AcceptedCmpTotal + 1.2911623736286 * 
S_Frq + -2.28992194197276 * S_Income + -0.46322849796029 * S_Mnt + -0.61987255353555 * 
S_MntGoldProds + -0.70448430141235 * S_MntMeatProducts + -2.07867791807129 * S_MntWines + 
-1.36577325340948 * S_NumDistPurchases + -1.20867908080733 * S_RFMstat + 1.13377434281641 * 
S_RMntFrq + 0.49995615625441 * S_Recency ;
285286    +   H1x1_1  = H1x1_1  +     -1.7035629341514 * G_Marital_Status0
285287    +          +    -0.88839271772433 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.7035629341514 * G_Marital_Status0 + 
-0.88839271772433 * G_Marital_Status1 ;
285288    +   H1x1_2  = H1x1_2  +     0.47234648810132 * G_Marital_Status0
285289    +          +     0.49781009278812 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.47234648810132 * G_Marital_Status0 + 
0.49781009278812 * G_Marital_Status1 ;
285290    +   H1x1_3  = H1x1_3  +     0.04803102756566 * G_Marital_Status0
285291    +          +     3.45859276392218 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04803102756566 * G_Marital_Status0 + 
3.45859276392218 * G_Marital_Status1 ;
285292    +   H1x1_4  = H1x1_4  +    -0.00794915276466 * G_Marital_Status0
285293    +          +    -0.88877093101914 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.00794915276466 * G_Marital_Status0 + 
-0.88877093101914 * G_Marital_Status1 ;
285294    +   H1x1_5  = H1x1_5  +     0.17344052282277 * G_Marital_Status0
285295    +          +     0.07512544812374 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17344052282277 * G_Marital_Status0 + 
0.07512544812374 * G_Marital_Status1 ;
285296    +   H1x1_6  = H1x1_6  +     0.69797087079749 * G_Marital_Status0
285297    +          +     1.99160337429042 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.69797087079749 * G_Marital_Status0 + 
1.99160337429042 * G_Marital_Status1 ;
285298    +   H1x1_7  = H1x1_7  +    -1.90814013352903 * G_Marital_Status0
285299    +          +    -0.58260071621307 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -1.90814013352903 * G_Marital_Status0 + 
-0.58260071621307 * G_Marital_Status1 ;
285300    +   H1x1_1  =      0.4509613443627 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.4509613443627 + H1x1_1 ;
285301    +   H1x1_2  =     3.28102437302443 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.28102437302443 + H1x1_2 ;
285302    +   H1x1_3  =    -0.59732076258377 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59732076258377 + H1x1_3 ;
285303    +   H1x1_4  =     3.04302174126598 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.04302174126598 + H1x1_4 ;
285304    +   H1x1_5  =     4.11173403634453 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.11173403634453 + H1x1_5 ;
285305    +   H1x1_6  =     4.51964221881808 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 4.51964221881808 + H1x1_6 ;
285306    +   H1x1_7  =     7.27061205819069 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 7.27061205819069 + H1x1_7 ;
285307    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
285308    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
285309    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
285310    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
285311    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
285312    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
285313    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
285314    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
285315    +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
285316    +END;
MPRINT(EM_DIAGRAM):   END;
285317    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285318    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
285319    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
285320    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
285321    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
285322    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
285323    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
285324    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
285325    +END;
MPRINT(EM_DIAGRAM):   END;
285326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285327    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
285328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285329    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285330    +   P_DepVar1  =    -3.49358340904307 * H1x1_1  +    -5.28251662728987 * H1x1_2
285331    +          +    -4.11876057817011 * H1x1_3  +    -7.73777326204979 * H1x1_4
285332    +          +     12.8932497890238 * H1x1_5  +     6.88694832857203 * H1x1_6
285333    +          +    -8.47048075234366 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.49358340904307 * H1x1_1 + -5.28251662728987 * H1x1_2 + 
-4.11876057817011 * H1x1_3 + -7.73777326204979 * H1x1_4 + 12.8932497890238 * H1x1_5 + 
6.88694832857203 * H1x1_6 + -8.47048075234366 * H1x1_7 ;
285334    +   P_DepVar1  =     1.65092540834245 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.65092540834245 + P_DepVar1 ;
285335    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
285336    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
285337    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
285338    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
285339    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
285340    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
285341    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
285342    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
285343    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
285344    +END;
MPRINT(EM_DIAGRAM):   END;
285345    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285346    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
285347    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
285348    +END;
MPRINT(EM_DIAGRAM):   END;
285349    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
285350    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
285351    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
285352    +END;
MPRINT(EM_DIAGRAM):   END;
285353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285354    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
285355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285356    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
285357    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
285358    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
285359    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
285360    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
285361    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
285362    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
285363    +END;
MPRINT(EM_DIAGRAM):   END;
285364    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
285365    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
285366    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
285367    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
285368     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
285369     quit;
285370     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
285371     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
285372     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
285373     retain ID 2 Node "AutoNeural29";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural29";
285374     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
285375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1111 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1111 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285376     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
285377     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285378     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1111 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1111 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285379     proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME 
CREATOR);
285380     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL29_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285382     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285383     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
285384     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
285385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285386     proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
285387     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

285388     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
285389     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285390     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 61 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 61 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285391     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285392     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
285393     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285394     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 61 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 61 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285395     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285396     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
285396   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 563 rows and 5 columns.

285397     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285398     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
285399     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 563 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 563 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285400     filename _pref
285400   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
285401     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
285402     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
285403    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
285404    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
285405    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
285406    +
285407    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
285408    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
285409    +
285410    +
285411    +/*----G_Marital_Status begin----*/
285412    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
285413    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
285414    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285415    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
285416    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
285417    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
285418    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
285419    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
285420    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
285421    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
285422    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
285423    +end;
MPRINT(EM_DIAGRAM):   end;
285424    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
285425    +/*----G_Marital_Status end----*/
285426    +
285427    +
285428    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
285429    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
285430    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
285431     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
285432     quit;
285433     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
285434     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
285435     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
285436     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
285437     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
285438     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285439     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
285440     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285441     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285442     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
285443     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285444     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285445     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285446     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
285447     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
285448     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285449     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
285450     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

285451     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
285452     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285453     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285454     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285455     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
285456     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285457     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285458     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285459     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
285459   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

285460     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285461     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
285462     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 566 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285463     filename _pref
285463   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
285464     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
285465     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
285466    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285467    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
285468    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
285469    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
285470    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
285471    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
285472     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
285473     quit;
285474     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
285475     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
285476     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
285477     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
285478     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
285479     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285480     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
285481     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285482     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

285483     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
285484     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285486     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285487     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
285488     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
285489     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285490     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
285491     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

285492     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
285493     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285494     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285495     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285496     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
285497     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285498     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285499     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285500     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
285500   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

285501     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285502     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
285503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 570 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285504     filename _pref
285504   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
285505     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
285506     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
285507    +
285508    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
285509    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
285509   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
285510    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
285511    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
285512    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
285513    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
285514    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
285515     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
285516     quit;
285517     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
285518     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
285519     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
285520     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
285521     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
285522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

285523     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
285524     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285525     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285526     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
285527     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285528     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285529     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285530     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
285531     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
285532     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

285533     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
285534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285535     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
285536     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285538     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285539     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
285540     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285541     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285542     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285543     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
285543   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

285544     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285545     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
285546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 609 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285547     filename _pref
285547   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
285548     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
285549     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
285550    +
285551    +
285552    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
285553    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
285554    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
285555    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
285556    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
285557    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285558    +
285559    +
285560    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
285561    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
285562    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
285563    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
285564    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
285565    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285566    +
285567    +
285568    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
285569    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
285570    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
285571    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
285572    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
285573    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285574    +
285575    +
285576    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
285577    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
285578    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
285579    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
285580    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
285581    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285582    +
285583    +
285584    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
285585    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
285586    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
285587    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
285588    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
285589    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285590    +
285591    +
285592    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
285593    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
285594    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
285595    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
285596    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
285597    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285598    +
285599    +
285600    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
285601    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
285602    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
285603    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
285604    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
285605    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285606    +
285607    +
285608    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
285609    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
285610    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
285611    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
285612    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
285613    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
285614    +if
285615    +_FILTERNORM1 not in ( '.')
285616    + and
285617    +_FILTERNORM2 not in ( '.')
285618    + and
285619    +_FILTERNORM3 not in ( '.')
285620    + and
285621    +_FILTERNORM4 not in ( '.')
285622    + and
285623    +_FILTERNORM5 not in ( '.')
285624    + and
285625    +_FILTERNORM6 not in ( '.')
285626    + and
285627    +_FILTERNORM7 not in ( ' ')
285628    + and
285629    +_FILTERNORM8 not in ( ' ')
285630    +and
285631    +( Dt_Customer ne .)
285632    +and ( Income ne . and (Income<=107000))
285633    +and ( Kidhome ne .)
285634    +and ( MntFishProducts ne .)
285635    +and ( MntFruits ne .)
285636    +and ( MntGoldProds ne .)
285637    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
285638    +and ( MntSweetProducts ne .)
285639    +and ( MntWines ne .)
285640    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
285641    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
285642    +and ( NumStorePurchases ne .)
285643    +and ( NumWebPurchases ne .)
285644    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
285645    +and ( Recency ne .)
285646    +and ( Teenhome ne .)
285647    +and ( Year_Birth ne .)
285648    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
285649    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
285650    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
285651    +end;
MPRINT(EM_DIAGRAM):   end;
285652    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
285653    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
285654     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
285655     quit;
285656     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
285657     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
285658     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
285659     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
285660     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
285661     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285662     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
285663     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285664     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285665     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
285666     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285667     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285668     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285669     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
285670     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
285671     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285672     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
285673     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

285674     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
285675     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285676     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285677     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
285678     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
285679     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
285680     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285681     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285682     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
285682   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

285683     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285684     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
285685     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 675 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285686     %macro varDept(fcmpdata=,id=);
285687     %global nobs&id scoreFlag&id;
285688     %let scoreFlag&id = 0;
285689     %if &id=1 or ^&fcmpStart %then %do;
285690     proc sort data=&fcmpdata out=_temp&id nodupkey;
285691     by NAME;
285692     where id=&id and LHS in( %let j=1;
285693     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
285694     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
285695     "&var" %let j = %eval(&j+1);
285696     %end;
285697     );
285698     run;
285699     %let dsid = %sysfunc(open(_temp&id));
285700     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285701     %let dsid = %sysfunc(close(&dsid));
285702     %if &&nobs&id %then %do;
285703     %let scoreFlag&id = 1;
285704     %let fcmpStart = 1;
285705     %end;
285706     %else %let fcmpStart = 0;
285707     %end;
285708     %else %do;
285709     proc sort data=&fcmpdata out=_tempid;
285710     where id=&id;
285711     by LHS;
285712     run;
285713     %let dsid = %sysfunc(open(_tempid));
285714     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285715     %let dsid = %sysfunc(close(&dsid));
285716     %if ^&&nobs&id %then %do;
285717     proc datasets lib=work nolist;
285718     delete _tempid;
285719     run;
285720     quit;
285721     %end;
285722     %else %do;
285723     data _tempAll;
285724     set %let j=%eval(&id-1);
285725     %do x=1 %to &j;
285726     %if &&nobs&x %then %do;
285727     _temp&x %end;
285728     %end;
285729     ;
285730     run;
285731     proc sql;
285732     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
285732   ! work._tempid p2 where p.name=p2.lhs;
285733     quit;
285734     data _temp&id;
285735     set _temp&id;
285736     where LHS ne '' and NAME ne '' and Node ne '';
285737     run;
285738     proc datasets lib=work nolist;
285739     delete _tempAll;
285740     run;
285741     %let dsid = %sysfunc(open(_temp&id));
285742     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285743     %let dsid = %sysfunc(close(&dsid));
285744     %if ^&&nobs&id %then %do;
285745     proc datasets lib=work nolist;
285746     delete _temp&id;
285747     run;
285748     quit;
285749     %end;
285750     %else %do;
285751     %let scoreFlag&id = 1;
285752     data _temp&id;
285753     set _temp&id;
285754     where LHS ne NAME and node ne '';
285755     run;
285756     %let dsid = %sysfunc(open(_temp&id));
285757     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
285758     %let dsid = %sysfunc(close(&dsid));
285759     %if ^&&nobs&id %then %do;
285760     proc datasets lib=work nolist;
285761     delete _temp&id;
285762     run;
285763     quit;
285764     %end;
285765     %else %do;
285766     proc sort data=_temp&id nodupkey;
285767     by LHS NAME;
285768     run;
285769     %end;
285770     %end;
285771     %end;
285772     %end;
285773     %mend varDept;
285774     %macro optCode(outdata=fcmpdata);
285775     %global fcmpStart;
285776     %let fcmpStart = 0;
285777     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
285778     %let NumNodes=9;
285779     %do k=1 %to &NumNodes;
285780     %vardept(fcmpdata=&outdata, id=&k);
285781     %end;
285782     %mend optCode;
285783     %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 75 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 61 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

285784     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
285785     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
285786     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
285787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285788     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
285789     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
285790     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
285791     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

285792     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285793     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
285793   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

285794     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285795     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
285796     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
285797     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285798     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
285799     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
285800     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
285801     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285802     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
285803     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
285804     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
285805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285806     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
285807     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
285807   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

285808     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

285809     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
285810     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
285811     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

285812     filename _pref
285812   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
285813     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
285814     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas.
285815    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285816    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
285817    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
285818    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
285819    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
285820    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
285821    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
285822    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
285823    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
285824    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
285825    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
285826    +LENGTH _WARN_ $4
285827    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
285828    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
285829    +
285830    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
285831    +
285832    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
285833    +
285834    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
285835    +
285836    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
285837    +
285838    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
285839    +
285840    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
285841    +
285842    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
285843    +
285844    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
285845    +
285846    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
285847    +
285848    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
285849    +
285850    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
285851    +
285852    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
285853    +
285854    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
285855    +
285856    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
285857    +
285858    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
285859    +
285860    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
285861    +
285862    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
285863    +
285864    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
285865    +
285866    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
285867    +
285868    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
285869    +
285870    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
285871    +
285872    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
285873    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
285874    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
285875    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
285876    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
285877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
285878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285879    +end;
MPRINT(EM_DIAGRAM):   end;
285880    +else do;
MPRINT(EM_DIAGRAM):   else do;
285881    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
285882    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
285883    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
285884    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
285885    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
285886    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
285887    +   end;
MPRINT(EM_DIAGRAM):   end;
285888    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
285889    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
285890    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
285891    +   end;
MPRINT(EM_DIAGRAM):   end;
285892    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
285893    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
285894    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
285895    +   end;
MPRINT(EM_DIAGRAM):   end;
285896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
285897    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
285898    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
285899    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
285900    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285901    +   end;
MPRINT(EM_DIAGRAM):   end;
285902    +end;
MPRINT(EM_DIAGRAM):   end;
285903    +
285904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285905    +*** Checking missing input Interval
285906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
285907    +
285908    +IF NMISS(
285909    +   AcceptedCmpTotal ,
285910    +   Frq ,
285911    +   Income ,
285912    +   Mnt ,
285913    +   MntGoldProds ,
285914    +   MntMeatProducts ,
285915    +   MntWines ,
285916    +   NumDistPurchases ,
285917    +   RFMstat ,
285918    +   RMntFrq ,
285919    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
285920    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
285921    +
285922    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
285923    +END;
MPRINT(EM_DIAGRAM):   END;
285924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285925    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
285926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285927    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285928    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285929    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
285930    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285931    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
285932    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285933    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
285934    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
285935    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285936    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
285937    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
285938    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
285939    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
285940    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
285941    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
285942    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285943    +END;
MPRINT(EM_DIAGRAM):   END;
285944    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
285945    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
285946    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
285947    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
285948    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
285949    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
285950    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
285951    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
285952    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
285953    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
285954    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
285955    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
285956    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
285957    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
285958    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
285959    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
285960    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
285961    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
285962    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
285963    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
285964    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
285965    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
285966    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
285967    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
285968    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
285969    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
285970    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
285971    +END;
MPRINT(EM_DIAGRAM):   END;
285972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285973    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
285974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285976    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
285977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
285978    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
285979    +   H1x1_1  =     0.33555011401553 * S_AcceptedCmpTotal
285980    +          +    -3.02490159760157 * S_Frq  +    -0.12761482391665 * S_Income
285981    +          +     -9.1169668394273 * S_Mnt  +     0.88214411094174 *
285982    +        S_MntGoldProds  +     16.4212241447522 * S_MntMeatProducts
285983    +          +     4.65784744010387 * S_MntWines  +     2.75620847659032 *
285984    +        S_NumDistPurchases  +     5.10796074430888 * S_RFMstat
285985    +          +    -0.15069444442326 * S_RMntFrq  +    -0.36037041233055 *
285986    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.33555011401553 * S_AcceptedCmpTotal + -3.02490159760157 * 
S_Frq + -0.12761482391665 * S_Income + -9.1169668394273 * S_Mnt + 0.88214411094174 * 
S_MntGoldProds + 16.4212241447522 * S_MntMeatProducts + 4.65784744010387 * S_MntWines + 
2.75620847659032 * S_NumDistPurchases + 5.10796074430888 * S_RFMstat + -0.15069444442326 * 
S_RMntFrq + -0.36037041233055 * S_Recency ;
285987    +   H1x1_2  =     -6.2107002884316 * S_AcceptedCmpTotal
285988    +          +      5.5991079844098 * S_Frq  +    -1.06506164052399 * S_Income
285989    +          +     7.16823320768258 * S_Mnt  +     1.97115223638004 *
285990    +        S_MntGoldProds  +     0.02973121977962 * S_MntMeatProducts
285991    +          +     3.28931008157038 * S_MntWines  +    -3.02545356699096 *
285992    +        S_NumDistPurchases  +    -0.45519831720714 * S_RFMstat
285993    +          +     2.14788986039061 * S_RMntFrq  +     7.13033786501062 *
285994    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -6.2107002884316 * S_AcceptedCmpTotal + 5.5991079844098 * S_Frq 
+ -1.06506164052399 * S_Income + 7.16823320768258 * S_Mnt + 1.97115223638004 * S_MntGoldProds 
+ 0.02973121977962 * S_MntMeatProducts + 3.28931008157038 * S_MntWines + -3.02545356699096 * 
S_NumDistPurchases + -0.45519831720714 * S_RFMstat + 2.14788986039061 * S_RMntFrq + 
7.13033786501062 * S_Recency ;
285995    +   H1x1_3  =    -0.31707769589072 * S_AcceptedCmpTotal
285996    +          +     -0.8436342869652 * S_Frq  +     0.04938014828703 * S_Income
285997    +          +     0.41074885451072 * S_Mnt  +    -0.22835264468248 *
285998    +        S_MntGoldProds  +     0.04154328332772 * S_MntMeatProducts
285999    +          +    -0.63526276335269 * S_MntWines  +     0.16430041832418 *
286000    +        S_NumDistPurchases  +    -0.01070081959406 * S_RFMstat
286001    +          +    -1.56851833223581 * S_RMntFrq  +     0.62478865123427 *
286002    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31707769589072 * S_AcceptedCmpTotal + -0.8436342869652 * 
S_Frq + 0.04938014828703 * S_Income + 0.41074885451072 * S_Mnt + -0.22835264468248 * 
S_MntGoldProds + 0.04154328332772 * S_MntMeatProducts + -0.63526276335269 * S_MntWines + 
0.16430041832418 * S_NumDistPurchases + -0.01070081959406 * S_RFMstat + -1.56851833223581 * 
S_RMntFrq + 0.62478865123427 * S_Recency ;
286003    +   H1x1_4  =     0.54144616315359 * S_AcceptedCmpTotal
286004    +          +    -2.69605116285758 * S_Frq  +    -0.42453662943397 * S_Income
286005    +          +    -0.95657675439363 * S_Mnt  +     0.24420189860131 *
286006    +        S_MntGoldProds  +     2.44632795316553 * S_MntMeatProducts
286007    +          +     -0.1454644222769 * S_MntWines  +     2.34899307919173 *
286008    +        S_NumDistPurchases  +    -0.02462201574723 * S_RFMstat
286009    +          +    -2.08470857931815 * S_RMntFrq  +    -0.76249328143214 *
286010    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54144616315359 * S_AcceptedCmpTotal + -2.69605116285758 * 
S_Frq + -0.42453662943397 * S_Income + -0.95657675439363 * S_Mnt + 0.24420189860131 * 
S_MntGoldProds + 2.44632795316553 * S_MntMeatProducts + -0.1454644222769 * S_MntWines + 
2.34899307919173 * S_NumDistPurchases + -0.02462201574723 * S_RFMstat + -2.08470857931815 * 
S_RMntFrq + -0.76249328143214 * S_Recency ;
286011    +   H1x1_1  = H1x1_1  +     0.00660823494191 * G_Marital_Status0
286012    +          +    -0.18825548425502 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.00660823494191 * G_Marital_Status0 + 
-0.18825548425502 * G_Marital_Status1 ;
286013    +   H1x1_2  = H1x1_2  +    -2.06051657300217 * G_Marital_Status0
286014    +          +    -6.25782340834073 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.06051657300217 * G_Marital_Status0 + 
-6.25782340834073 * G_Marital_Status1 ;
286015    +   H1x1_3  = H1x1_3  +    -0.79419358160841 * G_Marital_Status0
286016    +          +     0.34890327415646 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.79419358160841 * G_Marital_Status0 + 
0.34890327415646 * G_Marital_Status1 ;
286017    +   H1x1_4  = H1x1_4  +    -0.04651762606699 * G_Marital_Status0
286018    +          +     0.31552155976549 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.04651762606699 * G_Marital_Status0 + 
0.31552155976549 * G_Marital_Status1 ;
286019    +   H1x1_1  =      9.5912267385355 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 9.5912267385355 + H1x1_1 ;
286020    +   H1x1_2  =     -17.513407093022 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -17.513407093022 + H1x1_2 ;
286021    +   H1x1_3  =     3.77110114695743 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.77110114695743 + H1x1_3 ;
286022    +   H1x1_4  =    -1.34405555452152 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.34405555452152 + H1x1_4 ;
286023    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
286024    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
286025    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
286026    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
286027    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
286028    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
286029    +END;
MPRINT(EM_DIAGRAM):   END;
286030    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286031    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
286032    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
286033    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
286034    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
286035    +END;
MPRINT(EM_DIAGRAM):   END;
286036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286037    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
286038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286039    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286040    +   P_DepVar1  =     17.1648278730429 * H1x1_1  +    -5.41550544466459 * H1x1_2
286041    +          +     -11.071053129929 * H1x1_3  +      10.744209891392 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1648278730429 * H1x1_1 + -5.41550544466459 * H1x1_2 + 
-11.071053129929 * H1x1_3 + 10.744209891392 * H1x1_4 ;
286042    +   P_DepVar1  =    -12.0079203309727 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.0079203309727 + P_DepVar1 ;
286043    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
286044    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
286045    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
286046    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
286047    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
286048    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
286049    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
286050    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
286051    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
286052    +END;
MPRINT(EM_DIAGRAM):   END;
286053    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286054    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
286055    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
286056    +END;
MPRINT(EM_DIAGRAM):   END;
286057    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
286058    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
286059    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
286060    +END;
MPRINT(EM_DIAGRAM):   END;
286061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286062    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
286063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286064    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
286065    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
286066    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
286067    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
286068    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
286069    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
286070    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
286071    +END;
MPRINT(EM_DIAGRAM):   END;
286072    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286073    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
286074    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
286075    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286076     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286077     quit;
286078     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286079     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286080     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286081     retain ID 2 Node "AutoNeural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural33";
286082     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 871 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 871 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286084     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286085     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286086     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 871 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 871 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286087     proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME 
CREATOR);
286088     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286089     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286090     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286091     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286092     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286094     proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
286095     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286096     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286097     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286099     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286100     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286101     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286102     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286103     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286104     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286104   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 455 rows and 5 columns.

286105     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286106     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
286107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 455 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 455 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286108     filename _pref
286108   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
286109     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286110     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
286111    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
286112    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
286113    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
286114    +
286115    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
286116    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
286117    +
286118    +
286119    +/*----G_Marital_Status begin----*/
286120    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
286121    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
286122    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286123    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
286124    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
286125    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
286126    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
286127    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
286128    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
286129    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
286130    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
286131    +end;
MPRINT(EM_DIAGRAM):   end;
286132    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
286133    +/*----G_Marital_Status end----*/
286134    +
286135    +
286136    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
286137    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
286138    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286139     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286140     quit;
286141     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286142     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286143     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286144     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
286145     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286147     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286148     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286149     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286150     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
286151     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286152     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286153     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286154     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286155     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286157     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
286158     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

286159     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286160     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286161     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286162     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286163     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286164     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286165     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286166     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286167     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286167   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

286168     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286169     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
286170     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 458 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286171     filename _pref
286171   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
286172     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286173     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
286174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286175    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
286176    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
286177    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
286178    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
286179    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286180     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286181     quit;
286182     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286183     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286184     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286185     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
286186     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286187     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

286188     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286189     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286190     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286191     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
286192     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286193     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286194     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286195     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286196     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286198     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
286199     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

286200     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286201     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286202     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286203     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286204     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286205     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286206     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

286207     proc sql;
The SAS System

MPRINT(EM_DIAGRAM):   proc sql;
286208     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286208   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

286209     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286210     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
286211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 462 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286212     filename _pref
286212   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
286213     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286214     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
286215    +
286216    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
286217    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
286217   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
286218    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
286219    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
286220    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
286221    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
286222    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286223     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286224     quit;
286225     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286226     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286227     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286228     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
286229     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286230     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286231     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286232     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286234     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
286235     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286236     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286237     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286238     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286239     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286240     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

286241     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
286242     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286243     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286244     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286246     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286247     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286248     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286249     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

286250     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286251     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286251   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

286252     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286253     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
286254     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 501 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286255     filename _pref
286255   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
286256     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286257     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
286258    +
286259    +
286260    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
286261    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
286262    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
286263    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
286264    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
286265    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286266    +
286267    +
286268    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
286269    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
286270    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
286271    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
286272    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
286273    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286274    +
286275    +
286276    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
286277    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
286278    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
286279    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
286280    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
286281    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286282    +
286283    +
286284    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
286285    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
286286    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
286287    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
286288    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
286289    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286290    +
286291    +
286292    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
286293    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
286294    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
286295    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
286296    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
286297    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286298    +
286299    +
286300    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
286301    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
286302    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
286303    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
286304    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
286305    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286306    +
286307    +
286308    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
286309    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
286310    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
286311    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
286312    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
286313    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286314    +
286315    +
286316    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
286317    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
286318    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
286319    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
286320    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
286321    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
286322    +if
286323    +_FILTERNORM1 not in ( '.')
286324    + and
286325    +_FILTERNORM2 not in ( '.')
286326    + and
286327    +_FILTERNORM3 not in ( '.')
286328    + and
286329    +_FILTERNORM4 not in ( '.')
286330    + and
286331    +_FILTERNORM5 not in ( '.')
286332    + and
286333    +_FILTERNORM6 not in ( '.')
286334    + and
286335    +_FILTERNORM7 not in ( ' ')
286336    + and
286337    +_FILTERNORM8 not in ( ' ')
286338    +and
286339    +( Dt_Customer ne .)
286340    +and ( Income ne . and (Income<=107000))
286341    +and ( Kidhome ne .)
286342    +and ( MntFishProducts ne .)
286343    +and ( MntFruits ne .)
286344    +and ( MntGoldProds ne .)
286345    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
286346    +and ( MntSweetProducts ne .)
286347    +and ( MntWines ne .)
286348    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
286349    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
286350    +and ( NumStorePurchases ne .)
286351    +and ( NumWebPurchases ne .)
286352    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
286353    +and ( Recency ne .)
286354    +and ( Teenhome ne .)
286355    +and ( Year_Birth ne .)
286356    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
286357    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
286358    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
286359    +end;
MPRINT(EM_DIAGRAM):   end;
286360    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
286361    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
286362     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
286363     quit;
286364     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
286365     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
286366     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
286367     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
286368     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
286369     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286370     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
286371     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286372     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286373     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
286374     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286376     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286377     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
286378     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
286379     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286380     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
286381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

286382     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
286383     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286385     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
286386     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
286387     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
286388     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286389     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286390     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
286390   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

286391     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286392     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
286393     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 567 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286394     %macro varDept(fcmpdata=,id=);
286395     %global nobs&id scoreFlag&id;
286396     %let scoreFlag&id = 0;
286397     %if &id=1 or ^&fcmpStart %then %do;
286398     proc sort data=&fcmpdata out=_temp&id nodupkey;
286399     by NAME;
286400     where id=&id and LHS in( %let j=1;
286401     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
286402     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
286403     "&var" %let j = %eval(&j+1);
286404     %end;
286405     );
286406     run;
286407     %let dsid = %sysfunc(open(_temp&id));
286408     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286409     %let dsid = %sysfunc(close(&dsid));
286410     %if &&nobs&id %then %do;
286411     %let scoreFlag&id = 1;
286412     %let fcmpStart = 1;
286413     %end;
286414     %else %let fcmpStart = 0;
286415     %end;
286416     %else %do;
286417     proc sort data=&fcmpdata out=_tempid;
286418     where id=&id;
286419     by LHS;
286420     run;
286421     %let dsid = %sysfunc(open(_tempid));
286422     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286423     %let dsid = %sysfunc(close(&dsid));
286424     %if ^&&nobs&id %then %do;
286425     proc datasets lib=work nolist;
286426     delete _tempid;
286427     run;
286428     quit;
286429     %end;
286430     %else %do;
286431     data _tempAll;
286432     set %let j=%eval(&id-1);
286433     %do x=1 %to &j;
286434     %if &&nobs&x %then %do;
286435     _temp&x %end;
286436     %end;
286437     ;
286438     run;
286439     proc sql;
286440     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
286440   ! work._tempid p2 where p.name=p2.lhs;
286441     quit;
286442     data _temp&id;
286443     set _temp&id;
286444     where LHS ne '' and NAME ne '' and Node ne '';
286445     run;
286446     proc datasets lib=work nolist;
286447     delete _tempAll;
286448     run;
286449     %let dsid = %sysfunc(open(_temp&id));
286450     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286451     %let dsid = %sysfunc(close(&dsid));
286452     %if ^&&nobs&id %then %do;
286453     proc datasets lib=work nolist;
286454     delete _temp&id;
286455     run;
286456     quit;
286457     %end;
286458     %else %do;
286459     %let scoreFlag&id = 1;
286460     data _temp&id;
286461     set _temp&id;
286462     where LHS ne NAME and node ne '';
286463     run;
286464     %let dsid = %sysfunc(open(_temp&id));
286465     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
286466     %let dsid = %sysfunc(close(&dsid));
286467     %if ^&&nobs&id %then %do;
286468     proc datasets lib=work nolist;
286469     delete _temp&id;
286470     run;
286471     quit;
286472     %end;
286473     %else %do;
286474     proc sort data=_temp&id nodupkey;
286475     by LHS NAME;
286476     run;
286477     %end;
286478     %end;
286479     %end;
286480     %end;
286481     %mend varDept;
286482     %macro optCode(outdata=fcmpdata);
286483     %global fcmpStart;
286484     %let fcmpStart = 0;
286485     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
286486     %let NumNodes=9;
286487     %do k=1 %to &NumNodes;
286488     %vardept(fcmpdata=&outdata, id=&k);
286489     %end;
286490     %mend optCode;
286491     %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 48 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

286492     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
286493     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
286494     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
286495     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286496     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
286497     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
286498     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
286499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286500     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286501     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
286501   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

286502     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

286503     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
286504     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
286505     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286506     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
286507     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
286508     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
286509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286510     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
286511     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
286512     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
286513     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

286514     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
286515     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
286515   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

286516     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

286517     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
286518     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
286519     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

286520     filename _pref
286520   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
286521     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
286522     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas.
286523    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286524    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
286525    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
286526    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
286527    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
286528    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
286529    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
286530    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
286531    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
286532    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
286533    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
286534    +LENGTH _WARN_ $4
286535    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
286536    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
286537    +
286538    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
286539    +
286540    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
286541    +
286542    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
286543    +
286544    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
286545    +
286546    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
286547    +
286548    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
286549    +
286550    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
286551    +
286552    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
286553    +
286554    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
286555    +
286556    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
286557    +
286558    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
286559    +
286560    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
286561    +
286562    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
286563    +
286564    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
286565    +
286566    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
286567    +
286568    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
286569    +
286570    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
286571    +
286572    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
286573    +
286574    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
286575    +
286576    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
286577    +
286578    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
286579    +
286580    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
286581    +
286582    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
286583    +
286584    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
286585    +
286586    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
286587    +
286588    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
286589    +
286590    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
286591    +
286592    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
286593    +
286594    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
286595    +
286596    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
286597    +
286598    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
286599    +
286600    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
286601    +
286602    +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
286603    +
286604    +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
286605    +
286606    +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
286607    +
286608    +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
286609    +
286610    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
286611    +
286612    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
286613    +
286614    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
286615    +
286616    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
286617    +
286618    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
286619    +
286620    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
286621    +
286622    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
286623    +
286624    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
286625    +
286626    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
286627    +
286628    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
286629    +
286630    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
286631    +
286632    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
286633    +
286634    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
286635    +
286636    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
286637    +
286638    +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
286639    +
286640    +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
286641    +
286642    +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
286643    +
286644    +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
286645    +
286646    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
286647    +
286648    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
286649    +
286650    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
286651    +
286652    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
286653    +
286654    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
286655    +
286656    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
286657    +
286658    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
286659    +
286660    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
286661    +
286662    +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
286663    +
286664    +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
286665    +
286666    +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
286667    +
286668    +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
286669    +
286670    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
286671    +
286672    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
286673    +
286674    +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
286675    +
286676    +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
286677    +
286678    +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
286679    +
286680    +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
286681    +
286682    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
286683    +
286684    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
286685    +
286686    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
286687    +
286688    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
286689    +
286690    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
286691    +
286692    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
286693    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
286694    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
286695    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
286696    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
286697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
286698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286699    +end;
MPRINT(EM_DIAGRAM):   end;
286700    +else do;
MPRINT(EM_DIAGRAM):   else do;
286701    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
286702    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
286703    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
286704    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
286705    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
286706    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
286707    +   end;
MPRINT(EM_DIAGRAM):   end;
286708    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
286709    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
286710    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
286711    +   end;
MPRINT(EM_DIAGRAM):   end;
286712    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
286713    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
286714    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
286715    +   end;
MPRINT(EM_DIAGRAM):   end;
286716    +   else do;
MPRINT(EM_DIAGRAM):   else do;
286717    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
286718    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
286719    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
286720    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286721    +   end;
MPRINT(EM_DIAGRAM):   end;
286722    +end;
MPRINT(EM_DIAGRAM):   end;
286723    +
286724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286725    +*** Checking missing input Interval
286726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
286727    +
286728    +IF NMISS(
286729    +   AcceptedCmpTotal ,
286730    +   Frq ,
286731    +   Income ,
286732    +   Mnt ,
286733    +   MntGoldProds ,
286734    +   MntMeatProducts ,
286735    +   MntWines ,
286736    +   NumDistPurchases ,
286737    +   RFMstat ,
286738    +   RMntFrq ,
286739    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
286740    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
286741    +
286742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
286743    +END;
MPRINT(EM_DIAGRAM):   END;
286744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286745    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
286746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286747    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286748    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
286749    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
286750    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
286751    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
286752    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
286753    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
286754    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
286755    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
286756    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
286757    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
286758    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
286759    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
286760    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
286761    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
286762    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
286763    +END;
MPRINT(EM_DIAGRAM):   END;
286764    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286765    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
286766    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
286767    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
286768    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
286769    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
286770    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
286771    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
286772    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
286773    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
286774    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
286775    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
286776    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
286777    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
286778    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
286779    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
286780    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
286781    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
286782    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
286783    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
286784    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
286785    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
286786    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
286787    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
286788    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
286789    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
286790    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
286791    +END;
MPRINT(EM_DIAGRAM):   END;
286792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286793    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
286794    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286796    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
286797    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286798    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286799    +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
286800    +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
286801    +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
286802    +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
286803    +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
286804    +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
286805    +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
286806    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 * 
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 * 
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines + 
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 * 
S_RMntFrq + -5.00157954960261 * S_Recency ;
286807    +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
286808    +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
286809    +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
286810    +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
286811    +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
286812    +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
286813    +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
286814    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 * 
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 * 
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines + 
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 * 
S_RMntFrq + 0.376849190211 * S_Recency ;
286815    +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
286816    +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
286817    +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
286818    +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
286819    +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
286820    +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
286821    +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
286822    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 * 
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 * 
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines + 
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 * 
S_RMntFrq + 1.45489277444882 * S_Recency ;
286823    +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
286824    +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
286825    +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
286826    +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
286827    +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
286828    +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
286829    +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
286830    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 * 
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 * 
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines + 
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 * 
S_RMntFrq + -1.62001903467763 * S_Recency ;
286831    +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
286832    +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
286833    +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
286834    +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
286835    +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
286836    +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
286837    +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
286838    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 * 
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 * 
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines + 
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 * 
S_RMntFrq + 0.51475149451235 * S_Recency ;
286839    +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
286840    +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
286841    +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
286842    +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
286843    +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
286844    +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
286845    +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
286846    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 * 
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 * 
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines + 
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 * 
S_RMntFrq + -1.97053621157132 * S_Recency ;
286847    +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
286848    +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 + 
0.90195662603521 * G_Marital_Status1 ;
286849    +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
286850    +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 + 
-0.49019446056296 * G_Marital_Status1 ;
286851    +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
286852    +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 + 
1.10544938214372 * G_Marital_Status1 ;
286853    +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
286854    +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 + 
0.87683669160259 * G_Marital_Status1 ;
286855    +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
286856    +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 + 
-0.13246180955576 * G_Marital_Status1 ;
286857    +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
286858    +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 + 
0.24707257141342 * G_Marital_Status1 ;
286859    +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
286860    +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
286861    +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
286862    +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
286863    +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
286864    +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
286865    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
286866    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
286867    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
286868    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
286869    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
286870    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
286871    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
286872    +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
286873    +END;
MPRINT(EM_DIAGRAM):   END;
286874    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286875    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
286876    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
286877    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
286878    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
286879    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
286880    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
286881    +END;
MPRINT(EM_DIAGRAM):   END;
286882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286883    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
286884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286885    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286886    +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
286887    +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
286888    +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
286889    +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
286890    +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
286891    +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
286892    +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
286893    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 * 
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 * 
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines + 
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 * 
S_RMntFrq + 0.2335216261547 * S_Recency ;
286894    +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
286895    +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
286896    +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
286897    +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
286898    +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
286899    +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
286900    +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
286901    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 * 
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 * 
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines + 
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 * 
S_RMntFrq + -2.14859674388241 * S_Recency ;
286902    +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
286903    +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
286904    +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
286905    +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
286906    +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
286907    +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
286908    +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
286909    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 * 
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 * 
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines + 
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 * 
S_RMntFrq + 0.72727673065668 * S_Recency ;
286910    +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
286911    +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
286912    +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
286913    +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
286914    +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
286915    +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
286916    +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
286917    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 * 
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 * 
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines + 
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 * 
S_RMntFrq + -1.42094697023704 * S_Recency ;
286918    +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
286919    +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
286920    +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
286921    +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
286922    +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
286923    +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
286924    +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
286925    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 * 
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 * 
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines + 
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 * 
S_RMntFrq + -0.08024855242737 * S_Recency ;
286926    +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
286927    +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
286928    +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
286929    +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
286930    +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
286931    +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
286932    +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
286933    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 * 
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 * 
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines + 
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 * 
S_RMntFrq + 1.79661996586627 * S_Recency ;
286934    +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
286935    +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 + 
0.61190614442174 * G_Marital_Status1 ;
286936    +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
286937    +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 + 
-0.43943770039245 * G_Marital_Status1 ;
286938    +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
286939    +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 + 
0.36969296112687 * G_Marital_Status1 ;
286940    +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
286941    +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 + 
-0.48897798100871 * G_Marital_Status1 ;
286942    +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
286943    +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 + 
-0.0768652239427 * G_Marital_Status1 ;
286944    +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
286945    +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 + 
-0.58590001312977 * G_Marital_Status1 ;
286946    +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
286947    +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
286948    +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
286949    +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
286950    +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
286951    +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
286952    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
286953    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
286954    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
286955    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
286956    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
286957    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
286958    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
286959    +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
286960    +END;
MPRINT(EM_DIAGRAM):   END;
286961    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
286962    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
286963    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
286964    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
286965    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
286966    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
286967    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
286968    +END;
MPRINT(EM_DIAGRAM):   END;
286969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286970    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
286971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
286972    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
286973    +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
286974    +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
286975    +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
286976    +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
286977    +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
286978    +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
286979    +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
286980    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 * 
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 * 
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines + 
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 * 
S_RMntFrq + -0.05038100966606 * S_Recency ;
286981    +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
286982    +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
286983    +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
286984    +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
286985    +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
286986    +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
286987    +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
286988    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 * 
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 * 
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines + 
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 * 
S_RMntFrq + 0.90023461529092 * S_Recency ;
286989    +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
286990    +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
286991    +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
286992    +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
286993    +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
286994    +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
286995    +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
286996    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 * 
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 * 
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines + 
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 * 
S_RMntFrq + -1.00117301133743 * S_Recency ;
286997    +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
286998    +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
286999    +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
287000    +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
287001    +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
287002    +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
287003    +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
287004    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 * 
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 * 
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines + 
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 * 
S_RMntFrq + 1.51096273676103 * S_Recency ;
287005    +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
287006    +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
287007    +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
287008    +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
287009    +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
287010    +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
287011    +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
287012    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 * 
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 * 
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines + 
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 * 
S_RMntFrq + 0.65859109347516 * S_Recency ;
287013    +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
287014    +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
287015    +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
287016    +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
287017    +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
287018    +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
287019    +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
287020    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 * 
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 * 
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines + 
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 * 
S_RMntFrq + 0.40747604583851 * S_Recency ;
287021    +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
287022    +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 + 
2.03049158937708 * G_Marital_Status1 ;
287023    +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
287024    +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 + 
0.95456795317325 * G_Marital_Status1 ;
287025    +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
287026    +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 + 
-0.64267205173982 * G_Marital_Status1 ;
287027    +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
287028    +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 + 
-0.13878277097624 * G_Marital_Status1 ;
287029    +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
287030    +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983 
* G_Marital_Status1 ;
287031    +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
287032    +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 + 
-1.38939757582535 * G_Marital_Status1 ;
287033    +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
287034    +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
287035    +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
287036    +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
287037    +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
287038    +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
287039    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
287040    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
287041    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
287042    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
287043    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
287044    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
287045    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
287046    +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
287047    +END;
MPRINT(EM_DIAGRAM):   END;
287048    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287049    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
287050    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
287051    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
287052    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
287053    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
287054    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
287055    +END;
MPRINT(EM_DIAGRAM):   END;
287056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287057    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
287058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287059    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287060    +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
287061    +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
287062    +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
287063    +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
287064    +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
287065    +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
287066    +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
287067    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 * 
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 * 
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines + 
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 * 
S_RMntFrq + 1.46038466341548 * S_Recency ;
287068    +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
287069    +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
287070    +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
287071    +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
287072    +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
287073    +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
287074    +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
287075    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 * 
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 * 
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines + 
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 * 
S_RMntFrq + 1.48508197039719 * S_Recency ;
287076    +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
287077    +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
287078    +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
287079    +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
287080    +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
287081    +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
287082    +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
287083    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 * 
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 * 
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines + 
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 * 
S_RMntFrq + -0.15926282047245 * S_Recency ;
287084    +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
287085    +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
287086    +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
287087    +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
287088    +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
287089    +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
287090    +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
287091    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 * 
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 * 
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines + 
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 * 
S_RMntFrq + -0.01945293751142 * S_Recency ;
287092    +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
287093    +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
287094    +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
287095    +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
287096    +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
287097    +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
287098    +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
287099    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 * 
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 * 
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines + 
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 * 
S_RMntFrq + 0.74380794599056 * S_Recency ;
287100    +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
287101    +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
287102    +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
287103    +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
287104    +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
287105    +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
287106    +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
287107    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 * 
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 * 
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines + 
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 * 
S_RMntFrq + 0.85268992665591 * S_Recency ;
287108    +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
287109    +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 + 
1.82577173192743 * G_Marital_Status1 ;
287110    +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
287111    +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 + 
1.86494194086223 * G_Marital_Status1 ;
287112    +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
287113    +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 + 
-0.78535196846115 * G_Marital_Status1 ;
287114    +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
287115    +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 + 
-1.13643623224979 * G_Marital_Status1 ;
287116    +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
287117    +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 + 
-0.50611098994468 * G_Marital_Status1 ;
287118    +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
287119    +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 + 
1.05855030017376 * G_Marital_Status1 ;
287120    +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
287121    +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
287122    +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
287123    +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
287124    +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
287125    +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
287126    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
287127    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
287128    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
287129    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
287130    +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
287131    +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
287132    +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
287133    +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
287134    +END;
MPRINT(EM_DIAGRAM):   END;
287135    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287136    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
287137    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
287138    +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
287139    +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
287140    +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
287141    +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
287142    +END;
MPRINT(EM_DIAGRAM):   END;
287143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287144    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
287145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287146    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287147    +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
287148    +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
287149    +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 + 
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 + 
-0.85059681057218 * H1x1_6 ;
287150    +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
287151    +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
287152    +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 + 
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 + 
-0.32310175742174 * H1x1_6 ;
287153    +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
287154    +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
287155    +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 + 
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 + 
0.01697480121243 * H1x1_6 ;
287156    +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
287157    +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
287158    +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 + 
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 + 
0.10016209874446 * H1x1_6 ;
287159    +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
287160    +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
287161    +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 + 
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 + 
1.50580112761945 * H1x1_6 ;
287162    +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
287163    +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
287164    +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
287165    +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2 
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 + 
-0.36964326956968 * H1x2_6 ;
287166    +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
287167    +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
287168    +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
287169    +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2 
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 + 
-0.0675747785188 * H1x2_6 ;
287170    +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
287171    +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
287172    +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
287173    +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2 
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 + 
0.20622228187831 * H1x2_6 ;
287174    +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
287175    +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
287176    +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
287177    +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2 
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 + 
0.99704195296742 * H1x2_6 ;
287178    +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
287179    +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
287180    +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
287181    +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2 
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 + 
0.52117926766363 * H1x2_6 ;
287182    +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
287183    +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
287184    +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
287185    +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2 
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 + 
0.010792162082 * H1x3_6 ;
287186    +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
287187    +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
287188    +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
287189    +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2 
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 + 
0.31051080747621 * H1x3_6 ;
287190    +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
287191    +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
287192    +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
287193    +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2 
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 + 
0.4901677948096 * H1x3_6 ;
287194    +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
287195    +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
287196    +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
287197    +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2 
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 + 
-0.35850032269696 * H1x3_6 ;
287198    +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
287199    +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
287200    +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
287201    +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 * 
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 + 
0.91538472149247 * H1x3_6 ;
287202    +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
287203    +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
287204    +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
287205    +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 * 
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 + 
1.46692133055956 * H1x4_6 ;
287206    +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
287207    +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
287208    +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
287209    +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2 
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 + 
-0.4804481967354 * H1x4_6 ;
287210    +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
287211    +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
287212    +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
287213    +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2 
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 + 
-0.79556185531974 * H1x4_6 ;
287214    +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
287215    +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
287216    +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
287217    +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2 
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 + 
-0.22377472142722 * H1x4_6 ;
287218    +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
287219    +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
287220    +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
287221    +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 * 
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 + 
0.49805259687865 * H1x4_6 ;
287222    +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
287223    +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
287224    +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
287225    +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
287226    +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
287227    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
287228    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
287229    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287230    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
287231    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
287232    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
287233    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
287234    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
287235    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
287236    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
287237    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
287238    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
287239    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
287240    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
287241    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
287242    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
287243    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
287244    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
287245    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
287246    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
287247    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
287248    +END;
MPRINT(EM_DIAGRAM):   END;
287249    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287250    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
287251    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
287252    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
287253    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
287254    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
287255    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
287256    +END;
MPRINT(EM_DIAGRAM):   END;
287257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287258    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
287259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287260    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287261    +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
287262    +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
287263    +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 + 
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 + 
1.73108900683337 * H1x1_6 ;
287264    +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
287265    +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
287266    +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 + 
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 + 
1.44831802939799 * H1x1_6 ;
287267    +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
287268    +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
287269    +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 + 
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 + 
-1.33423515707253 * H1x1_6 ;
287270    +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
287271    +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
287272    +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 + 
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 + 
0.57571476480191 * H1x1_6 ;
287273    +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
287274    +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
287275    +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 + 
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 + 
-2.01222927536337 * H1x1_6 ;
287276    +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
287277    +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
287278    +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
287279    +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2 
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 + 
-0.86707973977777 * H1x2_6 ;
287280    +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
287281    +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
287282    +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
287283    +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2 
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 + 
0.34775419906833 * H1x2_6 ;
287284    +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
287285    +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
287286    +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
287287    +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2 
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 + 
-0.92757761378206 * H1x2_6 ;
287288    +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
287289    +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
287290    +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
287291    +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 * 
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 + 
1.22882033880531 * H1x2_6 ;
287292    +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
287293    +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
287294    +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
287295    +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2 
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 + 
1.13665339513142 * H1x2_6 ;
287296    +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
287297    +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
287298    +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
287299    +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 * 
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 + 
-0.84355541605354 * H1x3_6 ;
287300    +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
287301    +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
287302    +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
287303    +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2 
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 + 
-0.14832407235293 * H1x3_6 ;
287304    +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
287305    +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
287306    +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
287307    +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2 
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 + 
0.41209753590668 * H1x3_6 ;
287308    +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
287309    +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
287310    +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
287311    +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 + 
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 + 
0.05356295771962 * H1x3_6 ;
287312    +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
287313    +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
287314    +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
287315    +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2 
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 + 
1.3865980084186 * H1x3_6 ;
287316    +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
287317    +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
287318    +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
287319    +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2 
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 + 
0.16602366912489 * H1x4_6 ;
287320    +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
287321    +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
287322    +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
287323    +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2 
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 + 
-0.9577144624714 * H1x4_6 ;
287324    +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
287325    +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
287326    +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
287327    +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 * 
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 + 
-0.86962851115528 * H1x4_6 ;
287328    +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
287329    +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
287330    +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
287331    +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2 
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 + 
2.01216139921959 * H1x4_6 ;
287332    +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
287333    +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
287334    +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
287335    +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 * 
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 + 
-0.19026348436175 * H1x4_6 ;
287336    +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
287337    +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
287338    +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
287339    +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
287340    +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
287341    +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
287342    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
287343    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287344    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
287345    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
287346    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
287347    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
287348    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
287349    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
287350    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
287351    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
287352    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
287353    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
287354    +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
287355    +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
287356    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
287357    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
287358    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
287359    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
287360    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
287361    +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
287362    +END;
MPRINT(EM_DIAGRAM):   END;
287363    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287364    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
287365    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
287366    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
287367    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
287368    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
287369    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
287370    +END;
MPRINT(EM_DIAGRAM):   END;
287371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287372    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
287373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287374    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287375    +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
287376    +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
287377    +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 + 
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 + 
0.75959028005652 * H1x1_6 ;
287378    +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
287379    +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
287380    +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 + 
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 + 
-0.79989554227284 * H1x1_6 ;
287381    +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
287382    +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
287383    +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 + 
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 + 
1.46105111567983 * H1x1_6 ;
287384    +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
287385    +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
287386    +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 + 
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 + 
-0.03142746343877 * H1x1_6 ;
287387    +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
287388    +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
287389    +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 + 
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 + 
2.29818718782262 * H1x1_6 ;
287390    +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
287391    +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
287392    +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
287393    +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 * 
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 + 
-0.39006326539815 * H1x2_6 ;
287394    +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
287395    +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
287396    +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
287397    +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2 
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 + 
0.87575796008942 * H1x2_6 ;
287398    +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
287399    +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
287400    +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
287401    +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 + 
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 + 
-0.99288712489296 * H1x2_6 ;
287402    +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
287403    +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
287404    +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
287405    +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2 
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 + 
2.18684373678918 * H1x2_6 ;
287406    +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
287407    +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
287408    +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
287409    +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2 
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 + 
0.0384736341173 * H1x2_6 ;
287410    +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
287411    +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
287412    +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
287413    +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2 
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 + 
-0.65863037608331 * H1x3_6 ;
287414    +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
287415    +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
287416    +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
287417    +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2 
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 + 
-0.2732767866426 * H1x3_6 ;
287418    +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
287419    +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
287420    +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
287421    +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2 
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 + 
0.95358246629929 * H1x3_6 ;
287422    +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
287423    +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
287424    +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
287425    +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2 
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 + 
-1.50364154763084 * H1x3_6 ;
287426    +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
287427    +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
287428    +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
287429    +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 * 
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 + 
0.3673818114501 * H1x3_6 ;
287430    +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
287431    +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
287432    +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
287433    +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2 
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 + 
-0.876005602164 * H1x4_6 ;
287434    +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
287435    +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
287436    +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
287437    +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2 
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 + 
0.51236653129509 * H1x4_6 ;
287438    +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
287439    +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
287440    +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
287441    +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 + 
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 + 
0.14855508666868 * H1x4_6 ;
287442    +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
287443    +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
287444    +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
287445    +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2 
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 + 
1.60853840268286 * H1x4_6 ;
287446    +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
287447    +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
287448    +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
287449    +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2 
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 + 
0.6650692994568 * H1x4_6 ;
287450    +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
287451    +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
287452    +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
287453    +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
287454    +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
287455    +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
287456    +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
287457    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287458    +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
287459    +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
287460    +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
287461    +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
287462    +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
287463    +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
287464    +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
287465    +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
287466    +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
287467    +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
287468    +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
287469    +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
287470    +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
287471    +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
287472    +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
287473    +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
287474    +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
287475    +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
287476    +END;
MPRINT(EM_DIAGRAM):   END;
287477    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287478    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
287479    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
287480    +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
287481    +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
287482    +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
287483    +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
287484    +END;
MPRINT(EM_DIAGRAM):   END;
287485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287486    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
287487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287488    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287489    +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
287490    +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
287491    +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 + 
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 + 
0.62066324264653 * H2x1_6 ;
287492    +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
287493    +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
287494    +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 + 
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 + 
1.70699964755049 * H2x1_6 ;
287495    +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
287496    +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
287497    +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 + 
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 + 
-0.60932405988373 * H2x1_6 ;
287498    +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
287499    +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
287500    +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 + 
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 + 
-0.04997148078498 * H2x1_6 ;
287501    +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
287502    +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
287503    +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 + 
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 + 
-1.98639459325872 * H2x1_6 ;
287504    +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
287505    +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
287506    +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
287507    +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2 
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 + 
2.04617275364668 * H2x2_6 ;
287508    +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
287509    +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
287510    +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
287511    +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2 
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 + 
-0.37660795680674 * H2x2_6 ;
287512    +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
287513    +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
287514    +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
287515    +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2 
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 + 
-0.43453791992382 * H2x2_6 ;
287516    +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
287517    +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
287518    +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
287519    +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2 
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 + 
-3.30381142208727 * H2x2_6 ;
287520    +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
287521    +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
287522    +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
287523    +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 + 
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 + 
-0.34019675397366 * H2x2_6 ;
287524    +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
287525    +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
287526    +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
287527    +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2 
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 + 
0.59340663088806 * H2x3_6 ;
287528    +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
287529    +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
287530    +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
287531    +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2 
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 + 
0.67050797164115 * H2x3_6 ;
287532    +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
287533    +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
287534    +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
287535    +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 * 
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 + 
-0.51274988768251 * H2x3_6 ;
287536    +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
287537    +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
287538    +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
287539    +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2 
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 + 
-0.73773727947747 * H2x3_6 ;
287540    +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
287541    +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
287542    +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
287543    +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 * 
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 + 
-1.07137645697526 * H2x3_6 ;
287544    +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
287545    +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
287546    +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
287547    +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
287548    +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
287549    +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
287550    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
287551    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287552    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
287553    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
287554    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
287555    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
287556    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
287557    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
287558    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
287559    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
287560    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
287561    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
287562    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
287563    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
287564    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
287565    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
287566    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
287567    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
287568    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
287569    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
287570    +END;
MPRINT(EM_DIAGRAM):   END;
287571    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287572    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
287573    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
287574    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
287575    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
287576    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
287577    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
287578    +END;
MPRINT(EM_DIAGRAM):   END;
287579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287580    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
287581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287582    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287583    +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
287584    +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
287585    +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 + 
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 + 
0.50683843245151 * H2x1_6 ;
287586    +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
287587    +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
287588    +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 + 
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 + 
-0.00458488228083 * H2x1_6 ;
287589    +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
287590    +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
287591    +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 + 
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 + 
0.23483419363088 * H2x1_6 ;
287592    +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
287593    +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
287594    +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 + 
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 + 
-0.69393637888423 * H2x1_6 ;
287595    +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
287596    +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
287597    +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 + 
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 + 
-0.03264500335093 * H2x1_6 ;
287598    +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
287599    +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
287600    +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
287601    +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2 
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 + 
-0.6527392657117 * H2x2_6 ;
287602    +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
287603    +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
287604    +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
287605    +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 * 
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 + 
-0.40911363767301 * H2x2_6 ;
287606    +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
287607    +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
287608    +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
287609    +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2 
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 + 
-1.14035867434772 * H2x2_6 ;
287610    +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
287611    +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
287612    +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
287613    +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2 
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 + 
-1.32783167695801 * H2x2_6 ;
287614    +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
287615    +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
287616    +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
287617    +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2 
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 + 
0.17488501957475 * H2x2_6 ;
287618    +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
287619    +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
287620    +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
287621    +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2 
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 + 
-0.17544617255869 * H2x3_6 ;
287622    +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
287623    +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
287624    +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
287625    +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2 
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 + 
1.14672043219259 * H2x3_6 ;
287626    +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
287627    +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
287628    +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
287629    +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2 
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 + 
1.02889511152823 * H2x3_6 ;
287630    +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
287631    +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
287632    +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
287633    +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 * 
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 + 
0.10073869982371 * H2x3_6 ;
287634    +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
287635    +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
287636    +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
287637    +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2 
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 + 
0.97496084656174 * H2x3_6 ;
287638    +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
287639    +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
287640    +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
287641    +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
287642    +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
287643    +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
287644    +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
287645    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287646    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
287647    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
287648    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
287649    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
287650    +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
287651    +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
287652    +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
287653    +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
287654    +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
287655    +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
287656    +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
287657    +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
287658    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
287659    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
287660    +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
287661    +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
287662    +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
287663    +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
287664    +END;
MPRINT(EM_DIAGRAM):   END;
287665    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287666    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
287667    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
287668    +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
287669    +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
287670    +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
287671    +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
287672    +END;
MPRINT(EM_DIAGRAM):   END;
287673    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287674    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
287675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287676    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287677    +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
287678    +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
287679    +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 + 
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 + 
-0.66853997603718 * H3x1_6 ;
287680    +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
287681    +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
287682    +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 + 
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 + 
0.99276034828548 * H3x1_6 ;
287683    +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
287684    +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
287685    +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 + 
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 + 
-0.38609823936674 * H3x1_6 ;
287686    +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
287687    +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
287688    +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 + 
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 + 
-0.80603399686936 * H3x1_6 ;
287689    +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
287690    +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
287691    +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 + 
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 + 
-1.56166867584216 * H3x1_6 ;
287692    +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
287693    +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
287694    +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
287695    +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2 
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 + 
0.77216806897502 * H3x2_6 ;
287696    +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
287697    +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
287698    +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
287699    +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 + 
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 + 
0.73971378600397 * H3x2_6 ;
287700    +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
287701    +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
287702    +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
287703    +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2 
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 + 
0.90907054011344 * H3x2_6 ;
287704    +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
287705    +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
287706    +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
287707    +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 * 
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 + 
0.95412028439169 * H3x2_6 ;
287708    +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
287709    +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
287710    +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
287711    +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2 
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 + 
-0.0058627670025 * H3x2_6 ;
287712    +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
287713    +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
287714    +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
287715    +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
287716    +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
287717    +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
287718    +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
287719    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287720    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
287721    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
287722    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
287723    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
287724    +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
287725    +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
287726    +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
287727    +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
287728    +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
287729    +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
287730    +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
287731    +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
287732    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
287733    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
287734    +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
287735    +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
287736    +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
287737    +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
287738    +END;
MPRINT(EM_DIAGRAM):   END;
287739    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287740    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
287741    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
287742    +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
287743    +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
287744    +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
287745    +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
287746    +END;
MPRINT(EM_DIAGRAM):   END;
287747    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287748    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
287749    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287750    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
287751    +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
287752    +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
287753    +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 + 
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 + 
-2.63321710569292 * H4x1_6 ;
287754    +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
287755    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
287756    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
287757    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
287758    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
287759    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
287760    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
287761    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
287762    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
287763    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
287764    +END;
MPRINT(EM_DIAGRAM):   END;
287765    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
287766    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
287767    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
287768    +END;
MPRINT(EM_DIAGRAM):   END;
287769    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
287770    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
287771    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
287772    +END;
MPRINT(EM_DIAGRAM):   END;
287773    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287774    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
287775    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
287776    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
287777    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
287778    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
287779    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
287780    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
287781    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
287782    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
287783    +END;
MPRINT(EM_DIAGRAM):   END;
287784    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
287785    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
287786    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
287787    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
287788     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
287789     quit;
287790     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
287791     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
287792     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
287793     retain ID 2 Node "AutoNeural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural28";
287794     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
287795     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14351 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14351 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

287796     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
287797     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287798     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14351 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 14351 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287799     proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME 
CREATOR);
287800     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287801     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287802     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287803     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
287804     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
287805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287806     proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
287807     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 114 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

287808     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
287809     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287810     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 114 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 114 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287811     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287812     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
287813     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287814     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 114 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 114 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287815     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
287816     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
287816   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 6863 rows and 5 columns.

287817     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287818     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
287819     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 6863 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 6863 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287820     filename _pref
287820   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
287821     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
287822     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
287823    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
287824    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
287825    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
287826    +
287827    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
287828    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
287829    +
287830    +
287831    +/*----G_Marital_Status begin----*/
287832    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
287833    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
287834    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
287835    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
287836    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
287837    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
287838    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
287839    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
287840    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
287841    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
287842    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
287843    +end;
MPRINT(EM_DIAGRAM):   end;
287844    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
287845    +/*----G_Marital_Status end----*/
287846    +
287847    +
287848    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
287849    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
287850    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
287851     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
287852     quit;
287853     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
287854     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
287855     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
287856     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
287857     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
287858     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287859     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
287860     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287861     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287862     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
287863     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287864     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287865     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287866     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
287867     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
287868     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287869     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
287870     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

287871     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
287872     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287873     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287874     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287875     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
287876     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287877     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287878     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
287879     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
287879   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

287880     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287881     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
287882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 6866 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287883     filename _pref
287883   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
287884     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
287885     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
287886    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287887    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
287888    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
287889    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
287890    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
287891    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
287892     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
287893     quit;
287894     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
287895     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
287896     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
287897     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
287898     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
287899     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287900     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
287901     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287902     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287903     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
287904     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287905     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287906     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287907     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
287908     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
287909     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287910     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
287911     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

287912     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
287913     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287915     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287916     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
287917     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287918     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287919     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
287920     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
287920   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

287921     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287922     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
287923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 6870 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287924     filename _pref
287924   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
287925     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
287926     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
287927    +
287928    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
287929    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
287929   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
287930    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
287931    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
287932    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
287933    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
287934    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
287935     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
287936     quit;
287937     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
287938     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
287939     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
287940     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
287941     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
287942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287943     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
287944     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287946     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
287947     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287948     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287949     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287950     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
287951     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
287952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287953     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
287954     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287955     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
287956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287957     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287958     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
287959     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
287960     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
287961     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287962     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
287963     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
287963   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

287964     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

287965     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
287966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 6909 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

287967     filename _pref
287967   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
287968     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
287969     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
287970    +
287971    +
287972    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
287973    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
287974    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
287975    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
287976    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
287977    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
287978    +
287979    +
287980    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
287981    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
287982    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
287983    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
287984    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
287985    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
287986    +
287987    +
287988    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
287989    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
287990    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
287991    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
287992    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
287993    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
287994    +
287995    +
287996    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
287997    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
287998    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
287999    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
288000    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
288001    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288002    +
288003    +
288004    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
288005    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
288006    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
288007    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
288008    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
288009    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288010    +
288011    +
288012    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
288013    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
288014    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
288015    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
288016    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
288017    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288018    +
288019    +
288020    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
288021    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
288022    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
288023    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
288024    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
288025    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288026    +
288027    +
288028    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
288029    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
288030    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
288031    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
288032    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
288033    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288034    +if
288035    +_FILTERNORM1 not in ( '.')
288036    + and
288037    +_FILTERNORM2 not in ( '.')
288038    + and
288039    +_FILTERNORM3 not in ( '.')
288040    + and
288041    +_FILTERNORM4 not in ( '.')
288042    + and
288043    +_FILTERNORM5 not in ( '.')
288044    + and
288045    +_FILTERNORM6 not in ( '.')
288046    + and
288047    +_FILTERNORM7 not in ( ' ')
288048    + and
288049    +_FILTERNORM8 not in ( ' ')
288050    +and
288051    +( Dt_Customer ne .)
288052    +and ( Income ne . and (Income<=107000))
288053    +and ( Kidhome ne .)
288054    +and ( MntFishProducts ne .)
288055    +and ( MntFruits ne .)
288056    +and ( MntGoldProds ne .)
288057    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
288058    +and ( MntSweetProducts ne .)
288059    +and ( MntWines ne .)
288060    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
288061    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
288062    +and ( NumStorePurchases ne .)
288063    +and ( NumWebPurchases ne .)
288064    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
288065    +and ( Recency ne .)
288066    +and ( Teenhome ne .)
288067    +and ( Year_Birth ne .)
288068    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
288069    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
288070    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
288071    +end;
MPRINT(EM_DIAGRAM):   end;
288072    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
288073    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288074     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288075     quit;
288076     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288077     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288078     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288079     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
288080     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288081     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288082     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288083     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288084     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

288085     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
288086     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288087     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288088     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288089     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288090     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288091     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288092     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
288093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288094     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288095     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288097     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288098     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288099     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288100     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288101     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288102     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288102   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

288103     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288104     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
288105     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 6975 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288106     %macro varDept(fcmpdata=,id=);
288107     %global nobs&id scoreFlag&id;
288108     %let scoreFlag&id = 0;
288109     %if &id=1 or ^&fcmpStart %then %do;
288110     proc sort data=&fcmpdata out=_temp&id nodupkey;
288111     by NAME;
288112     where id=&id and LHS in( %let j=1;
288113     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
288114     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
288115     "&var" %let j = %eval(&j+1);
288116     %end;
288117     );
288118     run;
288119     %let dsid = %sysfunc(open(_temp&id));
288120     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288121     %let dsid = %sysfunc(close(&dsid));
288122     %if &&nobs&id %then %do;
288123     %let scoreFlag&id = 1;
288124     %let fcmpStart = 1;
288125     %end;
288126     %else %let fcmpStart = 0;
288127     %end;
288128     %else %do;
288129     proc sort data=&fcmpdata out=_tempid;
288130     where id=&id;
288131     by LHS;
288132     run;
288133     %let dsid = %sysfunc(open(_tempid));
288134     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288135     %let dsid = %sysfunc(close(&dsid));
288136     %if ^&&nobs&id %then %do;
288137     proc datasets lib=work nolist;
288138     delete _tempid;
288139     run;
288140     quit;
288141     %end;
288142     %else %do;
288143     data _tempAll;
288144     set %let j=%eval(&id-1);
288145     %do x=1 %to &j;
288146     %if &&nobs&x %then %do;
288147     _temp&x %end;
288148     %end;
288149     ;
288150     run;
288151     proc sql;
288152     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
288152   ! work._tempid p2 where p.name=p2.lhs;
288153     quit;
288154     data _temp&id;
288155     set _temp&id;
288156     where LHS ne '' and NAME ne '' and Node ne '';
288157     run;
288158     proc datasets lib=work nolist;
288159     delete _tempAll;
288160     run;
288161     %let dsid = %sysfunc(open(_temp&id));
288162     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288163     %let dsid = %sysfunc(close(&dsid));
288164     %if ^&&nobs&id %then %do;
288165     proc datasets lib=work nolist;
288166     delete _temp&id;
288167     run;
288168     quit;
288169     %end;
288170     %else %do;
288171     %let scoreFlag&id = 1;
288172     data _temp&id;
288173     set _temp&id;
288174     where LHS ne NAME and node ne '';
288175     run;
288176     %let dsid = %sysfunc(open(_temp&id));
288177     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288178     %let dsid = %sysfunc(close(&dsid));
288179     %if ^&&nobs&id %then %do;
288180     proc datasets lib=work nolist;
288181     delete _temp&id;
288182     run;
288183     quit;
288184     %end;
288185     %else %do;
288186     proc sort data=_temp&id nodupkey;
288187     by LHS NAME;
288188     run;
288189     %end;
288190     %end;
288191     %end;
288192     %end;
288193     %mend varDept;
288194     %macro optCode(outdata=fcmpdata);
288195     %global fcmpStart;
288196     %let fcmpStart = 0;
288197     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
288198     %let NumNodes=9;
288199     %do k=1 %to &NumNodes;
288200     %vardept(fcmpdata=&outdata, id=&k);
288201     %end;
288202     %mend optCode;
288203     %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 234 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 74 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 74 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 75 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 114 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

288204     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
288205     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
288206     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
288207     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288208     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
288209     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
288210     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
288211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288212     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288213     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
288213   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

288214     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288215     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
288216     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
288217     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288218     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
288219     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
288220     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
288221     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288222     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
288223     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
288224     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
288225     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288226     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288227     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
288227   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

288228     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

288229     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
288230     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
288231     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288232     filename _pref
288232   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
288233     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288234     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas.
288235    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288236    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
288237    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288238    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
288239    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
288240    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
288241    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
288242    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
288243    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
288244    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
288245    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
288246    +LENGTH _WARN_ $4
288247    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
288248    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
288249    +
288250    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
288251    +
288252    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
288253    +
288254    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
288255    +
288256    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
288257    +
288258    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
288259    +
288260    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
288261    +
288262    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
288263    +
288264    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
288265    +
288266    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
288267    +
288268    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
288269    +
288270    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
288271    +
288272    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
288273    +
288274    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
288275    +
288276    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
288277    +
288278    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
288279    +
288280    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
288281    +
288282    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
288283    +
288284    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
288285    +
288286    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
288287    +
288288    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
288289    +
288290    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
288291    +
288292    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
288293    +
288294    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
288295    +
288296    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
288297    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
288298    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
288299    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
288300    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
288301    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
288302    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
288303    +end;
MPRINT(EM_DIAGRAM):   end;
288304    +else do;
MPRINT(EM_DIAGRAM):   else do;
288305    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
288306    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
288307    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
288308    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
288309    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
288310    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
288311    +   end;
MPRINT(EM_DIAGRAM):   end;
288312    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
288313    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
288314    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
288315    +   end;
MPRINT(EM_DIAGRAM):   end;
288316    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
288317    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
288318    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
288319    +   end;
MPRINT(EM_DIAGRAM):   end;
288320    +   else do;
MPRINT(EM_DIAGRAM):   else do;
288321    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
288322    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
288323    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
288324    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
288325    +   end;
MPRINT(EM_DIAGRAM):   end;
288326    +end;
MPRINT(EM_DIAGRAM):   end;
288327    +
288328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288329    +*** Checking missing input Interval
288330    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
288331    +
288332    +IF NMISS(
288333    +   AcceptedCmpTotal ,
288334    +   Frq ,
288335    +   Income ,
288336    +   Mnt ,
288337    +   MntGoldProds ,
288338    +   MntMeatProducts ,
288339    +   MntWines ,
288340    +   NumDistPurchases ,
288341    +   RFMstat ,
288342    +   RMntFrq ,
288343    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
288344    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
288345    +
288346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
288347    +END;
MPRINT(EM_DIAGRAM):   END;
288348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288349    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
288350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288351    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288352    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
288353    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
288354    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
288355    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
288356    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
288357    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
288358    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
288359    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
288360    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
288361    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
288362    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
288363    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
288364    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
288365    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
288366    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
288367    +END;
MPRINT(EM_DIAGRAM):   END;
288368    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288369    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
288370    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
288371    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
288372    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
288373    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
288374    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
288375    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
288376    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
288377    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
288378    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
288379    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
288380    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
288381    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
288382    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
288383    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
288384    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
288385    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
288386    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
288387    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
288388    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
288389    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
288390    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
288391    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
288392    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
288393    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
288394    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
288395    +END;
MPRINT(EM_DIAGRAM):   END;
288396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288397    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
288398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288400    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
288401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288402    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288403    +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
288404    +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
288405    +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
288406    +          +    -0.05910355740416 * S_MntMeatProducts
288407    +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
288408    +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
288409    +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
288410    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq 
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds 
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 * 
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq + 
-1.02114645988925 * S_Recency ;
288411    +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
288412    +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
288413    +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
288414    +          +     0.09400377526937 * S_MntMeatProducts
288415    +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
288416    +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
288417    +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
288418    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq 
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds 
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 * 
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq + 
0.39055670382948 * S_Recency ;
288419    +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
288420    +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
288421    +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
288422    +          +    -1.62740823190029 * S_MntMeatProducts
288423    +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
288424    +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
288425    +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
288426    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq 
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds + 
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 * 
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq + 
0.17699292292485 * S_Recency ;
288427    +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
288428    +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
288429    +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
288430    +          +      0.3965117290354 * S_MntMeatProducts
288431    +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
288432    +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
288433    +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
288434    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq 
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds 
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 * 
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq + 
-0.4091862538023 * S_Recency ;
288435    +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
288436    +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
288437    +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
288438    +          +     1.44231431118379 * S_MntMeatProducts
288439    +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
288440    +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
288441    +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
288442    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq 
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds 
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 * 
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq + 
-0.38411527089703 * S_Recency ;
288443    +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
288444    +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
288445    +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
288446    +          +    -0.44244305964257 * S_MntMeatProducts
288447    +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
288448    +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
288449    +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
288450    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq 
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 * 
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines + 
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 * 
S_RMntFrq + -0.65176917675454 * S_Recency ;
288451    +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
288452    +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 * 
G_Marital_Status1 ;
288453    +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
288454    +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 * 
G_Marital_Status1 ;
288455    +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
288456    +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 * 
G_Marital_Status1 ;
288457    +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
288458    +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 * 
G_Marital_Status1 ;
288459    +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
288460    +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 * 
G_Marital_Status1 ;
288461    +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
288462    +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 * 
G_Marital_Status1 ;
288463    +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
288464    +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
288465    +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
288466    +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
288467    +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
288468    +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
288469    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
288470    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
288471    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
288472    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
288473    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
288474    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
288475    +END;
MPRINT(EM_DIAGRAM):   END;
288476    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288477    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
288478    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
288479    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
288480    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
288481    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
288482    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
288483    +END;
MPRINT(EM_DIAGRAM):   END;
288484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288485    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
288486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288487    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
288488    +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
288489    +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
288490    +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 + 
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361 
* H16 ;
288491    +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
288492    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
288493    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
288494    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
288495    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
288496    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
288497    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
288498    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
288499    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
288500    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
288501    +END;
MPRINT(EM_DIAGRAM):   END;
288502    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
288503    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
288504    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
288505    +END;
MPRINT(EM_DIAGRAM):   END;
288506    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
288507    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
288508    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
288509    +END;
MPRINT(EM_DIAGRAM):   END;
288510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288511    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
288512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
288513    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
288514    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
288515    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
288516    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
288517    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
288518    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
288519    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
288520    +END;
MPRINT(EM_DIAGRAM):   END;
288521    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288522    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
288523    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
288524    +drop
288525    +H11
288526    +H12
288527    +H13
288528    +H14
288529    +H15
288530    +H16
288531    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
288532    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288533     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288534     quit;
288535     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288536     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288537     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288538     retain ID 2 Node "Neural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural28";
288539     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288540     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288541     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288542     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288543     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288544     proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
288545     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288546     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.NEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288547     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288548     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288549     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288550     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288551     proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
288552     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

288553     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288554     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288556     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288557     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288558     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288559     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288560     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288561     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288561   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 443 rows and 5 columns.

288562     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288563     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
288564     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 443 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 443 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288565     filename _pref
288565   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
288566     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288567     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
288568    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
288569    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
288570    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
288571    +
288572    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
288573    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
288574    +
288575    +
288576    +/*----G_Marital_Status begin----*/
288577    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
288578    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
288579    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
288580    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
288581    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
288582    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
288583    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
288584    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
288585    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
288586    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
288587    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
288588    +end;
MPRINT(EM_DIAGRAM):   end;
288589    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
288590    +/*----G_Marital_Status end----*/
288591    +
288592    +
288593    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
288594    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
288595    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288596     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288597     quit;
288598     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288599     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288600     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288601     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
288602     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288603     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288604     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288605     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288606     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288607     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
288608     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288610     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288611     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288612     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288613     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288614     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
288615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

288616     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288617     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288618     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288619     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288620     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288621     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288622     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288623     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288624     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288624   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

288625     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288626     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
288627     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 446 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288628     filename _pref
288628   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
288629     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288630     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
288631    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288632    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
288633    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
288634    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
288635    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
288636    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288637     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288638     quit;
288639     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288640     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288641     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288642     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
288643     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288644     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288645     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288646     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288647     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288648     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
288649     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288651     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288652     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288653     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288654     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288655     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
288656     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

288657     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288658     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288659     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288660     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288661     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288662     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288663     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288664     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288665     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288665   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

288666     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288667     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
288668     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 450 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288669     filename _pref
288669   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
288670     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288671     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
288672    +
288673    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
288674    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
288674   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
288675    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
288676    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
288677    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
288678    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
288679    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288680     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288681     quit;
288682     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288683     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288684     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288685     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
288686     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288687     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288688     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288689     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288690     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288691     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
288692     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288694     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288695     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288696     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288698     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
288699     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288700     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288701     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288702     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288703     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288704     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288706     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288707     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288708     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288708   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

288709     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288710     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
288711     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 489 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288712     filename _pref
288712   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
288713     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288714     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
288715    +
288716    +
288717    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
288718    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
288719    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
288720    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
288721    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
288722    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288723    +
288724    +
288725    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
288726    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
288727    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
288728    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
288729    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
288730    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288731    +
288732    +
288733    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
288734    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
288735    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
288736    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
288737    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
288738    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288739    +
288740    +
288741    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
288742    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
288743    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
288744    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
288745    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
288746    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288747    +
288748    +
288749    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
288750    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
288751    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
288752    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
288753    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
288754    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288755    +
288756    +
288757    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
288758    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
288759    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
288760    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
288761    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
288762    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288763    +
288764    +
288765    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
288766    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
288767    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
288768    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
288769    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
288770    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288771    +
288772    +
288773    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
288774    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
288775    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
288776    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
288777    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
288778    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
288779    +if
288780    +_FILTERNORM1 not in ( '.')
288781    + and
288782    +_FILTERNORM2 not in ( '.')
288783    + and
288784    +_FILTERNORM3 not in ( '.')
288785    + and
288786    +_FILTERNORM4 not in ( '.')
288787    + and
288788    +_FILTERNORM5 not in ( '.')
288789    + and
288790    +_FILTERNORM6 not in ( '.')
288791    + and
288792    +_FILTERNORM7 not in ( ' ')
288793    + and
288794    +_FILTERNORM8 not in ( ' ')
288795    +and
288796    +( Dt_Customer ne .)
288797    +and ( Income ne . and (Income<=107000))
288798    +and ( Kidhome ne .)
288799    +and ( MntFishProducts ne .)
288800    +and ( MntFruits ne .)
288801    +and ( MntGoldProds ne .)
288802    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
288803    +and ( MntSweetProducts ne .)
288804    +and ( MntWines ne .)
288805    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
288806    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
288807    +and ( NumStorePurchases ne .)
288808    +and ( NumWebPurchases ne .)
288809    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
288810    +and ( Recency ne .)
288811    +and ( Teenhome ne .)
288812    +and ( Year_Birth ne .)
288813    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
288814    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
288815    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
288816    +end;
MPRINT(EM_DIAGRAM):   end;
288817    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
288818    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
288819     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
288820     quit;
288821     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
288822     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
288823     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
288824     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
288825     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
288826     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288827     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
288828     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288829     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288830     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
288831     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288832     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288833     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288834     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
288835     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
288836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288837     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
288838     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

288839     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
288840     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288841     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288842     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
288843     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
288844     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
288845     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288846     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288847     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
288847   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

288848     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288849     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
288850     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288851     %macro varDept(fcmpdata=,id=);
288852     %global nobs&id scoreFlag&id;
288853     %let scoreFlag&id = 0;
288854     %if &id=1 or ^&fcmpStart %then %do;
288855     proc sort data=&fcmpdata out=_temp&id nodupkey;
288856     by NAME;
288857     where id=&id and LHS in( %let j=1;
288858     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
288859     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
288860     "&var" %let j = %eval(&j+1);
288861     %end;
288862     );
288863     run;
288864     %let dsid = %sysfunc(open(_temp&id));
288865     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288866     %let dsid = %sysfunc(close(&dsid));
288867     %if &&nobs&id %then %do;
288868     %let scoreFlag&id = 1;
288869     %let fcmpStart = 1;
288870     %end;
288871     %else %let fcmpStart = 0;
288872     %end;
288873     %else %do;
288874     proc sort data=&fcmpdata out=_tempid;
288875     where id=&id;
288876     by LHS;
288877     run;
288878     %let dsid = %sysfunc(open(_tempid));
288879     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288880     %let dsid = %sysfunc(close(&dsid));
288881     %if ^&&nobs&id %then %do;
288882     proc datasets lib=work nolist;
288883     delete _tempid;
288884     run;
288885     quit;
288886     %end;
288887     %else %do;
288888     data _tempAll;
288889     set %let j=%eval(&id-1);
288890     %do x=1 %to &j;
288891     %if &&nobs&x %then %do;
288892     _temp&x %end;
288893     %end;
288894     ;
288895     run;
288896     proc sql;
288897     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
288897   ! work._tempid p2 where p.name=p2.lhs;
288898     quit;
288899     data _temp&id;
288900     set _temp&id;
288901     where LHS ne '' and NAME ne '' and Node ne '';
288902     run;
288903     proc datasets lib=work nolist;
288904     delete _tempAll;
288905     run;
288906     %let dsid = %sysfunc(open(_temp&id));
288907     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288908     %let dsid = %sysfunc(close(&dsid));
288909     %if ^&&nobs&id %then %do;
288910     proc datasets lib=work nolist;
288911     delete _temp&id;
288912     run;
288913     quit;
288914     %end;
288915     %else %do;
288916     %let scoreFlag&id = 1;
288917     data _temp&id;
288918     set _temp&id;
288919     where LHS ne NAME and node ne '';
288920     run;
288921     %let dsid = %sysfunc(open(_temp&id));
288922     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
288923     %let dsid = %sysfunc(close(&dsid));
288924     %if ^&&nobs&id %then %do;
288925     proc datasets lib=work nolist;
288926     delete _temp&id;
288927     run;
288928     quit;
288929     %end;
288930     %else %do;
288931     proc sort data=_temp&id nodupkey;
288932     by LHS NAME;
288933     run;
288934     %end;
288935     %end;
288936     %end;
288937     %end;
288938     %mend varDept;
288939     %macro optCode(outdata=fcmpdata);
288940     %global fcmpStart;
288941     %let fcmpStart = 0;
288942     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
288943     %let NumNodes=9;
288944     %do k=1 %to &NumNodes;
288945     %vardept(fcmpdata=&outdata, id=&k);
288946     %end;
288947     %mend optCode;
288948     %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 54 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

288949     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
288950     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
288951     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
288952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288953     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
288954     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
288955     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
288956     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288957     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288958     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
288958   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

288959     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.04 seconds
      

288960     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
288961     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
288962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288963     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
288964     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
288965     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
288966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288967     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
288968     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
288969     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
288970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288971     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
288972     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
288972   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

288973     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

288974     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
288975     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
288976     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

288977     filename _pref
288977   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
288978     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
288979     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas.
288980    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288981    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
288982    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
288983    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
288984    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
288985    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
288986    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
288987    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
288988    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
288989    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
288990    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
288991    +LENGTH _WARN_ $4
288992    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
288993    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
288994    +
288995    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
288996    +
288997    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
288998    +
288999    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
289000    +
289001    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
289002    +
289003    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
289004    +
289005    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
289006    +
289007    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
289008    +
289009    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
289010    +
289011    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
289012    +
289013    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
289014    +
289015    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
289016    +
289017    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
289018    +
289019    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
289020    +
289021    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
289022    +
289023    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
289024    +
289025    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
289026    +
289027    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
289028    +
289029    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
289030    +
289031    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
289032    +
289033    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
289034    +
289035    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
289036    +
289037    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
289038    +
289039    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
289040    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
289041    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
289042    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
289043    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
289044    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289045    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289046    +end;
MPRINT(EM_DIAGRAM):   end;
289047    +else do;
MPRINT(EM_DIAGRAM):   else do;
289048    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289049    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
289050    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289051    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
289052    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
289053    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
289054    +   end;
MPRINT(EM_DIAGRAM):   end;
289055    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
289056    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
289057    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
289058    +   end;
MPRINT(EM_DIAGRAM):   end;
289059    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
289060    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
289061    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
289062    +   end;
MPRINT(EM_DIAGRAM):   end;
289063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289064    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
289065    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
289066    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289067    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289068    +   end;
MPRINT(EM_DIAGRAM):   end;
289069    +end;
MPRINT(EM_DIAGRAM):   end;
289070    +
289071    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289072    +*** Checking missing input Interval
289073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
289074    +
289075    +IF NMISS(
289076    +   AcceptedCmpTotal ,
289077    +   Frq ,
289078    +   Income ,
289079    +   Mnt ,
289080    +   MntGoldProds ,
289081    +   MntMeatProducts ,
289082    +   MntWines ,
289083    +   NumDistPurchases ,
289084    +   RFMstat ,
289085    +   RMntFrq ,
289086    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
289087    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
289088    +
289089    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289090    +END;
MPRINT(EM_DIAGRAM):   END;
289091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289092    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
289093    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289094    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289095    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
289096    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
289097    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
289098    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
289099    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
289100    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
289101    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
289102    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
289103    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
289104    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
289105    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
289106    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
289107    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
289108    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
289109    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
289110    +END;
MPRINT(EM_DIAGRAM):   END;
289111    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289112    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
289113    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
289114    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
289115    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
289116    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
289117    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
289118    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
289119    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
289120    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
289121    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
289122    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
289123    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
289124    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
289125    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
289126    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
289127    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
289128    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
289129    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
289130    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
289131    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
289132    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
289133    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
289134    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
289135    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
289136    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
289137    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
289138    +END;
MPRINT(EM_DIAGRAM):   END;
289139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289140    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
289141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289143    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
289144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289145    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289146    +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
289147    +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
289148    +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
289149    +          +      0.5764056033267 * S_MntMeatProducts
289150    +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
289151    +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
289152    +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
289153    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq 
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds 
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 * 
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq + 
-0.66847972845367 * S_Recency ;
289154    +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
289155    +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
289156    +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
289157    +          +      0.5452732097143 * S_MntMeatProducts
289158    +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
289159    +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
289160    +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
289161    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq 
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds 
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 * 
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq + 
-0.36679237964697 * S_Recency ;
289162    +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
289163    +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
289164    +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
289165    +          +     -0.9040019705776 * S_MntMeatProducts
289166    +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
289167    +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
289168    +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
289169    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq 
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds 
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 * 
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq + 
0.36876094021551 * S_Recency ;
289170    +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
289171    +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
289172    +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
289173    +          +     1.04227983605332 * S_MntMeatProducts
289174    +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
289175    +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
289176    +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
289177    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq 
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 * 
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines + 
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 * 
S_RMntFrq + -0.00929531662146 * S_Recency ;
289178    +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
289179    +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
289180    +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
289181    +          +     0.23454153115636 * S_MntMeatProducts
289182    +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
289183    +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
289184    +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
289185    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq + 
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds + 
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 * 
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq + 
0.62117853933635 * S_Recency ;
289186    +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
289187    +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 * 
G_Marital_Status1 ;
289188    +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
289189    +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 * 
G_Marital_Status1 ;
289190    +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
289191    +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 * 
G_Marital_Status1 ;
289192    +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
289193    +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 * 
G_Marital_Status1 ;
289194    +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
289195    +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 * 
G_Marital_Status1 ;
289196    +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
289197    +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
289198    +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
289199    +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
289200    +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
289201    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
289202    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
289203    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
289204    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
289205    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
289206    +END;
MPRINT(EM_DIAGRAM):   END;
289207    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289208    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
289209    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
289210    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
289211    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
289212    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
289213    +END;
MPRINT(EM_DIAGRAM):   END;
289214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289215    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
289216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289217    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289218    +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
289219    +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
289220    +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 + 
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
289221    +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
289222    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
289223    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
289224    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
289225    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
289226    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
289227    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
289228    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
289229    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
289230    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
289231    +END;
MPRINT(EM_DIAGRAM):   END;
289232    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289233    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
289234    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
289235    +END;
MPRINT(EM_DIAGRAM):   END;
289236    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
289237    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
289238    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
289239    +END;
MPRINT(EM_DIAGRAM):   END;
289240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289241    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
289242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289243    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
289244    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
289245    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
289246    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
289247    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
289248    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
289249    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
289250    +END;
MPRINT(EM_DIAGRAM):   END;
289251    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289252    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
289253    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289254    +drop
289255    +H11
289256    +H12
289257    +H13
289258    +H14
289259    +H15
289260    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
289261    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289262     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
289263     quit;
289264     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289265     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289266     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289267     retain ID 2 Node "Neural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural27";
289268     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289269     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289270     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289271     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289272     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289273     proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
289274     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289275     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.NEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289276     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289277     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289278     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289279     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289280     proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
289281     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

289282     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289283     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289284     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289285     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289286     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289287     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289288     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289289     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289290     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289290   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 419 rows and 5 columns.

289291     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289292     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
289293     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 419 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 419 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289294     filename _pref
289294   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
289295     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289296     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
289297    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
289298    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
289299    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
289300    +
289301    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
289302    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
289303    +
289304    +
289305    +/*----G_Marital_Status begin----*/
289306    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
289307    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
289308    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289309    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
289310    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
289311    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
289312    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
289313    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
289314    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
289315    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
289316    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
289317    +end;
MPRINT(EM_DIAGRAM):   end;
289318    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
289319    +/*----G_Marital_Status end----*/
289320    +
289321    +
289322    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
289323    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
289324    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289325     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
289326     quit;
289327     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289328     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289329     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289330     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
289331     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289332     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289333     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289334     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289335     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289336     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
289337     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289338     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289339     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289340     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289341     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289343     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
289344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

289345     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289347     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289348     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289349     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289350     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289351     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289352     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289353     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289353   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

289354     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289355     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
289356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 422 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289357     filename _pref
289357   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
289358     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289359     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
289360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289361    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
289362    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
289363    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
289364    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
289365    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289366     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
289367     quit;
289368     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289369     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289370     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289371     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
289372     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289373     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289374     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289375     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289376     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289377     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
289378     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289379     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289380     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289381     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289382     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289383     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289384     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
289385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

289386     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289387     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289388     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289389     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289390     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289391     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289392     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289393     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289394     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289394   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

289395     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289396     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
289397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 426 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289398     filename _pref
289398   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
289399     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289400     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
289401    +
289402    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
289403    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
289403   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
289404    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
289405    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
289406    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
289407    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
289408    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289409     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
289410     quit;
289411     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289412     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289413     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289414     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
289415     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289416     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289417     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289418     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289419     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289420     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
289421     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289422     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289423     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289424     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289425     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289426     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289427     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
289428     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289429     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289430     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289431     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289432     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289433     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289434     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289435     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289436     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289437     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289437   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

289438     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289439     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
289440     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 465 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289441     filename _pref
289441   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
289442     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289443     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
289444    +
289445    +
289446    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
289447    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
289448    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
289449    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
289450    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
289451    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289452    +
289453    +
289454    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
289455    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
289456    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
289457    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
289458    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
289459    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289460    +
289461    +
289462    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
289463    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
289464    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
289465    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
289466    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
289467    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289468    +
289469    +
289470    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
289471    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
289472    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
289473    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
289474    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
289475    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289476    +
289477    +
289478    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
289479    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
289480    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
289481    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
289482    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
289483    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289484    +
289485    +
289486    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
289487    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
289488    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
289489    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
289490    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
289491    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289492    +
289493    +
289494    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
289495    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
289496    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
289497    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
289498    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
289499    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289500    +
289501    +
289502    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
289503    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
289504    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
289505    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
289506    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
289507    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
289508    +if
289509    +_FILTERNORM1 not in ( '.')
289510    + and
289511    +_FILTERNORM2 not in ( '.')
289512    + and
289513    +_FILTERNORM3 not in ( '.')
289514    + and
289515    +_FILTERNORM4 not in ( '.')
289516    + and
289517    +_FILTERNORM5 not in ( '.')
289518    + and
289519    +_FILTERNORM6 not in ( '.')
289520    + and
289521    +_FILTERNORM7 not in ( ' ')
289522    + and
289523    +_FILTERNORM8 not in ( ' ')
289524    +and
289525    +( Dt_Customer ne .)
289526    +and ( Income ne . and (Income<=107000))
289527    +and ( Kidhome ne .)
289528    +and ( MntFishProducts ne .)
289529    +and ( MntFruits ne .)
289530    +and ( MntGoldProds ne .)
289531    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
289532    +and ( MntSweetProducts ne .)
289533    +and ( MntWines ne .)
289534    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
289535    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
289536    +and ( NumStorePurchases ne .)
289537    +and ( NumWebPurchases ne .)
289538    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
289539    +and ( Recency ne .)
289540    +and ( Teenhome ne .)
289541    +and ( Year_Birth ne .)
289542    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
289543    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
289544    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
289545    +end;
MPRINT(EM_DIAGRAM):   end;
289546    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
289547    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289548     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
289549     quit;
289550     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289551     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289552     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289553     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
289554     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289556     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289557     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289558     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289559     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
289560     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289561     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289562     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289563     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
289564     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
289565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289566     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
289567     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

289568     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
289569     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289570     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289571     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289572     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
289573     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289574     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289575     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289576     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
289576   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

289577     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289578     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
289579     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289580     %macro varDept(fcmpdata=,id=);
289581     %global nobs&id scoreFlag&id;
289582     %let scoreFlag&id = 0;
289583     %if &id=1 or ^&fcmpStart %then %do;
289584     proc sort data=&fcmpdata out=_temp&id nodupkey;
289585     by NAME;
289586     where id=&id and LHS in( %let j=1;
289587     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
289588     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
289589     "&var" %let j = %eval(&j+1);
289590     %end;
289591     );
289592     run;
289593     %let dsid = %sysfunc(open(_temp&id));
289594     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289595     %let dsid = %sysfunc(close(&dsid));
289596     %if &&nobs&id %then %do;
289597     %let scoreFlag&id = 1;
289598     %let fcmpStart = 1;
289599     %end;
289600     %else %let fcmpStart = 0;
289601     %end;
289602     %else %do;
289603     proc sort data=&fcmpdata out=_tempid;
289604     where id=&id;
289605     by LHS;
289606     run;
289607     %let dsid = %sysfunc(open(_tempid));
289608     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289609     %let dsid = %sysfunc(close(&dsid));
289610     %if ^&&nobs&id %then %do;
289611     proc datasets lib=work nolist;
289612     delete _tempid;
289613     run;
289614     quit;
289615     %end;
289616     %else %do;
289617     data _tempAll;
289618     set %let j=%eval(&id-1);
289619     %do x=1 %to &j;
289620     %if &&nobs&x %then %do;
289621     _temp&x %end;
289622     %end;
289623     ;
289624     run;
289625     proc sql;
289626     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
289626   ! work._tempid p2 where p.name=p2.lhs;
289627     quit;
289628     data _temp&id;
289629     set _temp&id;
289630     where LHS ne '' and NAME ne '' and Node ne '';
289631     run;
289632     proc datasets lib=work nolist;
289633     delete _tempAll;
289634     run;
289635     %let dsid = %sysfunc(open(_temp&id));
289636     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289637     %let dsid = %sysfunc(close(&dsid));
289638     %if ^&&nobs&id %then %do;
289639     proc datasets lib=work nolist;
289640     delete _temp&id;
289641     run;
289642     quit;
289643     %end;
289644     %else %do;
289645     %let scoreFlag&id = 1;
289646     data _temp&id;
289647     set _temp&id;
289648     where LHS ne NAME and node ne '';
289649     run;
289650     %let dsid = %sysfunc(open(_temp&id));
289651     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
289652     %let dsid = %sysfunc(close(&dsid));
289653     %if ^&&nobs&id %then %do;
289654     proc datasets lib=work nolist;
289655     delete _temp&id;
289656     run;
289657     quit;
289658     %end;
289659     %else %do;
289660     proc sort data=_temp&id nodupkey;
289661     by LHS NAME;
289662     run;
289663     %end;
289664     %end;
289665     %end;
289666     %end;
289667     %mend varDept;
289668     %macro optCode(outdata=fcmpdata);
289669     %global fcmpStart;
289670     %let fcmpStart = 0;
289671     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
289672     %let NumNodes=9;
289673     %do k=1 %to &NumNodes;
289674     %vardept(fcmpdata=&outdata, id=&k);
289675     %end;
289676     %mend optCode;
289677     %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 54 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

289678     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
289679     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
289680     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
289681     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289682     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
289683     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
289684     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
289685     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289686     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289687     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
289687   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

289688     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

289689     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
289690     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
289691     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289692     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
289693     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
289694     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
289695     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289696     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
289697     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
289698     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
289699     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289700     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
289701     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
289701   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

289702     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

289703     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
289704     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
289705     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289706     filename _pref
289706   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
289707     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
289708     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas.
289709    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
289710    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
289711    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
289712    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
289713    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
289714    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
289715    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
289716    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
289717    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
289718    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
289719    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
289720    +LENGTH _WARN_ $4
289721    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
289722    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
289723    +
289724    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
289725    +
289726    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
289727    +
289728    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
289729    +
289730    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
289731    +
289732    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
289733    +
289734    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
289735    +
289736    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
289737    +
289738    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
289739    +
289740    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
289741    +
289742    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
289743    +
289744    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
289745    +
289746    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
289747    +
289748    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
289749    +
289750    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
289751    +
289752    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
289753    +
289754    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
289755    +
289756    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
289757    +
289758    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
289759    +
289760    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
289761    +
289762    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
289763    +
289764    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
289765    +
289766    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
289767    +
289768    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
289769    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
289770    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
289771    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
289772    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
289773    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
289774    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289775    +end;
MPRINT(EM_DIAGRAM):   end;
289776    +else do;
MPRINT(EM_DIAGRAM):   else do;
289777    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
289778    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
289779    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
289780    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
289781    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
289782    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
289783    +   end;
MPRINT(EM_DIAGRAM):   end;
289784    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
289785    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
289786    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
289787    +   end;
MPRINT(EM_DIAGRAM):   end;
289788    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
289789    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
289790    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
289791    +   end;
MPRINT(EM_DIAGRAM):   end;
289792    +   else do;
MPRINT(EM_DIAGRAM):   else do;
289793    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
289794    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
289795    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
289796    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289797    +   end;
MPRINT(EM_DIAGRAM):   end;
289798    +end;
MPRINT(EM_DIAGRAM):   end;
289799    +
289800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289801    +*** Checking missing input Interval
289802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
289803    +
289804    +IF NMISS(
289805    +   AcceptedCmpTotal ,
289806    +   Frq ,
289807    +   Income ,
289808    +   Mnt ,
289809    +   MntGoldProds ,
289810    +   MntMeatProducts ,
289811    +   MntWines ,
289812    +   NumDistPurchases ,
289813    +   RFMstat ,
289814    +   RMntFrq ,
289815    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
289816    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
289817    +
289818    +   _DM_BAD = 1;
The SAS System

MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
289819    +END;
MPRINT(EM_DIAGRAM):   END;
289820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289821    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
289822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289823    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289824    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
289825    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
289826    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
289827    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
289828    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
289829    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
289830    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
289831    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
289832    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
289833    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
289834    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
289835    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
289836    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
289837    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
289838    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
289839    +END;
MPRINT(EM_DIAGRAM):   END;
289840    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289841    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
289842    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
289843    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
289844    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
289845    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
289846    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
289847    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
289848    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
289849    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
289850    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
289851    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
289852    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
289853    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
289854    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
289855    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
289856    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
289857    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
289858    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
289859    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
289860    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
289861    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
289862    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
289863    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
289864    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
289865    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
289866    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
289867    +END;
MPRINT(EM_DIAGRAM):   END;
289868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289869    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
289870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289871    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289872    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
289873    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289874    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289875    +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
289876    +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
289877    +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
289878    +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
289879    +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
289880    +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
289881    +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
289882    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
289883    +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
289884    +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
289885    +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
289886    +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
289887    +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
289888    +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
289889    +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
289890    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
289891    +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
289892    +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
289893    +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
289894    +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
289895    +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
289896    +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
289897    +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
289898    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
289899    +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
289900    +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
289901    +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
289902    +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
289903    +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
289904    +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
289905    +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
289906    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
289907    +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
289908    +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
289909    +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
289910    +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
289911    +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
289912    +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
289913    +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
289914    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
289915    +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
289916    +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
289917    +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
289918    +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
289919    +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
289920    +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
289921    +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
289922    +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
289923    +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
289924    +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
289925    +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
289926    +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
289927    +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
289928    +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
289929    +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
289930    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
289931    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
289932    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
289933    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
289934    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
289935    +END;
MPRINT(EM_DIAGRAM):   END;
289936    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289937    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
289938    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
289939    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
289940    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
289941    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
289942    +END;
MPRINT(EM_DIAGRAM):   END;
289943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289944    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
289945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289946    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
289947    +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
289948    +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
289949    +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
289950    +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
289951    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
289952    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
289953    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
289954    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
289955    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
289956    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
289957    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
289958    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
289959    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
289960    +END;
MPRINT(EM_DIAGRAM):   END;
289961    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
289962    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
289963    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
289964    +END;
MPRINT(EM_DIAGRAM):   END;
289965    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
289966    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
289967    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
289968    +END;
MPRINT(EM_DIAGRAM):   END;
289969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289970    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
289971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
289972    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
289973    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
289974    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
289975    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
289976    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
289977    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
289978    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
289979    +END;
MPRINT(EM_DIAGRAM):   END;
289980    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289981    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
289982    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
289983    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
289984     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
289985     quit;
289986     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
289987     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
289988     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
289989     retain ID 2 Node "AutoNeural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural27";
289990     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
289991     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289992     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
289993     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289994     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

289995     proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME 
CREATOR);
289996     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
289997     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

289998     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
289999     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290000     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290001     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290002     proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
290003     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.21 seconds
      cpu time            0.03 seconds
      

290004     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290005     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290006     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290007     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290008     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290009     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290010     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290011     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290012     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290012   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 479 rows and 5 columns.

290013     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290014     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
290015     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290016     filename _pref
290016   ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
290017     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290018     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
290019    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
290020    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
290021    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
290022    +
290023    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
290024    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
290025    +
290026    +
290027    +/*----G_Marital_Status begin----*/
290028    +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
290029    +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
290030    +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
290031    +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
290032    +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
290033    +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
290034    +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
290035    +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
290036    +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
290037    +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
290038    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
290039    +end;
MPRINT(EM_DIAGRAM):   end;
290040    +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
290041    +/*----G_Marital_Status end----*/
290042    +
290043    +
290044    +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/ 
****************************************;
290045    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
290046    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290047     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290048     quit;
290049     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290050     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290051     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290052     retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
290053     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290054     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290055     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290056     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290057     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290058     proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
290059     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290060     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290061     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290062     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290063     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290064     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290065     proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
290066     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290067     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290068     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290070     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290071     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290072     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290073     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290074     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290075     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290075   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.

290076     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290077     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
290078     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 482 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290079     filename _pref
290079   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
290080     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290081     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
290082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290083    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
290084    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
290085    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
290086    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
290087    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290088     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290089     quit;
290090     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290091     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290092     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290093     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
290094     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290095     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290096     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290097     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290098     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290099     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
290100     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290101     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290102     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290103     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290104     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290105     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290106     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
290107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

290108     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290109     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290110     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290111     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290112     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290113     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290114     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290115     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290116     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290116   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

290117     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290118     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
290119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 486 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290120     filename _pref
290120   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
290121     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290122     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
290123    +
290124    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
290125    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
290125   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
290126    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
290127    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
290128    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
290129    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
290130    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290131     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290132     quit;
290133     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290134     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290135     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290136     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
290137     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290138     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290139     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290140     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290141     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290142     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
290143     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290145     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290146     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290147     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290148     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290149     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
290150     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290151     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290152     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290154     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290155     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290156     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290157     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290158     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290159     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290159   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

290160     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290161     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
290162     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 525 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290163     filename _pref
290163   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
290164     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
290165     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
290166    +
290167    +
290168    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
290169    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
290170    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
290171    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
290172    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
290173    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290174    +
290175    +
290176    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
290177    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
290178    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
290179    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
290180    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
290181    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290182    +
290183    +
290184    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
290185    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
290186    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
290187    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
290188    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
290189    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290190    +
290191    +
290192    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
290193    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
290194    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
290195    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
290196    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
290197    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290198    +
290199    +
290200    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
290201    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
290202    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
290203    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
290204    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
290205    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290206    +
290207    +
290208    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
290209    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
290210    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
290211    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
290212    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
290213    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290214    +
290215    +
290216    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
290217    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
290218    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
290219    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
290220    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
290221    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290222    +
290223    +
290224    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
290225    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
290226    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
290227    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
290228    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
290229    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
290230    +if
290231    +_FILTERNORM1 not in ( '.')
290232    + and
290233    +_FILTERNORM2 not in ( '.')
290234    + and
290235    +_FILTERNORM3 not in ( '.')
290236    + and
290237    +_FILTERNORM4 not in ( '.')
290238    + and
290239    +_FILTERNORM5 not in ( '.')
290240    + and
290241    +_FILTERNORM6 not in ( '.')
290242    + and
290243    +_FILTERNORM7 not in ( ' ')
290244    + and
290245    +_FILTERNORM8 not in ( ' ')
290246    +and
290247    +( Dt_Customer ne .)
290248    +and ( Income ne . and (Income<=107000))
290249    +and ( Kidhome ne .)
290250    +and ( MntFishProducts ne .)
290251    +and ( MntFruits ne .)
290252    +and ( MntGoldProds ne .)
290253    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
290254    +and ( MntSweetProducts ne .)
290255    +and ( MntWines ne .)
290256    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
290257    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
290258    +and ( NumStorePurchases ne .)
290259    +and ( NumWebPurchases ne .)
290260    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
290261    +and ( Recency ne .)
290262    +and ( Teenhome ne .)
290263    +and ( Year_Birth ne .)
290264    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
290265    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
290266    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
290267    +end;
MPRINT(EM_DIAGRAM):   end;
290268    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
290269    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
290270     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
290271     quit;
290272     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
290273     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
290274     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
290275     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
290276     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
290277     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290278     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
290279     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290280     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290281     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
290282     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290283     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290284     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290285     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
290286     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
290287     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290288     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
290289     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

290290     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
290291     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290292     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290293     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
290294     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
290295     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
290296     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290297     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290298     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
290298   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

290299     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290300     proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
290301     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290302     %macro varDept(fcmpdata=,id=);
290303     %global nobs&id scoreFlag&id;
290304     %let scoreFlag&id = 0;
290305     %if &id=1 or ^&fcmpStart %then %do;
290306     proc sort data=&fcmpdata out=_temp&id nodupkey;
290307     by NAME;
290308     where id=&id and LHS in( %let j=1;
290309     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
290310     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
290311     "&var" %let j = %eval(&j+1);
290312     %end;
290313     );
290314     run;
290315     %let dsid = %sysfunc(open(_temp&id));
290316     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290317     %let dsid = %sysfunc(close(&dsid));
290318     %if &&nobs&id %then %do;
290319     %let scoreFlag&id = 1;
290320     %let fcmpStart = 1;
290321     %end;
290322     %else %let fcmpStart = 0;
290323     %end;
290324     %else %do;
290325     proc sort data=&fcmpdata out=_tempid;
290326     where id=&id;
290327     by LHS;
290328     run;
290329     %let dsid = %sysfunc(open(_tempid));
290330     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290331     %let dsid = %sysfunc(close(&dsid));
290332     %if ^&&nobs&id %then %do;
290333     proc datasets lib=work nolist;
290334     delete _tempid;
290335     run;
290336     quit;
290337     %end;
290338     %else %do;
290339     data _tempAll;
290340     set %let j=%eval(&id-1);
290341     %do x=1 %to &j;
290342     %if &&nobs&x %then %do;
290343     _temp&x %end;
290344     %end;
290345     ;
290346     run;
290347     proc sql;
290348     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
290348   ! work._tempid p2 where p.name=p2.lhs;
290349     quit;
290350     data _temp&id;
290351     set _temp&id;
290352     where LHS ne '' and NAME ne '' and Node ne '';
290353     run;
290354     proc datasets lib=work nolist;
290355     delete _tempAll;
290356     run;
290357     %let dsid = %sysfunc(open(_temp&id));
290358     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290359     %let dsid = %sysfunc(close(&dsid));
290360     %if ^&&nobs&id %then %do;
290361     proc datasets lib=work nolist;
290362     delete _temp&id;
290363     run;
290364     quit;
290365     %end;
290366     %else %do;
290367     %let scoreFlag&id = 1;
290368     data _temp&id;
290369     set _temp&id;
290370     where LHS ne NAME and node ne '';
290371     run;
290372     %let dsid = %sysfunc(open(_temp&id));
290373     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
290374     %let dsid = %sysfunc(close(&dsid));
290375     %if ^&&nobs&id %then %do;
290376     proc datasets lib=work nolist;
290377     delete _temp&id;
290378     run;
290379     quit;
290380     %end;
290381     %else %do;
290382     proc sort data=_temp&id nodupkey;
290383     by LHS NAME;
290384     run;
290385     %end;
290386     %end;
290387     %end;
290388     %end;
290389     %mend varDept;
290390     %macro optCode(outdata=fcmpdata);
290391     %global fcmpStart;
290392     %let fcmpStart = 0;
290393     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
290394     %let NumNodes=9;
290395     %do k=1 %to &NumNodes;
290396     %vardept(fcmpdata=&outdata, id=&k);
290397     %end;
290398     %mend optCode;
290399     %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 69 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 50 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

290400     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
290401     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
290402     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
290403     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290404     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
290405     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
290406     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
290407     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290408     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290409     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
290409   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

290410     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290411     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
290412     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
290413     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290414     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
290415     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
290416     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
290417     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290418     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
290419     set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
290420     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
290421     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290422     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
290423     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
290423   ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.

290424     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

290425     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
290426     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
290427     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290428     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
290429     * Ensmbl20: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing metadata for TRAIN data;
290430     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL20_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl20_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl20_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl20_TRAIN out=WORK.M0PY8RZK noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PY8RZK;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PY8RZK(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PY8RZK;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PY8RZK;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3W9U2JR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W9U2JR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W9U2JR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PT3QME(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W9U2JR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W9U2JR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W9U2JR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W9U2JR;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W9U2JR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural32_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl20";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl20";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
290750     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
290751     set EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl20_EMINFO;
290752     where DATA='Ensmbl20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
290753     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_EMINFO.
      WHERE (DATA='Ensmbl20') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290754     data EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl20_EMINFO;
290755     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
290756     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
290757     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
290761     run;
290762     data EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMINFO;
290763     set EMWS8.Ensmbl20_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl20_EMINFO WORK.MODELTEMP_INFO;
290764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290765     proc sort data = EMWS8.Ensmbl20_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl20_EMINFO NOTHREADS;
290766     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
290767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_EMINFO.
NOTE: The data set EMWS8.ENSMBL20_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290768     proc sort data = EMWS8.AutoNeural32_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural32_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
290769     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
290770     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL32_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

290771     proc sort data = EMWS8.Ensmbl20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
290772     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
290773     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290774     data EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMINFO;
290775     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
290776     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
290777     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL20_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

290778     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
290779     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
290780     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
290781     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL20_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.ENSMBL20_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
