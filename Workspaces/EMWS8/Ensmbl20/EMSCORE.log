MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.38 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                17.38 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0IPMTMO 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0IPMTMO new;
MPRINT(EM_DIAGRAM):   run;
2127966    filename emflow
2127966  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring NEURAL28_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127967    *------------------------------------------------------------*;
2127968    * Ensmbl20: Scoring NEURAL28_TRAIN data;
2127969    *------------------------------------------------------------*;
2127970    data EMWS8.Ensmbl20_TRAIN
2127971    / view=EMWS8.Ensmbl20_TRAIN
2127972    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_TRAIN / view=EMWS8.Ensmbl20_TRAIN ;
2127973    set EMWS8.Neural28_TRAIN
2127974    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural28_TRAIN ;
2127975    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas.
2127976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127977   +* Ensmbl20: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Combine model for DepVar;
2127978   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127979   +* Ensmbl20: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 1 of 7;
2127980   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127982   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2127983   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2127984   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2127985   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127986   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127987   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2127988   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2127989   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2127990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127992   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2127993   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2127994   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2127995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2127997   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2127998   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2127999   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2128000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128001   +
2128002   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2128003   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2128003  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2128004   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2128005   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2128006   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2128007   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2128008   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2128009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128010   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2128011   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2128012   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2128013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128015   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2128016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128017   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2128018   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2128019   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2128020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128021   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2128022   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2128023   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2128024   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128026   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
2128027   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2128028   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
2128029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128030   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2128031   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2128032   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2128033   +
2128034   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2128035   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2128036   +
2128037   +
2128038   +
2128039   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2128040   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2128041   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2128042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128043   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2128044   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2128045   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
2128046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128047   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128048   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2128049   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128050   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2128051   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2128052   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2128053   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2128054   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2128055   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2128056   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2128057   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2128058   +LENGTH _WARN_ $4
2128059   +      F_DepVar  $ 12
2128060   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2128061   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2128062   +
2128063   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2128064   +
2128065   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2128066   +
2128067   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2128068   +
2128069   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2128070   +
2128071   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2128072   +
2128073   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2128074   +
2128075   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2128076   +
2128077   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2128078   +
2128079   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2128080   +
2128081   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2128082   +
2128083   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2128084   +
2128085   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2128086   +
2128087   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128088   +
2128089   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2128090   +
2128091   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2128092   +
2128093   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2128094   +
2128095   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2128096   +
2128097   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2128098   +
2128099   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2128100   +
2128101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128102   +*** Checking missing input Interval
2128103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2128104   +
2128105   +IF NMISS(
2128106   +   AcceptedCmpTotal ,
2128107   +   Mnt ,
2128108   +   MntMeatProducts ,
2128109   +   NumCatalogPurchases ,
2128110   +   RFMstat ,
2128111   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2128112   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2128113   +
2128114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128115   +END;
MPRINT(EM_DIAGRAM):   END;
2128116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128117   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2128118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128119   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128120   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128121   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2128122   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2128123   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2128124   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2128125   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2128126   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2128127   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128128   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128129   +END;
MPRINT(EM_DIAGRAM):   END;
2128130   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128131   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2128132   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128133   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2128134   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2128135   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2128136   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2128137   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2128138   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2128139   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2128140   +   ELSE S_NumCatalogPurchases
2128141   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2128142   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2128143   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2128144   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128145   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2128146   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128147   +END;
MPRINT(EM_DIAGRAM):   END;
2128148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128149   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2128150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128151   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128152   +   H11  =     -0.1481294920829 * S_AcceptedCmpTotal  +    -0.31967651937983 *
2128153   +        S_Mnt  +    -0.25501160560688 * S_MntMeatProducts
2128154   +          +    -0.26541354265094 * S_NumCatalogPurchases
2128155   +          +    -0.05107291503479 * S_RFMstat  +     0.26055761102982 *
2128156   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.1481294920829 * S_AcceptedCmpTotal + -0.31967651937983 * S_Mnt 
+ -0.25501160560688 * S_MntMeatProducts + -0.26541354265094 * S_NumCatalogPurchases + 
-0.05107291503479 * S_RFMstat + 0.26055761102982 * S_Recency ;
2128157   +   H12  =    -0.53585265877367 * S_AcceptedCmpTotal  +    -0.63949625372724 *
2128158   +        S_Mnt  +    -0.71298935461349 * S_MntMeatProducts
2128159   +          +     0.26625422734047 * S_NumCatalogPurchases
2128160   +          +     0.04789590805202 * S_RFMstat  +     -0.2457029388315 *
2128161   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53585265877367 * S_AcceptedCmpTotal + -0.63949625372724 * S_Mnt 
+ -0.71298935461349 * S_MntMeatProducts + 0.26625422734047 * S_NumCatalogPurchases + 
0.04789590805202 * S_RFMstat + -0.2457029388315 * S_Recency ;
2128162   +   H13  =     0.36156584602692 * S_AcceptedCmpTotal  +    -3.37453529906718 *
2128163   +        S_Mnt  +     1.02675869236561 * S_MntMeatProducts
2128164   +          +     0.00910121928187 * S_NumCatalogPurchases
2128165   +          +     0.20581491047897 * S_RFMstat  +    -0.18898725892086 *
2128166   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.36156584602692 * S_AcceptedCmpTotal + -3.37453529906718 * S_Mnt 
+ 1.02675869236561 * S_MntMeatProducts + 0.00910121928187 * S_NumCatalogPurchases + 
0.20581491047897 * S_RFMstat + -0.18898725892086 * S_Recency ;
2128167   +   H14  =    -0.14179052521941 * S_AcceptedCmpTotal  +     0.30769772196415 *
2128168   +        S_Mnt  +     0.17433696286114 * S_MntMeatProducts
2128169   +          +     0.12575078713396 * S_NumCatalogPurchases
2128170   +          +    -0.02826822167447 * S_RFMstat  +     0.28366844846854 *
2128171   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.14179052521941 * S_AcceptedCmpTotal + 0.30769772196415 * S_Mnt 
+ 0.17433696286114 * S_MntMeatProducts + 0.12575078713396 * S_NumCatalogPurchases + 
-0.02826822167447 * S_RFMstat + 0.28366844846854 * S_Recency ;
2128172   +   H15  =      0.0992610666113 * S_AcceptedCmpTotal  +    -0.08290546162861 *
2128173   +        S_Mnt  +     2.79374557573421 * S_MntMeatProducts
2128174   +          +     0.34145061374457 * S_NumCatalogPurchases
2128175   +          +     1.24642569428903 * S_RFMstat  +    -0.05791964822006 *
2128176   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.0992610666113 * S_AcceptedCmpTotal + -0.08290546162861 * S_Mnt + 
2.79374557573421 * S_MntMeatProducts + 0.34145061374457 * S_NumCatalogPurchases + 
1.24642569428903 * S_RFMstat + -0.05791964822006 * S_Recency ;
2128177   +   H16  =    -0.70732539360309 * S_AcceptedCmpTotal  +    -6.01133749430879 *
2128178   +        S_Mnt  +      2.7772635267037 * S_MntMeatProducts
2128179   +          +     3.89195901397454 * S_NumCatalogPurchases
2128180   +          +     -2.3989156332421 * S_RFMstat  +    -0.49366295107927 *
2128181   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.70732539360309 * S_AcceptedCmpTotal + -6.01133749430879 * S_Mnt 
+ 2.7772635267037 * S_MntMeatProducts + 3.89195901397454 * S_NumCatalogPurchases + 
-2.3989156332421 * S_RFMstat + -0.49366295107927 * S_Recency ;
2128182   +   H11  =     1.84373127923043 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.84373127923043 + H11 ;
2128183   +   H12  =     0.28145390491001 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.28145390491001 + H12 ;
2128184   +   H13  =    -2.13618632038915 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.13618632038915 + H13 ;
2128185   +   H14  =    -0.43724663060956 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.43724663060956 + H14 ;
2128186   +   H15  =     2.87870499074164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 2.87870499074164 + H15 ;
2128187   +   H16  =    -1.50303768685501 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.50303768685501 + H16 ;
2128188   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2128189   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2128190   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2128191   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2128192   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2128193   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2128194   +END;
MPRINT(EM_DIAGRAM):   END;
2128195   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128196   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2128197   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2128198   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2128199   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2128200   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2128201   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2128202   +END;
MPRINT(EM_DIAGRAM):   END;
2128203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128204   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2128205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128206   +
2128207   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2128208   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2128209   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128210   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2128211   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2128212   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128213   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2128214   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128215   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128216   +end;
MPRINT(EM_DIAGRAM):   end;
2128217   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128218   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2128219   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2128220   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2128221   +   end;
MPRINT(EM_DIAGRAM):   end;
2128222   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2128223   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2128224   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2128225   +   end;
MPRINT(EM_DIAGRAM):   end;
2128226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128227   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128228   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128229   +   end;
MPRINT(EM_DIAGRAM):   end;
2128230   +end;
MPRINT(EM_DIAGRAM):   end;
2128231   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128232   +   P_DepVar1  =    -5.40879672831374 * H11  +    -2.30275649942132 * H12
2128233   +          +     3.92987383270932 * H13  +    -5.94814919610295 * H14
2128234   +          +      8.1691029468057 * H15  +     1.41618936614917 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.40879672831374 * H11 + -2.30275649942132 * H12 + 
3.92987383270932 * H13 + -5.94814919610295 * H14 + 8.1691029468057 * H15 + 1.41618936614917 * 
H16 ;
2128235   +   P_DepVar1  =    -3.18163491507868 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.18163491507868 + P_DepVar1 ;
2128236   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2128237   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2128238   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128239   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2128240   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2128241   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2128242   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2128243   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2128244   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2128245   +END;
MPRINT(EM_DIAGRAM):   END;
2128246   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128247   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2128248   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2128249   +END;
MPRINT(EM_DIAGRAM):   END;
2128250   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2128251   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2128252   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2128253   +END;
MPRINT(EM_DIAGRAM):   END;
2128254   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2128255   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2128256   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2128257   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2128258   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2128259   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2128260   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2128261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128262   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2128263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128264   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2128265   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2128266   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2128267   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2128268   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2128269   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2128270   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2128271   +END;
MPRINT(EM_DIAGRAM):   END;
2128272   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128273   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2128274   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128275   +drop
2128276   +H11
2128277   +H12
2128278   +H13
2128279   +H14
2128280   +H15
2128281   +H16
2128282   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2128283   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2128284   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
2128285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128286   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
2128287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128288   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
2128289   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
2128290   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
2128291   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
2128292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128293   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
2128294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128295   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
2128296   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
2128297   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
2128298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128299   +* Ensmbl20: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 2 of 7;
2128300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128302   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2128303   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2128304   +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
2128305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128306   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128307   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2128308   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128309   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2128310   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2128311   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2128312   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2128313   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2128314   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2128315   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2128316   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2128317   +LENGTH _WARN_ $4
2128318   +      F_DepVar  $ 12
2128319   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2128320   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2128321   +
2128322   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2128323   +
2128324   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2128325   +
2128326   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2128327   +
2128328   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2128329   +
2128330   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2128331   +
2128332   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2128333   +
2128334   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2128335   +
2128336   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2128337   +
2128338   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2128339   +
2128340   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2128341   +
2128342   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128343   +
2128344   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2128345   +
2128346   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2128347   +
2128348   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2128349   +
2128350   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2128351   +
2128352   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2128353   +
2128354   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2128355   +
2128356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128357   +*** Checking missing input Interval
2128358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2128359   +
2128360   +IF NMISS(
2128361   +   AcceptedCmpTotal ,
2128362   +   Mnt ,
2128363   +   MntMeatProducts ,
2128364   +   NumCatalogPurchases ,
2128365   +   RFMstat ,
2128366   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2128367   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2128368   +
2128369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128370   +END;
MPRINT(EM_DIAGRAM):   END;
2128371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128372   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2128373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128374   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128375   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128376   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2128377   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2128378   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2128379   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2128380   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2128381   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2128382   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128383   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128384   +END;
MPRINT(EM_DIAGRAM):   END;
2128385   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128386   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2128387   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128388   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2128389   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2128390   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2128391   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2128392   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2128393   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2128394   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2128395   +   ELSE S_NumCatalogPurchases
2128396   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2128397   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2128398   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2128399   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128400   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2128401   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128402   +END;
MPRINT(EM_DIAGRAM):   END;
2128403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128404   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2128405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128406   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128407   +   H1x1_1  =     0.21234921669572 * S_AcceptedCmpTotal
2128408   +          +     0.01945817648377 * S_Mnt  +     0.10373621819131 *
2128409   +        S_MntMeatProducts  +     0.14724080002257 * S_NumCatalogPurchases
2128410   +          +     0.01465421656969 * S_RFMstat  +    -0.37839603073195 *
2128411   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.21234921669572 * S_AcceptedCmpTotal + 0.01945817648377 * 
S_Mnt + 0.10373621819131 * S_MntMeatProducts + 0.14724080002257 * S_NumCatalogPurchases + 
0.01465421656969 * S_RFMstat + -0.37839603073195 * S_Recency ;
2128412   +   H1x1_2  =      1.6456490248475 * S_AcceptedCmpTotal
2128413   +          +    -4.36126689821345 * S_Mnt  +    -5.34341350667797 *
2128414   +        S_MntMeatProducts  +    -0.50775340376834 * S_NumCatalogPurchases
2128415   +          +    -3.77547933008523 * S_RFMstat  +    -0.35687395481612 *
2128416   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.6456490248475 * S_AcceptedCmpTotal + -4.36126689821345 * 
S_Mnt + -5.34341350667797 * S_MntMeatProducts + -0.50775340376834 * S_NumCatalogPurchases + 
-3.77547933008523 * S_RFMstat + -0.35687395481612 * S_Recency ;
2128417   +   H1x1_3  =     2.25495773414966 * S_AcceptedCmpTotal
2128418   +          +     -11.006968240108 * S_Mnt  +     5.29014268166876 *
2128419   +        S_MntMeatProducts  +     1.38527755695319 * S_NumCatalogPurchases
2128420   +          +    -0.25229120510632 * S_RFMstat  +    -0.96545690161812 *
2128421   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.25495773414966 * S_AcceptedCmpTotal + -11.006968240108 * 
S_Mnt + 5.29014268166876 * S_MntMeatProducts + 1.38527755695319 * S_NumCatalogPurchases + 
-0.25229120510632 * S_RFMstat + -0.96545690161812 * S_Recency ;
2128422   +   H1x1_1  =    -1.44629643725438 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.44629643725438 + H1x1_1 ;
2128423   +   H1x1_2  =    -8.96045510766511 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -8.96045510766511 + H1x1_2 ;
2128424   +   H1x1_3  =    -3.43663513496723 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.43663513496723 + H1x1_3 ;
2128425   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2128426   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2128427   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128428   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2128429   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2128430   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2128431   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2128432   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2128433   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2128434   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2128435   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2128436   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2128437   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2128438   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2128439   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2128440   +END;
MPRINT(EM_DIAGRAM):   END;
2128441   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128442   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2128443   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2128444   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2128445   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2128446   +END;
MPRINT(EM_DIAGRAM):   END;
2128447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128448   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2128449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128450   +
2128451   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2128452   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2128453   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128454   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2128455   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2128456   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2128457   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2128458   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128459   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128460   +end;
MPRINT(EM_DIAGRAM):   end;
2128461   +else do;
MPRINT(EM_DIAGRAM):   else do;
2128462   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2128463   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2128464   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2128465   +   end;
MPRINT(EM_DIAGRAM):   end;
2128466   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2128467   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2128468   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2128469   +   end;
MPRINT(EM_DIAGRAM):   end;
2128470   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2128471   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2128472   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2128473   +   end;
MPRINT(EM_DIAGRAM):   end;
2128474   +end;
MPRINT(EM_DIAGRAM):   end;
2128475   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128476   +   P_DepVar1  =     15.9155817268417 * H1x1_1  +    -26.1877719603903 * H1x1_2
2128477   +          +     3.03900855168824 * H1x1_3  +    -8.12584282800012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.9155817268417 * H1x1_1 + -26.1877719603903 * H1x1_2 + 
3.03900855168824 * H1x1_3 + -8.12584282800012 * H1x1_4 ;
2128478   +   P_DepVar1  =    -0.43873072735423 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.43873072735423 + P_DepVar1 ;
2128479   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2128480   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2128481   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128482   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2128483   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2128484   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2128485   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2128486   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2128487   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2128488   +END;
MPRINT(EM_DIAGRAM):   END;
2128489   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128490   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2128491   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2128492   +END;
MPRINT(EM_DIAGRAM):   END;
2128493   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2128494   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2128495   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2128496   +END;
MPRINT(EM_DIAGRAM):   END;
2128497   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2128498   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2128499   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2128500   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2128501   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2128502   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2128503   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2128504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128505   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2128506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128507   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2128508   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2128509   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2128510   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2128511   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2128512   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2128513   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2128514   +END;
MPRINT(EM_DIAGRAM):   END;
2128515   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128516   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2128517   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2128518   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2128519   +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
2128520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128521   +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
2128522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128523   +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
2128524   +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
2128525   +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
2128526   +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
2128527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128528   +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
2128529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128530   +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
2128531   +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
2128532   +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
2128533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128534   +* Ensmbl20: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 3 of 7;
2128535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128537   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2128538   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2128539   +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
2128540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2128541   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128542   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2128543   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2128544   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2128545   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2128546   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2128547   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2128548   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2128549   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2128550   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2128551   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2128552   +LENGTH _WARN_ $4
2128553   +      F_DepVar  $ 12
2128554   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2128555   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2128556   +
2128557   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2128558   +
2128559   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2128560   +
2128561   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2128562   +
2128563   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2128564   +
2128565   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2128566   +
2128567   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2128568   +
2128569   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2128570   +
2128571   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2128572   +
2128573   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2128574   +
2128575   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2128576   +
2128577   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2128578   +
2128579   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2128580   +
2128581   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2128582   +
2128583   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2128584   +
2128585   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2128586   +
2128587   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2128588   +
2128589   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2128590   +
2128591   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2128592   +
2128593   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2128594   +
2128595   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2128596   +
2128597   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2128598   +
2128599   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2128600   +
2128601   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2128602   +
2128603   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2128604   +
2128605   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2128606   +
2128607   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2128608   +
2128609   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2128610   +
2128611   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2128612   +
2128613   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2128614   +
2128615   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2128616   +
2128617   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2128618   +
2128619   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2128620   +
2128621   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2128622   +
2128623   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2128624   +
2128625   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2128626   +
2128627   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2128628   +
2128629   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2128630   +
2128631   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2128632   +
2128633   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2128634   +
2128635   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2128636   +
2128637   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2128638   +
2128639   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2128640   +
2128641   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2128642   +
2128643   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2128644   +
2128645   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2128646   +
2128647   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2128648   +
2128649   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2128650   +
2128651   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2128652   +
2128653   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2128654   +
2128655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128656   +*** Checking missing input Interval
2128657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2128658   +
2128659   +IF NMISS(
2128660   +   AcceptedCmpTotal ,
2128661   +   Mnt ,
2128662   +   MntMeatProducts ,
2128663   +   NumCatalogPurchases ,
2128664   +   RFMstat ,
2128665   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2128666   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2128667   +
2128668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2128669   +END;
MPRINT(EM_DIAGRAM):   END;
2128670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128671   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2128672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128673   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128674   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128675   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2128676   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2128677   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2128678   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2128679   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2128680   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2128681   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128682   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128683   +END;
MPRINT(EM_DIAGRAM):   END;
2128684   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128685   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2128686   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2128687   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2128688   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2128689   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2128690   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2128691   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2128692   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2128693   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2128694   +   ELSE S_NumCatalogPurchases
2128695   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2128696   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2128697   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2128698   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2128699   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2128700   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2128701   +END;
MPRINT(EM_DIAGRAM):   END;
2128702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128703   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2128704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128705   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128706   +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
2128707   +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
2128708   +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
2128709   +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
2128710   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 * 
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases + 
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
2128711   +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
2128712   +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
2128713   +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
2128714   +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
2128715   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 * 
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases + 
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
2128716   +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
2128717   +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
2128718   +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
2128719   +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
2128720   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 * 
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases + 
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
2128721   +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
2128722   +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
2128723   +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
2128724   +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
2128725   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 * 
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases + 
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
2128726   +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
2128727   +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
2128728   +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
2128729   +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
2128730   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 * 
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases + 
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
2128731   +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
2128732   +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
2128733   +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
2128734   +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
2128735   +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
2128736   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2128737   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2128738   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128739   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2128740   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2128741   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2128742   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2128743   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2128744   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2128745   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2128746   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2128747   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2128748   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2128749   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2128750   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2128751   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2128752   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2128753   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2128754   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2128755   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2128756   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2128757   +END;
MPRINT(EM_DIAGRAM):   END;
2128758   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128759   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2128760   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2128761   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2128762   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2128763   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2128764   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2128765   +END;
MPRINT(EM_DIAGRAM):   END;
2128766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128767   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2128768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128769   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128770   +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
2128771   +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
2128772   +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
2128773   +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
2128774   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 * 
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases + 
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
2128775   +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
2128776   +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
2128777   +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
2128778   +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
2128779   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 * 
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases + 
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
2128780   +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
2128781   +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
2128782   +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
2128783   +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
2128784   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 * 
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases + 
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
2128785   +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
2128786   +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
2128787   +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
2128788   +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
2128789   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 * 
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases + 
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
2128790   +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
2128791   +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
2128792   +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
2128793   +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
2128794   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 * 
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases + 
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
2128795   +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
2128796   +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
2128797   +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
2128798   +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
2128799   +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
2128800   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2128801   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2128802   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128803   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2128804   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2128805   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2128806   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2128807   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2128808   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2128809   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2128810   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2128811   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2128812   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2128813   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2128814   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2128815   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2128816   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2128817   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2128818   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2128819   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2128820   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2128821   +END;
MPRINT(EM_DIAGRAM):   END;
2128822   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128823   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2128824   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2128825   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2128826   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2128827   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2128828   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2128829   +END;
MPRINT(EM_DIAGRAM):   END;
2128830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128831   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2128832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128833   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128834   +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
2128835   +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
2128836   +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
2128837   +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
2128838   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 * 
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases + 
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
2128839   +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
2128840   +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
2128841   +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
2128842   +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
2128843   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 * 
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases + 
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
2128844   +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
2128845   +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
2128846   +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
2128847   +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
2128848   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 * 
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases + 
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
2128849   +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
2128850   +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
2128851   +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
2128852   +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
2128853   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 * 
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases + 
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
2128854   +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
2128855   +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
2128856   +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
2128857   +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
2128858   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 * 
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases + 
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
2128859   +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
2128860   +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
2128861   +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
2128862   +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
2128863   +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
2128864   +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
2128865   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
2128866   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2128867   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2128868   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2128869   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2128870   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2128871   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2128872   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2128873   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2128874   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2128875   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2128876   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2128877   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2128878   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2128879   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2128880   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2128881   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2128882   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2128883   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2128884   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2128885   +END;
MPRINT(EM_DIAGRAM):   END;
2128886   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128887   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2128888   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2128889   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2128890   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2128891   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2128892   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2128893   +END;
MPRINT(EM_DIAGRAM):   END;
2128894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128895   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2128896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128897   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128898   +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
2128899   +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
2128900   +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 + 
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 + 
0.22872788371043 * H1x1_6 ;
2128901   +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
2128902   +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
2128903   +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 + 
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 + 
1.4617930846853 * H1x1_6 ;
2128904   +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
2128905   +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
2128906   +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 + 
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 + 
-1.0098240718302 * H1x1_6 ;
2128907   +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
2128908   +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
2128909   +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 + 
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 + 
0.11106499550345 * H1x1_6 ;
2128910   +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
2128911   +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
2128912   +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 + 
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 + 
3.51037817476003 * H1x1_6 ;
2128913   +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
2128914   +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
2128915   +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 + 
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 + 
-1.84413878989067 * H1x1_6 ;
2128916   +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
2128917   +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
2128918   +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
2128919   +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 * 
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 + 
-0.96627475596267 * H1x2_6 ;
2128920   +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
2128921   +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
2128922   +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
2128923   +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2 
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 + 
0.09804477894859 * H1x2_6 ;
2128924   +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
2128925   +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
2128926   +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
2128927   +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 * 
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 + 
-0.10095907241792 * H1x2_6 ;
2128928   +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
2128929   +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
2128930   +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
2128931   +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 + 
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 + 
-0.78007016861264 * H1x2_6 ;
2128932   +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
2128933   +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
2128934   +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
2128935   +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2 
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 + 
1.95855676074934 * H1x2_6 ;
2128936   +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
2128937   +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
2128938   +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
2128939   +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2 
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 + 
-1.4251132059225 * H1x2_6 ;
2128940   +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
2128941   +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
2128942   +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
2128943   +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2 
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 + 
0.38481934719452 * H1x3_6 ;
2128944   +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
2128945   +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
2128946   +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
2128947   +          +     1.87596859340821 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2 
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 + 
1.87596859340821 * H1x3_6 ;
2128948   +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
2128949   +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
2128950   +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
2128951   +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2 
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 + 
0.20457555210609 * H1x3_6 ;
2128952   +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
2128953   +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
2128954   +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
2128955   +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2 
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 + 
1.76488988390401 * H1x3_6 ;
2128956   +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
2128957   +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
2128958   +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
2128959   +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2 
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 + 
1.63202351822216 * H1x3_6 ;
2128960   +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
2128961   +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
2128962   +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
2128963   +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2 
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 + 
-0.75070900812889 * H1x3_6 ;
2128964   +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
2128965   +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
2128966   +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
2128967   +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
2128968   +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
2128969   +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
2128970   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2128971   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2128972   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2128973   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2128974   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2128975   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2128976   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2128977   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2128978   +END;
MPRINT(EM_DIAGRAM):   END;
2128979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2128980   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2128981   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2128982   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2128983   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2128984   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2128985   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2128986   +END;
MPRINT(EM_DIAGRAM):   END;
2128987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128988   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2128989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2128990   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2128991   +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
2128992   +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
2128993   +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 + 
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 + 
0.35027369588915 * H1x1_6 ;
2128994   +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
2128995   +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
2128996   +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 + 
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 + 
-0.75991454790943 * H1x1_6 ;
2128997   +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
2128998   +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
2128999   +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 + 
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 + 
-0.17010696636548 * H1x1_6 ;
2129000   +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
2129001   +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
2129002   +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 + 
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 + 
2.49695921665153 * H1x1_6 ;
2129003   +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
2129004   +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
2129005   +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 + 
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 + 
-1.97247962280317 * H1x1_6 ;
2129006   +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
2129007   +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
2129008   +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 + 
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 + 
0.90300533681641 * H1x1_6 ;
2129009   +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
2129010   +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
2129011   +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
2129012   +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 * 
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 + 
-1.39994531215362 * H1x2_6 ;
2129013   +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
2129014   +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
2129015   +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
2129016   +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2 
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 + 
-0.40444669273525 * H1x2_6 ;
2129017   +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
2129018   +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
2129019   +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
2129020   +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 + 
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 + 
-2.38736049861996 * H1x2_6 ;
2129021   +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
2129022   +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
2129023   +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
2129024   +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 * 
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 + 
0.02632878191094 * H1x2_6 ;
2129025   +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
2129026   +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
2129027   +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
2129028   +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2 
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 + 
0.79706245066425 * H1x2_6 ;
2129029   +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
2129030   +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
2129031   +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
2129032   +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2 
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 + 
1.96032751350518 * H1x2_6 ;
2129033   +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
2129034   +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
2129035   +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
2129036   +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2 
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 + 
0.86372067144364 * H1x3_6 ;
2129037   +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
2129038   +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
2129039   +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
2129040   +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2 
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 + 
0.80254310887989 * H1x3_6 ;
2129041   +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
2129042   +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
2129043   +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
2129044   +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2 
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 + 
-0.80961698509146 * H1x3_6 ;
2129045   +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
2129046   +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
2129047   +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
2129048   +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2 
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 + 
-1.29909553454934 * H1x3_6 ;
2129049   +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
2129050   +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
2129051   +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
2129052   +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 * 
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 + 
0.3854653698129 * H1x3_6 ;
2129053   +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
2129054   +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
2129055   +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
2129056   +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2 
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 + 
-0.43429796112944 * H1x3_6 ;
2129057   +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
2129058   +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
2129059   +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
2129060   +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
2129061   +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
2129062   +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
2129063   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2129064   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2129065   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2129066   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
2129067   +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
2129068   +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
2129069   +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
2129070   +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
2129071   +END;
MPRINT(EM_DIAGRAM):   END;
2129072   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129073   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2129074   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2129075   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2129076   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2129077   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2129078   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2129079   +END;
MPRINT(EM_DIAGRAM):   END;
2129080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129081   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2129082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129084   +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
2129085   +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
2129086   +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 + 
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 + 
-1.05088304858423 * H2x1_6 ;
2129087   +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
2129088   +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
2129089   +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 + 
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 + 
0.87150445612099 * H2x1_6 ;
2129090   +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
2129091   +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
2129092   +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 + 
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 + 
2.18013446750751 * H2x1_6 ;
2129093   +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
2129094   +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
2129095   +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 + 
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 + 
0.08630071934474 * H2x1_6 ;
2129096   +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
2129097   +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
2129098   +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 + 
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 + 
2.78368081292476 * H2x1_6 ;
2129099   +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
2129100   +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
2129101   +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 + 
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 + 
1.64288571863932 * H2x1_6 ;
2129102   +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
2129103   +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
2129104   +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
2129105   +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 * 
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 + 
0.35216486042215 * H2x2_6 ;
2129106   +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
2129107   +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
2129108   +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
2129109   +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2 
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 + 
-0.91648595761636 * H2x2_6 ;
2129110   +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
2129111   +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
2129112   +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
2129113   +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2 
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 + 
-2.11281855575499 * H2x2_6 ;
2129114   +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
2129115   +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
2129116   +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
2129117   +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2 
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 + 
0.57305821692201 * H2x2_6 ;
2129118   +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
2129119   +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
2129120   +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
2129121   +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2 
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 + 
2.06401699674057 * H2x2_6 ;
2129122   +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
2129123   +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
2129124   +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
2129125   +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2 
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 + 
0.08850124295188 * H2x2_6 ;
2129126   +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
2129127   +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
2129128   +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
2129129   +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
2129130   +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
2129131   +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
2129132   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2129133   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2129134   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2129135   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2129136   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2129137   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2129138   +END;
MPRINT(EM_DIAGRAM):   END;
2129139   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129140   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2129141   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2129142   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2129143   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2129144   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2129145   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2129146   +END;
MPRINT(EM_DIAGRAM):   END;
2129147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129148   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2129149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129150   +
2129151   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2129152   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2129153   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129154   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2129155   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2129156   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129157   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2129158   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129159   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129160   +end;
MPRINT(EM_DIAGRAM):   end;
2129161   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129162   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2129163   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2129164   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2129165   +   end;
MPRINT(EM_DIAGRAM):   end;
2129166   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2129167   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2129168   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2129169   +   end;
MPRINT(EM_DIAGRAM):   end;
2129170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129171   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129172   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129173   +   end;
MPRINT(EM_DIAGRAM):   end;
2129174   +end;
MPRINT(EM_DIAGRAM):   end;
2129175   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129176   +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
2129177   +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
2129178   +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 + 
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 + 
-1.83744247169269 * H3x1_6 ;
2129179   +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
2129180   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2129181   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2129182   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2129183   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2129184   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2129185   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2129186   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2129187   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2129188   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2129189   +END;
MPRINT(EM_DIAGRAM):   END;
2129190   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129191   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2129192   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2129193   +END;
MPRINT(EM_DIAGRAM):   END;
2129194   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2129195   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2129196   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2129197   +END;
MPRINT(EM_DIAGRAM):   END;
2129198   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2129199   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2129200   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2129201   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2129202   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2129203   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2129204   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2129205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129206   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2129207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129208   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2129209   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2129210   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2129211   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2129212   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2129213   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2129214   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2129215   +END;
MPRINT(EM_DIAGRAM):   END;
2129216   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129217   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2129218   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129219   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2129220   +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
2129221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129222   +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
2129223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129224   +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
2129225   +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
2129226   +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
2129227   +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
2129228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129229   +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
2129230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129231   +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
2129232   +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
2129233   +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
2129234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129235   +* Ensmbl20: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 4 of 7;
2129236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129238   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2129239   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2129240   +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
2129241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129242   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129243   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2129244   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129245   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2129246   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2129247   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2129248   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2129249   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2129250   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2129251   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2129252   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2129253   +LENGTH _WARN_ $4
2129254   +      F_DepVar  $ 12
2129255   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2129256   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2129257   +
2129258   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2129259   +
2129260   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2129261   +
2129262   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2129263   +
2129264   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2129265   +
2129266   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2129267   +
2129268   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2129269   +
2129270   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2129271   +
2129272   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2129273   +
2129274   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2129275   +
2129276   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129277   +
2129278   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2129279   +
2129280   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2129281   +
2129282   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2129283   +
2129284   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2129285   +
2129286   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2129287   +
2129288   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2129289   +
2129290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129291   +*** Checking missing input Interval
2129292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2129293   +
2129294   +IF NMISS(
2129295   +   AcceptedCmpTotal ,
2129296   +   Mnt ,
2129297   +   MntMeatProducts ,
2129298   +   NumCatalogPurchases ,
2129299   +   RFMstat ,
2129300   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2129301   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2129302   +
2129303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129304   +END;
MPRINT(EM_DIAGRAM):   END;
2129305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129306   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2129307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129308   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129309   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129310   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129311   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129312   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129313   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129314   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2129315   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129316   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129317   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129318   +END;
MPRINT(EM_DIAGRAM):   END;
2129319   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129320   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2129321   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129322   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129323   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2129324   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129325   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2129326   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129327   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129328   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2129329   +   ELSE S_NumCatalogPurchases
2129330   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2129331   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129332   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2129333   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129334   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2129335   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129336   +END;
MPRINT(EM_DIAGRAM):   END;
2129337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129338   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2129339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129341   +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
2129342   +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
2129343   +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
2129344   +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
2129345   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 * 
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases + 
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
2129346   +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
2129347   +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
2129348   +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
2129349   +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
2129350   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 * 
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases + 
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
2129351   +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
2129352   +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
2129353   +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
2129354   +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
2129355   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 * 
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases + 
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
2129356   +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
2129357   +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
2129358   +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
2129359   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2129360   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2129361   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2129362   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2129363   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2129364   +END;
MPRINT(EM_DIAGRAM):   END;
2129365   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129366   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2129367   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2129368   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2129369   +END;
MPRINT(EM_DIAGRAM):   END;
2129370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129371   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2129372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129373   +
2129374   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2129375   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2129376   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129377   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2129378   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2129379   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129380   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2129381   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129382   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129383   +end;
MPRINT(EM_DIAGRAM):   end;
2129384   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129385   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2129386   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2129387   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2129388   +   end;
MPRINT(EM_DIAGRAM):   end;
2129389   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2129390   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2129391   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2129392   +   end;
MPRINT(EM_DIAGRAM):   end;
2129393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129394   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129395   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129396   +   end;
MPRINT(EM_DIAGRAM):   end;
2129397   +end;
MPRINT(EM_DIAGRAM):   end;
2129398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129399   +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
2129400   +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 + 
2.67685271681444 * H1x1_3 ;
2129401   +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
2129402   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2129403   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2129404   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2129405   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2129406   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2129407   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2129408   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2129409   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2129410   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2129411   +END;
MPRINT(EM_DIAGRAM):   END;
2129412   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129413   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2129414   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2129415   +END;
MPRINT(EM_DIAGRAM):   END;
2129416   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2129417   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2129418   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2129419   +END;
MPRINT(EM_DIAGRAM):   END;
2129420   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2129421   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2129422   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2129423   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2129424   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2129425   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2129426   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2129427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129428   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2129429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129430   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2129431   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2129432   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2129433   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2129434   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2129435   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2129436   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2129437   +END;
MPRINT(EM_DIAGRAM):   END;
2129438   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129439   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2129440   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129441   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2129442   +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
2129443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129444   +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
2129445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129446   +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
2129447   +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
2129448   +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
2129449   +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
2129450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129451   +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
2129452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129453   +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
2129454   +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
2129455   +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
2129456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129457   +* Ensmbl20: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 5 of 7;
2129458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129460   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2129461   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2129462   +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
2129463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129464   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129465   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2129466   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129467   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2129468   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2129469   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2129470   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2129471   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2129472   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2129473   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2129474   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2129475   +LENGTH _WARN_ $4
2129476   +      F_DepVar  $ 12
2129477   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2129478   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2129479   +
2129480   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2129481   +
2129482   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2129483   +
2129484   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2129485   +
2129486   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2129487   +
2129488   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2129489   +
2129490   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2129491   +
2129492   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129493   +
2129494   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2129495   +
2129496   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2129497   +
2129498   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2129499   +
2129500   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2129501   +
2129502   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2129503   +
2129504   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2129505   +
2129506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129507   +*** Checking missing input Interval
2129508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2129509   +
2129510   +IF NMISS(
2129511   +   AcceptedCmpTotal ,
2129512   +   Mnt ,
2129513   +   MntMeatProducts ,
2129514   +   NumCatalogPurchases ,
2129515   +   RFMstat ,
2129516   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2129517   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2129518   +
2129519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129520   +END;
MPRINT(EM_DIAGRAM):   END;
2129521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129522   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2129523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129524   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129525   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129526   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129527   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129528   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129529   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129530   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2129531   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129532   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129533   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129534   +END;
MPRINT(EM_DIAGRAM):   END;
2129535   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129536   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2129537   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129538   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129539   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2129540   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129541   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2129542   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129543   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129544   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2129545   +   ELSE S_NumCatalogPurchases
2129546   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2129547   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129548   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2129549   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129550   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2129551   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129552   +END;
MPRINT(EM_DIAGRAM):   END;
2129553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129554   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2129555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129556   +
2129557   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2129558   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2129559   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129560   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2129561   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2129562   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129563   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2129564   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129565   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129566   +end;
MPRINT(EM_DIAGRAM):   end;
2129567   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129568   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2129569   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2129570   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2129571   +   end;
MPRINT(EM_DIAGRAM):   end;
2129572   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2129573   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2129574   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2129575   +   end;
MPRINT(EM_DIAGRAM):   end;
2129576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129577   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129578   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129579   +   end;
MPRINT(EM_DIAGRAM):   end;
2129580   +end;
MPRINT(EM_DIAGRAM):   end;
2129581   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129582   +   P_DepVar1  =     1.05169539250812 * S_AcceptedCmpTotal
2129583   +          +    -1.01535799807127 * S_Mnt  +     0.90249216466184 *
2129584   +        S_MntMeatProducts  +     0.55600820704456 * S_NumCatalogPurchases
2129585   +          +     0.11616609536854 * S_RFMstat  +    -1.16391829324819 *
2129586   +        S_Recency ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.05169539250812 * S_AcceptedCmpTotal + -1.01535799807127 * 
S_Mnt + 0.90249216466184 * S_MntMeatProducts + 0.55600820704456 * S_NumCatalogPurchases + 
0.11616609536854 * S_RFMstat + -1.16391829324819 * S_Recency ;
2129587   +   P_DepVar1  =    -2.23938090727264 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23938090727264 + P_DepVar1 ;
2129588   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2129589   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2129590   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2129591   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2129592   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2129593   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2129594   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2129595   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2129596   +   P_DepVar0  = P_DepVar0  / _SUM_;
The SAS System

MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2129597   +END;
MPRINT(EM_DIAGRAM):   END;
2129598   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129599   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2129600   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2129601   +END;
MPRINT(EM_DIAGRAM):   END;
2129602   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2129603   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2129604   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2129605   +END;
MPRINT(EM_DIAGRAM):   END;
2129606   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2129607   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2129608   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2129609   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2129610   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2129611   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2129612   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2129613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129614   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2129615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129616   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2129617   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2129618   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2129619   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2129620   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2129621   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2129622   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2129623   +END;
MPRINT(EM_DIAGRAM):   END;
2129624   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129625   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2129626   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129627   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2129628   +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
2129629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129630   +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
2129631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129632   +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
2129633   +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
2129634   +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
2129635   +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
2129636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129637   +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
2129638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129639   +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
2129640   +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
2129641   +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
2129642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129643   +* Ensmbl20: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 6 of 7;
2129644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129646   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2129647   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2129648   +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
2129649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129650   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129651   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2129652   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129653   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2129654   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2129655   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2129656   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2129657   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2129658   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2129659   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2129660   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2129661   +LENGTH _WARN_ $4
2129662   +      F_DepVar  $ 12
2129663   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2129664   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2129665   +
2129666   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2129667   +
2129668   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2129669   +
2129670   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2129671   +
2129672   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2129673   +
2129674   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2129675   +
2129676   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2129677   +
2129678   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2129679   +
2129680   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2129681   +
2129682   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2129683   +
2129684   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2129685   +
2129686   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2129687   +
2129688   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129689   +
2129690   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2129691   +
2129692   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2129693   +
2129694   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2129695   +
2129696   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2129697   +
2129698   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2129699   +
2129700   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2129701   +
2129702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129703   +*** Checking missing input Interval
2129704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2129705   +
2129706   +IF NMISS(
2129707   +   AcceptedCmpTotal ,
2129708   +   Mnt ,
2129709   +   MntMeatProducts ,
2129710   +   NumCatalogPurchases ,
2129711   +   RFMstat ,
2129712   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2129713   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2129714   +
2129715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129716   +END;
MPRINT(EM_DIAGRAM):   END;
2129717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129718   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2129719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129720   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129721   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129722   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129723   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129724   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129725   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129726   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2129727   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129728   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129729   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129730   +END;
MPRINT(EM_DIAGRAM):   END;
2129731   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129732   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2129733   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129734   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129735   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2129736   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129737   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2129738   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129739   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129740   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2129741   +   ELSE S_NumCatalogPurchases
2129742   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2129743   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129744   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2129745   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129746   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2129747   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129748   +END;
MPRINT(EM_DIAGRAM):   END;
2129749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129750   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2129751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129752   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129753   +   H11  =    -0.26722164464712 * S_AcceptedCmpTotal  +     0.04075768430183 *
2129754   +        S_Mnt  +    -0.14387744951395 * S_MntMeatProducts
2129755   +          +    -0.27306285421769 * S_NumCatalogPurchases
2129756   +          +    -0.08264228402157 * S_RFMstat  +     0.65480854062399 *
2129757   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.26722164464712 * S_AcceptedCmpTotal + 0.04075768430183 * S_Mnt 
+ -0.14387744951395 * S_MntMeatProducts + -0.27306285421769 * S_NumCatalogPurchases + 
-0.08264228402157 * S_RFMstat + 0.65480854062399 * S_Recency ;
2129758   +   H12  =    -0.75351416084046 * S_AcceptedCmpTotal  +     0.52277401008012 *
2129759   +        S_Mnt  +    -0.54516413990982 * S_MntMeatProducts
2129760   +          +     -0.0686127004799 * S_NumCatalogPurchases
2129761   +          +     0.08512116766951 * S_RFMstat  +     0.81359799950451 *
2129762   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.75351416084046 * S_AcceptedCmpTotal + 0.52277401008012 * S_Mnt 
+ -0.54516413990982 * S_MntMeatProducts + -0.0686127004799 * S_NumCatalogPurchases + 
0.08512116766951 * S_RFMstat + 0.81359799950451 * S_Recency ;
2129763   +   H13  =     0.02955098348281 * S_AcceptedCmpTotal  +    -0.14081493335567 *
2129764   +        S_Mnt  +    -2.75813103631938 * S_MntMeatProducts
2129765   +          +    -0.74712508136294 * S_NumCatalogPurchases
2129766   +          +    -0.79352948307239 * S_RFMstat  +     0.03918291142705 *
2129767   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.02955098348281 * S_AcceptedCmpTotal + -0.14081493335567 * S_Mnt 
+ -2.75813103631938 * S_MntMeatProducts + -0.74712508136294 * S_NumCatalogPurchases + 
-0.79352948307239 * S_RFMstat + 0.03918291142705 * S_Recency ;
2129768   +   H14  =     0.75907858324573 * S_AcceptedCmpTotal  +     1.38211517497076 *
2129769   +        S_Mnt  +     1.18060955375477 * S_MntMeatProducts
2129770   +          +    -0.37728172570087 * S_NumCatalogPurchases
2129771   +          +    -2.76202813274234 * S_RFMstat  +    -0.15842857977636 *
2129772   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.75907858324573 * S_AcceptedCmpTotal + 1.38211517497076 * S_Mnt + 
1.18060955375477 * S_MntMeatProducts + -0.37728172570087 * S_NumCatalogPurchases + 
-2.76202813274234 * S_RFMstat + -0.15842857977636 * S_Recency ;
2129773   +   H15  =    -0.16016600226913 * S_AcceptedCmpTotal  +     2.47052363890196 *
2129774   +        S_Mnt  +    -0.91872569099803 * S_MntMeatProducts
2129775   +          +    -0.10767997671599 * S_NumCatalogPurchases
2129776   +          +     0.11268223210579 * S_RFMstat  +     0.08646017290432 *
2129777   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.16016600226913 * S_AcceptedCmpTotal + 2.47052363890196 * S_Mnt 
+ -0.91872569099803 * S_MntMeatProducts + -0.10767997671599 * S_NumCatalogPurchases + 
0.11268223210579 * S_RFMstat + 0.08646017290432 * S_Recency ;
2129778   +   H11  =     1.70904496773549 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.70904496773549 + H11 ;
2129779   +   H12  =    -0.75066885844141 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.75066885844141 + H12 ;
2129780   +   H13  =    -3.06547429791923 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.06547429791923 + H13 ;
2129781   +   H14  =    -0.30791973300056 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.30791973300056 + H14 ;
2129782   +   H15  =     1.39876187284436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.39876187284436 + H15 ;
2129783   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2129784   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2129785   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2129786   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2129787   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2129788   +END;
MPRINT(EM_DIAGRAM):   END;
2129789   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129790   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2129791   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2129792   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2129793   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2129794   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2129795   +END;
MPRINT(EM_DIAGRAM):   END;
2129796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129797   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2129798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129799   +
2129800   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2129801   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2129802   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129803   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2129804   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2129805   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2129806   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2129807   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129808   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129809   +end;
MPRINT(EM_DIAGRAM):   end;
2129810   +else do;
MPRINT(EM_DIAGRAM):   else do;
2129811   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2129812   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2129813   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2129814   +   end;
MPRINT(EM_DIAGRAM):   end;
2129815   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2129816   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2129817   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2129818   +   end;
MPRINT(EM_DIAGRAM):   end;
2129819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2129820   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2129821   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2129822   +   end;
MPRINT(EM_DIAGRAM):   end;
2129823   +end;
MPRINT(EM_DIAGRAM):   end;
2129824   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129825   +   P_DepVar1  =    -4.85125437606138 * H11  +    -2.45566607820423 * H12
2129826   +          +    -5.91091097658466 * H13  +     1.06755367873748 * H14
2129827   +          +    -5.85018554594302 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.85125437606138 * H11 + -2.45566607820423 * H12 + 
-5.91091097658466 * H13 + 1.06755367873748 * H14 + -5.85018554594302 * H15 ;
2129828   +   P_DepVar1  =    -0.91583665378719 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.91583665378719 + P_DepVar1 ;
2129829   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2129830   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2129831   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2129832   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2129833   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2129834   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2129835   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2129836   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2129837   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2129838   +END;
MPRINT(EM_DIAGRAM):   END;
2129839   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129840   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2129841   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2129842   +END;
MPRINT(EM_DIAGRAM):   END;
2129843   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2129844   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2129845   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2129846   +END;
MPRINT(EM_DIAGRAM):   END;
2129847   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2129848   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2129849   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2129850   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2129851   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2129852   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2129853   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2129854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129855   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2129856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129857   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2129858   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2129859   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2129860   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2129861   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2129862   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2129863   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2129864   +END;
MPRINT(EM_DIAGRAM):   END;
2129865   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129866   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2129867   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2129868   +drop
2129869   +H11
2129870   +H12
2129871   +H13
2129872   +H14
2129873   +H15
2129874   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2129875   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2129876   +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
2129877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129878   +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
2129879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129880   +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
2129881   +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
2129882   +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
2129883   +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
2129884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129885   +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
2129886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129887   +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
2129888   +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
2129889   +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
2129890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129891   +* Ensmbl20: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 7 of 7;
2129892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129894   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2129895   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2129896   +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
2129897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2129898   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129899   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2129900   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2129901   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2129902   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2129903   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2129904   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2129905   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2129906   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2129907   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2129908   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2129909   +LENGTH _WARN_ $4
2129910   +      F_DepVar  $ 12
2129911   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2129912   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2129913   +
2129914   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2129915   +
2129916   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2129917   +
2129918   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2129919   +
2129920   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2129921   +
2129922   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2129923   +
2129924   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2129925   +
2129926   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2129927   +
2129928   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2129929   +
2129930   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2129931   +
2129932   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2129933   +
2129934   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2129935   +
2129936   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2129937   +
2129938   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2129939   +
2129940   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2129941   +
2129942   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2129943   +
2129944   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2129945   +
2129946   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2129947   +
2129948   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2129949   +
2129950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129951   +*** Checking missing input Interval
2129952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2129953   +
2129954   +IF NMISS(
2129955   +   AcceptedCmpTotal ,
2129956   +   Mnt ,
2129957   +   MntMeatProducts ,
2129958   +   NumCatalogPurchases ,
2129959   +   RFMstat ,
2129960   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2129961   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2129962   +
2129963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2129964   +END;
MPRINT(EM_DIAGRAM):   END;
2129965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129966   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2129967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129968   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2129969   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129970   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129971   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129972   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129973   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129974   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2129975   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129976   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129977   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129978   +END;
MPRINT(EM_DIAGRAM):   END;
2129979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2129980   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2129981   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2129982   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2129983   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2129984   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2129985   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2129986   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2129987   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2129988   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2129989   +   ELSE S_NumCatalogPurchases
2129990   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2129991   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2129992   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2129993   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2129994   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2129995   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2129996   +END;
MPRINT(EM_DIAGRAM):   END;
2129997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2129998   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2129999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130000   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130001   +   H1x1_1  =     0.20171954292418 * S_AcceptedCmpTotal
2130002   +          +     0.29079116229788 * S_Mnt  +     0.23711535602944 *
2130003   +        S_MntMeatProducts  +     0.42529081995564 * S_NumCatalogPurchases
2130004   +          +     0.18062808343642 * S_RFMstat  +    -0.63318995037874 *
2130005   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.20171954292418 * S_AcceptedCmpTotal + 0.29079116229788 * 
S_Mnt + 0.23711535602944 * S_MntMeatProducts + 0.42529081995564 * S_NumCatalogPurchases + 
0.18062808343642 * S_RFMstat + -0.63318995037874 * S_Recency ;
2130006   +   H1x1_2  =    -1.98920342874828 * S_AcceptedCmpTotal
2130007   +          +      10.493361229847 * S_Mnt  +    -5.26684519238396 *
2130008   +        S_MntMeatProducts  +     -1.3815052580097 * S_NumCatalogPurchases
2130009   +          +     0.33275103937215 * S_RFMstat  +     0.91614898624506 *
2130010   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.98920342874828 * S_AcceptedCmpTotal + 10.493361229847 * 
S_Mnt + -5.26684519238396 * S_MntMeatProducts + -1.3815052580097 * S_NumCatalogPurchases + 
0.33275103937215 * S_RFMstat + 0.91614898624506 * S_Recency ;
2130011   +   H1x1_3  =     0.73206551950569 * S_AcceptedCmpTotal
2130012   +          +    -1.01976407347302 * S_Mnt  +    -1.13350661445888 *
2130013   +        S_MntMeatProducts  +    -0.07125936639892 * S_NumCatalogPurchases
2130014   +          +    -0.39616853923675 * S_RFMstat  +    -0.82914022268456 *
2130015   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.73206551950569 * S_AcceptedCmpTotal + -1.01976407347302 * 
S_Mnt + -1.13350661445888 * S_MntMeatProducts + -0.07125936639892 * S_NumCatalogPurchases + 
-0.39616853923675 * S_RFMstat + -0.82914022268456 * S_Recency ;
2130016   +   H1x1_4  =    -0.34492981088566 * S_AcceptedCmpTotal
2130017   +          +     1.21190291017614 * S_Mnt  +    -8.17509176920502 *
2130018   +        S_MntMeatProducts  +    -1.48783679196456 * S_NumCatalogPurchases
2130019   +          +     -0.9509465201423 * S_RFMstat  +     0.48054774355638 *
2130020   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34492981088566 * S_AcceptedCmpTotal + 1.21190291017614 * 
S_Mnt + -8.17509176920502 * S_MntMeatProducts + -1.48783679196456 * S_NumCatalogPurchases + 
-0.9509465201423 * S_RFMstat + 0.48054774355638 * S_Recency ;
2130021   +   H1x1_5  =    -1.52519083391934 * S_AcceptedCmpTotal
2130022   +          +    -3.64608769152407 * S_Mnt  +    -6.52923883290239 *
2130023   +        S_MntMeatProducts  +      2.7900190963798 * S_NumCatalogPurchases
2130024   +          +     4.27091451171932 * S_RFMstat  +     2.19744854544492 *
2130025   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.52519083391934 * S_AcceptedCmpTotal + -3.64608769152407 * 
S_Mnt + -6.52923883290239 * S_MntMeatProducts + 2.7900190963798 * S_NumCatalogPurchases + 
4.27091451171932 * S_RFMstat + 2.19744854544492 * S_Recency ;
2130026   +   H1x1_1  =    -3.14760700594037 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.14760700594037 + H1x1_1 ;
2130027   +   H1x1_2  =     3.74367981551949 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.74367981551949 + H1x1_2 ;
2130028   +   H1x1_3  =     0.87862388051597 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87862388051597 + H1x1_3 ;
2130029   +   H1x1_4  =    -7.01266539803621 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.01266539803621 + H1x1_4 ;
2130030   +   H1x1_5  =     4.82694309436143 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.82694309436143 + H1x1_5 ;
2130031   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2130032   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2130033   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2130034   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2130035   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2130036   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2130037   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2130038   +END;
MPRINT(EM_DIAGRAM):   END;
2130039   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130040   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2130041   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2130042   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2130043   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2130044   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2130045   +END;
MPRINT(EM_DIAGRAM):   END;
2130046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130047   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2130048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130049   +
2130050   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2130051   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2130052   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2130053   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2130054   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2130055   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130056   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2130057   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130058   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130059   +end;
MPRINT(EM_DIAGRAM):   end;
2130060   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130061   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2130062   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2130063   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2130064   +   end;
MPRINT(EM_DIAGRAM):   end;
2130065   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2130066   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2130067   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2130068   +   end;
MPRINT(EM_DIAGRAM):   end;
2130069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130070   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130071   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130072   +   end;
MPRINT(EM_DIAGRAM):   end;
2130073   +end;
MPRINT(EM_DIAGRAM):   end;
2130074   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130075   +   P_DepVar1  =     15.5046788281633 * H1x1_1  +    -4.66397711541227 * H1x1_2
2130076   +          +     4.82395074522384 * H1x1_3  +    -12.9633946998053 * H1x1_4
2130077   +          +    -2.45163227816589 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.5046788281633 * H1x1_1 + -4.66397711541227 * H1x1_2 + 
4.82395074522384 * H1x1_3 + -12.9633946998053 * H1x1_4 + -2.45163227816589 * H1x1_5 ;
2130078   +   P_DepVar1  =    -0.48464899477516 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.48464899477516 + P_DepVar1 ;
2130079   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2130080   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2130081   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2130082   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2130083   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2130084   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2130085   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2130086   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2130087   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2130088   +END;
MPRINT(EM_DIAGRAM):   END;
2130089   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130090   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2130091   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2130092   +END;
MPRINT(EM_DIAGRAM):   END;
2130093   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2130094   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2130095   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2130096   +END;
MPRINT(EM_DIAGRAM):   END;
2130097   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2130098   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2130099   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2130100   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2130101   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2130102   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2130103   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2130104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130105   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2130106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130107   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2130108   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2130109   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2130110   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2130111   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2130112   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2130113   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2130114   +END;
MPRINT(EM_DIAGRAM):   END;
2130115   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130116   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2130117   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130118   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2130119   +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
2130120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130121   +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
2130122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130123   +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
2130124   +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
2130125   +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
2130126   +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
2130127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130128   +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
2130129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130130   +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
2130131   +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
2130132   +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
2130133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130134   +* Ensmbl20: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Average Posteriors of 7 models;
2130135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130136   +P_DepVar1 = (
2130137   +Neural28_P_DepVar1 +
2130138   +AutoNeural33_P_DepVar1 +
2130139   +AutoNeural28_P_DepVar1 +
2130140   +AutoNeural32_P_DepVar1 +
2130141   +AutoNeural29_P_DepVar1 +
2130142   +Neural27_P_DepVar1 +
2130143   +AutoNeural27_P_DepVar1
2130144   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural28_P_DepVar1 + AutoNeural33_P_DepVar1 + 
AutoNeural28_P_DepVar1 + AutoNeural32_P_DepVar1 + AutoNeural29_P_DepVar1 + Neural27_P_DepVar1 
+ AutoNeural27_P_DepVar1 )/7;
2130145   +P_DepVar0 = (
2130146   +Neural28_P_DepVar0 +
2130147   +AutoNeural33_P_DepVar0 +
2130148   +AutoNeural28_P_DepVar0 +
2130149   +AutoNeural32_P_DepVar0 +
2130150   +AutoNeural29_P_DepVar0 +
2130151   +Neural27_P_DepVar0 +
2130152   +AutoNeural27_P_DepVar0
2130153   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural28_P_DepVar0 + AutoNeural33_P_DepVar0 + 
AutoNeural28_P_DepVar0 + AutoNeural32_P_DepVar0 + AutoNeural29_P_DepVar0 + Neural27_P_DepVar0 
+ AutoNeural27_P_DepVar0 )/7;
2130154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130155   +* Ensmbl20: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Classification Vars;
2130156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130157   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2130158   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2130159   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2130160   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2130161   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2130162   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2130163   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2130164   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2130165   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2130166   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2130167   +end;
MPRINT(EM_DIAGRAM):   end;
2130168   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2130169   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2130170   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2130171   +end;
MPRINT(EM_DIAGRAM):   end;
2130172   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2130173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130174   +* Ensmbl20: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Producing Unformatted variable;
2130175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130176   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2130177   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2130178   +else
2130179   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2130180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130181   +* Ensmbl20: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing _WARN_ Variable;
2130182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130183   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2130184   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2130185   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2130186   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2130186  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2130187   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2130187  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2130188   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2130188  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2130189   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2130189  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2130190   +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2130190  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2130191   +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2130191  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2130192   +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2130192  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2130193   +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2130193  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2130194   +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2130194  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2130195   +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2130195  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2130196   +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2130196  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2130197   +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2130197  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2130198   +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2130198  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2130199   +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2130199  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2130200   +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2130200  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2130201   +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2130201  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2130202   +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2130202  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2130203   +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2130203  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2130204   +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2130204  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2130205   +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2130205  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2130206   +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2130206  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2130207   +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2130207  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2130208   +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2130208  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2130209   +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2130209  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2130210   +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2130210  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2130211   +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2130211  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2130212   +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2130212  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2130213   +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2130213  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2130214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130215   +* Ensmbl20: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Residual Vars;
2130216   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130217   +if
2130218   +F_DepVar NE '1'
2130219   +AND F_DepVar NE '0'
2130220   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2130221   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2130222   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2130223   +end;
MPRINT(EM_DIAGRAM):   end;
2130224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130225   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2130226   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2130227   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2130228   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2130229   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2130230   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2130231   +END;
MPRINT(EM_DIAGRAM):   END;
2130232   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2130233    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL20_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL28_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2130234    quit;
2130235    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2130236    filename emflow
2130236  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring NEURAL28_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130237    *------------------------------------------------------------*;
2130238    * Ensmbl20: Scoring NEURAL28_VALIDATE data;
2130239    *------------------------------------------------------------*;
2130240    data EMWS8.Ensmbl20_VALIDATE
2130241    / view=EMWS8.Ensmbl20_VALIDATE
2130242    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_VALIDATE / view=EMWS8.Ensmbl20_VALIDATE ;
2130243    set EMWS8.Neural28_VALIDATE
2130244    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural28_VALIDATE ;
2130245    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\EMFLOWSCORE.sas.
2130246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130247   +* Ensmbl20: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Combine model for DepVar;
2130248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130249   +* Ensmbl20: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 1 of 7;
2130250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130251   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130252   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2130253   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2130254   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2130255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130257   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2130258   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2130259   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2130260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130262   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2130263   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2130264   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2130265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130267   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2130268   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2130269   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2130270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130271   +
2130272   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2130273   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2130273  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2130274   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2130275   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2130276   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2130277   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2130278   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2130279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130280   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2130281   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2130282   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2130283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130285   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2130286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130287   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2130288   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2130289   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2130290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130291   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2130292   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2130293   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2130294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130296   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
2130297   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2130298   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
2130299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130300   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2130301   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2130302   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2130303   +
2130304   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2130305   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2130306   +
2130307   +
2130308   +
2130309   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2130310   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2130311   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2130312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130313   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2130314   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2130315   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
2130316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130317   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130318   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2130319   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130320   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2130321   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2130322   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2130323   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2130324   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2130325   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2130326   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2130327   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2130328   +LENGTH _WARN_ $4
2130329   +      F_DepVar  $ 12
2130330   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2130331   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2130332   +
2130333   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2130334   +
2130335   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2130336   +
2130337   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2130338   +
2130339   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2130340   +
2130341   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2130342   +
2130343   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2130344   +
2130345   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2130346   +
2130347   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2130348   +
2130349   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2130350   +
2130351   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2130352   +
2130353   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2130354   +
2130355   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2130356   +
2130357   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2130358   +
2130359   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2130360   +
2130361   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2130362   +
2130363   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2130364   +
2130365   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2130366   +
2130367   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2130368   +
2130369   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2130370   +
2130371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130372   +*** Checking missing input Interval
2130373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2130374   +
2130375   +IF NMISS(
2130376   +   AcceptedCmpTotal ,
2130377   +   Mnt ,
2130378   +   MntMeatProducts ,
2130379   +   NumCatalogPurchases ,
2130380   +   RFMstat ,
2130381   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2130382   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2130383   +
2130384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130385   +END;
MPRINT(EM_DIAGRAM):   END;
2130386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130387   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2130388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130389   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130390   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130391   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2130392   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2130393   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2130394   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2130395   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2130396   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2130397   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130398   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130399   +END;
MPRINT(EM_DIAGRAM):   END;
2130400   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130401   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2130402   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130403   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2130404   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2130405   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2130406   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2130407   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2130408   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2130409   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2130410   +   ELSE S_NumCatalogPurchases
2130411   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2130412   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2130413   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2130414   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130415   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2130416   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130417   +END;
MPRINT(EM_DIAGRAM):   END;
2130418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130419   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2130420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130421   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130422   +   H11  =     -0.1481294920829 * S_AcceptedCmpTotal  +    -0.31967651937983 *
2130423   +        S_Mnt  +    -0.25501160560688 * S_MntMeatProducts
2130424   +          +    -0.26541354265094 * S_NumCatalogPurchases
2130425   +          +    -0.05107291503479 * S_RFMstat  +     0.26055761102982 *
2130426   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.1481294920829 * S_AcceptedCmpTotal + -0.31967651937983 * S_Mnt 
+ -0.25501160560688 * S_MntMeatProducts + -0.26541354265094 * S_NumCatalogPurchases + 
-0.05107291503479 * S_RFMstat + 0.26055761102982 * S_Recency ;
2130427   +   H12  =    -0.53585265877367 * S_AcceptedCmpTotal  +    -0.63949625372724 *
2130428   +        S_Mnt  +    -0.71298935461349 * S_MntMeatProducts
2130429   +          +     0.26625422734047 * S_NumCatalogPurchases
2130430   +          +     0.04789590805202 * S_RFMstat  +     -0.2457029388315 *
2130431   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53585265877367 * S_AcceptedCmpTotal + -0.63949625372724 * S_Mnt 
+ -0.71298935461349 * S_MntMeatProducts + 0.26625422734047 * S_NumCatalogPurchases + 
0.04789590805202 * S_RFMstat + -0.2457029388315 * S_Recency ;
2130432   +   H13  =     0.36156584602692 * S_AcceptedCmpTotal  +    -3.37453529906718 *
2130433   +        S_Mnt  +     1.02675869236561 * S_MntMeatProducts
2130434   +          +     0.00910121928187 * S_NumCatalogPurchases
2130435   +          +     0.20581491047897 * S_RFMstat  +    -0.18898725892086 *
2130436   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.36156584602692 * S_AcceptedCmpTotal + -3.37453529906718 * S_Mnt 
+ 1.02675869236561 * S_MntMeatProducts + 0.00910121928187 * S_NumCatalogPurchases + 
0.20581491047897 * S_RFMstat + -0.18898725892086 * S_Recency ;
2130437   +   H14  =    -0.14179052521941 * S_AcceptedCmpTotal  +     0.30769772196415 *
2130438   +        S_Mnt  +     0.17433696286114 * S_MntMeatProducts
2130439   +          +     0.12575078713396 * S_NumCatalogPurchases
2130440   +          +    -0.02826822167447 * S_RFMstat  +     0.28366844846854 *
2130441   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.14179052521941 * S_AcceptedCmpTotal + 0.30769772196415 * S_Mnt 
+ 0.17433696286114 * S_MntMeatProducts + 0.12575078713396 * S_NumCatalogPurchases + 
-0.02826822167447 * S_RFMstat + 0.28366844846854 * S_Recency ;
2130442   +   H15  =      0.0992610666113 * S_AcceptedCmpTotal  +    -0.08290546162861 *
2130443   +        S_Mnt  +     2.79374557573421 * S_MntMeatProducts
2130444   +          +     0.34145061374457 * S_NumCatalogPurchases
2130445   +          +     1.24642569428903 * S_RFMstat  +    -0.05791964822006 *
2130446   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.0992610666113 * S_AcceptedCmpTotal + -0.08290546162861 * S_Mnt + 
2.79374557573421 * S_MntMeatProducts + 0.34145061374457 * S_NumCatalogPurchases + 
1.24642569428903 * S_RFMstat + -0.05791964822006 * S_Recency ;
2130447   +   H16  =    -0.70732539360309 * S_AcceptedCmpTotal  +    -6.01133749430879 *
2130448   +        S_Mnt  +      2.7772635267037 * S_MntMeatProducts
2130449   +          +     3.89195901397454 * S_NumCatalogPurchases
2130450   +          +     -2.3989156332421 * S_RFMstat  +    -0.49366295107927 *
2130451   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.70732539360309 * S_AcceptedCmpTotal + -6.01133749430879 * S_Mnt 
+ 2.7772635267037 * S_MntMeatProducts + 3.89195901397454 * S_NumCatalogPurchases + 
-2.3989156332421 * S_RFMstat + -0.49366295107927 * S_Recency ;
2130452   +   H11  =     1.84373127923043 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.84373127923043 + H11 ;
2130453   +   H12  =     0.28145390491001 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.28145390491001 + H12 ;
2130454   +   H13  =    -2.13618632038915 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.13618632038915 + H13 ;
2130455   +   H14  =    -0.43724663060956 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.43724663060956 + H14 ;
2130456   +   H15  =     2.87870499074164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 2.87870499074164 + H15 ;
2130457   +   H16  =    -1.50303768685501 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.50303768685501 + H16 ;
2130458   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2130459   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2130460   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2130461   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2130462   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2130463   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2130464   +END;
MPRINT(EM_DIAGRAM):   END;
2130465   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130466   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2130467   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2130468   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2130469   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2130470   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2130471   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2130472   +END;
MPRINT(EM_DIAGRAM):   END;
2130473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130474   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2130475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130476   +
2130477   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2130478   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2130479   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2130480   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2130481   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2130482   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130483   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2130484   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130485   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130486   +end;
MPRINT(EM_DIAGRAM):   end;
2130487   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130488   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2130489   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2130490   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2130491   +   end;
MPRINT(EM_DIAGRAM):   end;
2130492   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2130493   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2130494   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2130495   +   end;
MPRINT(EM_DIAGRAM):   end;
2130496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130497   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130498   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130499   +   end;
MPRINT(EM_DIAGRAM):   end;
2130500   +end;
MPRINT(EM_DIAGRAM):   end;
2130501   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130502   +   P_DepVar1  =    -5.40879672831374 * H11  +    -2.30275649942132 * H12
2130503   +          +     3.92987383270932 * H13  +    -5.94814919610295 * H14
2130504   +          +      8.1691029468057 * H15  +     1.41618936614917 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.40879672831374 * H11 + -2.30275649942132 * H12 + 
3.92987383270932 * H13 + -5.94814919610295 * H14 + 8.1691029468057 * H15 + 1.41618936614917 * 
H16 ;
2130505   +   P_DepVar1  =    -3.18163491507868 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.18163491507868 + P_DepVar1 ;
2130506   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2130507   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2130508   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2130509   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2130510   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2130511   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2130512   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2130513   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2130514   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2130515   +END;
MPRINT(EM_DIAGRAM):   END;
2130516   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130517   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2130518   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2130519   +END;
MPRINT(EM_DIAGRAM):   END;
2130520   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2130521   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2130522   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2130523   +END;
MPRINT(EM_DIAGRAM):   END;
2130524   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2130525   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2130526   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2130527   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2130528   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2130529   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2130530   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2130531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130532   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2130533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130534   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2130535   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2130536   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2130537   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2130538   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2130539   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2130540   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2130541   +END;
MPRINT(EM_DIAGRAM):   END;
2130542   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130543   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2130544   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130545   +drop
2130546   +H11
2130547   +H12
2130548   +H13
2130549   +H14
2130550   +H15
2130551   +H16
2130552   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2130553   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2130554   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
2130555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130556   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
2130557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130558   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
2130559   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
2130560   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
2130561   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
2130562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130563   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
2130564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130565   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
2130566   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
2130567   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
2130568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130569   +* Ensmbl20: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 2 of 7;
2130570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130572   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2130573   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2130574   +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
2130575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130576   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130577   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2130578   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130579   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2130580   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2130581   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2130582   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2130583   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2130584   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2130585   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2130586   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2130587   +LENGTH _WARN_ $4
2130588   +      F_DepVar  $ 12
2130589   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2130590   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2130591   +
2130592   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2130593   +
2130594   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2130595   +
2130596   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2130597   +
2130598   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2130599   +
2130600   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2130601   +
2130602   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2130603   +
2130604   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2130605   +
2130606   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2130607   +
2130608   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2130609   +
2130610   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2130611   +
2130612   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2130613   +
2130614   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2130615   +
2130616   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2130617   +
2130618   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2130619   +
2130620   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2130621   +
2130622   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2130623   +
2130624   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2130625   +
2130626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130627   +*** Checking missing input Interval
2130628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2130629   +
2130630   +IF NMISS(
2130631   +   AcceptedCmpTotal ,
2130632   +   Mnt ,
2130633   +   MntMeatProducts ,
2130634   +   NumCatalogPurchases ,
2130635   +   RFMstat ,
2130636   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2130637   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2130638   +
2130639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130640   +END;
MPRINT(EM_DIAGRAM):   END;
2130641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130642   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2130643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130644   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130645   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130646   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2130647   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2130648   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2130649   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2130650   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2130651   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2130652   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130653   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130654   +END;
MPRINT(EM_DIAGRAM):   END;
2130655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130656   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2130657   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130658   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2130659   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2130660   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2130661   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2130662   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2130663   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2130664   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2130665   +   ELSE S_NumCatalogPurchases
2130666   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2130667   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2130668   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2130669   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130670   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2130671   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130672   +END;
MPRINT(EM_DIAGRAM):   END;
2130673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130674   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2130675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130676   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130677   +   H1x1_1  =     0.21234921669572 * S_AcceptedCmpTotal
2130678   +          +     0.01945817648377 * S_Mnt  +     0.10373621819131 *
2130679   +        S_MntMeatProducts  +     0.14724080002257 * S_NumCatalogPurchases
2130680   +          +     0.01465421656969 * S_RFMstat  +    -0.37839603073195 *
2130681   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.21234921669572 * S_AcceptedCmpTotal + 0.01945817648377 * 
S_Mnt + 0.10373621819131 * S_MntMeatProducts + 0.14724080002257 * S_NumCatalogPurchases + 
0.01465421656969 * S_RFMstat + -0.37839603073195 * S_Recency ;
2130682   +   H1x1_2  =      1.6456490248475 * S_AcceptedCmpTotal
2130683   +          +    -4.36126689821345 * S_Mnt  +    -5.34341350667797 *
2130684   +        S_MntMeatProducts  +    -0.50775340376834 * S_NumCatalogPurchases
2130685   +          +    -3.77547933008523 * S_RFMstat  +    -0.35687395481612 *
2130686   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.6456490248475 * S_AcceptedCmpTotal + -4.36126689821345 * 
S_Mnt + -5.34341350667797 * S_MntMeatProducts + -0.50775340376834 * S_NumCatalogPurchases + 
-3.77547933008523 * S_RFMstat + -0.35687395481612 * S_Recency ;
2130687   +   H1x1_3  =     2.25495773414966 * S_AcceptedCmpTotal
2130688   +          +     -11.006968240108 * S_Mnt  +     5.29014268166876 *
2130689   +        S_MntMeatProducts  +     1.38527755695319 * S_NumCatalogPurchases
2130690   +          +    -0.25229120510632 * S_RFMstat  +    -0.96545690161812 *
2130691   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.25495773414966 * S_AcceptedCmpTotal + -11.006968240108 * 
S_Mnt + 5.29014268166876 * S_MntMeatProducts + 1.38527755695319 * S_NumCatalogPurchases + 
-0.25229120510632 * S_RFMstat + -0.96545690161812 * S_Recency ;
2130692   +   H1x1_1  =    -1.44629643725438 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.44629643725438 + H1x1_1 ;
2130693   +   H1x1_2  =    -8.96045510766511 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -8.96045510766511 + H1x1_2 ;
2130694   +   H1x1_3  =    -3.43663513496723 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.43663513496723 + H1x1_3 ;
2130695   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2130696   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2130697   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2130698   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2130699   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2130700   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2130701   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2130702   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2130703   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2130704   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2130705   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2130706   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2130707   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2130708   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2130709   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2130710   +END;
MPRINT(EM_DIAGRAM):   END;
2130711   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130712   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2130713   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2130714   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2130715   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2130716   +END;
MPRINT(EM_DIAGRAM):   END;
2130717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130718   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2130719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130720   +
2130721   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2130722   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2130723   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2130724   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2130725   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2130726   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2130727   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2130728   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130729   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130730   +end;
MPRINT(EM_DIAGRAM):   end;
2130731   +else do;
MPRINT(EM_DIAGRAM):   else do;
2130732   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2130733   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2130734   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2130735   +   end;
MPRINT(EM_DIAGRAM):   end;
2130736   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2130737   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2130738   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2130739   +   end;
MPRINT(EM_DIAGRAM):   end;
2130740   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2130741   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2130742   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2130743   +   end;
MPRINT(EM_DIAGRAM):   end;
2130744   +end;
MPRINT(EM_DIAGRAM):   end;
2130745   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130746   +   P_DepVar1  =     15.9155817268417 * H1x1_1  +    -26.1877719603903 * H1x1_2
2130747   +          +     3.03900855168824 * H1x1_3  +    -8.12584282800012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.9155817268417 * H1x1_1 + -26.1877719603903 * H1x1_2 + 
3.03900855168824 * H1x1_3 + -8.12584282800012 * H1x1_4 ;
2130748   +   P_DepVar1  =    -0.43873072735423 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.43873072735423 + P_DepVar1 ;
2130749   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2130750   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2130751   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2130752   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2130753   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2130754   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2130755   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2130756   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2130757   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2130758   +END;
MPRINT(EM_DIAGRAM):   END;
2130759   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130760   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2130761   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2130762   +END;
MPRINT(EM_DIAGRAM):   END;
2130763   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2130764   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2130765   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2130766   +END;
MPRINT(EM_DIAGRAM):   END;
2130767   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2130768   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2130769   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2130770   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2130771   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2130772   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2130773   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2130774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130775   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2130776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130777   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2130778   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2130779   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2130780   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2130781   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2130782   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2130783   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2130784   +END;
MPRINT(EM_DIAGRAM):   END;
2130785   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130786   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2130787   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2130788   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2130789   +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
2130790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130791   +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
2130792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130793   +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
2130794   +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
2130795   +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
2130796   +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
2130797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130798   +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
2130799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130800   +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
2130801   +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
2130802   +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
2130803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130804   +* Ensmbl20: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 3 of 7;
2130805   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130807   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2130808   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2130809   +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
2130810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2130811   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130812   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2130813   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2130814   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2130815   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2130816   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2130817   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2130818   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2130819   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2130820   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2130821   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2130822   +LENGTH _WARN_ $4
2130823   +      F_DepVar  $ 12
2130824   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2130825   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2130826   +
2130827   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2130828   +
2130829   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2130830   +
2130831   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2130832   +
2130833   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2130834   +
2130835   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2130836   +
2130837   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2130838   +
2130839   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2130840   +
2130841   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2130842   +
2130843   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2130844   +
2130845   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2130846   +
2130847   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2130848   +
2130849   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2130850   +
2130851   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2130852   +
2130853   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2130854   +
2130855   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2130856   +
2130857   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2130858   +
2130859   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2130860   +
2130861   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2130862   +
2130863   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2130864   +
2130865   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2130866   +
2130867   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2130868   +
2130869   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2130870   +
2130871   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2130872   +
2130873   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2130874   +
2130875   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2130876   +
2130877   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2130878   +
2130879   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2130880   +
2130881   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2130882   +
2130883   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2130884   +
2130885   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2130886   +
2130887   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2130888   +
2130889   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2130890   +
2130891   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2130892   +
2130893   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2130894   +
2130895   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2130896   +
2130897   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2130898   +
2130899   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2130900   +
2130901   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2130902   +
2130903   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2130904   +
2130905   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2130906   +
2130907   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2130908   +
2130909   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2130910   +
2130911   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2130912   +
2130913   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2130914   +
2130915   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2130916   +
2130917   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2130918   +
2130919   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2130920   +
2130921   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2130922   +
2130923   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2130924   +
2130925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130926   +*** Checking missing input Interval
2130927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2130928   +
2130929   +IF NMISS(
2130930   +   AcceptedCmpTotal ,
2130931   +   Mnt ,
2130932   +   MntMeatProducts ,
2130933   +   NumCatalogPurchases ,
2130934   +   RFMstat ,
2130935   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2130936   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2130937   +
2130938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2130939   +END;
MPRINT(EM_DIAGRAM):   END;
2130940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130941   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2130942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130943   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130944   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130945   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2130946   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2130947   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2130948   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2130949   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2130950   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2130951   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130952   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130953   +END;
MPRINT(EM_DIAGRAM):   END;
2130954   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2130955   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2130956   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2130957   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2130958   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2130959   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2130960   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2130961   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2130962   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2130963   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2130964   +   ELSE S_NumCatalogPurchases
2130965   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2130966   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2130967   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2130968   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2130969   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2130970   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2130971   +END;
MPRINT(EM_DIAGRAM):   END;
2130972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130973   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2130974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2130975   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2130976   +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
2130977   +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
2130978   +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
2130979   +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
2130980   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 * 
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases + 
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
2130981   +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
2130982   +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
2130983   +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
2130984   +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
2130985   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 * 
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases + 
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
2130986   +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
2130987   +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
2130988   +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
2130989   +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
2130990   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 * 
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases + 
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
2130991   +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
2130992   +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
2130993   +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
2130994   +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
2130995   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 * 
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases + 
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
2130996   +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
2130997   +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
2130998   +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
2130999   +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
2131000   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 * 
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases + 
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
2131001   +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
2131002   +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
2131003   +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
2131004   +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
2131005   +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
2131006   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2131007   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2131008   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2131009   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2131010   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2131011   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2131012   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2131013   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2131014   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2131015   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2131016   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2131017   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2131018   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2131019   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2131020   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2131021   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2131022   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2131023   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2131024   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2131025   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2131026   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2131027   +END;
MPRINT(EM_DIAGRAM):   END;
2131028   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131029   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2131030   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2131031   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2131032   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2131033   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2131034   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2131035   +END;
MPRINT(EM_DIAGRAM):   END;
2131036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131037   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2131038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131039   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131040   +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
2131041   +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
2131042   +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
2131043   +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
2131044   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 * 
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases + 
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
2131045   +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
2131046   +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
2131047   +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
2131048   +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
2131049   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 * 
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases + 
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
2131050   +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
2131051   +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
2131052   +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
2131053   +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
2131054   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 * 
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases + 
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
2131055   +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
2131056   +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
2131057   +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
2131058   +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
2131059   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 * 
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases + 
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
2131060   +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
2131061   +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
2131062   +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
2131063   +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
2131064   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 * 
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases + 
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
2131065   +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
2131066   +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
2131067   +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
2131068   +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
2131069   +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
2131070   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2131071   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2131072   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2131073   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2131074   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2131075   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2131076   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2131077   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2131078   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2131079   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2131080   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2131081   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2131082   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2131083   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2131084   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2131085   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2131086   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2131087   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2131088   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2131089   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2131090   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2131091   +END;
MPRINT(EM_DIAGRAM):   END;
2131092   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131093   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2131094   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2131095   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2131096   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2131097   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2131098   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2131099   +END;
MPRINT(EM_DIAGRAM):   END;
2131100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131101   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2131102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131103   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131104   +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
2131105   +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
2131106   +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
2131107   +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
2131108   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 * 
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases + 
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
2131109   +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
2131110   +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
2131111   +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
2131112   +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
2131113   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 * 
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases + 
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
2131114   +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
2131115   +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
2131116   +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
2131117   +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
2131118   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 * 
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases + 
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
2131119   +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
2131120   +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
2131121   +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
2131122   +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
2131123   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 * 
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases + 
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
2131124   +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
2131125   +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
2131126   +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
2131127   +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
2131128   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 * 
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases + 
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
2131129   +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
2131130   +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
2131131   +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
2131132   +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
2131133   +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
2131134   +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
2131135   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
2131136   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2131137   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2131138   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2131139   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2131140   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2131141   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2131142   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2131143   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2131144   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2131145   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2131146   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2131147   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2131148   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2131149   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2131150   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2131151   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2131152   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2131153   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2131154   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2131155   +END;
MPRINT(EM_DIAGRAM):   END;
2131156   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131157   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2131158   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2131159   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2131160   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2131161   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2131162   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2131163   +END;
MPRINT(EM_DIAGRAM):   END;
2131164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131165   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2131166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131168   +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
2131169   +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
2131170   +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 + 
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 + 
0.22872788371043 * H1x1_6 ;
2131171   +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
2131172   +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
2131173   +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 + 
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 + 
1.4617930846853 * H1x1_6 ;
2131174   +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
2131175   +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
2131176   +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 + 
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 + 
-1.0098240718302 * H1x1_6 ;
2131177   +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
2131178   +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
2131179   +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 + 
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 + 
0.11106499550345 * H1x1_6 ;
2131180   +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
2131181   +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
2131182   +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 + 
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 + 
3.51037817476003 * H1x1_6 ;
2131183   +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
2131184   +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
2131185   +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 + 
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 + 
-1.84413878989067 * H1x1_6 ;
2131186   +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
2131187   +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
2131188   +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
2131189   +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 * 
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 + 
-0.96627475596267 * H1x2_6 ;
2131190   +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
2131191   +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
2131192   +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
2131193   +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2 
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 + 
0.09804477894859 * H1x2_6 ;
2131194   +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
2131195   +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
2131196   +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
2131197   +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 * 
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 + 
-0.10095907241792 * H1x2_6 ;
2131198   +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
2131199   +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
2131200   +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
2131201   +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 + 
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 + 
-0.78007016861264 * H1x2_6 ;
2131202   +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
2131203   +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
2131204   +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
2131205   +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2 
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 + 
1.95855676074934 * H1x2_6 ;
2131206   +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
2131207   +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
2131208   +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
2131209   +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2 
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 + 
-1.4251132059225 * H1x2_6 ;
2131210   +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
2131211   +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
2131212   +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
2131213   +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2 
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 + 
0.38481934719452 * H1x3_6 ;
2131214   +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
2131215   +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
2131216   +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
2131217   +          +     1.87596859340821 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2 
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 + 
1.87596859340821 * H1x3_6 ;
2131218   +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
2131219   +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
2131220   +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
2131221   +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2 
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 + 
0.20457555210609 * H1x3_6 ;
2131222   +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
2131223   +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
2131224   +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
2131225   +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2 
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 + 
1.76488988390401 * H1x3_6 ;
2131226   +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
2131227   +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
2131228   +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
2131229   +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2 
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 + 
1.63202351822216 * H1x3_6 ;
2131230   +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
2131231   +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
2131232   +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
2131233   +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2 
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 + 
-0.75070900812889 * H1x3_6 ;
2131234   +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
2131235   +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
2131236   +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
2131237   +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
2131238   +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
2131239   +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
2131240   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2131241   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2131242   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2131243   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2131244   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2131245   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2131246   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2131247   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2131248   +END;
MPRINT(EM_DIAGRAM):   END;
2131249   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131250   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2131251   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2131252   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2131253   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2131254   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2131255   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2131256   +END;
MPRINT(EM_DIAGRAM):   END;
2131257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131258   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2131259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131260   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131261   +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
2131262   +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
2131263   +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 + 
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 + 
0.35027369588915 * H1x1_6 ;
2131264   +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
2131265   +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
2131266   +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 + 
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 + 
-0.75991454790943 * H1x1_6 ;
2131267   +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
2131268   +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
2131269   +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 + 
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 + 
-0.17010696636548 * H1x1_6 ;
2131270   +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
2131271   +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
2131272   +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 + 
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 + 
2.49695921665153 * H1x1_6 ;
2131273   +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
2131274   +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
2131275   +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 + 
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 + 
-1.97247962280317 * H1x1_6 ;
2131276   +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
2131277   +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
2131278   +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 + 
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 + 
0.90300533681641 * H1x1_6 ;
2131279   +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
2131280   +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
2131281   +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
2131282   +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 * 
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 + 
-1.39994531215362 * H1x2_6 ;
2131283   +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
2131284   +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
2131285   +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
2131286   +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2 
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 + 
-0.40444669273525 * H1x2_6 ;
2131287   +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
2131288   +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
2131289   +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
2131290   +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 + 
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 + 
-2.38736049861996 * H1x2_6 ;
2131291   +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
2131292   +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
2131293   +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
2131294   +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 * 
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 + 
0.02632878191094 * H1x2_6 ;
2131295   +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
2131296   +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
2131297   +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
2131298   +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2 
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 + 
0.79706245066425 * H1x2_6 ;
2131299   +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
2131300   +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
2131301   +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
2131302   +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2 
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 + 
1.96032751350518 * H1x2_6 ;
2131303   +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
2131304   +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
2131305   +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
2131306   +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2 
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 + 
0.86372067144364 * H1x3_6 ;
2131307   +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
2131308   +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
2131309   +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
2131310   +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2 
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 + 
0.80254310887989 * H1x3_6 ;
2131311   +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
2131312   +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
2131313   +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
2131314   +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2 
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 + 
-0.80961698509146 * H1x3_6 ;
2131315   +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
2131316   +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
2131317   +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
2131318   +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2 
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 + 
-1.29909553454934 * H1x3_6 ;
2131319   +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
2131320   +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
2131321   +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
2131322   +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 * 
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 + 
0.3854653698129 * H1x3_6 ;
2131323   +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
2131324   +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
2131325   +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
2131326   +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2 
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 + 
-0.43429796112944 * H1x3_6 ;
2131327   +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
2131328   +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
2131329   +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
2131330   +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
2131331   +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
2131332   +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
2131333   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2131334   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2131335   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2131336   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
2131337   +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
2131338   +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
2131339   +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
2131340   +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
2131341   +END;
MPRINT(EM_DIAGRAM):   END;
2131342   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131343   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2131344   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2131345   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2131346   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2131347   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2131348   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2131349   +END;
MPRINT(EM_DIAGRAM):   END;
2131350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131351   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2131352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131353   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131354   +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
2131355   +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
2131356   +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 + 
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 + 
-1.05088304858423 * H2x1_6 ;
2131357   +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
2131358   +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
2131359   +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 + 
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 + 
0.87150445612099 * H2x1_6 ;
2131360   +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
2131361   +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
2131362   +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 + 
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 + 
2.18013446750751 * H2x1_6 ;
2131363   +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
2131364   +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
2131365   +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 + 
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 + 
0.08630071934474 * H2x1_6 ;
2131366   +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
2131367   +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
2131368   +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 + 
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 + 
2.78368081292476 * H2x1_6 ;
2131369   +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
2131370   +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
2131371   +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 + 
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 + 
1.64288571863932 * H2x1_6 ;
2131372   +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
2131373   +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
2131374   +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
2131375   +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 * 
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 + 
0.35216486042215 * H2x2_6 ;
2131376   +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
2131377   +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
2131378   +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
2131379   +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2 
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 + 
-0.91648595761636 * H2x2_6 ;
2131380   +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
2131381   +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
2131382   +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
2131383   +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2 
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 + 
-2.11281855575499 * H2x2_6 ;
2131384   +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
2131385   +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
2131386   +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
2131387   +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2 
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 + 
0.57305821692201 * H2x2_6 ;
2131388   +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
2131389   +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
2131390   +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
2131391   +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2 
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 + 
2.06401699674057 * H2x2_6 ;
2131392   +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
2131393   +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
2131394   +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
2131395   +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2 
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 + 
0.08850124295188 * H2x2_6 ;
2131396   +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
2131397   +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
2131398   +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
2131399   +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
2131400   +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
2131401   +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
2131402   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2131403   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2131404   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2131405   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2131406   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2131407   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2131408   +END;
MPRINT(EM_DIAGRAM):   END;
2131409   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131410   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2131411   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2131412   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2131413   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2131414   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2131415   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2131416   +END;
MPRINT(EM_DIAGRAM):   END;
2131417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131418   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2131419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131420   +
2131421   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2131422   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2131423   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2131424   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2131425   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2131426   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131427   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2131428   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2131429   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2131430   +end;
MPRINT(EM_DIAGRAM):   end;
2131431   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131432   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2131433   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2131434   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2131435   +   end;
MPRINT(EM_DIAGRAM):   end;
2131436   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2131437   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2131438   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2131439   +   end;
MPRINT(EM_DIAGRAM):   end;
2131440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131441   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2131442   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2131443   +   end;
MPRINT(EM_DIAGRAM):   end;
2131444   +end;
MPRINT(EM_DIAGRAM):   end;
2131445   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131446   +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
2131447   +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
2131448   +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 + 
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 + 
-1.83744247169269 * H3x1_6 ;
2131449   +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
2131450   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2131451   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2131452   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2131453   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2131454   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2131455   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2131456   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2131457   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2131458   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2131459   +END;
MPRINT(EM_DIAGRAM):   END;
2131460   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131461   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2131462   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2131463   +END;
MPRINT(EM_DIAGRAM):   END;
2131464   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2131465   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2131466   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2131467   +END;
MPRINT(EM_DIAGRAM):   END;
2131468   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2131469   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2131470   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2131471   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2131472   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2131473   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2131474   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2131475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131476   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2131477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131478   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2131479   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2131480   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2131481   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2131482   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2131483   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2131484   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2131485   +END;
MPRINT(EM_DIAGRAM):   END;
2131486   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131487   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2131488   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131489   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2131490   +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
2131491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131492   +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
2131493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131494   +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
2131495   +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
2131496   +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
2131497   +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
2131498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131499   +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
2131500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131501   +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
2131502   +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
2131503   +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
2131504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131505   +* Ensmbl20: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 4 of 7;
2131506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131508   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2131509   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2131510   +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
2131511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131512   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131513   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2131514   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131515   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2131516   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2131517   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2131518   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2131519   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2131520   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2131521   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2131522   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2131523   +LENGTH _WARN_ $4
2131524   +      F_DepVar  $ 12
2131525   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2131526   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2131527   +
2131528   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2131529   +
2131530   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2131531   +
2131532   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2131533   +
2131534   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2131535   +
2131536   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2131537   +
2131538   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2131539   +
2131540   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2131541   +
2131542   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2131543   +
2131544   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2131545   +
2131546   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2131547   +
2131548   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2131549   +
2131550   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2131551   +
2131552   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2131553   +
2131554   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2131555   +
2131556   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2131557   +
2131558   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2131559   +
2131560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131561   +*** Checking missing input Interval
2131562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2131563   +
2131564   +IF NMISS(
2131565   +   AcceptedCmpTotal ,
2131566   +   Mnt ,
2131567   +   MntMeatProducts ,
2131568   +   NumCatalogPurchases ,
2131569   +   RFMstat ,
2131570   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2131571   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2131572   +
2131573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131574   +END;
MPRINT(EM_DIAGRAM):   END;
2131575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131576   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2131577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131578   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131579   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2131580   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2131581   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2131582   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2131583   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2131584   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2131585   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2131586   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2131587   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2131588   +END;
MPRINT(EM_DIAGRAM):   END;
2131589   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131590   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2131591   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2131592   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2131593   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2131594   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2131595   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2131596   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2131597   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2131598   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2131599   +   ELSE S_NumCatalogPurchases
2131600   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2131601   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2131602   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2131603   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2131604   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2131605   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2131606   +END;
MPRINT(EM_DIAGRAM):   END;
2131607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131608   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2131609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131610   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131611   +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
2131612   +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
2131613   +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
2131614   +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
2131615   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 * 
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases + 
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
2131616   +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
2131617   +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
2131618   +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
2131619   +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
2131620   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 * 
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases + 
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
2131621   +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
2131622   +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
2131623   +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
2131624   +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
2131625   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 * 
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases + 
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
2131626   +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
2131627   +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
2131628   +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
2131629   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2131630   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2131631   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2131632   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2131633   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2131634   +END;
MPRINT(EM_DIAGRAM):   END;
2131635   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131636   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2131637   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2131638   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2131639   +END;
MPRINT(EM_DIAGRAM):   END;
2131640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131641   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2131642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131643   +
2131644   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2131645   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2131646   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2131647   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2131648   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2131649   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131650   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2131651   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2131652   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2131653   +end;
MPRINT(EM_DIAGRAM):   end;
2131654   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131655   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2131656   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2131657   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2131658   +   end;
MPRINT(EM_DIAGRAM):   end;
2131659   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2131660   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2131661   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2131662   +   end;
MPRINT(EM_DIAGRAM):   end;
2131663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131664   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2131665   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2131666   +   end;
MPRINT(EM_DIAGRAM):   end;
2131667   +end;
MPRINT(EM_DIAGRAM):   end;
2131668   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131669   +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
2131670   +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 + 
2.67685271681444 * H1x1_3 ;
2131671   +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
2131672   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2131673   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2131674   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2131675   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2131676   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2131677   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2131678   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2131679   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2131680   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2131681   +END;
MPRINT(EM_DIAGRAM):   END;
2131682   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131683   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2131684   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2131685   +END;
MPRINT(EM_DIAGRAM):   END;
2131686   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2131687   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2131688   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2131689   +END;
MPRINT(EM_DIAGRAM):   END;
2131690   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2131691   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2131692   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2131693   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2131694   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2131695   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2131696   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2131697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131698   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2131699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131700   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2131701   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2131702   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2131703   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2131704   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2131705   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2131706   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2131707   +END;
MPRINT(EM_DIAGRAM):   END;
2131708   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131709   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2131710   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131711   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2131712   +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
2131713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131714   +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
2131715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131716   +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
2131717   +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
2131718   +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
2131719   +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
2131720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131721   +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
2131722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131723   +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
2131724   +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
2131725   +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
2131726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131727   +* Ensmbl20: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 5 of 7;
2131728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131730   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2131731   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2131732   +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
2131733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131734   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131735   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2131736   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131737   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2131738   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2131739   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2131740   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2131741   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2131742   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2131743   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2131744   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2131745   +LENGTH _WARN_ $4
2131746   +      F_DepVar  $ 12
2131747   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2131748   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2131749   +
2131750   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2131751   +
2131752   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2131753   +
2131754   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2131755   +
2131756   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2131757   +
2131758   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2131759   +
2131760   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2131761   +
2131762   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2131763   +
2131764   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2131765   +
2131766   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2131767   +
2131768   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2131769   +
2131770   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2131771   +
2131772   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2131773   +
2131774   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2131775   +
2131776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131777   +*** Checking missing input Interval
2131778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2131779   +
2131780   +IF NMISS(
2131781   +   AcceptedCmpTotal ,
2131782   +   Mnt ,
2131783   +   MntMeatProducts ,
2131784   +   NumCatalogPurchases ,
2131785   +   RFMstat ,
2131786   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2131787   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2131788   +
2131789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131790   +END;
MPRINT(EM_DIAGRAM):   END;
2131791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131792   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2131793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131794   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131795   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2131796   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2131797   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2131798   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2131799   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2131800   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2131801   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2131802   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2131803   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2131804   +END;
MPRINT(EM_DIAGRAM):   END;
2131805   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131806   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2131807   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2131808   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2131809   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2131810   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2131811   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2131812   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2131813   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2131814   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2131815   +   ELSE S_NumCatalogPurchases
2131816   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2131817   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2131818   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2131819   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2131820   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2131821   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2131822   +END;
MPRINT(EM_DIAGRAM):   END;
2131823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131824   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2131825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131826   +
2131827   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2131828   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2131829   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2131830   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2131831   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2131832   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2131833   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2131834   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2131835   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2131836   +end;
MPRINT(EM_DIAGRAM):   end;
2131837   +else do;
MPRINT(EM_DIAGRAM):   else do;
2131838   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2131839   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2131840   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2131841   +   end;
MPRINT(EM_DIAGRAM):   end;
2131842   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2131843   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2131844   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2131845   +   end;
MPRINT(EM_DIAGRAM):   end;
2131846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2131847   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2131848   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2131849   +   end;
MPRINT(EM_DIAGRAM):   end;
2131850   +end;
MPRINT(EM_DIAGRAM):   end;
2131851   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131852   +   P_DepVar1  =     1.05169539250812 * S_AcceptedCmpTotal
2131853   +          +    -1.01535799807127 * S_Mnt  +     0.90249216466184 *
2131854   +        S_MntMeatProducts  +     0.55600820704456 * S_NumCatalogPurchases
2131855   +          +     0.11616609536854 * S_RFMstat  +    -1.16391829324819 *
2131856   +        S_Recency ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.05169539250812 * S_AcceptedCmpTotal + -1.01535799807127 * 
S_Mnt + 0.90249216466184 * S_MntMeatProducts + 0.55600820704456 * S_NumCatalogPurchases + 
0.11616609536854 * S_RFMstat + -1.16391829324819 * S_Recency ;
2131857   +   P_DepVar1  =    -2.23938090727264 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23938090727264 + P_DepVar1 ;
2131858   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2131859   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2131860   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2131861   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2131862   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2131863   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2131864   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2131865   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2131866   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2131867   +END;
MPRINT(EM_DIAGRAM):   END;
2131868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2131869   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2131870   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2131871   +END;
MPRINT(EM_DIAGRAM):   END;
2131872   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2131873   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2131874   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2131875   +END;
MPRINT(EM_DIAGRAM):   END;
2131876   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2131877   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2131878   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2131879   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2131880   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2131881   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2131882   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2131883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131884   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2131885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131886   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2131887   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2131888   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2131889   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2131890   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2131891   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2131892   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2131893   +END;
MPRINT(EM_DIAGRAM):   END;
2131894   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131895   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2131896   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2131897   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2131898   +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
2131899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131900   +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
2131901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131902   +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
2131903   +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
2131904   +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
2131905   +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
2131906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131907   +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
2131908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131909   +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
2131910   +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
2131911   +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
2131912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131913   +* Ensmbl20: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 6 of 7;
2131914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131916   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2131917   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2131918   +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
2131919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2131920   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131921   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2131922   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2131923   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2131924   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2131925   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2131926   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2131927   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2131928   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2131929   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2131930   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2131931   +LENGTH _WARN_ $4
2131932   +      F_DepVar  $ 12
2131933   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2131934   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2131935   +
2131936   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2131937   +
2131938   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2131939   +
2131940   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2131941   +
2131942   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2131943   +
2131944   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2131945   +
2131946   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2131947   +
2131948   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2131949   +
2131950   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2131951   +
2131952   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2131953   +
2131954   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2131955   +
2131956   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2131957   +
2131958   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2131959   +
2131960   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2131961   +
2131962   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2131963   +
2131964   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2131965   +
2131966   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2131967   +
2131968   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2131969   +
2131970   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2131971   +
2131972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131973   +*** Checking missing input Interval
2131974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2131975   +
2131976   +IF NMISS(
2131977   +   AcceptedCmpTotal ,
2131978   +   Mnt ,
2131979   +   MntMeatProducts ,
2131980   +   NumCatalogPurchases ,
2131981   +   RFMstat ,
2131982   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2131983   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2131984   +
2131985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2131986   +END;
MPRINT(EM_DIAGRAM):   END;
2131987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131988   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2131989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2131990   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2131991   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2131992   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2131993   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2131994   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2131995   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2131996   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2131997   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2131998   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2131999   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132000   +END;
MPRINT(EM_DIAGRAM):   END;
2132001   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132002   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2132003   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2132004   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2132005   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2132006   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2132007   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2132008   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2132009   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2132010   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2132011   +   ELSE S_NumCatalogPurchases
2132012   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2132013   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2132014   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2132015   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2132016   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2132017   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132018   +END;
MPRINT(EM_DIAGRAM):   END;
2132019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132020   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2132021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132022   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132023   +   H11  =    -0.26722164464712 * S_AcceptedCmpTotal  +     0.04075768430183 *
2132024   +        S_Mnt  +    -0.14387744951395 * S_MntMeatProducts
2132025   +          +    -0.27306285421769 * S_NumCatalogPurchases
2132026   +          +    -0.08264228402157 * S_RFMstat  +     0.65480854062399 *
2132027   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.26722164464712 * S_AcceptedCmpTotal + 0.04075768430183 * S_Mnt 
+ -0.14387744951395 * S_MntMeatProducts + -0.27306285421769 * S_NumCatalogPurchases + 
-0.08264228402157 * S_RFMstat + 0.65480854062399 * S_Recency ;
2132028   +   H12  =    -0.75351416084046 * S_AcceptedCmpTotal  +     0.52277401008012 *
2132029   +        S_Mnt  +    -0.54516413990982 * S_MntMeatProducts
2132030   +          +     -0.0686127004799 * S_NumCatalogPurchases
2132031   +          +     0.08512116766951 * S_RFMstat  +     0.81359799950451 *
2132032   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.75351416084046 * S_AcceptedCmpTotal + 0.52277401008012 * S_Mnt 
+ -0.54516413990982 * S_MntMeatProducts + -0.0686127004799 * S_NumCatalogPurchases + 
0.08512116766951 * S_RFMstat + 0.81359799950451 * S_Recency ;
2132033   +   H13  =     0.02955098348281 * S_AcceptedCmpTotal  +    -0.14081493335567 *
2132034   +        S_Mnt  +    -2.75813103631938 * S_MntMeatProducts
2132035   +          +    -0.74712508136294 * S_NumCatalogPurchases
2132036   +          +    -0.79352948307239 * S_RFMstat  +     0.03918291142705 *
2132037   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.02955098348281 * S_AcceptedCmpTotal + -0.14081493335567 * S_Mnt 
+ -2.75813103631938 * S_MntMeatProducts + -0.74712508136294 * S_NumCatalogPurchases + 
-0.79352948307239 * S_RFMstat + 0.03918291142705 * S_Recency ;
2132038   +   H14  =     0.75907858324573 * S_AcceptedCmpTotal  +     1.38211517497076 *
2132039   +        S_Mnt  +     1.18060955375477 * S_MntMeatProducts
2132040   +          +    -0.37728172570087 * S_NumCatalogPurchases
2132041   +          +    -2.76202813274234 * S_RFMstat  +    -0.15842857977636 *
2132042   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.75907858324573 * S_AcceptedCmpTotal + 1.38211517497076 * S_Mnt + 
1.18060955375477 * S_MntMeatProducts + -0.37728172570087 * S_NumCatalogPurchases + 
-2.76202813274234 * S_RFMstat + -0.15842857977636 * S_Recency ;
2132043   +   H15  =    -0.16016600226913 * S_AcceptedCmpTotal  +     2.47052363890196 *
2132044   +        S_Mnt  +    -0.91872569099803 * S_MntMeatProducts
2132045   +          +    -0.10767997671599 * S_NumCatalogPurchases
2132046   +          +     0.11268223210579 * S_RFMstat  +     0.08646017290432 *
2132047   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.16016600226913 * S_AcceptedCmpTotal + 2.47052363890196 * S_Mnt 
+ -0.91872569099803 * S_MntMeatProducts + -0.10767997671599 * S_NumCatalogPurchases + 
0.11268223210579 * S_RFMstat + 0.08646017290432 * S_Recency ;
2132048   +   H11  =     1.70904496773549 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.70904496773549 + H11 ;
2132049   +   H12  =    -0.75066885844141 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.75066885844141 + H12 ;
2132050   +   H13  =    -3.06547429791923 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.06547429791923 + H13 ;
2132051   +   H14  =    -0.30791973300056 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.30791973300056 + H14 ;
2132052   +   H15  =     1.39876187284436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.39876187284436 + H15 ;
2132053   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2132054   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2132055   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2132056   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2132057   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2132058   +END;
MPRINT(EM_DIAGRAM):   END;
2132059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132060   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2132061   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2132062   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2132063   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2132064   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2132065   +END;
MPRINT(EM_DIAGRAM):   END;
2132066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132067   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2132068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132069   +
2132070   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2132071   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2132072   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2132073   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2132074   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2132075   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132076   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2132077   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2132078   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2132079   +end;
MPRINT(EM_DIAGRAM):   end;
2132080   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132081   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2132082   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2132083   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2132084   +   end;
MPRINT(EM_DIAGRAM):   end;
2132085   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2132086   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2132087   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2132088   +   end;
MPRINT(EM_DIAGRAM):   end;
2132089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132090   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2132091   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2132092   +   end;
MPRINT(EM_DIAGRAM):   end;
2132093   +end;
MPRINT(EM_DIAGRAM):   end;
2132094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132095   +   P_DepVar1  =    -4.85125437606138 * H11  +    -2.45566607820423 * H12
2132096   +          +    -5.91091097658466 * H13  +     1.06755367873748 * H14
2132097   +          +    -5.85018554594302 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.85125437606138 * H11 + -2.45566607820423 * H12 + 
-5.91091097658466 * H13 + 1.06755367873748 * H14 + -5.85018554594302 * H15 ;
2132098   +   P_DepVar1  =    -0.91583665378719 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.91583665378719 + P_DepVar1 ;
2132099   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2132100   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2132101   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2132102   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2132103   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2132104   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2132105   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2132106   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2132107   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2132108   +END;
MPRINT(EM_DIAGRAM):   END;
2132109   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132110   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2132111   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2132112   +END;
MPRINT(EM_DIAGRAM):   END;
2132113   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2132114   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2132115   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2132116   +END;
MPRINT(EM_DIAGRAM):   END;
2132117   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2132118   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2132119   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2132120   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2132121   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2132122   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2132123   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2132124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132125   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2132126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132127   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2132128   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2132129   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2132130   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2132131   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2132132   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2132133   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2132134   +END;
MPRINT(EM_DIAGRAM):   END;
2132135   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132136   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2132137   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132138   +drop
2132139   +H11
2132140   +H12
2132141   +H13
2132142   +H14
2132143   +H15
2132144   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2132145   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2132146   +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
2132147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132148   +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
2132149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132150   +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
2132151   +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
2132152   +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
2132153   +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
2132154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132155   +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
2132156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132157   +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
2132158   +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
2132159   +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
2132160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132161   +* Ensmbl20: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Scoring Code of model 7 of 7;
2132162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132164   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2132165   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2132166   +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
2132167   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132168   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2132169   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2132170   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2132171   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2132172   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2132173   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2132174   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2132175   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2132176   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2132177   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2132178   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2132179   +LENGTH _WARN_ $4
2132180   +      F_DepVar  $ 12
2132181   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2132182   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2132183   +
2132184   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2132185   +
2132186   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2132187   +
2132188   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2132189   +
2132190   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2132191   +
2132192   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2132193   +
2132194   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2132195   +
2132196   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2132197   +
2132198   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2132199   +
2132200   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2132201   +
2132202   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2132203   +
2132204   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2132205   +
2132206   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2132207   +
2132208   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2132209   +
2132210   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2132211   +
2132212   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2132213   +
2132214   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2132215   +
2132216   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2132217   +
2132218   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2132219   +
2132220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132221   +*** Checking missing input Interval
2132222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2132223   +
2132224   +IF NMISS(
2132225   +   AcceptedCmpTotal ,
2132226   +   Mnt ,
2132227   +   MntMeatProducts ,
2132228   +   NumCatalogPurchases ,
2132229   +   RFMstat ,
2132230   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2132231   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2132232   +
2132233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132234   +END;
MPRINT(EM_DIAGRAM):   END;
2132235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132236   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2132237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132238   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132239   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2132240   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2132241   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2132242   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2132243   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2132244   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2132245   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2132246   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2132247   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132248   +END;
MPRINT(EM_DIAGRAM):   END;
2132249   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132250   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2132251   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2132252   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2132253   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2132254   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2132255   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2132256   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2132257   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2132258   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2132259   +   ELSE S_NumCatalogPurchases
2132260   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2132261   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2132262   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2132263   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2132264   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2132265   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132266   +END;
MPRINT(EM_DIAGRAM):   END;
2132267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132268   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2132269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132270   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132271   +   H1x1_1  =     0.20171954292418 * S_AcceptedCmpTotal
2132272   +          +     0.29079116229788 * S_Mnt  +     0.23711535602944 *
2132273   +        S_MntMeatProducts  +     0.42529081995564 * S_NumCatalogPurchases
2132274   +          +     0.18062808343642 * S_RFMstat  +    -0.63318995037874 *
2132275   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.20171954292418 * S_AcceptedCmpTotal + 0.29079116229788 * 
S_Mnt + 0.23711535602944 * S_MntMeatProducts + 0.42529081995564 * S_NumCatalogPurchases + 
0.18062808343642 * S_RFMstat + -0.63318995037874 * S_Recency ;
2132276   +   H1x1_2  =    -1.98920342874828 * S_AcceptedCmpTotal
2132277   +          +      10.493361229847 * S_Mnt  +    -5.26684519238396 *
2132278   +        S_MntMeatProducts  +     -1.3815052580097 * S_NumCatalogPurchases
2132279   +          +     0.33275103937215 * S_RFMstat  +     0.91614898624506 *
2132280   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.98920342874828 * S_AcceptedCmpTotal + 10.493361229847 * 
S_Mnt + -5.26684519238396 * S_MntMeatProducts + -1.3815052580097 * S_NumCatalogPurchases + 
0.33275103937215 * S_RFMstat + 0.91614898624506 * S_Recency ;
2132281   +   H1x1_3  =     0.73206551950569 * S_AcceptedCmpTotal
2132282   +          +    -1.01976407347302 * S_Mnt  +    -1.13350661445888 *
2132283   +        S_MntMeatProducts  +    -0.07125936639892 * S_NumCatalogPurchases
2132284   +          +    -0.39616853923675 * S_RFMstat  +    -0.82914022268456 *
2132285   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.73206551950569 * S_AcceptedCmpTotal + -1.01976407347302 * 
S_Mnt + -1.13350661445888 * S_MntMeatProducts + -0.07125936639892 * S_NumCatalogPurchases + 
-0.39616853923675 * S_RFMstat + -0.82914022268456 * S_Recency ;
2132286   +   H1x1_4  =    -0.34492981088566 * S_AcceptedCmpTotal
2132287   +          +     1.21190291017614 * S_Mnt  +    -8.17509176920502 *
2132288   +        S_MntMeatProducts  +    -1.48783679196456 * S_NumCatalogPurchases
2132289   +          +     -0.9509465201423 * S_RFMstat  +     0.48054774355638 *
2132290   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34492981088566 * S_AcceptedCmpTotal + 1.21190291017614 * 
S_Mnt + -8.17509176920502 * S_MntMeatProducts + -1.48783679196456 * S_NumCatalogPurchases + 
-0.9509465201423 * S_RFMstat + 0.48054774355638 * S_Recency ;
2132291   +   H1x1_5  =    -1.52519083391934 * S_AcceptedCmpTotal
2132292   +          +    -3.64608769152407 * S_Mnt  +    -6.52923883290239 *
2132293   +        S_MntMeatProducts  +      2.7900190963798 * S_NumCatalogPurchases
2132294   +          +     4.27091451171932 * S_RFMstat  +     2.19744854544492 *
2132295   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.52519083391934 * S_AcceptedCmpTotal + -3.64608769152407 * 
S_Mnt + -6.52923883290239 * S_MntMeatProducts + 2.7900190963798 * S_NumCatalogPurchases + 
4.27091451171932 * S_RFMstat + 2.19744854544492 * S_Recency ;
2132296   +   H1x1_1  =    -3.14760700594037 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.14760700594037 + H1x1_1 ;
2132297   +   H1x1_2  =     3.74367981551949 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.74367981551949 + H1x1_2 ;
2132298   +   H1x1_3  =     0.87862388051597 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87862388051597 + H1x1_3 ;
2132299   +   H1x1_4  =    -7.01266539803621 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.01266539803621 + H1x1_4 ;
2132300   +   H1x1_5  =     4.82694309436143 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.82694309436143 + H1x1_5 ;
2132301   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2132302   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2132303   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2132304   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2132305   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2132306   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2132307   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2132308   +END;
MPRINT(EM_DIAGRAM):   END;
2132309   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132310   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2132311   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2132312   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2132313   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2132314   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2132315   +END;
MPRINT(EM_DIAGRAM):   END;
2132316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132317   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2132318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132319   +
2132320   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2132321   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2132322   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2132323   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2132324   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2132325   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2132326   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2132327   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2132328   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2132329   +end;
MPRINT(EM_DIAGRAM):   end;
2132330   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132331   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2132332   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2132333   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2132334   +   end;
MPRINT(EM_DIAGRAM):   end;
2132335   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2132336   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2132337   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2132338   +   end;
MPRINT(EM_DIAGRAM):   end;
2132339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2132340   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2132341   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2132342   +   end;
MPRINT(EM_DIAGRAM):   end;
2132343   +end;
MPRINT(EM_DIAGRAM):   end;
2132344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132345   +   P_DepVar1  =     15.5046788281633 * H1x1_1  +    -4.66397711541227 * H1x1_2
2132346   +          +     4.82395074522384 * H1x1_3  +    -12.9633946998053 * H1x1_4
2132347   +          +    -2.45163227816589 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.5046788281633 * H1x1_1 + -4.66397711541227 * H1x1_2 + 
4.82395074522384 * H1x1_3 + -12.9633946998053 * H1x1_4 + -2.45163227816589 * H1x1_5 ;
2132348   +   P_DepVar1  =    -0.48464899477516 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.48464899477516 + P_DepVar1 ;
2132349   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2132350   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2132351   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2132352   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2132353   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2132354   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2132355   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2132356   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2132357   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2132358   +END;
MPRINT(EM_DIAGRAM):   END;
2132359   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132360   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2132361   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2132362   +END;
MPRINT(EM_DIAGRAM):   END;
2132363   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2132364   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2132365   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2132366   +END;
MPRINT(EM_DIAGRAM):   END;
2132367   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2132368   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2132369   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2132370   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2132371   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2132372   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2132373   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2132374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132375   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2132376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132377   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2132378   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2132379   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2132380   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2132381   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2132382   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2132383   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2132384   +END;
MPRINT(EM_DIAGRAM):   END;
2132385   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132386   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2132387   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132388   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2132389   +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
2132390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132391   +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
2132392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132393   +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
2132394   +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
2132395   +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
2132396   +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
2132397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132398   +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
2132399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132400   +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
2132401   +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
2132402   +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
2132403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132404   +* Ensmbl20: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Average Posteriors of 7 models;
2132405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132406   +P_DepVar1 = (
2132407   +Neural28_P_DepVar1 +
2132408   +AutoNeural33_P_DepVar1 +
2132409   +AutoNeural28_P_DepVar1 +
2132410   +AutoNeural32_P_DepVar1 +
2132411   +AutoNeural29_P_DepVar1 +
2132412   +Neural27_P_DepVar1 +
2132413   +AutoNeural27_P_DepVar1
2132414   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural28_P_DepVar1 + AutoNeural33_P_DepVar1 + 
AutoNeural28_P_DepVar1 + AutoNeural32_P_DepVar1 + AutoNeural29_P_DepVar1 + Neural27_P_DepVar1 
+ AutoNeural27_P_DepVar1 )/7;
2132415   +P_DepVar0 = (
2132416   +Neural28_P_DepVar0 +
2132417   +AutoNeural33_P_DepVar0 +
2132418   +AutoNeural28_P_DepVar0 +
2132419   +AutoNeural32_P_DepVar0 +
2132420   +AutoNeural29_P_DepVar0 +
2132421   +Neural27_P_DepVar0 +
2132422   +AutoNeural27_P_DepVar0
2132423   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural28_P_DepVar0 + AutoNeural33_P_DepVar0 + 
AutoNeural28_P_DepVar0 + AutoNeural32_P_DepVar0 + AutoNeural29_P_DepVar0 + Neural27_P_DepVar0 
+ AutoNeural27_P_DepVar0 )/7;
2132424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132425   +* Ensmbl20: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Classification Vars;
2132426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132427   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2132428   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2132429   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2132430   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2132431   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2132432   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2132433   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2132434   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2132435   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2132436   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2132437   +end;
MPRINT(EM_DIAGRAM):   end;
2132438   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2132439   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2132440   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2132441   +end;
MPRINT(EM_DIAGRAM):   end;
2132442   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132444   +* Ensmbl20: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Producing Unformatted variable;
2132445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132446   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2132447   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2132448   +else
2132449   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2132450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132451   +* Ensmbl20: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing _WARN_ Variable;
2132452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132453   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2132454   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2132455   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2132456   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2132456  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2132457   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2132457  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2132458   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2132458  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2132459   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2132459  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2132460   +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2132460  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2132461   +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2132461  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2132462   +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2132462  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2132463   +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2132463  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2132464   +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2132464  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2132465   +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2132465  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2132466   +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2132466  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2132467   +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2132467  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2132468   +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2132468  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2132469   +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2132469  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2132470   +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2132470  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2132471   +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2132471  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2132472   +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2132472  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2132473   +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2132473  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2132474   +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2132474  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2132475   +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2132475  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2132476   +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2132476  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2132477   +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2132477  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2132478   +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2132478  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2132479   +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2132479  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2132480   +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2132480  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2132481   +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2132481  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2132482   +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2132482  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2132483   +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2132483  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2132484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132485   +* Ensmbl20: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing Residual Vars;
2132486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132487   +if
2132488   +F_DepVar NE '1'
2132489   +AND F_DepVar NE '0'
2132490   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2132491   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2132492   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2132493   +end;
MPRINT(EM_DIAGRAM):   end;
2132494   +else do;
MPRINT(EM_DIAGRAM):   else do;
2132495   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2132496   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2132497   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2132498   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2132499   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2132500   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2132501   +END;
MPRINT(EM_DIAGRAM):   END;
2132502   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132503    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL20_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL28_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2132504    quit;
2132505    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl20_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl20_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl20_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2132565    filename _pref
2132565  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
2132566    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132567    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas.
2132568   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2132569   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2132570   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2132571   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2132572   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2132573   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2132574   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2132575   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2132576   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2132577   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2132578   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2132579   +LENGTH _WARN_ $4
2132580   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2132581   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2132582   +
2132583   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2132584   +
2132585   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2132586   +
2132587   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2132588   +
2132589   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2132590   +
2132591   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2132592   +
2132593   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2132594   +
2132595   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2132596   +
2132597   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2132598   +
2132599   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2132600   +
2132601   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2132602   +
2132603   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2132604   +
2132605   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2132606   +
2132607   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2132608   +
2132609   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2132610   +
2132611   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2132612   +
2132613   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2132614   +
2132615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132616   +*** Checking missing input Interval
2132617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2132618   +
2132619   +IF NMISS(
2132620   +   AcceptedCmpTotal ,
2132621   +   Mnt ,
2132622   +   MntMeatProducts ,
2132623   +   NumCatalogPurchases ,
2132624   +   RFMstat ,
2132625   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2132626   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2132627   +
2132628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2132629   +END;
MPRINT(EM_DIAGRAM):   END;
2132630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132631   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2132632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132634   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2132635   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2132636   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2132637   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2132638   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2132639   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2132640   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2132641   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2132642   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132643   +END;
MPRINT(EM_DIAGRAM):   END;
2132644   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132645   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2132646   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2132647   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2132648   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2132649   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2132650   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2132651   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2132652   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2132653   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2132654   +   ELSE S_NumCatalogPurchases
2132655   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2132656   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2132657   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2132658   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2132659   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2132660   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2132661   +END;
MPRINT(EM_DIAGRAM):   END;
2132662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132663   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2132664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132665   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132666   +   H11  =     -0.1481294920829 * S_AcceptedCmpTotal  +    -0.31967651937983 *
2132667   +        S_Mnt  +    -0.25501160560688 * S_MntMeatProducts
2132668   +          +    -0.26541354265094 * S_NumCatalogPurchases
2132669   +          +    -0.05107291503479 * S_RFMstat  +     0.26055761102982 *
2132670   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.1481294920829 * S_AcceptedCmpTotal + -0.31967651937983 * S_Mnt 
+ -0.25501160560688 * S_MntMeatProducts + -0.26541354265094 * S_NumCatalogPurchases + 
-0.05107291503479 * S_RFMstat + 0.26055761102982 * S_Recency ;
2132671   +   H12  =    -0.53585265877367 * S_AcceptedCmpTotal  +    -0.63949625372724 *
2132672   +        S_Mnt  +    -0.71298935461349 * S_MntMeatProducts
2132673   +          +     0.26625422734047 * S_NumCatalogPurchases
2132674   +          +     0.04789590805202 * S_RFMstat  +     -0.2457029388315 *
2132675   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53585265877367 * S_AcceptedCmpTotal + -0.63949625372724 * S_Mnt 
+ -0.71298935461349 * S_MntMeatProducts + 0.26625422734047 * S_NumCatalogPurchases + 
0.04789590805202 * S_RFMstat + -0.2457029388315 * S_Recency ;
2132676   +   H13  =     0.36156584602692 * S_AcceptedCmpTotal  +    -3.37453529906718 *
2132677   +        S_Mnt  +     1.02675869236561 * S_MntMeatProducts
2132678   +          +     0.00910121928187 * S_NumCatalogPurchases
2132679   +          +     0.20581491047897 * S_RFMstat  +    -0.18898725892086 *
2132680   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.36156584602692 * S_AcceptedCmpTotal + -3.37453529906718 * S_Mnt 
+ 1.02675869236561 * S_MntMeatProducts + 0.00910121928187 * S_NumCatalogPurchases + 
0.20581491047897 * S_RFMstat + -0.18898725892086 * S_Recency ;
2132681   +   H14  =    -0.14179052521941 * S_AcceptedCmpTotal  +     0.30769772196415 *
2132682   +        S_Mnt  +     0.17433696286114 * S_MntMeatProducts
2132683   +          +     0.12575078713396 * S_NumCatalogPurchases
2132684   +          +    -0.02826822167447 * S_RFMstat  +     0.28366844846854 *
2132685   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.14179052521941 * S_AcceptedCmpTotal + 0.30769772196415 * S_Mnt 
+ 0.17433696286114 * S_MntMeatProducts + 0.12575078713396 * S_NumCatalogPurchases + 
-0.02826822167447 * S_RFMstat + 0.28366844846854 * S_Recency ;
2132686   +   H15  =      0.0992610666113 * S_AcceptedCmpTotal  +    -0.08290546162861 *
2132687   +        S_Mnt  +     2.79374557573421 * S_MntMeatProducts
2132688   +          +     0.34145061374457 * S_NumCatalogPurchases
2132689   +          +     1.24642569428903 * S_RFMstat  +    -0.05791964822006 *
2132690   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.0992610666113 * S_AcceptedCmpTotal + -0.08290546162861 * S_Mnt + 
2.79374557573421 * S_MntMeatProducts + 0.34145061374457 * S_NumCatalogPurchases + 
1.24642569428903 * S_RFMstat + -0.05791964822006 * S_Recency ;
2132691   +   H16  =    -0.70732539360309 * S_AcceptedCmpTotal  +    -6.01133749430879 *
2132692   +        S_Mnt  +      2.7772635267037 * S_MntMeatProducts
2132693   +          +     3.89195901397454 * S_NumCatalogPurchases
2132694   +          +     -2.3989156332421 * S_RFMstat  +    -0.49366295107927 *
2132695   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.70732539360309 * S_AcceptedCmpTotal + -6.01133749430879 * S_Mnt 
+ 2.7772635267037 * S_MntMeatProducts + 3.89195901397454 * S_NumCatalogPurchases + 
-2.3989156332421 * S_RFMstat + -0.49366295107927 * S_Recency ;
2132696   +   H11  =     1.84373127923043 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.84373127923043 + H11 ;
2132697   +   H12  =     0.28145390491001 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.28145390491001 + H12 ;
2132698   +   H13  =    -2.13618632038915 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -2.13618632038915 + H13 ;
2132699   +   H14  =    -0.43724663060956 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.43724663060956 + H14 ;
2132700   +   H15  =     2.87870499074164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 2.87870499074164 + H15 ;
2132701   +   H16  =    -1.50303768685501 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.50303768685501 + H16 ;
2132702   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2132703   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2132704   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2132705   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2132706   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2132707   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2132708   +END;
MPRINT(EM_DIAGRAM):   END;
2132709   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132710   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2132711   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2132712   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2132713   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2132714   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2132715   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2132716   +END;
MPRINT(EM_DIAGRAM):   END;
2132717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132718   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2132719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132720   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2132721   +   P_DepVar1  =    -5.40879672831374 * H11  +    -2.30275649942132 * H12
2132722   +          +     3.92987383270932 * H13  +    -5.94814919610295 * H14
2132723   +          +      8.1691029468057 * H15  +     1.41618936614917 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.40879672831374 * H11 + -2.30275649942132 * H12 + 
3.92987383270932 * H13 + -5.94814919610295 * H14 + 8.1691029468057 * H15 + 1.41618936614917 * 
H16 ;
2132724   +   P_DepVar1  =    -3.18163491507868 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.18163491507868 + P_DepVar1 ;
2132725   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2132726   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2132727   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2132728   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2132729   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2132730   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2132731   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2132732   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2132733   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2132734   +END;
MPRINT(EM_DIAGRAM):   END;
2132735   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2132736   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2132737   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2132738   +END;
MPRINT(EM_DIAGRAM):   END;
2132739   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2132740   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2132741   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2132742   +END;
MPRINT(EM_DIAGRAM):   END;
2132743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132744   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2132745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2132746   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2132747   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2132748   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2132749   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2132750   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2132751   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2132752   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2132753   +END;
MPRINT(EM_DIAGRAM):   END;
2132754   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132755   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2132756   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2132757   +drop
2132758   +H11
2132759   +H12
2132760   +H13
2132761   +H14
2132762   +H15
2132763   +H16
2132764   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2132765   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132766    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2132767    quit;
2132768    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132769    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132770    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132771    retain ID 2 Node "Neural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural28";
2132772    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 556 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 556 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2132774    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 556 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 556 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132777    proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
2132778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.NEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132780    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132781    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132782    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132783    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132784    proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
2132785    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2132786    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132787    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132788    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132789    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132790    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132791    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132792    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132793    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132794    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132794  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 200 rows and 5 columns.

2132795    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132796    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2132797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 200 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 200 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132798    filename _pref
2132798  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
2132799    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132800    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
2132801   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2132802   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2132803   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2132804   +
2132805   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2132806   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2132807   +
2132808   +
2132809   +
2132810   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2132811   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2132812   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132813    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2132814    quit;
2132815    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132816    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132817    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132818    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
2132819    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132821    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132822    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132823    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132824    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
2132825    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132826    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132827    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132828    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132829    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132830    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132831    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
2132832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2132833    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132834    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132835    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132836    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132837    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132838    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132839    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2132840    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132841    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132841  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.

2132842    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132843    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2132844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 200 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132845    filename _pref
2132845  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2132846    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132847    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2132848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132849   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2132850   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2132851   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2132852   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2132853   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132854    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2132855    quit;
2132856    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132857    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132858    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132859    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2132860    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132861    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132862    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132863    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132864    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2132865    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2132866    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132868    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132869    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132870    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132871    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132872    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2132873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2132874    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132877    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132878    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132879    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132880    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132881    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132882    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132882  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2132883    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132884    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2132885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 204 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132886    filename _pref
2132886  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2132887    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132888    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2132889   +
2132890   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2132891   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2132891  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2132892   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2132893   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2132894   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2132895   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2132896   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2132897    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2132898    quit;
2132899    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2132900    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2132901    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2132902    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2132903    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2132904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2132905    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2132906    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132907    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132908    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2132909    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132911    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132912    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2132913    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2132914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2132915    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2132916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132917    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2132918    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132919    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132920    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2132921    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2132922    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2132923    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2132924    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2132925    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2132925  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2132926    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132927    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2132928    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 243 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2132929    filename _pref
2132929  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2132930    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2132931    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2132932   +
2132933   +
2132934   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2132935   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2132936   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2132937   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2132938   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2132939   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132940   +
2132941   +
2132942   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2132943   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2132944   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2132945   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2132946   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2132947   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132948   +
2132949   +
2132950   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2132951   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2132952   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2132953   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2132954   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2132955   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132956   +
2132957   +
2132958   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2132959   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2132960   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2132961   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2132962   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2132963   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132964   +
2132965   +
2132966   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2132967   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2132968   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2132969   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2132970   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2132971   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132972   +
2132973   +
2132974   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2132975   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2132976   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2132977   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2132978   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2132979   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132980   +
2132981   +
2132982   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2132983   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2132984   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2132985   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2132986   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2132987   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132988   +
2132989   +
2132990   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2132991   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2132992   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2132993   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2132994   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2132995   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2132996   +if
2132997   +_FILTERNORM1 not in ( '.')
2132998   + and
2132999   +_FILTERNORM2 not in ( '.')
2133000   + and
2133001   +_FILTERNORM3 not in ( '.')
2133002   + and
2133003   +_FILTERNORM4 not in ( '.')
2133004   + and
2133005   +_FILTERNORM5 not in ( '.')
2133006   + and
2133007   +_FILTERNORM6 not in ( '.')
2133008   + and
2133009   +_FILTERNORM7 not in ( ' ')
2133010   + and
2133011   +_FILTERNORM8 not in ( ' ')
2133012   +and
2133013   +( Dt_Customer ne .)
2133014   +and ( Income ne . and (Income<=107000))
2133015   +and ( Kidhome ne .)
2133016   +and ( MntFishProducts ne .)
2133017   +and ( MntFruits ne .)
2133018   +and ( MntGoldProds ne .)
2133019   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2133020   +and ( MntSweetProducts ne .)
2133021   +and ( MntWines ne .)
2133022   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2133023   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2133024   +and ( NumStorePurchases ne .)
2133025   +and ( NumWebPurchases ne .)
2133026   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2133027   +and ( Recency ne .)
2133028   +and ( Teenhome ne .)
2133029   +and ( Year_Birth ne .)
2133030   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2133031   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2133032   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2133033   +end;
MPRINT(EM_DIAGRAM):   end;
2133034   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2133035   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133036    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2133037    quit;
2133038    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133039    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133040    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133041    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2133042    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133044    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133045    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133046    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133047    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2133048    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133049    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133050    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133051    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133052    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133054    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2133055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2133056    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133058    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133059    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133060    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133061    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133062    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133063    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133064    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133064  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2133065    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133066    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2133067    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 309 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133068    %macro varDept(fcmpdata=,id=);
2133069    %global nobs&id scoreFlag&id;
2133070    %let scoreFlag&id = 0;
2133071    %if &id=1 or ^&fcmpStart %then %do;
2133072    proc sort data=&fcmpdata out=_temp&id nodupkey;
2133073    by NAME;
2133074    where id=&id and LHS in( %let j=1;
2133075    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2133076    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2133077    "&var" %let j = %eval(&j+1);
2133078    %end;
2133079    );
2133080    run;
2133081    %let dsid = %sysfunc(open(_temp&id));
2133082    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133083    %let dsid = %sysfunc(close(&dsid));
2133084    %if &&nobs&id %then %do;
2133085    %let scoreFlag&id = 1;
2133086    %let fcmpStart = 1;
2133087    %end;
2133088    %else %let fcmpStart = 0;
2133089    %end;
2133090    %else %do;
2133091    proc sort data=&fcmpdata out=_tempid;
2133092    where id=&id;
2133093    by LHS;
2133094    run;
2133095    %let dsid = %sysfunc(open(_tempid));
2133096    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133097    %let dsid = %sysfunc(close(&dsid));
2133098    %if ^&&nobs&id %then %do;
2133099    proc datasets lib=work nolist;
2133100    delete _tempid;
2133101    run;
2133102    quit;
2133103    %end;
2133104    %else %do;
2133105    data _tempAll;
2133106    set %let j=%eval(&id-1);
2133107    %do x=1 %to &j;
2133108    %if &&nobs&x %then %do;
2133109    _temp&x %end;
2133110    %end;
2133111    ;
2133112    run;
2133113    proc sql;
2133114    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2133114  ! work._tempid p2 where p.name=p2.lhs;
2133115    quit;
2133116    data _temp&id;
2133117    set _temp&id;
2133118    where LHS ne '' and NAME ne '' and Node ne '';
2133119    run;
2133120    proc datasets lib=work nolist;
2133121    delete _tempAll;
2133122    run;
2133123    %let dsid = %sysfunc(open(_temp&id));
2133124    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133125    %let dsid = %sysfunc(close(&dsid));
2133126    %if ^&&nobs&id %then %do;
2133127    proc datasets lib=work nolist;
2133128    delete _temp&id;
2133129    run;
2133130    quit;
2133131    %end;
2133132    %else %do;
2133133    %let scoreFlag&id = 1;
2133134    data _temp&id;
2133135    set _temp&id;
2133136    where LHS ne NAME and node ne '';
2133137    run;
2133138    %let dsid = %sysfunc(open(_temp&id));
2133139    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133140    %let dsid = %sysfunc(close(&dsid));
2133141    %if ^&&nobs&id %then %do;
2133142    proc datasets lib=work nolist;
2133143    delete _temp&id;
2133144    run;
2133145    quit;
2133146    %end;
2133147    %else %do;
2133148    proc sort data=_temp&id nodupkey;
2133149    by LHS NAME;
2133150    run;
2133151    %end;
2133152    %end;
2133153    %end;
2133154    %end;
2133155    %mend varDept;
2133156    %macro optCode(outdata=fcmpdata);
2133157    %global fcmpStart;
2133158    %let fcmpStart = 0;
2133159    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2133160    %let NumNodes=9;
2133161    %do k=1 %to &NumNodes;
2133162    %vardept(fcmpdata=&outdata, id=&k);
2133163    %end;
2133164    %mend optCode;
2133165    %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 22 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2133166    filename _pref
2133166  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
2133167    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133168    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas.
2133169   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2133170   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2133171   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2133172   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2133173   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2133174   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2133175   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2133176   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2133177   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2133178   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2133179   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2133180   +LENGTH _WARN_ $4
2133181   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2133182   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2133183   +
2133184   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2133185   +
2133186   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2133187   +
2133188   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2133189   +
2133190   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2133191   +
2133192   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2133193   +
2133194   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2133195   +
2133196   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2133197   +
2133198   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2133199   +
2133200   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2133201   +
2133202   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2133203   +
2133204   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2133205   +
2133206   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2133207   +
2133208   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2133209   +
2133210   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2133211   +
2133212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133213   +*** Checking missing input Interval
2133214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2133215   +
2133216   +IF NMISS(
2133217   +   AcceptedCmpTotal ,
2133218   +   Mnt ,
2133219   +   MntMeatProducts ,
2133220   +   NumCatalogPurchases ,
2133221   +   RFMstat ,
2133222   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2133223   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2133224   +
2133225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133226   +END;
MPRINT(EM_DIAGRAM):   END;
2133227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133228   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2133229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133230   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133231   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2133232   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2133233   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2133234   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2133235   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2133236   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2133237   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2133238   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2133239   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2133240   +END;
MPRINT(EM_DIAGRAM):   END;
2133241   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133242   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2133243   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2133244   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2133245   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2133246   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2133247   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2133248   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2133249   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2133250   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2133251   +   ELSE S_NumCatalogPurchases
2133252   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2133253   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2133254   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2133255   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2133256   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2133257   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2133258   +END;
MPRINT(EM_DIAGRAM):   END;
2133259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133260   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2133261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133262   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133263   +   H1x1_1  =     0.21234921669572 * S_AcceptedCmpTotal
2133264   +          +     0.01945817648377 * S_Mnt  +     0.10373621819131 *
2133265   +        S_MntMeatProducts  +     0.14724080002257 * S_NumCatalogPurchases
2133266   +          +     0.01465421656969 * S_RFMstat  +    -0.37839603073195 *
2133267   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.21234921669572 * S_AcceptedCmpTotal + 0.01945817648377 * 
S_Mnt + 0.10373621819131 * S_MntMeatProducts + 0.14724080002257 * S_NumCatalogPurchases + 
0.01465421656969 * S_RFMstat + -0.37839603073195 * S_Recency ;
2133268   +   H1x1_2  =      1.6456490248475 * S_AcceptedCmpTotal
2133269   +          +    -4.36126689821345 * S_Mnt  +    -5.34341350667797 *
2133270   +        S_MntMeatProducts  +    -0.50775340376834 * S_NumCatalogPurchases
2133271   +          +    -3.77547933008523 * S_RFMstat  +    -0.35687395481612 *
2133272   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.6456490248475 * S_AcceptedCmpTotal + -4.36126689821345 * 
S_Mnt + -5.34341350667797 * S_MntMeatProducts + -0.50775340376834 * S_NumCatalogPurchases + 
-3.77547933008523 * S_RFMstat + -0.35687395481612 * S_Recency ;
2133273   +   H1x1_3  =     2.25495773414966 * S_AcceptedCmpTotal
2133274   +          +     -11.006968240108 * S_Mnt  +     5.29014268166876 *
2133275   +        S_MntMeatProducts  +     1.38527755695319 * S_NumCatalogPurchases
2133276   +          +    -0.25229120510632 * S_RFMstat  +    -0.96545690161812 *
2133277   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.25495773414966 * S_AcceptedCmpTotal + -11.006968240108 * 
S_Mnt + 5.29014268166876 * S_MntMeatProducts + 1.38527755695319 * S_NumCatalogPurchases + 
-0.25229120510632 * S_RFMstat + -0.96545690161812 * S_Recency ;
2133278   +   H1x1_1  =    -1.44629643725438 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.44629643725438 + H1x1_1 ;
2133279   +   H1x1_2  =    -8.96045510766511 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -8.96045510766511 + H1x1_2 ;
2133280   +   H1x1_3  =    -3.43663513496723 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.43663513496723 + H1x1_3 ;
2133281   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2133282   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2133283   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2133284   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2133285   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2133286   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2133287   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2133288   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2133289   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2133290   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2133291   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2133292   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2133293   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2133294   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2133295   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2133296   +END;
MPRINT(EM_DIAGRAM):   END;
2133297   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133298   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2133299   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2133300   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2133301   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2133302   +END;
MPRINT(EM_DIAGRAM):   END;
2133303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133304   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2133305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133306   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133307   +   P_DepVar1  =     15.9155817268417 * H1x1_1  +    -26.1877719603903 * H1x1_2
2133308   +          +     3.03900855168824 * H1x1_3  +    -8.12584282800012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.9155817268417 * H1x1_1 + -26.1877719603903 * H1x1_2 + 
3.03900855168824 * H1x1_3 + -8.12584282800012 * H1x1_4 ;
2133309   +   P_DepVar1  =    -0.43873072735423 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.43873072735423 + P_DepVar1 ;
2133310   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2133311   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2133312   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2133313   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2133314   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2133315   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2133316   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2133317   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2133318   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2133319   +END;
MPRINT(EM_DIAGRAM):   END;
2133320   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133321   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2133322   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2133323   +END;
MPRINT(EM_DIAGRAM):   END;
2133324   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2133325   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2133326   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2133327   +END;
MPRINT(EM_DIAGRAM):   END;
2133328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133329   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2133330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133331   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2133332   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2133333   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2133334   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2133335   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2133336   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2133337   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2133338   +END;
MPRINT(EM_DIAGRAM):   END;
2133339   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2133340   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2133341   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2133342   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133343    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2133344    quit;
2133345    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133346    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133347    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133348    retain ID 2 Node "AutoNeural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural33";
2133349    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133350    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 560 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 560 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133351    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 560 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 560 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133354    proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME 
CREATOR);
2133355    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133357    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133358    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133359    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133361    proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
2133362    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2133363    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133365    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133366    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133367    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133368    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133369    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133370    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133371    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133371  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 264 rows and 5 columns.

2133372    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133373    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2133374    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 264 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

2133375    filename _pref
2133375  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
2133376    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133377    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
2133378   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2133379   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2133380   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2133381   +
2133382   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2133383   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2133384   +
2133385   +
2133386   +
2133387   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2133388   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2133389   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133390    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2133391    quit;
2133392    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133393    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133394    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133395    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
2133396    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133398    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133399    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133400    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133401    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
2133402    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133403    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133404    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133405    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133406    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133408    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
2133409    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2133410    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133411    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133412    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133413    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133414    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133416    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133417    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133418    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133418  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.

2133419    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133420    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2133421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133422    filename _pref
2133422  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2133423    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133424    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2133425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2133426   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2133427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2133428   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2133429   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2133430   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133431    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2133432    quit;
2133433    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133434    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133435    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133436    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2133437    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133438    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133439    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133440    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133441    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133442    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2133443    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133444    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133445    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133446    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133447    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133448    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133449    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2133450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2133451    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133452    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133453    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133454    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133455    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133457    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133458    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133459    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133459  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2133460    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133461    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2133462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 268 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133463    filename _pref
2133463  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2133464    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133465    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2133466   +
2133467   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2133468   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2133468  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2133469   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2133470   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2133471   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2133472   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2133473   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133474    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2133475    quit;
2133476    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133477    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133478    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133479    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2133480    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133482    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133484    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133485    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2133486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133488    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133489    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133490    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133492    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2133493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133494    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133498    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133500    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133502    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133502  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2133503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133504    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2133505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 307 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133506    filename _pref
2133506  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2133507    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133508    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2133509   +
2133510   +
2133511   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2133512   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2133513   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2133514   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2133515   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2133516   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133517   +
2133518   +
2133519   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2133520   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2133521   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2133522   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2133523   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2133524   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133525   +
2133526   +
2133527   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2133528   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2133529   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2133530   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2133531   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2133532   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133533   +
2133534   +
2133535   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2133536   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2133537   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2133538   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2133539   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2133540   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133541   +
2133542   +
2133543   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2133544   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2133545   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2133546   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2133547   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2133548   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133549   +
2133550   +
2133551   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2133552   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2133553   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2133554   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2133555   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2133556   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133557   +
2133558   +
2133559   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2133560   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2133561   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2133562   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2133563   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2133564   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133565   +
2133566   +
2133567   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2133568   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2133569   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2133570   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2133571   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2133572   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2133573   +if
2133574   +_FILTERNORM1 not in ( '.')
2133575   + and
2133576   +_FILTERNORM2 not in ( '.')
2133577   + and
2133578   +_FILTERNORM3 not in ( '.')
2133579   + and
2133580   +_FILTERNORM4 not in ( '.')
2133581   + and
2133582   +_FILTERNORM5 not in ( '.')
2133583   + and
2133584   +_FILTERNORM6 not in ( '.')
2133585   + and
2133586   +_FILTERNORM7 not in ( ' ')
2133587   + and
2133588   +_FILTERNORM8 not in ( ' ')
2133589   +and
2133590   +( Dt_Customer ne .)
2133591   +and ( Income ne . and (Income<=107000))
2133592   +and ( Kidhome ne .)
2133593   +and ( MntFishProducts ne .)
2133594   +and ( MntFruits ne .)
2133595   +and ( MntGoldProds ne .)
2133596   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2133597   +and ( MntSweetProducts ne .)
2133598   +and ( MntWines ne .)
2133599   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2133600   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2133601   +and ( NumStorePurchases ne .)
2133602   +and ( NumWebPurchases ne .)
2133603   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2133604   +and ( Recency ne .)
2133605   +and ( Teenhome ne .)
2133606   +and ( Year_Birth ne .)
2133607   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2133608   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2133609   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2133610   +end;
MPRINT(EM_DIAGRAM):   end;
2133611   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2133612   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2133613    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2133614    quit;
2133615    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2133616    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2133617    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2133618    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2133619    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2133620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133621    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2133622    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133623    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133624    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2133625    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133627    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133628    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2133629    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2133630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133631    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2133632    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2133633    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2133634    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133635    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133636    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2133637    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2133638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2133639    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2133640    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2133641    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2133641  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2133642    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133643    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2133644    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 373 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2133645    %macro varDept(fcmpdata=,id=);
2133646    %global nobs&id scoreFlag&id;
2133647    %let scoreFlag&id = 0;
2133648    %if &id=1 or ^&fcmpStart %then %do;
2133649    proc sort data=&fcmpdata out=_temp&id nodupkey;
2133650    by NAME;
2133651    where id=&id and LHS in( %let j=1;
2133652    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2133653    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2133654    "&var" %let j = %eval(&j+1);
2133655    %end;
2133656    );
2133657    run;
2133658    %let dsid = %sysfunc(open(_temp&id));
2133659    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133660    %let dsid = %sysfunc(close(&dsid));
2133661    %if &&nobs&id %then %do;
2133662    %let scoreFlag&id = 1;
2133663    %let fcmpStart = 1;
2133664    %end;
2133665    %else %let fcmpStart = 0;
2133666    %end;
2133667    %else %do;
2133668    proc sort data=&fcmpdata out=_tempid;
2133669    where id=&id;
2133670    by LHS;
2133671    run;
2133672    %let dsid = %sysfunc(open(_tempid));
2133673    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133674    %let dsid = %sysfunc(close(&dsid));
2133675    %if ^&&nobs&id %then %do;
2133676    proc datasets lib=work nolist;
2133677    delete _tempid;
2133678    run;
2133679    quit;
2133680    %end;
2133681    %else %do;
2133682    data _tempAll;
2133683    set %let j=%eval(&id-1);
2133684    %do x=1 %to &j;
2133685    %if &&nobs&x %then %do;
2133686    _temp&x %end;
2133687    %end;
2133688    ;
2133689    run;
2133690    proc sql;
2133691    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2133691  ! work._tempid p2 where p.name=p2.lhs;
2133692    quit;
2133693    data _temp&id;
2133694    set _temp&id;
2133695    where LHS ne '' and NAME ne '' and Node ne '';
2133696    run;
2133697    proc datasets lib=work nolist;
2133698    delete _tempAll;
2133699    run;
2133700    %let dsid = %sysfunc(open(_temp&id));
2133701    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133702    %let dsid = %sysfunc(close(&dsid));
2133703    %if ^&&nobs&id %then %do;
2133704    proc datasets lib=work nolist;
2133705    delete _temp&id;
2133706    run;
2133707    quit;
2133708    %end;
2133709    %else %do;
2133710    %let scoreFlag&id = 1;
2133711    data _temp&id;
2133712    set _temp&id;
2133713    where LHS ne NAME and node ne '';
2133714    run;
2133715    %let dsid = %sysfunc(open(_temp&id));
2133716    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2133717    %let dsid = %sysfunc(close(&dsid));
2133718    %if ^&&nobs&id %then %do;
2133719    proc datasets lib=work nolist;
2133720    delete _temp&id;
2133721    run;
2133722    quit;
2133723    %end;
2133724    %else %do;
2133725    proc sort data=_temp&id nodupkey;
2133726    by LHS NAME;
2133727    run;
2133728    %end;
2133729    %end;
2133730    %end;
2133731    %end;
2133732    %mend varDept;
2133733    %macro optCode(outdata=fcmpdata);
2133734    %global fcmpStart;
2133735    %let fcmpStart = 0;
2133736    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2133737    %let NumNodes=9;
2133738    %do k=1 %to &NumNodes;
2133739    %vardept(fcmpdata=&outdata, id=&k);
2133740    %end;
2133741    %mend optCode;
2133742    %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 42 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 30 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2133743    filename _pref
2133743  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
2133744    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2133745    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas.
2133746   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2133747   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2133748   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2133749   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2133750   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2133751   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2133752   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2133753   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2133754   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2133755   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2133756   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2133757   +LENGTH _WARN_ $4
2133758   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2133759   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2133760   +
2133761   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2133762   +
2133763   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2133764   +
2133765   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2133766   +
2133767   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2133768   +
2133769   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2133770   +
2133771   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2133772   +
2133773   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2133774   +
2133775   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2133776   +
2133777   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2133778   +
2133779   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2133780   +
2133781   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2133782   +
2133783   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2133784   +
2133785   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2133786   +
2133787   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2133788   +
2133789   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2133790   +
2133791   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2133792   +
2133793   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2133794   +
2133795   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2133796   +
2133797   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2133798   +
2133799   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2133800   +
2133801   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2133802   +
2133803   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2133804   +
2133805   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2133806   +
2133807   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2133808   +
2133809   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2133810   +
2133811   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2133812   +
2133813   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2133814   +
2133815   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2133816   +
2133817   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2133818   +
2133819   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2133820   +
2133821   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2133822   +
2133823   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2133824   +
2133825   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2133826   +
2133827   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2133828   +
2133829   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2133830   +
2133831   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2133832   +
2133833   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2133834   +
2133835   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2133836   +
2133837   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2133838   +
2133839   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2133840   +
2133841   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2133842   +
2133843   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2133844   +
2133845   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2133846   +
2133847   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2133848   +
2133849   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2133850   +
2133851   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2133852   +
2133853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133854   +*** Checking missing input Interval
2133855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2133856   +
2133857   +IF NMISS(
2133858   +   AcceptedCmpTotal ,
2133859   +   Mnt ,
2133860   +   MntMeatProducts ,
2133861   +   NumCatalogPurchases ,
2133862   +   RFMstat ,
2133863   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2133864   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2133865   +
2133866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2133867   +END;
MPRINT(EM_DIAGRAM):   END;
2133868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133869   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2133870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133871   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133872   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2133873   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2133874   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2133875   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2133876   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2133877   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2133878   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2133879   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2133880   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2133881   +END;
MPRINT(EM_DIAGRAM):   END;
2133882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133883   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2133884   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2133885   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2133886   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2133887   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2133888   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2133889   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2133890   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2133891   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2133892   +   ELSE S_NumCatalogPurchases
2133893   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2133894   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2133895   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2133896   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2133897   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2133898   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2133899   +END;
MPRINT(EM_DIAGRAM):   END;
2133900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133901   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2133902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133903   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133904   +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
2133905   +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
2133906   +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
2133907   +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
2133908   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 * 
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases + 
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
2133909   +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
2133910   +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
2133911   +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
2133912   +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
2133913   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 * 
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases + 
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
2133914   +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
2133915   +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
2133916   +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
2133917   +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
2133918   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 * 
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases + 
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
2133919   +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
2133920   +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
2133921   +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
2133922   +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
2133923   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 * 
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases + 
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
2133924   +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
2133925   +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
2133926   +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
2133927   +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
2133928   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 * 
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases + 
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
2133929   +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
2133930   +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
2133931   +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
2133932   +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
2133933   +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
2133934   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2133935   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2133936   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2133937   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2133938   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2133939   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2133940   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2133941   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2133942   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2133943   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2133944   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2133945   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2133946   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2133947   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2133948   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2133949   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2133950   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2133951   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2133952   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2133953   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2133954   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2133955   +END;
MPRINT(EM_DIAGRAM):   END;
2133956   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2133957   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2133958   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2133959   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2133960   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2133961   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2133962   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2133963   +END;
MPRINT(EM_DIAGRAM):   END;
2133964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133965   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2133966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2133967   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2133968   +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
2133969   +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
2133970   +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
2133971   +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
2133972   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 * 
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases + 
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
2133973   +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
2133974   +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
2133975   +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
2133976   +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
2133977   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 * 
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases + 
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
2133978   +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
2133979   +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
2133980   +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
2133981   +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
2133982   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 * 
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases + 
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
2133983   +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
2133984   +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
2133985   +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
2133986   +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
2133987   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 * 
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases + 
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
2133988   +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
2133989   +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
2133990   +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
2133991   +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
2133992   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 * 
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases + 
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
2133993   +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
2133994   +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
2133995   +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
2133996   +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
2133997   +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
2133998   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2133999   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2134000   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2134001   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2134002   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2134003   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2134004   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2134005   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2134006   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2134007   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2134008   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2134009   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2134010   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2134011   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2134012   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2134013   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2134014   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2134015   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2134016   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2134017   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2134018   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2134019   +END;
MPRINT(EM_DIAGRAM):   END;
2134020   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134021   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2134022   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2134023   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2134024   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2134025   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2134026   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2134027   +END;
MPRINT(EM_DIAGRAM):   END;
2134028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134029   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2134030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134031   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134032   +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
2134033   +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
2134034   +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
2134035   +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
2134036   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 * 
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases + 
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
2134037   +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
2134038   +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
2134039   +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
2134040   +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
2134041   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 * 
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases + 
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
2134042   +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
2134043   +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
2134044   +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
2134045   +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
2134046   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 * 
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases + 
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
2134047   +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
2134048   +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
2134049   +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
2134050   +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
2134051   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 * 
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases + 
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
2134052   +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
2134053   +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
2134054   +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
2134055   +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
2134056   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 * 
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases + 
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
2134057   +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
2134058   +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
2134059   +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
2134060   +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
2134061   +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
2134062   +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
2134063   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
2134064   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2134065   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2134066   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2134067   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2134068   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2134069   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2134070   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2134071   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2134072   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2134073   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2134074   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2134075   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2134076   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2134077   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2134078   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2134079   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2134080   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2134081   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2134082   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2134083   +END;
MPRINT(EM_DIAGRAM):   END;
2134084   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134085   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2134086   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2134087   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2134088   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2134089   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2134090   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2134091   +END;
MPRINT(EM_DIAGRAM):   END;
2134092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134093   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2134094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134095   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134096   +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
2134097   +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
2134098   +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 + 
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 + 
0.22872788371043 * H1x1_6 ;
2134099   +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
2134100   +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
2134101   +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 + 
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 + 
1.4617930846853 * H1x1_6 ;
2134102   +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
2134103   +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
2134104   +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 + 
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 + 
-1.0098240718302 * H1x1_6 ;
2134105   +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
2134106   +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
2134107   +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 + 
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 + 
0.11106499550345 * H1x1_6 ;
2134108   +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
2134109   +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
2134110   +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 + 
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 + 
3.51037817476003 * H1x1_6 ;
2134111   +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
2134112   +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
2134113   +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 + 
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 + 
-1.84413878989067 * H1x1_6 ;
2134114   +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
2134115   +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
2134116   +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
2134117   +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 * 
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 + 
-0.96627475596267 * H1x2_6 ;
2134118   +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
2134119   +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
2134120   +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
2134121   +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2 
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 + 
0.09804477894859 * H1x2_6 ;
2134122   +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
2134123   +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
2134124   +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
2134125   +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 * 
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 + 
-0.10095907241792 * H1x2_6 ;
2134126   +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
2134127   +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
2134128   +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
2134129   +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 + 
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 + 
-0.78007016861264 * H1x2_6 ;
2134130   +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
2134131   +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
2134132   +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
2134133   +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2 
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 + 
1.95855676074934 * H1x2_6 ;
2134134   +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
2134135   +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
2134136   +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
2134137   +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2 
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 + 
-1.4251132059225 * H1x2_6 ;
2134138   +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
2134139   +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
2134140   +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
2134141   +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2 
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 + 
0.38481934719452 * H1x3_6 ;
2134142   +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
2134143   +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
2134144   +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
2134145   +          +     1.87596859340821 * H1x3_6 ;
The SAS System

MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2 
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 + 
1.87596859340821 * H1x3_6 ;
2134146   +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
2134147   +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
2134148   +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
2134149   +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2 
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 + 
0.20457555210609 * H1x3_6 ;
2134150   +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
2134151   +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
2134152   +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
2134153   +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2 
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 + 
1.76488988390401 * H1x3_6 ;
2134154   +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
2134155   +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
2134156   +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
2134157   +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2 
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 + 
1.63202351822216 * H1x3_6 ;
2134158   +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
2134159   +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
2134160   +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
2134161   +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2 
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 + 
-0.75070900812889 * H1x3_6 ;
2134162   +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
2134163   +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
2134164   +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
2134165   +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
2134166   +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
2134167   +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
2134168   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2134169   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2134170   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2134171   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2134172   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2134173   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2134174   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2134175   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2134176   +END;
MPRINT(EM_DIAGRAM):   END;
2134177   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134178   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2134179   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2134180   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2134181   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2134182   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2134183   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2134184   +END;
MPRINT(EM_DIAGRAM):   END;
2134185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134186   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2134187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134188   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134189   +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
2134190   +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
2134191   +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 + 
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 + 
0.35027369588915 * H1x1_6 ;
2134192   +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
2134193   +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
2134194   +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 + 
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 + 
-0.75991454790943 * H1x1_6 ;
2134195   +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
2134196   +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
2134197   +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 + 
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 + 
-0.17010696636548 * H1x1_6 ;
2134198   +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
2134199   +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
2134200   +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 + 
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 + 
2.49695921665153 * H1x1_6 ;
2134201   +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
2134202   +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
2134203   +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 + 
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 + 
-1.97247962280317 * H1x1_6 ;
2134204   +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
2134205   +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
2134206   +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 + 
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 + 
0.90300533681641 * H1x1_6 ;
2134207   +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
2134208   +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
2134209   +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
2134210   +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 * 
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 + 
-1.39994531215362 * H1x2_6 ;
2134211   +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
2134212   +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
2134213   +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
2134214   +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2 
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 + 
-0.40444669273525 * H1x2_6 ;
2134215   +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
2134216   +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
2134217   +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
2134218   +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 + 
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 + 
-2.38736049861996 * H1x2_6 ;
2134219   +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
2134220   +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
2134221   +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
2134222   +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 * 
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 + 
0.02632878191094 * H1x2_6 ;
2134223   +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
2134224   +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
2134225   +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
2134226   +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2 
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 + 
0.79706245066425 * H1x2_6 ;
2134227   +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
2134228   +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
2134229   +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
2134230   +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2 
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 + 
1.96032751350518 * H1x2_6 ;
2134231   +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
2134232   +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
2134233   +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
2134234   +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2 
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 + 
0.86372067144364 * H1x3_6 ;
2134235   +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
2134236   +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
2134237   +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
2134238   +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2 
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 + 
0.80254310887989 * H1x3_6 ;
2134239   +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
2134240   +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
2134241   +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
2134242   +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2 
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 + 
-0.80961698509146 * H1x3_6 ;
2134243   +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
2134244   +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
2134245   +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
2134246   +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2 
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 + 
-1.29909553454934 * H1x3_6 ;
2134247   +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
2134248   +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
2134249   +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
2134250   +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 * 
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 + 
0.3854653698129 * H1x3_6 ;
2134251   +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
2134252   +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
2134253   +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
2134254   +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2 
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 + 
-0.43429796112944 * H1x3_6 ;
2134255   +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
2134256   +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
2134257   +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
2134258   +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
2134259   +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
2134260   +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
2134261   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2134262   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2134263   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
2134264   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
2134265   +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
2134266   +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
2134267   +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
2134268   +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
2134269   +END;
MPRINT(EM_DIAGRAM):   END;
2134270   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134271   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2134272   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2134273   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2134274   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2134275   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2134276   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2134277   +END;
MPRINT(EM_DIAGRAM):   END;
2134278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134279   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2134280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134281   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134282   +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
2134283   +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
2134284   +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 + 
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 + 
-1.05088304858423 * H2x1_6 ;
2134285   +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
2134286   +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
2134287   +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 + 
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 + 
0.87150445612099 * H2x1_6 ;
2134288   +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
2134289   +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
2134290   +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 + 
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 + 
2.18013446750751 * H2x1_6 ;
2134291   +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
2134292   +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
2134293   +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 + 
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 + 
0.08630071934474 * H2x1_6 ;
2134294   +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
2134295   +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
2134296   +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 + 
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 + 
2.78368081292476 * H2x1_6 ;
2134297   +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
2134298   +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
2134299   +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 + 
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 + 
1.64288571863932 * H2x1_6 ;
2134300   +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
2134301   +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
2134302   +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
2134303   +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 * 
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 + 
0.35216486042215 * H2x2_6 ;
2134304   +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
2134305   +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
2134306   +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
2134307   +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2 
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 + 
-0.91648595761636 * H2x2_6 ;
2134308   +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
2134309   +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
2134310   +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
2134311   +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2 
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 + 
-2.11281855575499 * H2x2_6 ;
2134312   +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
2134313   +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
2134314   +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
2134315   +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2 
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 + 
0.57305821692201 * H2x2_6 ;
2134316   +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
2134317   +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
2134318   +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
2134319   +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2 
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 + 
2.06401699674057 * H2x2_6 ;
2134320   +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
2134321   +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
2134322   +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
2134323   +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2 
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 + 
0.08850124295188 * H2x2_6 ;
2134324   +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
2134325   +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
2134326   +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
2134327   +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
2134328   +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
2134329   +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
2134330   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2134331   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2134332   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2134333   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2134334   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2134335   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2134336   +END;
MPRINT(EM_DIAGRAM):   END;
2134337   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134338   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2134339   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2134340   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2134341   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2134342   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2134343   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2134344   +END;
MPRINT(EM_DIAGRAM):   END;
2134345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134346   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2134347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134348   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134349   +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
2134350   +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
2134351   +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 + 
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 + 
-1.83744247169269 * H3x1_6 ;
2134352   +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
2134353   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2134354   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2134355   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2134356   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2134357   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2134358   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2134359   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2134360   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2134361   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2134362   +END;
MPRINT(EM_DIAGRAM):   END;
2134363   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134364   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2134365   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2134366   +END;
MPRINT(EM_DIAGRAM):   END;
2134367   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2134368   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2134369   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2134370   +END;
MPRINT(EM_DIAGRAM):   END;
2134371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134372   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2134373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134374   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2134375   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2134376   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2134377   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2134378   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2134379   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2134380   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2134381   +END;
MPRINT(EM_DIAGRAM):   END;
2134382   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2134383   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2134384   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2134385   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134386    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2134387    quit;
2134388    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134389    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134390    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134391    retain ID 2 Node "AutoNeural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural28";
2134392    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7689 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134394    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7689 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2134397    proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME 
CREATOR);
2134398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134400    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134401    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134402    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134403    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134404    proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
2134405    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2134406    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134407    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 89 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134409    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134410    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134411    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134412    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 89 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134413    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134414    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134414  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3662 rows and 5 columns.

2134415    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134416    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2134417    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3662 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 3662 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134418    filename _pref
2134418  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
2134419    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134420    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
2134421   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2134422   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2134423   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2134424   +
2134425   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2134426   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2134427   +
2134428   +
2134429   +
2134430   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2134431   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2134432   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134433    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2134434    quit;
2134435    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134436    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134437    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134438    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
2134439    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134441    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134444    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
2134445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134447    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134448    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134449    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134451    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
2134452    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2134453    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134456    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134457    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134459    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134460    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134461    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134461  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.

2134462    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134463    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2134464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 3662 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134465    filename _pref
2134465  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2134466    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134467    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2134468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2134469   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2134470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2134471   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2134472   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2134473   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134474    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2134475    quit;
2134476    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134477    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134478    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134479    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2134480    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134482    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134484    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134485    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2134486    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134487    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134488    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134489    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134490    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134492    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2134493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2134494    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134498    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134500    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134501    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134502    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134502  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2134503    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134504    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2134505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 3666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134506    filename _pref
2134506  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2134507    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134508    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2134509   +
2134510   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2134511   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2134511  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2134512   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2134513   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2134514   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2134515   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2134516   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134517    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2134518    quit;
2134519    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134520    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134521    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134522    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2134523    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134524    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134525    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134527    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134528    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2134529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134531    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134532    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134533    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134535    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2134536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134537    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134541    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134543    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134545    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134545  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2134546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134547    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2134548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 3705 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134549    filename _pref
2134549  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2134550    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134551    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2134552   +
2134553   +
2134554   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2134555   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2134556   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2134557   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2134558   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2134559   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134560   +
2134561   +
2134562   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2134563   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2134564   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2134565   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2134566   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2134567   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134568   +
2134569   +
2134570   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2134571   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2134572   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2134573   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2134574   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2134575   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134576   +
2134577   +
2134578   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2134579   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2134580   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2134581   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2134582   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2134583   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134584   +
2134585   +
2134586   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2134587   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2134588   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2134589   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2134590   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2134591   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134592   +
2134593   +
2134594   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2134595   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2134596   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2134597   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2134598   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2134599   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134600   +
2134601   +
2134602   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2134603   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2134604   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2134605   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2134606   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2134607   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134608   +
2134609   +
2134610   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2134611   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2134612   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2134613   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2134614   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2134615   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2134616   +if
2134617   +_FILTERNORM1 not in ( '.')
2134618   + and
2134619   +_FILTERNORM2 not in ( '.')
2134620   + and
2134621   +_FILTERNORM3 not in ( '.')
2134622   + and
2134623   +_FILTERNORM4 not in ( '.')
2134624   + and
2134625   +_FILTERNORM5 not in ( '.')
2134626   + and
2134627   +_FILTERNORM6 not in ( '.')
2134628   + and
2134629   +_FILTERNORM7 not in ( ' ')
2134630   + and
2134631   +_FILTERNORM8 not in ( ' ')
2134632   +and
2134633   +( Dt_Customer ne .)
2134634   +and ( Income ne . and (Income<=107000))
2134635   +and ( Kidhome ne .)
2134636   +and ( MntFishProducts ne .)
2134637   +and ( MntFruits ne .)
2134638   +and ( MntGoldProds ne .)
2134639   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2134640   +and ( MntSweetProducts ne .)
2134641   +and ( MntWines ne .)
2134642   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2134643   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2134644   +and ( NumStorePurchases ne .)
2134645   +and ( NumWebPurchases ne .)
2134646   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2134647   +and ( Recency ne .)
2134648   +and ( Teenhome ne .)
2134649   +and ( Year_Birth ne .)
2134650   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2134651   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2134652   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2134653   +end;
MPRINT(EM_DIAGRAM):   end;
2134654   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2134655   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134656    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2134657    quit;
2134658    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134659    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134660    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134661    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2134662    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134664    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134667    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2134668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134670    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134671    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134672    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134673    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134674    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2134675    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2134676    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134677    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134679    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134680    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134681    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134682    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134683    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134684    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134684  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2134685    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134686    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2134687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 3771 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134688    %macro varDept(fcmpdata=,id=);
2134689    %global nobs&id scoreFlag&id;
2134690    %let scoreFlag&id = 0;
2134691    %if &id=1 or ^&fcmpStart %then %do;
2134692    proc sort data=&fcmpdata out=_temp&id nodupkey;
2134693    by NAME;
2134694    where id=&id and LHS in( %let j=1;
2134695    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2134696    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2134697    "&var" %let j = %eval(&j+1);
2134698    %end;
2134699    );
2134700    run;
2134701    %let dsid = %sysfunc(open(_temp&id));
2134702    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134703    %let dsid = %sysfunc(close(&dsid));
2134704    %if &&nobs&id %then %do;
2134705    %let scoreFlag&id = 1;
2134706    %let fcmpStart = 1;
2134707    %end;
2134708    %else %let fcmpStart = 0;
2134709    %end;
2134710    %else %do;
2134711    proc sort data=&fcmpdata out=_tempid;
2134712    where id=&id;
2134713    by LHS;
2134714    run;
2134715    %let dsid = %sysfunc(open(_tempid));
2134716    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134717    %let dsid = %sysfunc(close(&dsid));
2134718    %if ^&&nobs&id %then %do;
2134719    proc datasets lib=work nolist;
2134720    delete _tempid;
2134721    run;
2134722    quit;
2134723    %end;
2134724    %else %do;
2134725    data _tempAll;
2134726    set %let j=%eval(&id-1);
2134727    %do x=1 %to &j;
2134728    %if &&nobs&x %then %do;
2134729    _temp&x %end;
2134730    %end;
2134731    ;
2134732    run;
2134733    proc sql;
2134734    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2134734  ! work._tempid p2 where p.name=p2.lhs;
2134735    quit;
2134736    data _temp&id;
2134737    set _temp&id;
2134738    where LHS ne '' and NAME ne '' and Node ne '';
2134739    run;
2134740    proc datasets lib=work nolist;
2134741    delete _tempAll;
2134742    run;
2134743    %let dsid = %sysfunc(open(_temp&id));
2134744    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134745    %let dsid = %sysfunc(close(&dsid));
2134746    %if ^&&nobs&id %then %do;
2134747    proc datasets lib=work nolist;
2134748    delete _temp&id;
2134749    run;
2134750    quit;
2134751    %end;
2134752    %else %do;
2134753    %let scoreFlag&id = 1;
2134754    data _temp&id;
2134755    set _temp&id;
2134756    where LHS ne NAME and node ne '';
2134757    run;
2134758    %let dsid = %sysfunc(open(_temp&id));
2134759    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2134760    %let dsid = %sysfunc(close(&dsid));
2134761    %if ^&&nobs&id %then %do;
2134762    proc datasets lib=work nolist;
2134763    delete _temp&id;
2134764    run;
2134765    quit;
2134766    %end;
2134767    %else %do;
2134768    proc sort data=_temp&id nodupkey;
2134769    by LHS NAME;
2134770    run;
2134771    %end;
2134772    %end;
2134773    %end;
2134774    %end;
2134775    %mend varDept;
2134776    %macro optCode(outdata=fcmpdata);
2134777    %global fcmpStart;
2134778    %let fcmpStart = 0;
2134779    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2134780    %let NumNodes=9;
2134781    %do k=1 %to &NumNodes;
2134782    %vardept(fcmpdata=&outdata, id=&k);
2134783    %end;
2134784    %mend optCode;
2134785    %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 138 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 94 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 44 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 67 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2134786    filename _pref
2134786  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
2134787    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134788    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas.
2134789   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2134790   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2134791   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2134792   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2134793   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2134794   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2134795   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2134796   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2134797   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2134798   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2134799   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2134800   +LENGTH _WARN_ $4
2134801   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2134802   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2134803   +
2134804   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2134805   +
2134806   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2134807   +
2134808   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2134809   +
2134810   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2134811   +
2134812   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2134813   +
2134814   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2134815   +
2134816   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2134817   +
2134818   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2134819   +
2134820   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2134821   +
2134822   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2134823   +
2134824   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2134825   +
2134826   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2134827   +
2134828   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2134829   +
2134830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134831   +*** Checking missing input Interval
2134832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2134833   +
2134834   +IF NMISS(
2134835   +   AcceptedCmpTotal ,
2134836   +   Mnt ,
2134837   +   MntMeatProducts ,
2134838   +   NumCatalogPurchases ,
2134839   +   RFMstat ,
2134840   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2134841   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2134842   +
2134843   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2134844   +END;
MPRINT(EM_DIAGRAM):   END;
2134845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134846   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2134847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134848   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134849   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2134850   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2134851   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2134852   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2134853   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2134854   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2134855   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2134856   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2134857   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2134858   +END;
MPRINT(EM_DIAGRAM):   END;
2134859   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134860   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2134861   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2134862   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2134863   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2134864   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2134865   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2134866   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2134867   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2134868   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2134869   +   ELSE S_NumCatalogPurchases
2134870   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2134871   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2134872   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2134873   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2134874   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2134875   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2134876   +END;
MPRINT(EM_DIAGRAM):   END;
2134877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134878   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2134879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134881   +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
2134882   +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
2134883   +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
2134884   +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
2134885   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 * 
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases + 
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
2134886   +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
2134887   +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
2134888   +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
2134889   +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
2134890   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 * 
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases + 
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
2134891   +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
2134892   +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
2134893   +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
2134894   +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
2134895   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 * 
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases + 
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
2134896   +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
2134897   +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
2134898   +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
2134899   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2134900   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2134901   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2134902   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2134903   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2134904   +END;
MPRINT(EM_DIAGRAM):   END;
2134905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134906   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2134907   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2134908   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2134909   +END;
MPRINT(EM_DIAGRAM):   END;
2134910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134911   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2134912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2134914   +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
2134915   +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 + 
2.67685271681444 * H1x1_3 ;
2134916   +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
2134917   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2134918   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2134919   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2134920   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2134921   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2134922   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2134923   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2134924   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2134925   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2134926   +END;
MPRINT(EM_DIAGRAM):   END;
2134927   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2134928   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2134929   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2134930   +END;
MPRINT(EM_DIAGRAM):   END;
2134931   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2134932   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2134933   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2134934   +END;
MPRINT(EM_DIAGRAM):   END;
2134935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134936   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2134937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2134938   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2134939   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2134940   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2134941   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2134942   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2134943   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2134944   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2134945   +END;
MPRINT(EM_DIAGRAM):   END;
2134946   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2134947   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2134948   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2134949   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134950    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2134951    quit;
2134952    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2134953    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2134954    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2134955    retain ID 2 Node "AutoNeural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural32";
2134956    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2134957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 429 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 429 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134958    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2134959    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 429 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 429 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134961    proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME 
CREATOR);
2134962    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134963    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134964    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134965    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2134966    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2134967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2134968    proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
2134969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2134970    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2134971    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134972    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134973    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2134974    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2134975    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2134976    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134977    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2134978    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2134978  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 206 rows and 5 columns.

2134979    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134980    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2134981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 206 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2134982    filename _pref
2134982  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
2134983    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2134984    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
2134985   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2134986   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2134987   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2134988   +
2134989   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2134990   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2134991   +
2134992   +
2134993   +
2134994   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2134995   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2134996   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2134997    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2134998    quit;
2134999    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135000    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135001    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135002    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
2135003    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135005    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135008    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
2135009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135011    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135012    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135013    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135015    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
2135016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2135017    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135020    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135021    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135023    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135024    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135025    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135025  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.

2135026    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135027    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135028    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135029    filename _pref
2135029  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2135030    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135031    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2135032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2135033   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2135034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2135035   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2135036   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2135037   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135038    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135039    quit;
2135040    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135041    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135042    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135043    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2135044    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135045    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135046    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135048    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135049    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2135050    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135051    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135052    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135053    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135054    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135056    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2135057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2135058    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135060    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135061    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135062    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135063    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135064    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135065    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135066    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135066  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2135067    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135068    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 210 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135070    filename _pref
2135070  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2135071    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135072    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2135073   +
2135074   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2135075   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2135075  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2135076   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2135077   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2135078   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2135079   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2135080   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135081    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135082    quit;
2135083    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135084    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135085    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135086    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2135087    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135088    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135089    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135091    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135092    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2135093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135094    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135095    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135096    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135097    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135099    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2135100    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135101    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135102    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135103    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135104    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135105    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135107    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135108    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135109    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135109  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2135110    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135111    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135112    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135113    filename _pref
2135113  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2135114    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135115    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2135116   +
2135117   +
2135118   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2135119   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2135120   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2135121   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2135122   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2135123   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135124   +
2135125   +
2135126   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2135127   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2135128   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2135129   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2135130   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2135131   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135132   +
2135133   +
2135134   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2135135   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2135136   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2135137   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2135138   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2135139   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135140   +
2135141   +
2135142   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2135143   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2135144   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2135145   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2135146   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2135147   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135148   +
2135149   +
2135150   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2135151   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2135152   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2135153   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2135154   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2135155   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135156   +
2135157   +
2135158   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2135159   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2135160   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2135161   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2135162   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2135163   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135164   +
2135165   +
2135166   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2135167   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2135168   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2135169   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2135170   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2135171   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135172   +
2135173   +
2135174   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2135175   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2135176   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2135177   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2135178   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2135179   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135180   +if
2135181   +_FILTERNORM1 not in ( '.')
2135182   + and
2135183   +_FILTERNORM2 not in ( '.')
2135184   + and
2135185   +_FILTERNORM3 not in ( '.')
2135186   + and
2135187   +_FILTERNORM4 not in ( '.')
2135188   + and
2135189   +_FILTERNORM5 not in ( '.')
2135190   + and
2135191   +_FILTERNORM6 not in ( '.')
2135192   + and
2135193   +_FILTERNORM7 not in ( ' ')
2135194   + and
2135195   +_FILTERNORM8 not in ( ' ')
2135196   +and
2135197   +( Dt_Customer ne .)
2135198   +and ( Income ne . and (Income<=107000))
2135199   +and ( Kidhome ne .)
2135200   +and ( MntFishProducts ne .)
2135201   +and ( MntFruits ne .)
2135202   +and ( MntGoldProds ne .)
2135203   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2135204   +and ( MntSweetProducts ne .)
2135205   +and ( MntWines ne .)
2135206   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2135207   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2135208   +and ( NumStorePurchases ne .)
2135209   +and ( NumWebPurchases ne .)
2135210   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2135211   +and ( Recency ne .)
2135212   +and ( Teenhome ne .)
2135213   +and ( Year_Birth ne .)
2135214   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2135215   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2135216   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2135217   +end;
MPRINT(EM_DIAGRAM):   end;
2135218   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2135219   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135220    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135221    quit;
2135222    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135223    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135224    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135225    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2135226    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135228    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135229    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135230    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135231    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2135232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135233    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135234    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135235    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135236    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135238    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2135239    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2135240    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135242    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135243    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135244    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135246    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135247    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135248    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135248  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2135249    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135250    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 315 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135252    %macro varDept(fcmpdata=,id=);
2135253    %global nobs&id scoreFlag&id;
2135254    %let scoreFlag&id = 0;
2135255    %if &id=1 or ^&fcmpStart %then %do;
2135256    proc sort data=&fcmpdata out=_temp&id nodupkey;
2135257    by NAME;
2135258    where id=&id and LHS in( %let j=1;
2135259    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2135260    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2135261    "&var" %let j = %eval(&j+1);
2135262    %end;
2135263    );
2135264    run;
2135265    %let dsid = %sysfunc(open(_temp&id));
2135266    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135267    %let dsid = %sysfunc(close(&dsid));
2135268    %if &&nobs&id %then %do;
2135269    %let scoreFlag&id = 1;
2135270    %let fcmpStart = 1;
2135271    %end;
2135272    %else %let fcmpStart = 0;
2135273    %end;
2135274    %else %do;
2135275    proc sort data=&fcmpdata out=_tempid;
2135276    where id=&id;
2135277    by LHS;
2135278    run;
2135279    %let dsid = %sysfunc(open(_tempid));
2135280    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135281    %let dsid = %sysfunc(close(&dsid));
2135282    %if ^&&nobs&id %then %do;
2135283    proc datasets lib=work nolist;
2135284    delete _tempid;
2135285    run;
2135286    quit;
2135287    %end;
2135288    %else %do;
2135289    data _tempAll;
2135290    set %let j=%eval(&id-1);
2135291    %do x=1 %to &j;
2135292    %if &&nobs&x %then %do;
2135293    _temp&x %end;
2135294    %end;
2135295    ;
2135296    run;
2135297    proc sql;
2135298    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2135298  ! work._tempid p2 where p.name=p2.lhs;
2135299    quit;
2135300    data _temp&id;
2135301    set _temp&id;
2135302    where LHS ne '' and NAME ne '' and Node ne '';
2135303    run;
2135304    proc datasets lib=work nolist;
2135305    delete _tempAll;
2135306    run;
2135307    %let dsid = %sysfunc(open(_temp&id));
2135308    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135309    %let dsid = %sysfunc(close(&dsid));
2135310    %if ^&&nobs&id %then %do;
2135311    proc datasets lib=work nolist;
2135312    delete _temp&id;
2135313    run;
2135314    quit;
2135315    %end;
2135316    %else %do;
2135317    %let scoreFlag&id = 1;
2135318    data _temp&id;
2135319    set _temp&id;
2135320    where LHS ne NAME and node ne '';
2135321    run;
2135322    %let dsid = %sysfunc(open(_temp&id));
2135323    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135324    %let dsid = %sysfunc(close(&dsid));
2135325    %if ^&&nobs&id %then %do;
2135326    proc datasets lib=work nolist;
2135327    delete _temp&id;
2135328    run;
2135329    quit;
2135330    %end;
2135331    %else %do;
2135332    proc sort data=_temp&id nodupkey;
2135333    by LHS NAME;
2135334    run;
2135335    %end;
2135336    %end;
2135337    %end;
2135338    %end;
2135339    %mend varDept;
2135340    %macro optCode(outdata=fcmpdata);
2135341    %global fcmpStart;
2135342    %let fcmpStart = 0;
2135343    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2135344    %let NumNodes=9;
2135345    %do k=1 %to &NumNodes;
2135346    %vardept(fcmpdata=&outdata, id=&k);
2135347    %end;
2135348    %mend optCode;
2135349    %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 28 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2135350    filename _pref
2135350  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
2135351    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135352    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas.
2135353   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2135354   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2135355   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2135356   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2135357   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2135358   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2135359   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2135360   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2135361   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2135362   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2135363   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2135364   +LENGTH _WARN_ $4
2135365   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2135366   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2135367   +
2135368   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2135369   +
2135370   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2135371   +
2135372   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2135373   +
2135374   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2135375   +
2135376   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2135377   +
2135378   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2135379   +
2135380   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2135381   +
2135382   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2135383   +
2135384   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2135385   +
2135386   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2135387   +
2135388   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135389   +*** Checking missing input Interval
2135390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2135391   +
2135392   +IF NMISS(
2135393   +   AcceptedCmpTotal ,
2135394   +   Mnt ,
2135395   +   MntMeatProducts ,
2135396   +   NumCatalogPurchases ,
2135397   +   RFMstat ,
2135398   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2135399   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2135400   +
2135401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2135402   +END;
MPRINT(EM_DIAGRAM):   END;
2135403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135404   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2135405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135406   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2135407   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2135408   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2135409   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2135410   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2135411   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2135412   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2135413   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2135414   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2135415   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2135416   +END;
MPRINT(EM_DIAGRAM):   END;
2135417   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2135418   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2135419   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2135420   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2135421   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2135422   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2135423   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2135424   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2135425   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2135426   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2135427   +   ELSE S_NumCatalogPurchases
2135428   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2135429   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2135430   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2135431   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2135432   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2135433   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2135434   +END;
MPRINT(EM_DIAGRAM):   END;
2135435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135436   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2135437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135438   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2135439   +   P_DepVar1  =     1.05169539250812 * S_AcceptedCmpTotal
2135440   +          +    -1.01535799807127 * S_Mnt  +     0.90249216466184 *
2135441   +        S_MntMeatProducts  +     0.55600820704456 * S_NumCatalogPurchases
2135442   +          +     0.11616609536854 * S_RFMstat  +    -1.16391829324819 *
2135443   +        S_Recency ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.05169539250812 * S_AcceptedCmpTotal + -1.01535799807127 * 
S_Mnt + 0.90249216466184 * S_MntMeatProducts + 0.55600820704456 * S_NumCatalogPurchases + 
0.11616609536854 * S_RFMstat + -1.16391829324819 * S_Recency ;
2135444   +   P_DepVar1  =    -2.23938090727264 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23938090727264 + P_DepVar1 ;
2135445   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2135446   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2135447   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2135448   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2135449   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2135450   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2135451   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2135452   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2135453   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2135454   +END;
MPRINT(EM_DIAGRAM):   END;
2135455   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2135456   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2135457   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2135458   +END;
MPRINT(EM_DIAGRAM):   END;
2135459   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2135460   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2135461   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2135462   +END;
MPRINT(EM_DIAGRAM):   END;
2135463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135464   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2135465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135466   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2135467   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2135468   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2135469   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2135470   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2135471   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2135472   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2135473   +END;
MPRINT(EM_DIAGRAM):   END;
2135474   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2135475   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2135476   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2135477   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135478    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135479    quit;
2135480    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135481    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135482    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135483    retain ID 2 Node "AutoNeural29";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural29";
2135484    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 256 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135486    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135487    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 256 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135489    proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME 
CREATOR);
2135490    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL29_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135492    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135493    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135494    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135495    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135496    proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
2135497    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2135498    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135500    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135501    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135502    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135503    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135504    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135505    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135506    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135506  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 128 rows and 5 columns.

2135507    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135508    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135509    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 128 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 128 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135510    filename _pref
2135510  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
2135511    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135512    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
2135513   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2135514   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2135515   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2135516   +
2135517   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2135518   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2135519   +
2135520   +
2135521   +
2135522   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2135523   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2135524   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135525    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135526    quit;
2135527    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135528    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135529    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135530    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
2135531    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135532    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135533    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135534    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135535    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135536    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
2135537    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135539    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135540    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135541    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135543    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
2135544    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2135545    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135546    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135548    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135549    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135550    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135551    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135552    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135553    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135553  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.

2135554    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135555    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 128 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135557    filename _pref
2135557  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2135558    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135559    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2135560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2135561   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2135562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2135563   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2135564   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2135565   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135566    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135567    quit;
2135568    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135569    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135570    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135571    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2135572    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135574    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135577    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2135578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135580    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135581    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135582    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135583    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135584    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2135585    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2135586    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135589    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135590    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135592    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135593    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135594    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135594  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2135595    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135596    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135597    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 132 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135598    filename _pref
2135598  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2135599    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135600    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2135601   +
2135602   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2135603   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2135603  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2135604   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2135605   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2135606   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2135607   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2135608   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135609    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135610    quit;
2135611    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135612    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135613    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135614    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2135615    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135616    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135617    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135619    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135620    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2135621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135623    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135624    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135625    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135627    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2135628    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135629    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135630    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135632    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135633    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135634    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135635    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135636    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135637    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135637  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2135638    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135639    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135640    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 171 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135641    filename _pref
2135641  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2135642    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135643    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2135644   +
2135645   +
2135646   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2135647   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2135648   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2135649   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2135650   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2135651   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135652   +
2135653   +
2135654   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2135655   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2135656   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2135657   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2135658   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2135659   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135660   +
2135661   +
2135662   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2135663   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2135664   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2135665   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2135666   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2135667   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135668   +
2135669   +
2135670   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2135671   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2135672   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2135673   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2135674   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2135675   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135676   +
2135677   +
2135678   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2135679   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2135680   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2135681   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2135682   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2135683   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135684   +
2135685   +
2135686   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2135687   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2135688   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2135689   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2135690   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2135691   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135692   +
2135693   +
2135694   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2135695   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2135696   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2135697   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2135698   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2135699   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135700   +
2135701   +
2135702   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2135703   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2135704   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2135705   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2135706   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2135707   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2135708   +if
2135709   +_FILTERNORM1 not in ( '.')
2135710   + and
2135711   +_FILTERNORM2 not in ( '.')
2135712   + and
2135713   +_FILTERNORM3 not in ( '.')
2135714   + and
2135715   +_FILTERNORM4 not in ( '.')
2135716   + and
2135717   +_FILTERNORM5 not in ( '.')
2135718   + and
2135719   +_FILTERNORM6 not in ( '.')
2135720   + and
2135721   +_FILTERNORM7 not in ( ' ')
2135722   + and
2135723   +_FILTERNORM8 not in ( ' ')
2135724   +and
2135725   +( Dt_Customer ne .)
2135726   +and ( Income ne . and (Income<=107000))
2135727   +and ( Kidhome ne .)
2135728   +and ( MntFishProducts ne .)
2135729   +and ( MntFruits ne .)
2135730   +and ( MntGoldProds ne .)
2135731   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2135732   +and ( MntSweetProducts ne .)
2135733   +and ( MntWines ne .)
2135734   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2135735   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2135736   +and ( NumStorePurchases ne .)
2135737   +and ( NumWebPurchases ne .)
2135738   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2135739   +and ( Recency ne .)
2135740   +and ( Teenhome ne .)
2135741   +and ( Year_Birth ne .)
2135742   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2135743   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2135744   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2135745   +end;
MPRINT(EM_DIAGRAM):   end;
2135746   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2135747   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2135748    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2135749    quit;
2135750    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2135751    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2135752    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2135753    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2135754    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2135755    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135756    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2135757    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135758    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135759    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2135760    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135761    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135762    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135763    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2135764    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2135765    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135766    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2135767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2135768    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2135769    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135771    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2135772    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2135773    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2135774    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2135775    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2135776    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2135776  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2135777    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135778    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2135779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 237 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2135780    %macro varDept(fcmpdata=,id=);
2135781    %global nobs&id scoreFlag&id;
2135782    %let scoreFlag&id = 0;
2135783    %if &id=1 or ^&fcmpStart %then %do;
2135784    proc sort data=&fcmpdata out=_temp&id nodupkey;
2135785    by NAME;
2135786    where id=&id and LHS in( %let j=1;
2135787    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2135788    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2135789    "&var" %let j = %eval(&j+1);
2135790    %end;
2135791    );
2135792    run;
2135793    %let dsid = %sysfunc(open(_temp&id));
2135794    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135795    %let dsid = %sysfunc(close(&dsid));
2135796    %if &&nobs&id %then %do;
2135797    %let scoreFlag&id = 1;
2135798    %let fcmpStart = 1;
2135799    %end;
2135800    %else %let fcmpStart = 0;
2135801    %end;
2135802    %else %do;
2135803    proc sort data=&fcmpdata out=_tempid;
2135804    where id=&id;
2135805    by LHS;
2135806    run;
2135807    %let dsid = %sysfunc(open(_tempid));
2135808    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135809    %let dsid = %sysfunc(close(&dsid));
2135810    %if ^&&nobs&id %then %do;
2135811    proc datasets lib=work nolist;
2135812    delete _tempid;
2135813    run;
2135814    quit;
2135815    %end;
2135816    %else %do;
2135817    data _tempAll;
2135818    set %let j=%eval(&id-1);
2135819    %do x=1 %to &j;
2135820    %if &&nobs&x %then %do;
2135821    _temp&x %end;
2135822    %end;
2135823    ;
2135824    run;
2135825    proc sql;
2135826    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2135826  ! work._tempid p2 where p.name=p2.lhs;
2135827    quit;
2135828    data _temp&id;
2135829    set _temp&id;
2135830    where LHS ne '' and NAME ne '' and Node ne '';
2135831    run;
2135832    proc datasets lib=work nolist;
2135833    delete _tempAll;
2135834    run;
2135835    %let dsid = %sysfunc(open(_temp&id));
2135836    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135837    %let dsid = %sysfunc(close(&dsid));
2135838    %if ^&&nobs&id %then %do;
2135839    proc datasets lib=work nolist;
2135840    delete _temp&id;
2135841    run;
2135842    quit;
2135843    %end;
2135844    %else %do;
2135845    %let scoreFlag&id = 1;
2135846    data _temp&id;
2135847    set _temp&id;
2135848    where LHS ne NAME and node ne '';
2135849    run;
2135850    %let dsid = %sysfunc(open(_temp&id));
2135851    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2135852    %let dsid = %sysfunc(close(&dsid));
2135853    %if ^&&nobs&id %then %do;
2135854    proc datasets lib=work nolist;
2135855    delete _temp&id;
2135856    run;
2135857    quit;
2135858    %end;
2135859    %else %do;
2135860    proc sort data=_temp&id nodupkey;
2135861    by LHS NAME;
2135862    run;
2135863    %end;
2135864    %end;
2135865    %end;
2135866    %end;
2135867    %mend varDept;
2135868    %macro optCode(outdata=fcmpdata);
2135869    %global fcmpStart;
2135870    %let fcmpStart = 0;
2135871    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2135872    %let NumNodes=9;
2135873    %do k=1 %to &NumNodes;
2135874    %vardept(fcmpdata=&outdata, id=&k);
2135875    %end;
2135876    %mend optCode;
2135877    %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 22 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2135878    filename _pref
2135878  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
2135879    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2135880    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas.
2135881   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2135882   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2135883   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2135884   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2135885   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2135886   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2135887   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2135888   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2135889   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2135890   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2135891   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2135892   +LENGTH _WARN_ $4
2135893   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2135894   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2135895   +
2135896   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2135897   +
2135898   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2135899   +
2135900   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2135901   +
2135902   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2135903   +
2135904   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2135905   +
2135906   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2135907   +
2135908   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2135909   +
2135910   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2135911   +
2135912   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2135913   +
2135914   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2135915   +
2135916   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2135917   +
2135918   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2135919   +
2135920   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2135921   +
2135922   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2135923   +
2135924   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2135925   +
2135926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135927   +*** Checking missing input Interval
2135928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2135929   +
2135930   +IF NMISS(
2135931   +   AcceptedCmpTotal ,
2135932   +   Mnt ,
2135933   +   MntMeatProducts ,
2135934   +   NumCatalogPurchases ,
2135935   +   RFMstat ,
2135936   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2135937   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2135938   +
2135939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2135940   +END;
MPRINT(EM_DIAGRAM):   END;
2135941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135942   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2135943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135944   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2135945   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2135946   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2135947   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2135948   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2135949   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2135950   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2135951   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2135952   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2135953   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2135954   +END;
MPRINT(EM_DIAGRAM):   END;
2135955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2135956   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2135957   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2135958   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2135959   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2135960   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2135961   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2135962   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2135963   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2135964   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2135965   +   ELSE S_NumCatalogPurchases
2135966   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2135967   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2135968   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2135969   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2135970   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2135971   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2135972   +END;
MPRINT(EM_DIAGRAM):   END;
2135973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135974   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2135975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2135976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2135977   +   H11  =    -0.26722164464712 * S_AcceptedCmpTotal  +     0.04075768430183 *
2135978   +        S_Mnt  +    -0.14387744951395 * S_MntMeatProducts
2135979   +          +    -0.27306285421769 * S_NumCatalogPurchases
2135980   +          +    -0.08264228402157 * S_RFMstat  +     0.65480854062399 *
2135981   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.26722164464712 * S_AcceptedCmpTotal + 0.04075768430183 * S_Mnt 
+ -0.14387744951395 * S_MntMeatProducts + -0.27306285421769 * S_NumCatalogPurchases + 
-0.08264228402157 * S_RFMstat + 0.65480854062399 * S_Recency ;
2135982   +   H12  =    -0.75351416084046 * S_AcceptedCmpTotal  +     0.52277401008012 *
2135983   +        S_Mnt  +    -0.54516413990982 * S_MntMeatProducts
2135984   +          +     -0.0686127004799 * S_NumCatalogPurchases
2135985   +          +     0.08512116766951 * S_RFMstat  +     0.81359799950451 *
2135986   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.75351416084046 * S_AcceptedCmpTotal + 0.52277401008012 * S_Mnt 
+ -0.54516413990982 * S_MntMeatProducts + -0.0686127004799 * S_NumCatalogPurchases + 
0.08512116766951 * S_RFMstat + 0.81359799950451 * S_Recency ;
2135987   +   H13  =     0.02955098348281 * S_AcceptedCmpTotal  +    -0.14081493335567 *
2135988   +        S_Mnt  +    -2.75813103631938 * S_MntMeatProducts
2135989   +          +    -0.74712508136294 * S_NumCatalogPurchases
2135990   +          +    -0.79352948307239 * S_RFMstat  +     0.03918291142705 *
2135991   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.02955098348281 * S_AcceptedCmpTotal + -0.14081493335567 * S_Mnt 
+ -2.75813103631938 * S_MntMeatProducts + -0.74712508136294 * S_NumCatalogPurchases + 
-0.79352948307239 * S_RFMstat + 0.03918291142705 * S_Recency ;
2135992   +   H14  =     0.75907858324573 * S_AcceptedCmpTotal  +     1.38211517497076 *
2135993   +        S_Mnt  +     1.18060955375477 * S_MntMeatProducts
2135994   +          +    -0.37728172570087 * S_NumCatalogPurchases
2135995   +          +    -2.76202813274234 * S_RFMstat  +    -0.15842857977636 *
2135996   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.75907858324573 * S_AcceptedCmpTotal + 1.38211517497076 * S_Mnt + 
1.18060955375477 * S_MntMeatProducts + -0.37728172570087 * S_NumCatalogPurchases + 
-2.76202813274234 * S_RFMstat + -0.15842857977636 * S_Recency ;
2135997   +   H15  =    -0.16016600226913 * S_AcceptedCmpTotal  +     2.47052363890196 *
2135998   +        S_Mnt  +    -0.91872569099803 * S_MntMeatProducts
2135999   +          +    -0.10767997671599 * S_NumCatalogPurchases
2136000   +          +     0.11268223210579 * S_RFMstat  +     0.08646017290432 *
2136001   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.16016600226913 * S_AcceptedCmpTotal + 2.47052363890196 * S_Mnt 
+ -0.91872569099803 * S_MntMeatProducts + -0.10767997671599 * S_NumCatalogPurchases + 
0.11268223210579 * S_RFMstat + 0.08646017290432 * S_Recency ;
2136002   +   H11  =     1.70904496773549 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.70904496773549 + H11 ;
2136003   +   H12  =    -0.75066885844141 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.75066885844141 + H12 ;
2136004   +   H13  =    -3.06547429791923 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.06547429791923 + H13 ;
2136005   +   H14  =    -0.30791973300056 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.30791973300056 + H14 ;
2136006   +   H15  =     1.39876187284436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.39876187284436 + H15 ;
2136007   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2136008   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2136009   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2136010   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2136011   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2136012   +END;
MPRINT(EM_DIAGRAM):   END;
2136013   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2136014   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2136015   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2136016   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2136017   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2136018   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2136019   +END;
MPRINT(EM_DIAGRAM):   END;
2136020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136021   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2136022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136023   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2136024   +   P_DepVar1  =    -4.85125437606138 * H11  +    -2.45566607820423 * H12
2136025   +          +    -5.91091097658466 * H13  +     1.06755367873748 * H14
2136026   +          +    -5.85018554594302 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.85125437606138 * H11 + -2.45566607820423 * H12 + 
-5.91091097658466 * H13 + 1.06755367873748 * H14 + -5.85018554594302 * H15 ;
2136027   +   P_DepVar1  =    -0.91583665378719 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.91583665378719 + P_DepVar1 ;
2136028   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2136029   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2136030   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2136031   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2136032   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2136033   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2136034   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2136035   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2136036   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2136037   +END;
MPRINT(EM_DIAGRAM):   END;
2136038   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2136039   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2136040   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2136041   +END;
MPRINT(EM_DIAGRAM):   END;
2136042   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2136043   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2136044   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2136045   +END;
MPRINT(EM_DIAGRAM):   END;
2136046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136047   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2136048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136049   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2136050   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2136051   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2136052   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2136053   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2136054   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2136055   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2136056   +END;
MPRINT(EM_DIAGRAM):   END;
2136057   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2136058   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2136059   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2136060   +drop
2136061   +H11
2136062   +H12
2136063   +H13
2136064   +H14
2136065   +H15
2136066   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2136067   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136068    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136069    quit;
2136070    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136071    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136072    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136073    retain ID 2 Node "Neural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural27";
2136074    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 506 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136076    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136078    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 506 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136079    proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
2136080    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.NEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136082    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136083    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136084    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136085    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136086    proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
2136087    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2136088    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136090    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136091    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136092    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136094    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136095    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136096    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136096  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 188 rows and 5 columns.

2136097    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136098    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136099    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 188 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 188 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136100    filename _pref
2136100  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
2136101    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136102    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
2136103   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2136104   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2136105   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2136106   +
2136107   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2136108   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2136109   +
2136110   +
2136111   +
2136112   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2136113   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2136114   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136115    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136116    quit;
2136117    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136118    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136119    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136120    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
2136121    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136122    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136123    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136124    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136126    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
2136127    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136128    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136129    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136130    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136131    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136132    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136133    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
2136134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2136135    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136136    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136138    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136139    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136140    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136141    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136142    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136143    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136143  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.

2136144    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136145    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 188 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136147    filename _pref
2136147  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2136148    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136149    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2136150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2136151   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2136152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2136153   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2136154   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2136155   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136156    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136157    quit;
2136158    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136159    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136160    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136161    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2136162    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136164    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136167    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2136168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136169    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136170    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136171    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136172    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136174    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2136175    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2136176    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136177    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136179    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136180    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136182    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136183    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136184    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136184  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2136185    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136186    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136187    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 192 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136188    filename _pref
2136188  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2136189    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136190    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2136191   +
2136192   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2136193   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2136193  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2136194   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2136195   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2136196   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2136197   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2136198   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136199    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136200    quit;
2136201    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136202    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136203    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136204    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2136205    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136206    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136207    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136210    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2136211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136213    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136214    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136215    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136216    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136217    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2136218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136219    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136222    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136223    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136225    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136226    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136227    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136227  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2136228    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136229    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136230    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 231 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136231    filename _pref
2136231  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2136232    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136233    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2136234   +
2136235   +
2136236   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2136237   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2136238   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2136239   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2136240   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2136241   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136242   +
2136243   +
2136244   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2136245   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2136246   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2136247   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2136248   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2136249   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136250   +
2136251   +
2136252   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2136253   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2136254   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2136255   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2136256   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2136257   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136258   +
2136259   +
2136260   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2136261   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2136262   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2136263   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2136264   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2136265   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136266   +
2136267   +
2136268   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2136269   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2136270   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2136271   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2136272   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2136273   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136274   +
2136275   +
2136276   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2136277   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2136278   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2136279   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2136280   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2136281   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136282   +
2136283   +
2136284   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2136285   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2136286   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2136287   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2136288   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2136289   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136290   +
2136291   +
2136292   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2136293   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2136294   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2136295   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2136296   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2136297   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136298   +if
2136299   +_FILTERNORM1 not in ( '.')
2136300   + and
2136301   +_FILTERNORM2 not in ( '.')
2136302   + and
2136303   +_FILTERNORM3 not in ( '.')
2136304   + and
2136305   +_FILTERNORM4 not in ( '.')
2136306   + and
2136307   +_FILTERNORM5 not in ( '.')
2136308   + and
2136309   +_FILTERNORM6 not in ( '.')
2136310   + and
2136311   +_FILTERNORM7 not in ( ' ')
2136312   + and
2136313   +_FILTERNORM8 not in ( ' ')
2136314   +and
2136315   +( Dt_Customer ne .)
2136316   +and ( Income ne . and (Income<=107000))
2136317   +and ( Kidhome ne .)
2136318   +and ( MntFishProducts ne .)
2136319   +and ( MntFruits ne .)
2136320   +and ( MntGoldProds ne .)
2136321   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2136322   +and ( MntSweetProducts ne .)
2136323   +and ( MntWines ne .)
2136324   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2136325   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2136326   +and ( NumStorePurchases ne .)
2136327   +and ( NumWebPurchases ne .)
2136328   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2136329   +and ( Recency ne .)
2136330   +and ( Teenhome ne .)
2136331   +and ( Year_Birth ne .)
2136332   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2136333   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2136334   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2136335   +end;
MPRINT(EM_DIAGRAM):   end;
2136336   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2136337   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136338    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136339    quit;
2136340    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136341    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136342    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136343    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2136344    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136345    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136346    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136348    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136349    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2136350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136351    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136352    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136353    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136354    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136356    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2136357    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2136358    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136359    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136361    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136362    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136363    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136364    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136365    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136366    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136366  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2136367    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136368    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136369    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 297 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136370    %macro varDept(fcmpdata=,id=);
2136371    %global nobs&id scoreFlag&id;
2136372    %let scoreFlag&id = 0;
2136373    %if &id=1 or ^&fcmpStart %then %do;
2136374    proc sort data=&fcmpdata out=_temp&id nodupkey;
2136375    by NAME;
2136376    where id=&id and LHS in( %let j=1;
2136377    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2136378    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2136379    "&var" %let j = %eval(&j+1);
2136380    %end;
2136381    );
2136382    run;
2136383    %let dsid = %sysfunc(open(_temp&id));
2136384    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2136385    %let dsid = %sysfunc(close(&dsid));
2136386    %if &&nobs&id %then %do;
2136387    %let scoreFlag&id = 1;
2136388    %let fcmpStart = 1;
2136389    %end;
2136390    %else %let fcmpStart = 0;
2136391    %end;
2136392    %else %do;
2136393    proc sort data=&fcmpdata out=_tempid;
2136394    where id=&id;
2136395    by LHS;
2136396    run;
2136397    %let dsid = %sysfunc(open(_tempid));
2136398    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2136399    %let dsid = %sysfunc(close(&dsid));
2136400    %if ^&&nobs&id %then %do;
2136401    proc datasets lib=work nolist;
2136402    delete _tempid;
2136403    run;
2136404    quit;
2136405    %end;
2136406    %else %do;
2136407    data _tempAll;
2136408    set %let j=%eval(&id-1);
2136409    %do x=1 %to &j;
2136410    %if &&nobs&x %then %do;
2136411    _temp&x %end;
2136412    %end;
2136413    ;
2136414    run;
2136415    proc sql;
2136416    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2136416  ! work._tempid p2 where p.name=p2.lhs;
2136417    quit;
2136418    data _temp&id;
2136419    set _temp&id;
2136420    where LHS ne '' and NAME ne '' and Node ne '';
2136421    run;
2136422    proc datasets lib=work nolist;
2136423    delete _tempAll;
2136424    run;
2136425    %let dsid = %sysfunc(open(_temp&id));
2136426    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2136427    %let dsid = %sysfunc(close(&dsid));
2136428    %if ^&&nobs&id %then %do;
2136429    proc datasets lib=work nolist;
2136430    delete _temp&id;
2136431    run;
2136432    quit;
2136433    %end;
2136434    %else %do;
2136435    %let scoreFlag&id = 1;
2136436    data _temp&id;
2136437    set _temp&id;
2136438    where LHS ne NAME and node ne '';
2136439    run;
2136440    %let dsid = %sysfunc(open(_temp&id));
2136441    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2136442    %let dsid = %sysfunc(close(&dsid));
2136443    %if ^&&nobs&id %then %do;
2136444    proc datasets lib=work nolist;
2136445    delete _temp&id;
2136446    run;
2136447    quit;
2136448    %end;
2136449    %else %do;
2136450    proc sort data=_temp&id nodupkey;
2136451    by LHS NAME;
2136452    run;
2136453    %end;
2136454    %end;
2136455    %end;
2136456    %end;
2136457    %mend varDept;
2136458    %macro optCode(outdata=fcmpdata);
2136459    %global fcmpStart;
2136460    %let fcmpStart = 0;
2136461    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2136462    %let NumNodes=9;
2136463    %do k=1 %to &NumNodes;
2136464    %vardept(fcmpdata=&outdata, id=&k);
2136465    %end;
2136466    %mend optCode;
2136467    %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 22 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2136468    filename _pref
2136468  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
2136469    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136470    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas.
2136471   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2136472   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2136473   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2136474   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2136475   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2136476   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2136477   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2136478   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2136479   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2136480   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2136481   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2136482   +LENGTH _WARN_ $4
2136483   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2136484   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2136485   +
2136486   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2136487   +
2136488   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2136489   +
2136490   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2136491   +
2136492   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2136493   +
2136494   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2136495   +
2136496   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2136497   +
2136498   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2136499   +
2136500   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2136501   +
2136502   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2136503   +
2136504   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2136505   +
2136506   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2136507   +
2136508   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2136509   +
2136510   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2136511   +
2136512   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2136513   +
2136514   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2136515   +
2136516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136517   +*** Checking missing input Interval
2136518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2136519   +
2136520   +IF NMISS(
2136521   +   AcceptedCmpTotal ,
2136522   +   Mnt ,
2136523   +   MntMeatProducts ,
2136524   +   NumCatalogPurchases ,
2136525   +   RFMstat ,
2136526   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
2136527   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2136528   +
2136529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2136530   +END;
MPRINT(EM_DIAGRAM):   END;
2136531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136532   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2136533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136534   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2136535   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2136536   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2136537   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2136538   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2136539   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2136540   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2136541   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2136542   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2136543   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2136544   +END;
MPRINT(EM_DIAGRAM):   END;
2136545   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2136546   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2136547   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2136548   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2136549   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2136550   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2136551   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2136552   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2136553   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2136554   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2136555   +   ELSE S_NumCatalogPurchases
2136556   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2136557   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2136558   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2136559   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2136560   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2136561   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2136562   +END;
MPRINT(EM_DIAGRAM):   END;
2136563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136564   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2136565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136566   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2136567   +   H1x1_1  =     0.20171954292418 * S_AcceptedCmpTotal
2136568   +          +     0.29079116229788 * S_Mnt  +     0.23711535602944 *
2136569   +        S_MntMeatProducts  +     0.42529081995564 * S_NumCatalogPurchases
2136570   +          +     0.18062808343642 * S_RFMstat  +    -0.63318995037874 *
2136571   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.20171954292418 * S_AcceptedCmpTotal + 0.29079116229788 * 
S_Mnt + 0.23711535602944 * S_MntMeatProducts + 0.42529081995564 * S_NumCatalogPurchases + 
0.18062808343642 * S_RFMstat + -0.63318995037874 * S_Recency ;
2136572   +   H1x1_2  =    -1.98920342874828 * S_AcceptedCmpTotal
2136573   +          +      10.493361229847 * S_Mnt  +    -5.26684519238396 *
2136574   +        S_MntMeatProducts  +     -1.3815052580097 * S_NumCatalogPurchases
2136575   +          +     0.33275103937215 * S_RFMstat  +     0.91614898624506 *
2136576   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.98920342874828 * S_AcceptedCmpTotal + 10.493361229847 * 
S_Mnt + -5.26684519238396 * S_MntMeatProducts + -1.3815052580097 * S_NumCatalogPurchases + 
0.33275103937215 * S_RFMstat + 0.91614898624506 * S_Recency ;
2136577   +   H1x1_3  =     0.73206551950569 * S_AcceptedCmpTotal
2136578   +          +    -1.01976407347302 * S_Mnt  +    -1.13350661445888 *
2136579   +        S_MntMeatProducts  +    -0.07125936639892 * S_NumCatalogPurchases
2136580   +          +    -0.39616853923675 * S_RFMstat  +    -0.82914022268456 *
2136581   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.73206551950569 * S_AcceptedCmpTotal + -1.01976407347302 * 
S_Mnt + -1.13350661445888 * S_MntMeatProducts + -0.07125936639892 * S_NumCatalogPurchases + 
-0.39616853923675 * S_RFMstat + -0.82914022268456 * S_Recency ;
2136582   +   H1x1_4  =    -0.34492981088566 * S_AcceptedCmpTotal
2136583   +          +     1.21190291017614 * S_Mnt  +    -8.17509176920502 *
2136584   +        S_MntMeatProducts  +    -1.48783679196456 * S_NumCatalogPurchases
2136585   +          +     -0.9509465201423 * S_RFMstat  +     0.48054774355638 *
2136586   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34492981088566 * S_AcceptedCmpTotal + 1.21190291017614 * 
S_Mnt + -8.17509176920502 * S_MntMeatProducts + -1.48783679196456 * S_NumCatalogPurchases + 
-0.9509465201423 * S_RFMstat + 0.48054774355638 * S_Recency ;
2136587   +   H1x1_5  =    -1.52519083391934 * S_AcceptedCmpTotal
2136588   +          +    -3.64608769152407 * S_Mnt  +    -6.52923883290239 *
2136589   +        S_MntMeatProducts  +      2.7900190963798 * S_NumCatalogPurchases
2136590   +          +     4.27091451171932 * S_RFMstat  +     2.19744854544492 *
2136591   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.52519083391934 * S_AcceptedCmpTotal + -3.64608769152407 * 
S_Mnt + -6.52923883290239 * S_MntMeatProducts + 2.7900190963798 * S_NumCatalogPurchases + 
4.27091451171932 * S_RFMstat + 2.19744854544492 * S_Recency ;
2136592   +   H1x1_1  =    -3.14760700594037 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.14760700594037 + H1x1_1 ;
2136593   +   H1x1_2  =     3.74367981551949 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.74367981551949 + H1x1_2 ;
2136594   +   H1x1_3  =     0.87862388051597 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87862388051597 + H1x1_3 ;
2136595   +   H1x1_4  =    -7.01266539803621 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.01266539803621 + H1x1_4 ;
2136596   +   H1x1_5  =     4.82694309436143 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.82694309436143 + H1x1_5 ;
2136597   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2136598   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2136599   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2136600   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2136601   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2136602   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2136603   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2136604   +END;
MPRINT(EM_DIAGRAM):   END;
2136605   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2136606   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2136607   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2136608   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2136609   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2136610   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2136611   +END;
MPRINT(EM_DIAGRAM):   END;
2136612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136613   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2136614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136615   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2136616   +   P_DepVar1  =     15.5046788281633 * H1x1_1  +    -4.66397711541227 * H1x1_2
2136617   +          +     4.82395074522384 * H1x1_3  +    -12.9633946998053 * H1x1_4
2136618   +          +    -2.45163227816589 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.5046788281633 * H1x1_1 + -4.66397711541227 * H1x1_2 + 
4.82395074522384 * H1x1_3 + -12.9633946998053 * H1x1_4 + -2.45163227816589 * H1x1_5 ;
2136619   +   P_DepVar1  =    -0.48464899477516 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.48464899477516 + P_DepVar1 ;
2136620   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2136621   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2136622   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2136623   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2136624   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2136625   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2136626   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2136627   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2136628   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2136629   +END;
MPRINT(EM_DIAGRAM):   END;
2136630   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2136631   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2136632   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2136633   +END;
MPRINT(EM_DIAGRAM):   END;
2136634   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2136635   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2136636   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2136637   +END;
MPRINT(EM_DIAGRAM):   END;
2136638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136639   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2136640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2136641   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2136642   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2136643   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2136644   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2136645   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2136646   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2136647   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2136648   +END;
MPRINT(EM_DIAGRAM):   END;
2136649   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2136650   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2136651   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2136652   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136653    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136654    quit;
2136655    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136656    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136657    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136658    retain ID 2 Node "AutoNeural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural27";
2136659    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 533 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 533 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136661    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 533 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 533 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136664    proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME 
CREATOR);
2136665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136667    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136668    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136669    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136671    proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
2136672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2136673    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136674    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136675    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136676    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136677    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136679    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136680    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136681    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136681  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 254 rows and 5 columns.

2136682    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136683    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 254 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 254 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136685    filename _pref
2136685  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
2136686    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136687    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
2136688   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2136689   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
2136690   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
2136691   +
2136692   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
2136693   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2136694   +
2136695   +
2136696   +
2136697   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
2136698   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
2136699   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136700    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136701    quit;
2136702    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136703    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136704    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136705    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
2136706    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136707    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136708    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136710    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136711    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
2136712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136714    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136715    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136716    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136717    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136718    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
2136719    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2136720    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136723    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136724    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136726    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136727    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136728    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136728  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.

2136729    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136730    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 254 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136732    filename _pref
2136732  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2136733    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136734    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2136735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2136736   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2136737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2136738   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2136739   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2136740   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136741    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136742    quit;
2136743    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136744    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136745    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136746    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2136747    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136749    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136750    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136751    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136752    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2136753    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136755    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136756    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136757    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136758    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136759    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2136760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2136761    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136764    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136765    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136766    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136767    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136768    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136769    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136769  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2136770    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136771    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 258 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136773    filename _pref
2136773  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2136774    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136775    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2136776   +
2136777   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2136778   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2136778  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2136779   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2136780   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2136781   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2136782   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2136783   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136784    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136785    quit;
2136786    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136787    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136788    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136789    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2136790    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136791    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2136792    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136793    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136794    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136795    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2136796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136798    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136799    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136800    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136802    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2136803    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136804    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136807    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136808    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136809    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136810    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136811    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136812    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136812  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2136813    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136814    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 297 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136816    filename _pref
2136816  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2136817    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2136818    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2136819   +
2136820   +
2136821   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2136822   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2136823   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2136824   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2136825   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2136826   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136827   +
2136828   +
2136829   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2136830   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2136831   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2136832   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2136833   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2136834   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136835   +
2136836   +
2136837   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2136838   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2136839   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2136840   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2136841   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2136842   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136843   +
2136844   +
2136845   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2136846   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2136847   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2136848   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2136849   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2136850   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136851   +
2136852   +
2136853   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2136854   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2136855   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2136856   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2136857   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2136858   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136859   +
2136860   +
2136861   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2136862   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2136863   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2136864   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2136865   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2136866   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136867   +
2136868   +
2136869   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2136870   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2136871   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2136872   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2136873   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2136874   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136875   +
2136876   +
2136877   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2136878   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2136879   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2136880   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2136881   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2136882   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2136883   +if
2136884   +_FILTERNORM1 not in ( '.')
2136885   + and
2136886   +_FILTERNORM2 not in ( '.')
2136887   + and
2136888   +_FILTERNORM3 not in ( '.')
2136889   + and
2136890   +_FILTERNORM4 not in ( '.')
2136891   + and
2136892   +_FILTERNORM5 not in ( '.')
2136893   + and
2136894   +_FILTERNORM6 not in ( '.')
2136895   + and
2136896   +_FILTERNORM7 not in ( ' ')
2136897   + and
2136898   +_FILTERNORM8 not in ( ' ')
2136899   +and
2136900   +( Dt_Customer ne .)
2136901   +and ( Income ne . and (Income<=107000))
2136902   +and ( Kidhome ne .)
2136903   +and ( MntFishProducts ne .)
2136904   +and ( MntFruits ne .)
2136905   +and ( MntGoldProds ne .)
2136906   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2136907   +and ( MntSweetProducts ne .)
2136908   +and ( MntWines ne .)
2136909   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2136910   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2136911   +and ( NumStorePurchases ne .)
2136912   +and ( NumWebPurchases ne .)
2136913   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2136914   +and ( Recency ne .)
2136915   +and ( Teenhome ne .)
2136916   +and ( Year_Birth ne .)
2136917   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2136918   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2136919   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2136920   +end;
MPRINT(EM_DIAGRAM):   end;
2136921   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2136922   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2136923    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2136924    quit;
2136925    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2136926    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2136927    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2136928    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2136929    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2136930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136931    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2136932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136934    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2136935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136937    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136938    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2136939    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2136940    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136941    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2136942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2136943    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2136944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136946    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2136947    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2136948    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2136949    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136950    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2136951    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2136951  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2136952    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136953    proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl20_FCMP data=_tempx;
2136954    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL20_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL20_FCMP has 363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2136955    %macro varDept(fcmpdata=,id=);
2136956    %global nobs&id scoreFlag&id;
2136957    %let scoreFlag&id = 0;
2136958    %if &id=1 or ^&fcmpStart %then %do;
2136959    proc sort data=&fcmpdata out=_temp&id nodupkey;
2136960    by NAME;
2136961    where id=&id and LHS in( %let j=1;
2136962    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2136963    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2136964    "&var" %let j = %eval(&j+1);
2136965    %end;
2136966    );
2136967    run;
2136968    %let dsid = %sysfunc(open(_temp&id));
2136969    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2136970    %let dsid = %sysfunc(close(&dsid));
2136971    %if &&nobs&id %then %do;
2136972    %let scoreFlag&id = 1;
2136973    %let fcmpStart = 1;
2136974    %end;
2136975    %else %let fcmpStart = 0;
2136976    %end;
2136977    %else %do;
2136978    proc sort data=&fcmpdata out=_tempid;
2136979    where id=&id;
2136980    by LHS;
2136981    run;
2136982    %let dsid = %sysfunc(open(_tempid));
2136983    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2136984    %let dsid = %sysfunc(close(&dsid));
2136985    %if ^&&nobs&id %then %do;
2136986    proc datasets lib=work nolist;
2136987    delete _tempid;
2136988    run;
2136989    quit;
2136990    %end;
2136991    %else %do;
2136992    data _tempAll;
2136993    set %let j=%eval(&id-1);
2136994    %do x=1 %to &j;
2136995    %if &&nobs&x %then %do;
2136996    _temp&x %end;
2136997    %end;
2136998    ;
2136999    run;
2137000    proc sql;
2137001    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2137001  ! work._tempid p2 where p.name=p2.lhs;
2137002    quit;
2137003    data _temp&id;
2137004    set _temp&id;
2137005    where LHS ne '' and NAME ne '' and Node ne '';
2137006    run;
2137007    proc datasets lib=work nolist;
2137008    delete _tempAll;
2137009    run;
2137010    %let dsid = %sysfunc(open(_temp&id));
2137011    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2137012    %let dsid = %sysfunc(close(&dsid));
2137013    %if ^&&nobs&id %then %do;
2137014    proc datasets lib=work nolist;
2137015    delete _temp&id;
2137016    run;
2137017    quit;
2137018    %end;
2137019    %else %do;
2137020    %let scoreFlag&id = 1;
2137021    data _temp&id;
2137022    set _temp&id;
2137023    where LHS ne NAME and node ne '';
2137024    run;
2137025    %let dsid = %sysfunc(open(_temp&id));
2137026    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2137027    %let dsid = %sysfunc(close(&dsid));
2137028    %if ^&&nobs&id %then %do;
2137029    proc datasets lib=work nolist;
2137030    delete _temp&id;
2137031    run;
2137032    quit;
2137033    %end;
2137034    %else %do;
2137035    proc sort data=_temp&id nodupkey;
2137036    by LHS NAME;
2137037    run;
2137038    %end;
2137039    %end;
2137040    %end;
2137041    %end;
2137042    %mend varDept;
2137043    %macro optCode(outdata=fcmpdata);
2137044    %global fcmpStart;
2137045    %let fcmpStart = 0;
2137046    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2137047    %let NumNodes=9;
2137048    %do k=1 %to &NumNodes;
2137049    %vardept(fcmpdata=&outdata, id=&k);
2137050    %end;
2137051    %mend optCode;
2137052    %optcode(outData=EMWS8.Ensmbl20_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 45 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 32 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl20_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2137053    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2137054    * Ensmbl20: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Computing metadata for TRAIN data;
2137055    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL20_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl20\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl20_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl20_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl20_TRAIN out=WORK.M3GVEF9L noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3GVEF9L;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GVEF9L(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3GVEF9L;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GVEF9L;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0FSWMF2 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FSWMF2;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSWMF2;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2YG0WWS(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSWMF2;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FSWMF2;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSWMF2;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FSWMF2;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FSWMF2;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural28_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural28_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl20";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl20";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl20: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl20";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2137375    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2137376    set EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl20_EMINFO;
2137377    where DATA='Ensmbl20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl20' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2137378    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL20_EMINFO.
      WHERE (DATA='Ensmbl20') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2137379    data EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl20_EMINFO;
2137380    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2137381    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2137382    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2137386    run;
2137387    data EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMINFO;
2137388    set EMWS8.Ensmbl20_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl20_EMINFO WORK.MODELTEMP_INFO;
2137389    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL20_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2137390    proc sort data = EMWS8.Ensmbl20_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl20_EMINFO NOTHREADS;
2137391    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2137392    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_EMINFO.
NOTE: The data set EMWS8.ENSMBL20_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2137393    proc sort data = EMWS8.Neural28_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural28_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2137394    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2137395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL28_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2137396    proc sort data = EMWS8.Ensmbl20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl20_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2137397    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2137398    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL20_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2137399    data EMWS8.Ensmbl20_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl20_EMINFO;
2137400    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2137401    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2137402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL20_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2137403    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2137404    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2137405    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2137406    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL20_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL20_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
