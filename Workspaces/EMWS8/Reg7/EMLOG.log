*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.41 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.41 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O29_HGWN
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O29_HGWN new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
890596     proc freq data=EMWS8.Reg7_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Reg7_VariableSet noprint;
890597     table ROLE*LEVEL/out=WORK.Reg7META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Reg7META;
890598     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.REG7_VARIABLESET.
NOTE: The data set WORK.REG7META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
890599     proc print data=WORK.Reg7META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Reg7META label noobs;
890600     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
890601     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
890601   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
890601   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
890602     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
890603     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
890604     run;
 
NOTE: There were 6 observations read from the data set WORK.REG7META.
NOTE: The PROCEDURE PRINT printed page 628.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890605     title10;
MPRINT(EM_DIAGRAM):   title10;
890606     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg7_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.Reg7_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg7_DepVar_DD
out=EMWS8.Reg7_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
890653     data WORK.Reg7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Reg7_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
890654     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
890655     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
890655   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
890655   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
890656        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
890656   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
890656   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
890657     set EMWS8.REG7_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.REG7_DEPVAR_DM( where=(_TYPE_="TARGET"));
890658     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
890659     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
890660     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
890661     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
890662     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
890663     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
890664     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
890665     end;
MPRINT(EM_DIAGRAM):   end;
890666     output;
MPRINT(EM_DIAGRAM):   output;
890667     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.REG7_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.REG7_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
890668     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
890669     proc print data=WORK.Reg7_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Reg7_EVENT noobs label;
890670     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
890671     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
890672     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
890673     run;
 
NOTE: There were 1 observations read from the data set WORK.REG7_EVENT.
NOTE: The PROCEDURE PRINT printed page 629.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890674     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
890675     proc print data = EMWS8.Reg7_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Reg7_DepVar_DM noobs label;
890676     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
890677     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
890678     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
890678   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
890678   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
890679     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
890680     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
890681     run;
 
NOTE: There were 7 observations read from the data set EMWS8.REG7_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 630.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890682     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg7: Preparing metadata for Training
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M20CF7RK;
MPRINT(EM_DIAGRAM):   set WORK.M20CF7RK;
MPRINT(EM_DIAGRAM):   where use = 'Y' or (role = 'INPUT' and use = 'D') ;
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if use = 'D' then use = 'Y';
MPRINT(EM_DIAGRAM):   run;
890692     data WORK.M20CF7RK;
MPRINT(EM_DIAGRAM):    data WORK.M20CF7RK;
890693     set WORK.M20CF7RK end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M20CF7RK end=eof;
890694     output;
MPRINT(EM_DIAGRAM):   output;
890695     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
890696     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
890697     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
890698     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
890699     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
890700     output;
MPRINT(EM_DIAGRAM):   output;
890701     end;
MPRINT(EM_DIAGRAM):   end;
890702     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M20CF7RK.
NOTE: The data set WORK.M20CF7RK has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.REG7_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
890703     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
890704     * Reg7: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Reg7: Create decision matrix;
890705     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
890706     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
890707       length   DepVar                           $  32
890708                COUNT                                8
890709                DATAPRIOR                            8
890710                TRAINPRIOR                           8
890711                DECPRIOR                             8
890712                DECISION1                            8
890713                DECISION2                            8
890714                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
890715
890716       label    COUNT="Level Counts"
890717                DATAPRIOR="Data Proportions"
890718                TRAINPRIOR="Training Proportions"
890719                DECPRIOR="Decision Priors"
890720                DECISION1="1"
890721                DECISION2="0"
890722                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
890723       format   COUNT 10.
890724                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
890725     DepVar="1"; COUNT=359; DATAPRIOR=0.0643642072; TRAINPRIOR=0.15122156697556;
890725   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.0643642072;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
890726     output;
MPRINT(EM_DIAGRAM):   output;
890727     DepVar="0"; COUNT=2015; DATAPRIOR=0.9356357928; TRAINPRIOR=0.84877843302443;
890727   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.9356357928;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
890728     output;
MPRINT(EM_DIAGRAM):   output;
890729     ;
MPRINT(EM_DIAGRAM):   ;
890730     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
890731     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
890732     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
890733     label DECISION1= '1';
890734     label DECISION2= '0';
890735     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
890736     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
890737     data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
890738     set EMWS8.BINNING_TRAIN(keep=
890739     DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
890740     GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
890741     GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
890742     GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5
GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds
GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases
GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
890743     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Reg7: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
890744     *------------------------------------------------------------* ;
890745     * Reg7: DMDBClass Macro ;
890746     *------------------------------------------------------------* ;
890747     %macro DMDBClass;
890748         DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
890749        GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
890750        GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
890751        GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
890752        GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
890753     %mend DMDBClass;
890754     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
890755     * Reg7: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Reg7: DMDBVar Macro ;
890756     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
890757     %macro DMDBVar;
890758         Year_Birth
890759     %mend DMDBVar;
890760     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
890761     * Reg7: Create DMDB;
MPRINT(EM_DIAGRAM):   * Reg7: Create DMDB;
890762     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
890763     proc dmdb batch data=WORK.EM_DMREG
890764     dmdbcat=WORK.Reg7_DMDB
890765     maxlevel = 513
890766     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Reg7_DMDB maxlevel = 513
;
MPRINT(EM_DIAGRAM):   class
890767     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
890768     var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
890769     target
890770     DepVar
890771     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
890772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
890773     quit;
890774     *--- end code ---*;
 
890775     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
890776     * Reg7: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Reg7: Run DMREG procedure;
890777     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
890778     proc dmreg data=EM_DMREG dmdbcat=WORK.Reg7_DMDB
890779     validata = EMWS8.BINNING_VALIDATE
890780     outest = EMWS8.Reg7_EMESTIMATE
890781     outterms = EMWS8.Reg7_OUTTERMS
890782     outmap= EMWS8.Reg7_MAPDS namelen=200
890783     ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Reg7_DMDB validata =
EMWS8.BINNING_VALIDATE outest = EMWS8.Reg7_EMESTIMATE outterms = EMWS8.Reg7_OUTTERMS outmap=
EMWS8.Reg7_MAPDS namelen=200 ;
890784     class
890785     DepVar
890786     GRP_AcceptedCmp5
890787     GRP_AcceptedCmpTotal
890788     GRP_Frq
890789     GRP_Income
890790     GRP_Mnt
890791     GRP_MntFishProducts
890792     GRP_MntGoldProds
890793     GRP_MntMeatProducts
890794     GRP_MntSweetProducts
890795     GRP_MntWines
890796     GRP_NumCatalogPurchases
890797     GRP_NumDistPurchases
890798     GRP_NumWebPurchases
890799     GRP_NumWebVisitsMonth
890800     GRP_RFMstat
890801     GRP_RMntFrq
890802     GRP_Recency
890803     ;
MPRINT(EM_DIAGRAM):   class DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency ;
890804     model DepVar =
890805     GRP_AcceptedCmp5
890806     GRP_AcceptedCmpTotal
890807     GRP_Frq
890808     GRP_Income
890809     GRP_Mnt
890810     GRP_MntFishProducts
890811     GRP_MntGoldProds
890812     GRP_MntMeatProducts
890813     GRP_MntSweetProducts
890814     GRP_MntWines
890815     GRP_NumCatalogPurchases
890816     GRP_NumDistPurchases
890817     GRP_NumWebPurchases
890818     GRP_NumWebVisitsMonth
890819     GRP_RFMstat
890820     GRP_RMntFrq
890821     GRP_Recency
890822     Year_Birth
890823     /error=binomial link=PROBIT
890824     coding=DEVIATION
890825     nodesignprint
890826     selection=STEPWISE choose=NONE
890827     Hierarchy=CLASS
890828     Rule=NONE
890829     ;
MPRINT(EM_DIAGRAM):   model DepVar = GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth /error=binomial
link=PROBIT coding=DEVIATION nodesignprint selection=STEPWISE choose=NONE Hierarchy=CLASS
Rule=NONE ;
890830     ;
MPRINT(EM_DIAGRAM):   ;
890831     code file="C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas"
890832     group=Reg7
890833     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas" group=Reg7 ;
890834     code file="C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas"
890835     group=Reg7
890836     residual
890837     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas" group=Reg7 residual
;
890838     run;
MPRINT(EM_DIAGRAM):   run;
 
 
NOTE: PROC DMREG is modeling the probability that DepVar='1'.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: External file C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas
      opened.
NOTE: External file C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas opened.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.36 seconds
      cpu time            1.35 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           1.40 seconds
      cpu time            1.41 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: The data set EMWS8.REG7_EMESTIMATE has 42 observations and 165 variables.
NOTE: The data set EMWS8.REG7_OUTTERMS has 85 observations and 6 variables.
NOTE: The data set EMWS8.REG7_MAPDS has 2 observations and 130 variables.
NOTE: The PROCEDURE DMREG printed pages 631-644.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           1.43 seconds
      cpu time            1.43 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
890839     quit;
 
890840     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
890841     delete Reg7_DMDB;
MPRINT(EM_DIAGRAM):   delete Reg7_DMDB;
890842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file WORK.REG7_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
890843     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
890844     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
890845     delete Reg7_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Reg7_DMDB / memtype=catalog;
890846     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.REG7_DMDB (memtype=CATALOG).
890847     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
890848     data WORK.ESTIMATE;
MPRINT(EM_DIAGRAM):    data WORK.ESTIMATE;
890849     length _NAME_ $32;
MPRINT(EM_DIAGRAM):   length _NAME_ $32;
890850     set EMWS8.Reg7_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMESTIMATE;
890851     drop _AIC_--_VMISC_;
MPRINT(EM_DIAGRAM):   drop _AIC_--_VMISC_;
890852     where _CHOSEN_ ne '' and _TYPE_ in('PARMS', 'T', 'P');
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_ in('PARMS', 'T', 'P');
890853     drop _STEP_ _CHOSEN_;
MPRINT(EM_DIAGRAM):   drop _STEP_ _CHOSEN_;
890854     select(_TYPE_);
MPRINT(EM_DIAGRAM):   select(_TYPE_);
890855     when('PARMS') _NAME_='Coefficient';
MPRINT(EM_DIAGRAM):   when('PARMS') _NAME_='Coefficient';
890856     when('T') _NAME_='tValue';
MPRINT(EM_DIAGRAM):   when('T') _NAME_='tValue';
890857     when('P') _NAME_='PValue';
MPRINT(EM_DIAGRAM):   when('P') _NAME_='PValue';
890858     otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
890859     end;
MPRINT(EM_DIAGRAM):   end;
890860     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.REG7_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and _TYPE_ in ('P', 'PARMS', 'T');
NOTE: The data set WORK.ESTIMATE has 3 observations and 131 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
890861     proc transpose data=WORK.ESTIMATE out=WORK.ESTIMATE(rename=(_NAME_=Effect));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.ESTIMATE
out=WORK.ESTIMATE(rename=(_NAME_=Effect));
890862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.ESTIMATE.
NOTE: The data set WORK.ESTIMATE has 129 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890863     proc transpose data=EMWS8.Reg7_MAPDS out=WORK.MAP(rename=(_NAME_=Effect
890863   ! INPUT=Variable
890864     ));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg7_MAPDS out=WORK.MAP(rename=(_NAME_=Effect
INPUT=Variable ));
890865     var 'GRP_AcceptedCmp52'n--'Year_Birth'n;
MPRINT(EM_DIAGRAM):   var 'GRP_AcceptedCmp52'n--'Year_Birth'n;
890866     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.REG7_MAPDS.
NOTE: The data set WORK.MAP has 128 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
890867     proc sort data=WORK.MAP;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MAP;
890868     by Effect;
MPRINT(EM_DIAGRAM):   by Effect;
890869     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 128 observations read from the data set WORK.MAP.
NOTE: The data set WORK.MAP has 128 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890870     proc sort data=WORK.ESTIMATE;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ESTIMATE;
890871     by Effect;
MPRINT(EM_DIAGRAM):   by Effect;
890872     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 129 observations read from the data set WORK.ESTIMATE.
NOTE: The data set WORK.ESTIMATE has 129 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890873     data EMWS8.Reg7_EFFECTS(rename=(_LABEL_=EffectLabel));
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EFFECTS(rename=(_LABEL_=EffectLabel));
890874     length Variable ClassLevel $32;
MPRINT(EM_DIAGRAM):   length Variable ClassLevel $32;
890875     merge WORK.ESTIMATE WORK.MAP;
MPRINT(EM_DIAGRAM):   merge WORK.ESTIMATE WORK.MAP;
890876     by Effect;
MPRINT(EM_DIAGRAM):   by Effect;
890877     label Effect = "%sysfunc(sasmsg(sashelp.dmine, rpt_effect_vlabel, NOQUOTE))"
890877   ! Variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Sign =
890877   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_sign_vlabel, NOQUOTE))" ClassLevel =
890878        "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))" Abscoefficient =
890878   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_abscoefficient_vlabel, NOQUOTE))" Coefficient =
890878   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_coefficient_vlabel, NOQUOTE))" _LABEL_ =
890879        "%sysfunc(sasmsg(sashelp.dmine, rpt_effectLabel_vlabel, NOQUOTE))" CODE =
890879   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_scorecodevar_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Effect = "Effect" Variable = "Variable" Sign = "Sign" ClassLevel =
"Level" Abscoefficient = "Absolute Coefficient" Coefficient = "Coefficient" _LABEL_ = "Effect
Label" CODE = "Score Code Variable";
890880     label tvalue = "%sysfunc(sasmsg(sashelp.dmine, rpt_tvalue_vlabel,         NOQUOTE))"
890880   !  abstvalue = "%sysfunc(sasmsg(sashelp.dmine, rpt_absoluteTvalue_vlabel, NOQUOTE))"
890880   ! PValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_pvalue_vlabel,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   label tvalue = "T-value" abstvalue = "Absolute T-value" PValue = "P
Value";
890881     abstvalue = abs(tValue);
MPRINT(EM_DIAGRAM):   abstvalue = abs(tValue);
890882     if index(Effect, 'Intercept') then do;
MPRINT(EM_DIAGRAM):   if index(Effect, 'Intercept') then do;
890883     variable = 'Intercept';
MPRINT(EM_DIAGRAM):   variable = 'Intercept';
890884     classLevel = scan(_LABEL_, 2, '=');
MPRINT(EM_DIAGRAM):   classLevel = scan(_LABEL_, 2, '=');
890885     end;
MPRINT(EM_DIAGRAM):   end;
890886     if ^indexc(variable, '*') then do;
MPRINT(EM_DIAGRAM):   if ^indexc(variable, '*') then do;
890887     if length(effect)>length(variable) then classlevel = substr(Effect,
890887   ! length(variable)+1);
MPRINT(EM_DIAGRAM):   if length(effect)>length(variable) then classlevel = substr(Effect,
length(variable)+1);
890888     end;
MPRINT(EM_DIAGRAM):   end;
890889     if Effect eq '' then Effect = Variable;
MPRINT(EM_DIAGRAM):   if Effect eq '' then Effect = Variable;
890890     if coefficient < 0 then sign = '-';
MPRINT(EM_DIAGRAM):   if coefficient < 0 then sign = '-';
890891     else sign = '+';
MPRINT(EM_DIAGRAM):   else sign = '+';
890892     abscoefficient = abs(coefficient);
MPRINT(EM_DIAGRAM):   abscoefficient = abs(coefficient);
890893     if _LABEL_ = '' then _LABEL_ = Effect;
MPRINT(EM_DIAGRAM):   if _LABEL_ = '' then _LABEL_ = Effect;
890894     if coefficient ne . then output;
MPRINT(EM_DIAGRAM):   if coefficient ne . then output;
890895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      44 at 890881:13   44 at 890892:18
NOTE: There were 129 observations read from the data set WORK.ESTIMATE.
NOTE: There were 128 observations read from the data set WORK.MAP.
NOTE: The data set EMWS8.REG7_EFFECTS has 85 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
890896     proc sort data =EMWS8.Reg7_EFFECTS;
MPRINT(EM_DIAGRAM):    proc sort data =EMWS8.Reg7_EFFECTS;
890897     by
890898     descending abstvalue;
MPRINT(EM_DIAGRAM):   by descending abstvalue;
890899     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 85 observations read from the data set EMWS8.REG7_EFFECTS.
NOTE: The data set EMWS8.REG7_EFFECTS has 85 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
890900     data EMWS8.Reg7_EFFECTS;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EFFECTS;
890901     set EMWS8.Reg7_EFFECTS;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EFFECTS;
890902     format TEffectNum 3.;
MPRINT(EM_DIAGRAM):   format TEffectNum 3.;
890903     label TEffectNum = "%sysfunc(sasmsg(sashelp.dmine, rpt_teffectnum_vlabel, NOQUOTE))"
890903   ! ;
MPRINT(EM_DIAGRAM):   label TEffectNum = "TScore Number";
890904     retain TEffectNum;
MPRINT(EM_DIAGRAM):   retain TEffectNum;
890905     TEffectNum = _N_;
MPRINT(EM_DIAGRAM):   TEffectNum = _N_;
890906     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 85 observations read from the data set EMWS8.REG7_EFFECTS.
NOTE: The data set EMWS8.REG7_EFFECTS has 85 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890907     proc sort data =EMWS8.Reg7_EFFECTS;
MPRINT(EM_DIAGRAM):    proc sort data =EMWS8.Reg7_EFFECTS;
890908     by
890909     descending absCoefficient;
MPRINT(EM_DIAGRAM):   by descending absCoefficient;
890910     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 85 observations read from the data set EMWS8.REG7_EFFECTS.
NOTE: The data set EMWS8.REG7_EFFECTS has 85 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
890911     data EMWS8.Reg7_EFFECTS;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EFFECTS;
890912     set EMWS8.Reg7_EFFECTS;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EFFECTS;
890913     format EffectNum 3.;
MPRINT(EM_DIAGRAM):   format EffectNum 3.;
890914     label EffectNum = "%sysfunc(sasmsg(sashelp.dmine, rpt_effectnum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label EffectNum = "Effect Number";
890915     retain EffectNum;
MPRINT(EM_DIAGRAM):   retain EffectNum;
890916     EffectNum = _N_;
MPRINT(EM_DIAGRAM):   EffectNum = _N_;
890917     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 85 observations read from the data set EMWS8.REG7_EFFECTS.
NOTE: The data set EMWS8.REG7_EFFECTS has 85 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
890918     proc transpose data=EMWS8.Reg7_EMESTIMATE
890918   ! out=EMWS8.Reg7_ESTIMATEGRID(rename=(PARMS=Coefficient T=TValue _NAME_=Effect
890918   ! _LABEL_=EffectLabel));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg7_EMESTIMATE
out=EMWS8.Reg7_ESTIMATEGRID(rename=(PARMS=Coefficient T=TValue _NAME_=Effect
_LABEL_=EffectLabel));
890919     where _CHOSEN_ eq '' and _TYPE_ in('PARMS', 'T', 'P');
MPRINT(EM_DIAGRAM):   where _CHOSEN_ eq '' and _TYPE_ in('PARMS', 'T', 'P');
890920     var 'GRP_AcceptedCmp52'n--'Year_Birth'n;
MPRINT(EM_DIAGRAM):   var 'GRP_AcceptedCmp52'n--'Year_Birth'n;
890921     by _STEP_;
MPRINT(EM_DIAGRAM):   by _STEP_;
890922     id _TYPE_;
MPRINT(EM_DIAGRAM):   id _TYPE_;
890923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.REG7_EMESTIMATE.
      WHERE (_CHOSEN_=' ') and _TYPE_ in ('P', 'PARMS', 'T');
NOTE: The data set EMWS8.REG7_ESTIMATEGRID has 1664 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
890924     data EMWS8.Reg7_ESTIMATEGRID;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_ESTIMATEGRID;
890925     set EMWS8.Reg7_ESTIMATEGRID;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_ESTIMATEGRID;
890926     if EffectLabel eq '' then EffectLabel = Effect;
MPRINT(EM_DIAGRAM):   if EffectLabel eq '' then EffectLabel = Effect;
890927     label EffectLabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_effectLabel_vlabel,
890927   ! NOQUOTE))" Effect = "%sysfunc(sasmsg(sashelp.dmine, rpt_effect_vlabel, NOQUOTE))"
890927   ! Abscoefficient = "%sysfunc(sasmsg(sashelp.dmine, rpt_abscoefficient_vlabel,
890927   ! NOQUOTE))"
890928        Coefficient = "%sysfunc(sasmsg(sashelp.dmine, rpt_coefficient_vlabel, NOQUOTE))"
890928   ! tvalue = "%sysfunc(sasmsg(sashelp.dmine, rpt_tvalue_vlabel,         NOQUOTE))"
890928   ! abstvalue = "%sysfunc(sasmsg(sashelp.dmine, rpt_absoluteTvalue_vlabel, NOQUOTE))"
890928   ! PValue =
890929        "%sysfunc(sasmsg(sashelp.dmine, rpt_pvalue_vlabel,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   label EffectLabel = "Effect Label" Effect = "Effect" Abscoefficient =
"Absolute Coefficient" Coefficient = "Coefficient" tvalue = "T-value" abstvalue = "Absolute
T-value" PValue = "P Value";
890930     AbsCoefficient = abs(Coefficient);
MPRINT(EM_DIAGRAM):   AbsCoefficient = abs(Coefficient);
890931     AbsTValue = abs(TValue);
MPRINT(EM_DIAGRAM):   AbsTValue = abs(TValue);
890932     where coefficient ne .;
MPRINT(EM_DIAGRAM):   where coefficient ne .;
890933     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable PValue is uninitialized.
NOTE: There were 504 observations read from the data set EMWS8.REG7_ESTIMATEGRID.
      WHERE coefficient not = .;
NOTE: The data set EMWS8.REG7_ESTIMATEGRID has 504 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.41 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O029IEMH
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O029IEMH new;
MPRINT(EM_DIAGRAM):   run;
891035     proc transpose data=EMWS8.Reg7_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg7_EMESTIMATE out=WORK.TEMPREG;
891036     where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
891037     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.REG7_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 162 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
891038     proc transpose data=EMWS8.Reg7_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg7_MAPDS out=WORK.TEMPREG2;
891039     var "GRP_AcceptedCmp52"n--"Year_Birth"n;
MPRINT(EM_DIAGRAM):   var "GRP_AcceptedCmp52"n--"Year_Birth"n;
891040     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.REG7_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 128 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
891041     proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
891042     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
891043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 162 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 162 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
891044     proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
891045     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
891046     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 128 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 128 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
891047     data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
891048     merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
891049     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
891050     if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
891051     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 162 observations read from the data set WORK.TEMPREG.
NOTE: There were 128 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 84 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
891052     data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
891053     length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
891054     set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
891055     i=1;
MPRINT(EM_DIAGRAM):   i=1;
891056     do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
891057     term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
891058     i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
891059     output;
MPRINT(EM_DIAGRAM):   output;
891060     end;
MPRINT(EM_DIAGRAM):   end;
891061     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 84 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 84 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
891062     proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
891063     by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
891064     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 84 observations read from the data set WORK.TEMPREG3.
NOTE: 72 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 12 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
891065     filename emflow
891065   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
891066     *------------------------------------------------------------*;
891067     * Reg7: Scoring DATA data;
891068     *------------------------------------------------------------*;
891069     data EMWS8.Reg7_TRAIN
891070     / view=EMWS8.Reg7_TRAIN
891071     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_TRAIN / view=EMWS8.Reg7_TRAIN ;
891072     set EMWS8.BINNING_TRAIN
891073     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
891074     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas.
891075    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
891076    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
891077    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
891078    +
891079    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
891080    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
891081    +
891082    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
891083    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
891084    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
891085    +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
891086    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
891087    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
891088    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
891089    +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
891090    +
891091    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
891092    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
891093    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
891094    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
891095    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
891096    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891097    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
891098    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
891099    +end;
MPRINT(EM_DIAGRAM):   end;
891100    +else do;
MPRINT(EM_DIAGRAM):   else do;
891101    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
891102    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
891103    +   end;
MPRINT(EM_DIAGRAM):   end;
891104    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
891105    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
891106    +   end;
MPRINT(EM_DIAGRAM):   end;
891107    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891108    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
891109    +   end;
MPRINT(EM_DIAGRAM):   end;
891110    +end;
MPRINT(EM_DIAGRAM):   end;
891111    +
891112    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
891113    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
891114    +
891115    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
891116    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
891117    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
891118    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
891119    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891120    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891121    +end;
MPRINT(EM_DIAGRAM):   end;
891122    +else do;
MPRINT(EM_DIAGRAM):   else do;
891123    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891124    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
891125    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891126    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
891127    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
891128    +   end;
MPRINT(EM_DIAGRAM):   end;
891129    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
891130    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
891131    +   end;
MPRINT(EM_DIAGRAM):   end;
891132    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891133    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
891134    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891135    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891136    +   end;
MPRINT(EM_DIAGRAM):   end;
891137    +end;
MPRINT(EM_DIAGRAM):   end;
891138    +
891139    +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
891140    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
891141    +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
891142    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
891143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891145    +end;
MPRINT(EM_DIAGRAM):   end;
891146    +else do;
MPRINT(EM_DIAGRAM):   else do;
891147    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891148    +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
891149    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891150    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891151    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
891152    +   end;
MPRINT(EM_DIAGRAM):   end;
891153    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
891154    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
891155    +   end;
MPRINT(EM_DIAGRAM):   end;
891156    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891157    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
891158    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891159    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891160    +   end;
MPRINT(EM_DIAGRAM):   end;
891161    +end;
MPRINT(EM_DIAGRAM):   end;
891162    +
891163    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
891164    +drop _3_0 _3_1 _3_2 _3_3 _3_4 _3_5 _3_6 _3_7 _3_8 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 _3_3 _3_4 _3_5 _3_6 _3_7 _3_8 ;
891165    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891166    +_3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
891167    +_3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
891168    +_3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
891169    +_3_3 = 0;
MPRINT(EM_DIAGRAM):   _3_3 = 0;
891170    +_3_4 = 0;
MPRINT(EM_DIAGRAM):   _3_4 = 0;
891171    +_3_5 = 0;
MPRINT(EM_DIAGRAM):   _3_5 = 0;
891172    +_3_6 = 0;
MPRINT(EM_DIAGRAM):   _3_6 = 0;
891173    +_3_7 = 0;
MPRINT(EM_DIAGRAM):   _3_7 = 0;
891174    +_3_8 = 0;
MPRINT(EM_DIAGRAM):   _3_8 = 0;
891175    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
891176    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
891177    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
891178    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
891179    +   _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
891180    +   _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
891181    +   _3_5 = .;
MPRINT(EM_DIAGRAM):   _3_5 = .;
891182    +   _3_6 = .;
MPRINT(EM_DIAGRAM):   _3_6 = .;
891183    +   _3_7 = .;
MPRINT(EM_DIAGRAM):   _3_7 = .;
891184    +   _3_8 = .;
MPRINT(EM_DIAGRAM):   _3_8 = .;
891185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891187    +end;
MPRINT(EM_DIAGRAM):   end;
891188    +else do;
MPRINT(EM_DIAGRAM):   else do;
891189    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891190    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
891191    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891192    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891193    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
891194    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
891195    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
891196    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
891197    +               _3_8 = 1;
MPRINT(EM_DIAGRAM):   _3_8 = 1;
891198    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891199    +            end;
MPRINT(EM_DIAGRAM):   end;
891200    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891201    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
891202    +                  _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
891203    +                  _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
891204    +                  _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
891205    +                  _3_3 = -1;
MPRINT(EM_DIAGRAM):   _3_3 = -1;
891206    +                  _3_4 = -1;
MPRINT(EM_DIAGRAM):   _3_4 = -1;
891207    +                  _3_5 = -1;
MPRINT(EM_DIAGRAM):   _3_5 = -1;
891208    +                  _3_6 = -1;
MPRINT(EM_DIAGRAM):   _3_6 = -1;
891209    +                  _3_7 = -1;
MPRINT(EM_DIAGRAM):   _3_7 = -1;
891210    +                  _3_8 = -1;
MPRINT(EM_DIAGRAM):   _3_8 = -1;
891211    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891212    +               end;
MPRINT(EM_DIAGRAM):   end;
891213    +            end;
MPRINT(EM_DIAGRAM):   end;
891214    +         end;
MPRINT(EM_DIAGRAM):   end;
891215    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891216    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
891217    +               _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
891218    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891219    +            end;
MPRINT(EM_DIAGRAM):   end;
891220    +         end;
MPRINT(EM_DIAGRAM):   end;
891221    +      end;
MPRINT(EM_DIAGRAM):   end;
891222    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891223    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891224    +            _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
891225    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891226    +         end;
MPRINT(EM_DIAGRAM):   end;
891227    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891228    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891229    +               _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
891230    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891231    +            end;
MPRINT(EM_DIAGRAM):   end;
891232    +         end;
MPRINT(EM_DIAGRAM):   end;
891233    +      end;
MPRINT(EM_DIAGRAM):   end;
891234    +   end;
MPRINT(EM_DIAGRAM):   end;
891235    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891236    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891237    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
891238    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891239    +               _3_3 = 1;
MPRINT(EM_DIAGRAM):   _3_3 = 1;
891240    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891241    +            end;
MPRINT(EM_DIAGRAM):   end;
891242    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891243    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891244    +                  _3_4 = 1;
MPRINT(EM_DIAGRAM):   _3_4 = 1;
891245    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891246    +               end;
MPRINT(EM_DIAGRAM):   end;
891247    +            end;
MPRINT(EM_DIAGRAM):   end;
891248    +         end;
MPRINT(EM_DIAGRAM):   end;
891249    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891250    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
891251    +               _3_5 = 1;
MPRINT(EM_DIAGRAM):   _3_5 = 1;
891252    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891253    +            end;
MPRINT(EM_DIAGRAM):   end;
891254    +         end;
MPRINT(EM_DIAGRAM):   end;
891255    +      end;
MPRINT(EM_DIAGRAM):   end;
891256    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891257    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
891258    +            _3_6 = 1;
MPRINT(EM_DIAGRAM):   _3_6 = 1;
891259    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891260    +         end;
MPRINT(EM_DIAGRAM):   end;
891261    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891262    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
891263    +               _3_7 = 1;
MPRINT(EM_DIAGRAM):   _3_7 = 1;
891264    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891265    +            end;
MPRINT(EM_DIAGRAM):   end;
891266    +         end;
MPRINT(EM_DIAGRAM):   end;
891267    +      end;
MPRINT(EM_DIAGRAM):   end;
891268    +   end;
MPRINT(EM_DIAGRAM):   end;
891269    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
891270    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
891271    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
891272    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
891273    +      _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
891274    +      _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
891275    +      _3_5 = .;
MPRINT(EM_DIAGRAM):   _3_5 = .;
891276    +      _3_6 = .;
MPRINT(EM_DIAGRAM):   _3_6 = .;
891277    +      _3_7 = .;
MPRINT(EM_DIAGRAM):   _3_7 = .;
891278    +      _3_8 = .;
MPRINT(EM_DIAGRAM):   _3_8 = .;
891279    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891280    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891281    +   end;
MPRINT(EM_DIAGRAM):   end;
891282    +end;
MPRINT(EM_DIAGRAM):   end;
891283    +
891284    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
891285    +drop _4_0 _4_1 _4_2 _4_3 _4_4 _4_5 _4_6 _4_7 _4_8 ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 _4_5 _4_6 _4_7 _4_8 ;
891286    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891287    +_4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
891288    +_4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
891289    +_4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
891290    +_4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
891291    +_4_4 = 0;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
891292    +_4_5 = 0;
MPRINT(EM_DIAGRAM):   _4_5 = 0;
891293    +_4_6 = 0;
MPRINT(EM_DIAGRAM):   _4_6 = 0;
891294    +_4_7 = 0;
MPRINT(EM_DIAGRAM):   _4_7 = 0;
891295    +_4_8 = 0;
MPRINT(EM_DIAGRAM):   _4_8 = 0;
891296    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
891297    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
891298    +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
891299    +   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
891300    +   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
891301    +   _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
891302    +   _4_5 = .;
MPRINT(EM_DIAGRAM):   _4_5 = .;
891303    +   _4_6 = .;
MPRINT(EM_DIAGRAM):   _4_6 = .;
891304    +   _4_7 = .;
MPRINT(EM_DIAGRAM):   _4_7 = .;
891305    +   _4_8 = .;
MPRINT(EM_DIAGRAM):   _4_8 = .;
891306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891308    +end;
MPRINT(EM_DIAGRAM):   end;
891309    +else do;
MPRINT(EM_DIAGRAM):   else do;
891310    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891311    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
891312    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891313    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891314    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
891315    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
891316    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
891317    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
891318    +               _4_8 = 1;
MPRINT(EM_DIAGRAM):   _4_8 = 1;
891319    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891320    +            end;
MPRINT(EM_DIAGRAM):   end;
891321    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891322    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
891323    +                  _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
891324    +                  _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
891325    +                  _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
891326    +                  _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
891327    +                  _4_4 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
891328    +                  _4_5 = -1;
MPRINT(EM_DIAGRAM):   _4_5 = -1;
891329    +                  _4_6 = -1;
MPRINT(EM_DIAGRAM):   _4_6 = -1;
891330    +                  _4_7 = -1;
MPRINT(EM_DIAGRAM):   _4_7 = -1;
891331    +                  _4_8 = -1;
MPRINT(EM_DIAGRAM):   _4_8 = -1;
891332    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891333    +               end;
MPRINT(EM_DIAGRAM):   end;
891334    +            end;
MPRINT(EM_DIAGRAM):   end;
891335    +         end;
MPRINT(EM_DIAGRAM):   end;
891336    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891337    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
891338    +               _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
891339    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891340    +            end;
MPRINT(EM_DIAGRAM):   end;
891341    +         end;
MPRINT(EM_DIAGRAM):   end;
891342    +      end;
MPRINT(EM_DIAGRAM):   end;
891343    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891344    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891345    +            _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
891346    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891347    +         end;
MPRINT(EM_DIAGRAM):   end;
891348    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891349    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891350    +               _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
891351    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891352    +            end;
MPRINT(EM_DIAGRAM):   end;
891353    +         end;
MPRINT(EM_DIAGRAM):   end;
891354    +      end;
MPRINT(EM_DIAGRAM):   end;
891355    +   end;
MPRINT(EM_DIAGRAM):   end;
891356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891357    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891358    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
891359    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891360    +               _4_3 = 1;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
891361    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891362    +            end;
MPRINT(EM_DIAGRAM):   end;
891363    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891364    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891365    +                  _4_4 = 1;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
891366    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891367    +               end;
MPRINT(EM_DIAGRAM):   end;
891368    +            end;
MPRINT(EM_DIAGRAM):   end;
891369    +         end;
MPRINT(EM_DIAGRAM):   end;
891370    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891371    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
891372    +               _4_5 = 1;
MPRINT(EM_DIAGRAM):   _4_5 = 1;
891373    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891374    +            end;
MPRINT(EM_DIAGRAM):   end;
891375    +         end;
MPRINT(EM_DIAGRAM):   end;
891376    +      end;
MPRINT(EM_DIAGRAM):   end;
891377    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891378    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
891379    +            _4_6 = 1;
MPRINT(EM_DIAGRAM):   _4_6 = 1;
891380    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891381    +         end;
MPRINT(EM_DIAGRAM):   end;
891382    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891383    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
891384    +               _4_7 = 1;
MPRINT(EM_DIAGRAM):   _4_7 = 1;
891385    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891386    +            end;
MPRINT(EM_DIAGRAM):   end;
891387    +         end;
MPRINT(EM_DIAGRAM):   end;
891388    +      end;
MPRINT(EM_DIAGRAM):   end;
891389    +   end;
MPRINT(EM_DIAGRAM):   end;
891390    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
891391    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
891392    +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
891393    +      _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
891394    +      _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
891395    +      _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
891396    +      _4_5 = .;
MPRINT(EM_DIAGRAM):   _4_5 = .;
891397    +      _4_6 = .;
MPRINT(EM_DIAGRAM):   _4_6 = .;
891398    +      _4_7 = .;
MPRINT(EM_DIAGRAM):   _4_7 = .;
891399    +      _4_8 = .;
MPRINT(EM_DIAGRAM):   _4_8 = .;
891400    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891401    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891402    +   end;
MPRINT(EM_DIAGRAM):   end;
891403    +end;
MPRINT(EM_DIAGRAM):   end;
891404    +
891405    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
891406    +drop _6_0 _6_1 _6_2 _6_3 _6_4 _6_5 _6_6 _6_7 ;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 _6_2 _6_3 _6_4 _6_5 _6_6 _6_7 ;
891407    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891408    +_6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
891409    +_6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
891410    +_6_2 = 0;
MPRINT(EM_DIAGRAM):   _6_2 = 0;
891411    +_6_3 = 0;
MPRINT(EM_DIAGRAM):   _6_3 = 0;
891412    +_6_4 = 0;
MPRINT(EM_DIAGRAM):   _6_4 = 0;
891413    +_6_5 = 0;
MPRINT(EM_DIAGRAM):   _6_5 = 0;
891414    +_6_6 = 0;
MPRINT(EM_DIAGRAM):   _6_6 = 0;
891415    +_6_7 = 0;
MPRINT(EM_DIAGRAM):   _6_7 = 0;
891416    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
891417    +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
891418    +   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
891419    +   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
891420    +   _6_3 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
891421    +   _6_4 = .;
MPRINT(EM_DIAGRAM):   _6_4 = .;
891422    +   _6_5 = .;
MPRINT(EM_DIAGRAM):   _6_5 = .;
891423    +   _6_6 = .;
MPRINT(EM_DIAGRAM):   _6_6 = .;
891424    +   _6_7 = .;
MPRINT(EM_DIAGRAM):   _6_7 = .;
891425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891427    +end;
MPRINT(EM_DIAGRAM):   end;
891428    +else do;
MPRINT(EM_DIAGRAM):   else do;
891429    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891430    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
891431    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891432    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891433    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
891434    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
891435    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
891436    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
891437    +               _6_7 = 1;
MPRINT(EM_DIAGRAM):   _6_7 = 1;
891438    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891439    +            end;
MPRINT(EM_DIAGRAM):   end;
891440    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891441    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
891442    +                  _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
891443    +                  _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
891444    +                  _6_2 = -1;
MPRINT(EM_DIAGRAM):   _6_2 = -1;
891445    +                  _6_3 = -1;
MPRINT(EM_DIAGRAM):   _6_3 = -1;
891446    +                  _6_4 = -1;
MPRINT(EM_DIAGRAM):   _6_4 = -1;
891447    +                  _6_5 = -1;
MPRINT(EM_DIAGRAM):   _6_5 = -1;
891448    +                  _6_6 = -1;
MPRINT(EM_DIAGRAM):   _6_6 = -1;
891449    +                  _6_7 = -1;
MPRINT(EM_DIAGRAM):   _6_7 = -1;
891450    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891451    +               end;
MPRINT(EM_DIAGRAM):   end;
891452    +            end;
MPRINT(EM_DIAGRAM):   end;
891453    +         end;
MPRINT(EM_DIAGRAM):   end;
891454    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891455    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891456    +               _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
891457    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891458    +            end;
MPRINT(EM_DIAGRAM):   end;
891459    +         end;
MPRINT(EM_DIAGRAM):   end;
891460    +      end;
MPRINT(EM_DIAGRAM):   end;
891461    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891462    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891463    +            _6_1 = 1;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
891464    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891465    +         end;
MPRINT(EM_DIAGRAM):   end;
891466    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891467    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891468    +               _6_2 = 1;
MPRINT(EM_DIAGRAM):   _6_2 = 1;
891469    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891470    +            end;
MPRINT(EM_DIAGRAM):   end;
891471    +         end;
MPRINT(EM_DIAGRAM):   end;
891472    +      end;
MPRINT(EM_DIAGRAM):   end;
891473    +   end;
MPRINT(EM_DIAGRAM):   end;
891474    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891475    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891476    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891477    +            _6_3 = 1;
MPRINT(EM_DIAGRAM):   _6_3 = 1;
891478    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891479    +         end;
MPRINT(EM_DIAGRAM):   end;
891480    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891481    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
891482    +               _6_4 = 1;
MPRINT(EM_DIAGRAM):   _6_4 = 1;
891483    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891484    +            end;
MPRINT(EM_DIAGRAM):   end;
891485    +         end;
MPRINT(EM_DIAGRAM):   end;
891486    +      end;
MPRINT(EM_DIAGRAM):   end;
891487    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891488    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
891489    +            _6_5 = 1;
MPRINT(EM_DIAGRAM):   _6_5 = 1;
891490    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891491    +         end;
MPRINT(EM_DIAGRAM):   end;
891492    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891493    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
891494    +               _6_6 = 1;
MPRINT(EM_DIAGRAM):   _6_6 = 1;
891495    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891496    +            end;
MPRINT(EM_DIAGRAM):   end;
891497    +         end;
MPRINT(EM_DIAGRAM):   end;
891498    +      end;
MPRINT(EM_DIAGRAM):   end;
891499    +   end;
MPRINT(EM_DIAGRAM):   end;
891500    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
891501    +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
891502    +      _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
891503    +      _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
891504    +      _6_3 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
891505    +      _6_4 = .;
MPRINT(EM_DIAGRAM):   _6_4 = .;
891506    +      _6_5 = .;
MPRINT(EM_DIAGRAM):   _6_5 = .;
891507    +      _6_6 = .;
MPRINT(EM_DIAGRAM):   _6_6 = .;
891508    +      _6_7 = .;
MPRINT(EM_DIAGRAM):   _6_7 = .;
891509    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891510    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891511    +   end;
MPRINT(EM_DIAGRAM):   end;
891512    +end;
MPRINT(EM_DIAGRAM):   end;
891513    +
891514    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
891515    +drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 ;
891516    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891517    +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
891518    +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
891519    +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
891520    +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
891521    +_8_4 = 0;
MPRINT(EM_DIAGRAM):   _8_4 = 0;
891522    +_8_5 = 0;
MPRINT(EM_DIAGRAM):   _8_5 = 0;
891523    +_8_6 = 0;
MPRINT(EM_DIAGRAM):   _8_6 = 0;
891524    +_8_7 = 0;
MPRINT(EM_DIAGRAM):   _8_7 = 0;
891525    +_8_8 = 0;
MPRINT(EM_DIAGRAM):   _8_8 = 0;
891526    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
891527    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
891528    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
891529    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
891530    +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
891531    +   _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
891532    +   _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
891533    +   _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
891534    +   _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
891535    +   _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
891536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891538    +end;
MPRINT(EM_DIAGRAM):   end;
891539    +else do;
MPRINT(EM_DIAGRAM):   else do;
891540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891541    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
891542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891543    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891544    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
891545    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
891546    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
891547    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
891548    +               _8_8 = 1;
MPRINT(EM_DIAGRAM):   _8_8 = 1;
891549    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891550    +            end;
MPRINT(EM_DIAGRAM):   end;
891551    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891552    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
891553    +                  _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
891554    +                  _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
891555    +                  _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
891556    +                  _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
891557    +                  _8_4 = -1;
MPRINT(EM_DIAGRAM):   _8_4 = -1;
891558    +                  _8_5 = -1;
MPRINT(EM_DIAGRAM):   _8_5 = -1;
891559    +                  _8_6 = -1;
MPRINT(EM_DIAGRAM):   _8_6 = -1;
891560    +                  _8_7 = -1;
MPRINT(EM_DIAGRAM):   _8_7 = -1;
891561    +                  _8_8 = -1;
MPRINT(EM_DIAGRAM):   _8_8 = -1;
891562    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891563    +               end;
MPRINT(EM_DIAGRAM):   end;
891564    +            end;
MPRINT(EM_DIAGRAM):   end;
891565    +         end;
MPRINT(EM_DIAGRAM):   end;
891566    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891567    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
891568    +               _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
891569    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891570    +            end;
MPRINT(EM_DIAGRAM):   end;
891571    +         end;
MPRINT(EM_DIAGRAM):   end;
891572    +      end;
MPRINT(EM_DIAGRAM):   end;
891573    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891574    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891575    +            _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
891576    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891577    +         end;
MPRINT(EM_DIAGRAM):   end;
891578    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891579    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891580    +               _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
891581    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891582    +            end;
MPRINT(EM_DIAGRAM):   end;
891583    +         end;
MPRINT(EM_DIAGRAM):   end;
891584    +      end;
MPRINT(EM_DIAGRAM):   end;
891585    +   end;
MPRINT(EM_DIAGRAM):   end;
891586    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891587    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891588    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
891589    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891590    +               _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
891591    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891592    +            end;
MPRINT(EM_DIAGRAM):   end;
891593    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891594    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891595    +                  _8_4 = 1;
MPRINT(EM_DIAGRAM):   _8_4 = 1;
891596    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891597    +               end;
MPRINT(EM_DIAGRAM):   end;
891598    +            end;
MPRINT(EM_DIAGRAM):   end;
891599    +         end;
MPRINT(EM_DIAGRAM):   end;
891600    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891601    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
891602    +               _8_5 = 1;
MPRINT(EM_DIAGRAM):   _8_5 = 1;
891603    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891604    +            end;
MPRINT(EM_DIAGRAM):   end;
891605    +         end;
MPRINT(EM_DIAGRAM):   end;
891606    +      end;
MPRINT(EM_DIAGRAM):   end;
891607    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891608    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
891609    +            _8_6 = 1;
MPRINT(EM_DIAGRAM):   _8_6 = 1;
891610    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891611    +         end;
MPRINT(EM_DIAGRAM):   end;
891612    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891613    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
891614    +               _8_7 = 1;
MPRINT(EM_DIAGRAM):   _8_7 = 1;
891615    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891616    +            end;
MPRINT(EM_DIAGRAM):   end;
891617    +         end;
MPRINT(EM_DIAGRAM):   end;
891618    +      end;
MPRINT(EM_DIAGRAM):   end;
891619    +   end;
MPRINT(EM_DIAGRAM):   end;
891620    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
891621    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
891622    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
891623    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
891624    +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
891625    +      _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
891626    +      _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
891627    +      _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
891628    +      _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
891629    +      _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
891630    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891631    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891632    +   end;
MPRINT(EM_DIAGRAM):   end;
891633    +end;
MPRINT(EM_DIAGRAM):   end;
891634    +
891635    +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
891636    +drop _9_0 _9_1 _9_2 _9_3 _9_4 _9_5 _9_6 _9_7 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 _9_4 _9_5 _9_6 _9_7 ;
891637    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891638    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
891639    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
891640    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
891641    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
891642    +_9_4 = 0;
MPRINT(EM_DIAGRAM):   _9_4 = 0;
891643    +_9_5 = 0;
MPRINT(EM_DIAGRAM):   _9_5 = 0;
891644    +_9_6 = 0;
MPRINT(EM_DIAGRAM):   _9_6 = 0;
891645    +_9_7 = 0;
MPRINT(EM_DIAGRAM):   _9_7 = 0;
891646    +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
891647    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
891648    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
891649    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
891650    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
891651    +   _9_4 = .;
MPRINT(EM_DIAGRAM):   _9_4 = .;
891652    +   _9_5 = .;
MPRINT(EM_DIAGRAM):   _9_5 = .;
891653    +   _9_6 = .;
MPRINT(EM_DIAGRAM):   _9_6 = .;
891654    +   _9_7 = .;
MPRINT(EM_DIAGRAM):   _9_7 = .;
891655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891657    +end;
MPRINT(EM_DIAGRAM):   end;
891658    +else do;
MPRINT(EM_DIAGRAM):   else do;
891659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891660    +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
891661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891662    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891663    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
891664    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
891665    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
891666    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
891667    +               _9_7 = 1;
MPRINT(EM_DIAGRAM):   _9_7 = 1;
891668    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891669    +            end;
MPRINT(EM_DIAGRAM):   end;
891670    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891671    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
891672    +                  _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
891673    +                  _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
891674    +                  _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
891675    +                  _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
891676    +                  _9_4 = -1;
MPRINT(EM_DIAGRAM):   _9_4 = -1;
891677    +                  _9_5 = -1;
MPRINT(EM_DIAGRAM):   _9_5 = -1;
891678    +                  _9_6 = -1;
MPRINT(EM_DIAGRAM):   _9_6 = -1;
891679    +                  _9_7 = -1;
MPRINT(EM_DIAGRAM):   _9_7 = -1;
891680    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891681    +               end;
MPRINT(EM_DIAGRAM):   end;
891682    +            end;
MPRINT(EM_DIAGRAM):   end;
891683    +         end;
MPRINT(EM_DIAGRAM):   end;
891684    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891685    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891686    +               _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
891687    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891688    +            end;
MPRINT(EM_DIAGRAM):   end;
891689    +         end;
MPRINT(EM_DIAGRAM):   end;
891690    +      end;
MPRINT(EM_DIAGRAM):   end;
891691    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891692    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891693    +            _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
891694    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891695    +         end;
MPRINT(EM_DIAGRAM):   end;
891696    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891697    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891698    +               _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
891699    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891700    +            end;
MPRINT(EM_DIAGRAM):   end;
891701    +         end;
MPRINT(EM_DIAGRAM):   end;
891702    +      end;
MPRINT(EM_DIAGRAM):   end;
891703    +   end;
MPRINT(EM_DIAGRAM):   end;
891704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891705    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891706    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891707    +            _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
891708    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891709    +         end;
MPRINT(EM_DIAGRAM):   end;
891710    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891711    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
891712    +               _9_4 = 1;
MPRINT(EM_DIAGRAM):   _9_4 = 1;
891713    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891714    +            end;
MPRINT(EM_DIAGRAM):   end;
891715    +         end;
MPRINT(EM_DIAGRAM):   end;
891716    +      end;
MPRINT(EM_DIAGRAM):   end;
891717    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891718    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
891719    +            _9_5 = 1;
MPRINT(EM_DIAGRAM):   _9_5 = 1;
891720    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891721    +         end;
MPRINT(EM_DIAGRAM):   end;
891722    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891723    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
891724    +               _9_6 = 1;
MPRINT(EM_DIAGRAM):   _9_6 = 1;
891725    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891726    +            end;
MPRINT(EM_DIAGRAM):   end;
891727    +         end;
MPRINT(EM_DIAGRAM):   end;
891728    +      end;
MPRINT(EM_DIAGRAM):   end;
891729    +   end;
MPRINT(EM_DIAGRAM):   end;
891730    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
891731    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
891732    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
891733    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
891734    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
891735    +      _9_4 = .;
MPRINT(EM_DIAGRAM):   _9_4 = .;
891736    +      _9_5 = .;
MPRINT(EM_DIAGRAM):   _9_5 = .;
891737    +      _9_6 = .;
MPRINT(EM_DIAGRAM):   _9_6 = .;
891738    +      _9_7 = .;
MPRINT(EM_DIAGRAM):   _9_7 = .;
891739    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891740    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891741    +   end;
MPRINT(EM_DIAGRAM):   end;
891742    +end;
MPRINT(EM_DIAGRAM):   end;
891743    +
891744    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
891745    +drop _10_0 _10_1 _10_2 _10_3 _10_4 _10_5 _10_6 _10_7 _10_8 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 _10_3 _10_4 _10_5 _10_6 _10_7 _10_8 ;
891746    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891747    +_10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
891748    +_10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
891749    +_10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
891750    +_10_3 = 0;
MPRINT(EM_DIAGRAM):   _10_3 = 0;
891751    +_10_4 = 0;
MPRINT(EM_DIAGRAM):   _10_4 = 0;
891752    +_10_5 = 0;
MPRINT(EM_DIAGRAM):   _10_5 = 0;
891753    +_10_6 = 0;
MPRINT(EM_DIAGRAM):   _10_6 = 0;
891754    +_10_7 = 0;
MPRINT(EM_DIAGRAM):   _10_7 = 0;
891755    +_10_8 = 0;
MPRINT(EM_DIAGRAM):   _10_8 = 0;
891756    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
891757    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
891758    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
891759    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
891760    +   _10_3 = .;
MPRINT(EM_DIAGRAM):   _10_3 = .;
891761    +   _10_4 = .;
MPRINT(EM_DIAGRAM):   _10_4 = .;
891762    +   _10_5 = .;
MPRINT(EM_DIAGRAM):   _10_5 = .;
891763    +   _10_6 = .;
MPRINT(EM_DIAGRAM):   _10_6 = .;
891764    +   _10_7 = .;
MPRINT(EM_DIAGRAM):   _10_7 = .;
891765    +   _10_8 = .;
MPRINT(EM_DIAGRAM):   _10_8 = .;
891766    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891767    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891768    +end;
MPRINT(EM_DIAGRAM):   end;
891769    +else do;
MPRINT(EM_DIAGRAM):   else do;
891770    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891771    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
891772    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891773    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891774    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
891775    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
891776    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
891777    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
891778    +               _10_8 = 1;
MPRINT(EM_DIAGRAM):   _10_8 = 1;
891779    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891780    +            end;
MPRINT(EM_DIAGRAM):   end;
891781    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891782    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
891783    +                  _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
891784    +                  _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
891785    +                  _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
891786    +                  _10_3 = -1;
MPRINT(EM_DIAGRAM):   _10_3 = -1;
891787    +                  _10_4 = -1;
MPRINT(EM_DIAGRAM):   _10_4 = -1;
891788    +                  _10_5 = -1;
MPRINT(EM_DIAGRAM):   _10_5 = -1;
891789    +                  _10_6 = -1;
MPRINT(EM_DIAGRAM):   _10_6 = -1;
891790    +                  _10_7 = -1;
MPRINT(EM_DIAGRAM):   _10_7 = -1;
891791    +                  _10_8 = -1;
MPRINT(EM_DIAGRAM):   _10_8 = -1;
891792    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891793    +               end;
MPRINT(EM_DIAGRAM):   end;
891794    +            end;
MPRINT(EM_DIAGRAM):   end;
891795    +         end;
MPRINT(EM_DIAGRAM):   end;
891796    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891797    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
891798    +               _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
891799    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891800    +            end;
MPRINT(EM_DIAGRAM):   end;
891801    +         end;
MPRINT(EM_DIAGRAM):   end;
891802    +      end;
MPRINT(EM_DIAGRAM):   end;
891803    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891804    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891805    +            _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
891806    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891807    +         end;
MPRINT(EM_DIAGRAM):   end;
891808    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891809    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891810    +               _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
891811    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891812    +            end;
MPRINT(EM_DIAGRAM):   end;
891813    +         end;
MPRINT(EM_DIAGRAM):   end;
891814    +      end;
MPRINT(EM_DIAGRAM):   end;
891815    +   end;
MPRINT(EM_DIAGRAM):   end;
891816    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891817    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891818    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
891819    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891820    +               _10_3 = 1;
MPRINT(EM_DIAGRAM):   _10_3 = 1;
891821    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891822    +            end;
MPRINT(EM_DIAGRAM):   end;
891823    +            else do;
MPRINT(EM_DIAGRAM):   else do;
891824    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891825    +                  _10_4 = 1;
MPRINT(EM_DIAGRAM):   _10_4 = 1;
891826    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891827    +               end;
MPRINT(EM_DIAGRAM):   end;
891828    +            end;
MPRINT(EM_DIAGRAM):   end;
891829    +         end;
MPRINT(EM_DIAGRAM):   end;
891830    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891831    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
891832    +               _10_5 = 1;
MPRINT(EM_DIAGRAM):   _10_5 = 1;
891833    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891834    +            end;
MPRINT(EM_DIAGRAM):   end;
891835    +         end;
MPRINT(EM_DIAGRAM):   end;
891836    +      end;
MPRINT(EM_DIAGRAM):   end;
891837    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891838    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
891839    +            _10_6 = 1;
MPRINT(EM_DIAGRAM):   _10_6 = 1;
891840    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891841    +         end;
MPRINT(EM_DIAGRAM):   end;
891842    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891843    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
891844    +               _10_7 = 1;
MPRINT(EM_DIAGRAM):   _10_7 = 1;
891845    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891846    +            end;
MPRINT(EM_DIAGRAM):   end;
891847    +         end;
MPRINT(EM_DIAGRAM):   end;
891848    +      end;
MPRINT(EM_DIAGRAM):   end;
891849    +   end;
MPRINT(EM_DIAGRAM):   end;
891850    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
891851    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
891852    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
The SAS System
 
891853    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
891854    +      _10_3 = .;
MPRINT(EM_DIAGRAM):   _10_3 = .;
891855    +      _10_4 = .;
MPRINT(EM_DIAGRAM):   _10_4 = .;
891856    +      _10_5 = .;
MPRINT(EM_DIAGRAM):   _10_5 = .;
891857    +      _10_6 = .;
MPRINT(EM_DIAGRAM):   _10_6 = .;
891858    +      _10_7 = .;
MPRINT(EM_DIAGRAM):   _10_7 = .;
891859    +      _10_8 = .;
MPRINT(EM_DIAGRAM):   _10_8 = .;
891860    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891861    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891862    +   end;
MPRINT(EM_DIAGRAM):   end;
891863    +end;
MPRINT(EM_DIAGRAM):   end;
891864    +
891865    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
891866    +drop _11_0 _11_1 _11_2 _11_3 _11_4 ;
MPRINT(EM_DIAGRAM):   drop _11_0 _11_1 _11_2 _11_3 _11_4 ;
891867    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891868    +_11_0 = 0;
MPRINT(EM_DIAGRAM):   _11_0 = 0;
891869    +_11_1 = 0;
MPRINT(EM_DIAGRAM):   _11_1 = 0;
891870    +_11_2 = 0;
MPRINT(EM_DIAGRAM):   _11_2 = 0;
891871    +_11_3 = 0;
MPRINT(EM_DIAGRAM):   _11_3 = 0;
891872    +_11_4 = 0;
MPRINT(EM_DIAGRAM):   _11_4 = 0;
891873    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
891874    +   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_0 = .;
891875    +   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
891876    +   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
891877    +   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
891878    +   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
891879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891881    +end;
MPRINT(EM_DIAGRAM):   end;
891882    +else do;
MPRINT(EM_DIAGRAM):   else do;
891883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891884    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
891885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891886    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891887    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
891888    +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
891889    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891890    +            _11_0 = 1;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
891891    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891892    +         end;
MPRINT(EM_DIAGRAM):   end;
891893    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891894    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891895    +               _11_1 = 1;
MPRINT(EM_DIAGRAM):   _11_1 = 1;
891896    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891897    +            end;
MPRINT(EM_DIAGRAM):   end;
891898    +         end;
MPRINT(EM_DIAGRAM):   end;
891899    +      end;
MPRINT(EM_DIAGRAM):   end;
891900    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891901    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891902    +            _11_2 = 1;
MPRINT(EM_DIAGRAM):   _11_2 = 1;
891903    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891904    +         end;
MPRINT(EM_DIAGRAM):   end;
891905    +      end;
MPRINT(EM_DIAGRAM):   end;
891906    +   end;
MPRINT(EM_DIAGRAM):   end;
891907    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891908    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891909    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891910    +            _11_3 = 1;
MPRINT(EM_DIAGRAM):   _11_3 = 1;
891911    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891912    +         end;
MPRINT(EM_DIAGRAM):   end;
891913    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891914    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
891915    +               _11_4 = 1;
MPRINT(EM_DIAGRAM):   _11_4 = 1;
891916    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891917    +            end;
MPRINT(EM_DIAGRAM):   end;
891918    +         end;
MPRINT(EM_DIAGRAM):   end;
891919    +      end;
MPRINT(EM_DIAGRAM):   end;
891920    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891921    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
891922    +            _11_0 = -1;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
891923    +            _11_1 = -1;
MPRINT(EM_DIAGRAM):   _11_1 = -1;
891924    +            _11_2 = -1;
MPRINT(EM_DIAGRAM):   _11_2 = -1;
891925    +            _11_3 = -1;
MPRINT(EM_DIAGRAM):   _11_3 = -1;
891926    +            _11_4 = -1;
MPRINT(EM_DIAGRAM):   _11_4 = -1;
891927    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891928    +         end;
MPRINT(EM_DIAGRAM):   end;
891929    +      end;
MPRINT(EM_DIAGRAM):   end;
891930    +   end;
MPRINT(EM_DIAGRAM):   end;
891931    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
891932    +      _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_0 = .;
891933    +      _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
891934    +      _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
891935    +      _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
891936    +      _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
891937    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
891938    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891939    +   end;
MPRINT(EM_DIAGRAM):   end;
891940    +end;
MPRINT(EM_DIAGRAM):   end;
891941    +
891942    +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
891943    +drop _14_0 _14_1 _14_2 _14_3 _14_4 _14_5 _14_6 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 _14_3 _14_4 _14_5 _14_6 ;
891944    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
891945    +_14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
891946    +_14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
891947    +_14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
891948    +_14_3 = 0;
MPRINT(EM_DIAGRAM):   _14_3 = 0;
891949    +_14_4 = 0;
MPRINT(EM_DIAGRAM):   _14_4 = 0;
891950    +_14_5 = 0;
MPRINT(EM_DIAGRAM):   _14_5 = 0;
891951    +_14_6 = 0;
MPRINT(EM_DIAGRAM):   _14_6 = 0;
891952    +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
891953    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
891954    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
891955    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
891956    +   _14_3 = .;
MPRINT(EM_DIAGRAM):   _14_3 = .;
891957    +   _14_4 = .;
MPRINT(EM_DIAGRAM):   _14_4 = .;
891958    +   _14_5 = .;
MPRINT(EM_DIAGRAM):   _14_5 = .;
891959    +   _14_6 = .;
MPRINT(EM_DIAGRAM):   _14_6 = .;
891960    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
891961    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
891962    +end;
MPRINT(EM_DIAGRAM):   end;
891963    +else do;
MPRINT(EM_DIAGRAM):   else do;
891964    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
891965    +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
891966    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
891967    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
891968    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
891969    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
891970    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
891971    +            _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
891972    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891973    +         end;
MPRINT(EM_DIAGRAM):   end;
891974    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891975    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
891976    +               _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
891977    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891978    +            end;
MPRINT(EM_DIAGRAM):   end;
891979    +         end;
MPRINT(EM_DIAGRAM):   end;
891980    +      end;
MPRINT(EM_DIAGRAM):   end;
891981    +      else do;
MPRINT(EM_DIAGRAM):   else do;
891982    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
891983    +            _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
891984    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891985    +         end;
MPRINT(EM_DIAGRAM):   end;
891986    +         else do;
MPRINT(EM_DIAGRAM):   else do;
891987    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
891988    +               _14_3 = 1;
MPRINT(EM_DIAGRAM):   _14_3 = 1;
891989    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891990    +            end;
MPRINT(EM_DIAGRAM):   end;
891991    +         end;
MPRINT(EM_DIAGRAM):   end;
891992    +      end;
MPRINT(EM_DIAGRAM):   end;
891993    +   end;
MPRINT(EM_DIAGRAM):   end;
891994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
891995    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
891996    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
891997    +            _14_4 = 1;
MPRINT(EM_DIAGRAM):   _14_4 = 1;
891998    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
891999    +         end;
MPRINT(EM_DIAGRAM):   end;
892000    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892001    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
892002    +               _14_5 = 1;
MPRINT(EM_DIAGRAM):   _14_5 = 1;
892003    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892004    +            end;
MPRINT(EM_DIAGRAM):   end;
892005    +         end;
MPRINT(EM_DIAGRAM):   end;
892006    +      end;
MPRINT(EM_DIAGRAM):   end;
892007    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892008    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
892009    +            _14_6 = 1;
MPRINT(EM_DIAGRAM):   _14_6 = 1;
892010    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892011    +         end;
MPRINT(EM_DIAGRAM):   end;
892012    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892013    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
892014    +               _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
892015    +               _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
892016    +               _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
892017    +               _14_3 = -1;
MPRINT(EM_DIAGRAM):   _14_3 = -1;
892018    +               _14_4 = -1;
MPRINT(EM_DIAGRAM):   _14_4 = -1;
892019    +               _14_5 = -1;
MPRINT(EM_DIAGRAM):   _14_5 = -1;
892020    +               _14_6 = -1;
MPRINT(EM_DIAGRAM):   _14_6 = -1;
892021    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892022    +            end;
MPRINT(EM_DIAGRAM):   end;
892023    +         end;
MPRINT(EM_DIAGRAM):   end;
892024    +      end;
MPRINT(EM_DIAGRAM):   end;
892025    +   end;
MPRINT(EM_DIAGRAM):   end;
892026    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
892027    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
892028    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
892029    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
892030    +      _14_3 = .;
MPRINT(EM_DIAGRAM):   _14_3 = .;
892031    +      _14_4 = .;
MPRINT(EM_DIAGRAM):   _14_4 = .;
892032    +      _14_5 = .;
MPRINT(EM_DIAGRAM):   _14_5 = .;
892033    +      _14_6 = .;
MPRINT(EM_DIAGRAM):   _14_6 = .;
892034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892036    +   end;
MPRINT(EM_DIAGRAM):   end;
892037    +end;
MPRINT(EM_DIAGRAM):   end;
892038    +
892039    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
892040    +drop _16_0 _16_1 _16_2 _16_3 _16_4 _16_5 _16_6 _16_7 _16_8 ;
MPRINT(EM_DIAGRAM):   drop _16_0 _16_1 _16_2 _16_3 _16_4 _16_5 _16_6 _16_7 _16_8 ;
892041    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
892042    +_16_0 = 0;
MPRINT(EM_DIAGRAM):   _16_0 = 0;
892043    +_16_1 = 0;
MPRINT(EM_DIAGRAM):   _16_1 = 0;
892044    +_16_2 = 0;
MPRINT(EM_DIAGRAM):   _16_2 = 0;
892045    +_16_3 = 0;
MPRINT(EM_DIAGRAM):   _16_3 = 0;
892046    +_16_4 = 0;
MPRINT(EM_DIAGRAM):   _16_4 = 0;
892047    +_16_5 = 0;
MPRINT(EM_DIAGRAM):   _16_5 = 0;
892048    +_16_6 = 0;
MPRINT(EM_DIAGRAM):   _16_6 = 0;
892049    +_16_7 = 0;
MPRINT(EM_DIAGRAM):   _16_7 = 0;
892050    +_16_8 = 0;
MPRINT(EM_DIAGRAM):   _16_8 = 0;
892051    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
892052    +   _16_0 = .;
MPRINT(EM_DIAGRAM):   _16_0 = .;
892053    +   _16_1 = .;
MPRINT(EM_DIAGRAM):   _16_1 = .;
892054    +   _16_2 = .;
MPRINT(EM_DIAGRAM):   _16_2 = .;
892055    +   _16_3 = .;
MPRINT(EM_DIAGRAM):   _16_3 = .;
892056    +   _16_4 = .;
MPRINT(EM_DIAGRAM):   _16_4 = .;
892057    +   _16_5 = .;
MPRINT(EM_DIAGRAM):   _16_5 = .;
892058    +   _16_6 = .;
MPRINT(EM_DIAGRAM):   _16_6 = .;
892059    +   _16_7 = .;
MPRINT(EM_DIAGRAM):   _16_7 = .;
892060    +   _16_8 = .;
MPRINT(EM_DIAGRAM):   _16_8 = .;
892061    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892062    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892063    +end;
MPRINT(EM_DIAGRAM):   end;
892064    +else do;
MPRINT(EM_DIAGRAM):   else do;
892065    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892066    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
892067    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892068    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
892069    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
892070    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
892071    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
892072    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
892073    +               _16_8 = 1;
MPRINT(EM_DIAGRAM):   _16_8 = 1;
892074    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892075    +            end;
MPRINT(EM_DIAGRAM):   end;
892076    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892077    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
892078    +                  _16_0 = -1;
MPRINT(EM_DIAGRAM):   _16_0 = -1;
892079    +                  _16_1 = -1;
MPRINT(EM_DIAGRAM):   _16_1 = -1;
892080    +                  _16_2 = -1;
MPRINT(EM_DIAGRAM):   _16_2 = -1;
892081    +                  _16_3 = -1;
MPRINT(EM_DIAGRAM):   _16_3 = -1;
892082    +                  _16_4 = -1;
MPRINT(EM_DIAGRAM):   _16_4 = -1;
892083    +                  _16_5 = -1;
MPRINT(EM_DIAGRAM):   _16_5 = -1;
892084    +                  _16_6 = -1;
MPRINT(EM_DIAGRAM):   _16_6 = -1;
892085    +                  _16_7 = -1;
MPRINT(EM_DIAGRAM):   _16_7 = -1;
892086    +                  _16_8 = -1;
MPRINT(EM_DIAGRAM):   _16_8 = -1;
892087    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892088    +               end;
MPRINT(EM_DIAGRAM):   end;
892089    +            end;
MPRINT(EM_DIAGRAM):   end;
892090    +         end;
MPRINT(EM_DIAGRAM):   end;
892091    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892092    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
892093    +               _16_0 = 1;
MPRINT(EM_DIAGRAM):   _16_0 = 1;
892094    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892095    +            end;
MPRINT(EM_DIAGRAM):   end;
892096    +         end;
MPRINT(EM_DIAGRAM):   end;
892097    +      end;
MPRINT(EM_DIAGRAM):   end;
892098    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892099    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
892100    +            _16_1 = 1;
MPRINT(EM_DIAGRAM):   _16_1 = 1;
892101    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892102    +         end;
MPRINT(EM_DIAGRAM):   end;
892103    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892104    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
892105    +               _16_2 = 1;
MPRINT(EM_DIAGRAM):   _16_2 = 1;
892106    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892107    +            end;
MPRINT(EM_DIAGRAM):   end;
892108    +         end;
MPRINT(EM_DIAGRAM):   end;
892109    +      end;
MPRINT(EM_DIAGRAM):   end;
892110    +   end;
MPRINT(EM_DIAGRAM):   end;
892111    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892112    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
892113    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
892114    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
892115    +               _16_3 = 1;
MPRINT(EM_DIAGRAM):   _16_3 = 1;
892116    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892117    +            end;
MPRINT(EM_DIAGRAM):   end;
892118    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892119    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
892120    +                  _16_4 = 1;
MPRINT(EM_DIAGRAM):   _16_4 = 1;
892121    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892122    +               end;
MPRINT(EM_DIAGRAM):   end;
892123    +            end;
MPRINT(EM_DIAGRAM):   end;
892124    +         end;
MPRINT(EM_DIAGRAM):   end;
892125    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892126    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
892127    +               _16_5 = 1;
MPRINT(EM_DIAGRAM):   _16_5 = 1;
892128    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892129    +            end;
MPRINT(EM_DIAGRAM):   end;
892130    +         end;
MPRINT(EM_DIAGRAM):   end;
892131    +      end;
MPRINT(EM_DIAGRAM):   end;
892132    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892133    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
892134    +            _16_6 = 1;
MPRINT(EM_DIAGRAM):   _16_6 = 1;
892135    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892136    +         end;
MPRINT(EM_DIAGRAM):   end;
892137    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892138    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
892139    +               _16_7 = 1;
MPRINT(EM_DIAGRAM):   _16_7 = 1;
892140    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892141    +            end;
MPRINT(EM_DIAGRAM):   end;
892142    +         end;
MPRINT(EM_DIAGRAM):   end;
892143    +      end;
MPRINT(EM_DIAGRAM):   end;
892144    +   end;
MPRINT(EM_DIAGRAM):   end;
892145    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
892146    +      _16_0 = .;
MPRINT(EM_DIAGRAM):   _16_0 = .;
892147    +      _16_1 = .;
MPRINT(EM_DIAGRAM):   _16_1 = .;
892148    +      _16_2 = .;
MPRINT(EM_DIAGRAM):   _16_2 = .;
892149    +      _16_3 = .;
MPRINT(EM_DIAGRAM):   _16_3 = .;
892150    +      _16_4 = .;
MPRINT(EM_DIAGRAM):   _16_4 = .;
892151    +      _16_5 = .;
MPRINT(EM_DIAGRAM):   _16_5 = .;
892152    +      _16_6 = .;
MPRINT(EM_DIAGRAM):   _16_6 = .;
892153    +      _16_7 = .;
MPRINT(EM_DIAGRAM):   _16_7 = .;
892154    +      _16_8 = .;
MPRINT(EM_DIAGRAM):   _16_8 = .;
892155    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892156    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892157    +   end;
MPRINT(EM_DIAGRAM):   end;
892158    +end;
MPRINT(EM_DIAGRAM):   end;
892159    +
892160    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
892161    +drop _17_0 _17_1 _17_2 _17_3 _17_4 _17_5 _17_6 _17_7 _17_8 ;
MPRINT(EM_DIAGRAM):   drop _17_0 _17_1 _17_2 _17_3 _17_4 _17_5 _17_6 _17_7 _17_8 ;
892162    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
892163    +_17_0 = 0;
MPRINT(EM_DIAGRAM):   _17_0 = 0;
892164    +_17_1 = 0;
MPRINT(EM_DIAGRAM):   _17_1 = 0;
892165    +_17_2 = 0;
MPRINT(EM_DIAGRAM):   _17_2 = 0;
892166    +_17_3 = 0;
MPRINT(EM_DIAGRAM):   _17_3 = 0;
892167    +_17_4 = 0;
MPRINT(EM_DIAGRAM):   _17_4 = 0;
892168    +_17_5 = 0;
MPRINT(EM_DIAGRAM):   _17_5 = 0;
892169    +_17_6 = 0;
MPRINT(EM_DIAGRAM):   _17_6 = 0;
892170    +_17_7 = 0;
MPRINT(EM_DIAGRAM):   _17_7 = 0;
892171    +_17_8 = 0;
MPRINT(EM_DIAGRAM):   _17_8 = 0;
892172    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
892173    +   _17_0 = .;
MPRINT(EM_DIAGRAM):   _17_0 = .;
892174    +   _17_1 = .;
MPRINT(EM_DIAGRAM):   _17_1 = .;
892175    +   _17_2 = .;
MPRINT(EM_DIAGRAM):   _17_2 = .;
892176    +   _17_3 = .;
MPRINT(EM_DIAGRAM):   _17_3 = .;
892177    +   _17_4 = .;
MPRINT(EM_DIAGRAM):   _17_4 = .;
892178    +   _17_5 = .;
MPRINT(EM_DIAGRAM):   _17_5 = .;
892179    +   _17_6 = .;
MPRINT(EM_DIAGRAM):   _17_6 = .;
892180    +   _17_7 = .;
MPRINT(EM_DIAGRAM):   _17_7 = .;
892181    +   _17_8 = .;
MPRINT(EM_DIAGRAM):   _17_8 = .;
892182    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892183    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892184    +end;
MPRINT(EM_DIAGRAM):   end;
892185    +else do;
MPRINT(EM_DIAGRAM):   else do;
892186    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892187    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
892188    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892189    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
892190    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
892191    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
892192    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
892193    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
892194    +               _17_8 = 1;
MPRINT(EM_DIAGRAM):   _17_8 = 1;
892195    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892196    +            end;
MPRINT(EM_DIAGRAM):   end;
892197    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892198    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
892199    +                  _17_0 = -1;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
892200    +                  _17_1 = -1;
MPRINT(EM_DIAGRAM):   _17_1 = -1;
892201    +                  _17_2 = -1;
MPRINT(EM_DIAGRAM):   _17_2 = -1;
892202    +                  _17_3 = -1;
MPRINT(EM_DIAGRAM):   _17_3 = -1;
892203    +                  _17_4 = -1;
MPRINT(EM_DIAGRAM):   _17_4 = -1;
892204    +                  _17_5 = -1;
MPRINT(EM_DIAGRAM):   _17_5 = -1;
892205    +                  _17_6 = -1;
MPRINT(EM_DIAGRAM):   _17_6 = -1;
892206    +                  _17_7 = -1;
MPRINT(EM_DIAGRAM):   _17_7 = -1;
892207    +                  _17_8 = -1;
MPRINT(EM_DIAGRAM):   _17_8 = -1;
892208    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892209    +               end;
MPRINT(EM_DIAGRAM):   end;
892210    +            end;
MPRINT(EM_DIAGRAM):   end;
892211    +         end;
MPRINT(EM_DIAGRAM):   end;
892212    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892213    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
892214    +               _17_0 = 1;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
892215    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892216    +            end;
MPRINT(EM_DIAGRAM):   end;
892217    +         end;
MPRINT(EM_DIAGRAM):   end;
892218    +      end;
MPRINT(EM_DIAGRAM):   end;
892219    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892220    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
892221    +            _17_1 = 1;
MPRINT(EM_DIAGRAM):   _17_1 = 1;
892222    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892223    +         end;
MPRINT(EM_DIAGRAM):   end;
892224    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892225    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
892226    +               _17_2 = 1;
MPRINT(EM_DIAGRAM):   _17_2 = 1;
892227    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892228    +            end;
MPRINT(EM_DIAGRAM):   end;
892229    +         end;
MPRINT(EM_DIAGRAM):   end;
892230    +      end;
MPRINT(EM_DIAGRAM):   end;
892231    +   end;
MPRINT(EM_DIAGRAM):   end;
892232    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892233    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
892234    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
892235    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
892236    +               _17_3 = 1;
MPRINT(EM_DIAGRAM):   _17_3 = 1;
892237    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892238    +            end;
MPRINT(EM_DIAGRAM):   end;
892239    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892240    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
892241    +                  _17_4 = 1;
MPRINT(EM_DIAGRAM):   _17_4 = 1;
892242    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892243    +               end;
MPRINT(EM_DIAGRAM):   end;
892244    +            end;
MPRINT(EM_DIAGRAM):   end;
892245    +         end;
MPRINT(EM_DIAGRAM):   end;
892246    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892247    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
892248    +               _17_5 = 1;
MPRINT(EM_DIAGRAM):   _17_5 = 1;
892249    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892250    +            end;
MPRINT(EM_DIAGRAM):   end;
892251    +         end;
MPRINT(EM_DIAGRAM):   end;
892252    +      end;
MPRINT(EM_DIAGRAM):   end;
892253    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892254    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
892255    +            _17_6 = 1;
MPRINT(EM_DIAGRAM):   _17_6 = 1;
892256    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892257    +         end;
MPRINT(EM_DIAGRAM):   end;
892258    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892259    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
892260    +               _17_7 = 1;
MPRINT(EM_DIAGRAM):   _17_7 = 1;
892261    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892262    +            end;
MPRINT(EM_DIAGRAM):   end;
892263    +         end;
MPRINT(EM_DIAGRAM):   end;
892264    +      end;
MPRINT(EM_DIAGRAM):   end;
892265    +   end;
MPRINT(EM_DIAGRAM):   end;
892266    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
892267    +      _17_0 = .;
MPRINT(EM_DIAGRAM):   _17_0 = .;
892268    +      _17_1 = .;
MPRINT(EM_DIAGRAM):   _17_1 = .;
892269    +      _17_2 = .;
MPRINT(EM_DIAGRAM):   _17_2 = .;
892270    +      _17_3 = .;
MPRINT(EM_DIAGRAM):   _17_3 = .;
892271    +      _17_4 = .;
MPRINT(EM_DIAGRAM):   _17_4 = .;
892272    +      _17_5 = .;
MPRINT(EM_DIAGRAM):   _17_5 = .;
892273    +      _17_6 = .;
MPRINT(EM_DIAGRAM):   _17_6 = .;
892274    +      _17_7 = .;
MPRINT(EM_DIAGRAM):   _17_7 = .;
892275    +      _17_8 = .;
MPRINT(EM_DIAGRAM):   _17_8 = .;
892276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892278    +   end;
MPRINT(EM_DIAGRAM):   end;
892279    +end;
MPRINT(EM_DIAGRAM):   end;
892280    +
892281    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
892282    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
892283    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
892284    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
892285    +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
892286    +end;
MPRINT(EM_DIAGRAM):   end;
892287    +
892288    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
892289    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
892290    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
892291    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
892292    +
892293    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
892294    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892295    +_LP0 = _LP0 + (   -0.43533664969535) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.43533664969535) * _TEMP * _1_0;
892296    +
892297    +***  Effect: GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmpTotal ;
892298    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892299    +_LP0 = _LP0 + (   -0.80259368074474) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.80259368074474) * _TEMP * _2_0;
892300    +
892301    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
892302    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892303    +_LP0 = _LP0 + (    0.91100459014326) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.91100459014326) * _TEMP * _3_0;
892304    +_LP0 = _LP0 + (    1.30517605331849) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.30517605331849) * _TEMP * _3_1;
892305    +_LP0 = _LP0 + (    1.11556358848526) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.11556358848526) * _TEMP * _3_2;
892306    +_LP0 = _LP0 + (    0.75137606837703) * _TEMP * _3_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.75137606837703) * _TEMP * _3_3;
892307    +_LP0 = _LP0 + (    0.22667584665051) * _TEMP * _3_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22667584665051) * _TEMP * _3_4;
892308    +_LP0 = _LP0 + (   -0.36355490163716) * _TEMP * _3_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36355490163716) * _TEMP * _3_5;
892309    +_LP0 = _LP0 + (   -0.27212699434389) * _TEMP * _3_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.27212699434389) * _TEMP * _3_6;
892310    +_LP0 = _LP0 + (   -0.89978590791079) * _TEMP * _3_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.89978590791079) * _TEMP * _3_7;
892311    +_LP0 = _LP0 + (   -0.94480140724689) * _TEMP * _3_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.94480140724689) * _TEMP * _3_8;
892312    +
892313    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
892314    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892315    +_LP0 = _LP0 + (   -0.67863268191527) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.67863268191527) * _TEMP * _4_0;
892316    +_LP0 = _LP0 + (   -0.57046328857592) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57046328857592) * _TEMP * _4_1;
892317    +_LP0 = _LP0 + (    -0.1890918276771) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1890918276771) * _TEMP * _4_2;
892318    +_LP0 = _LP0 + (    0.23692190511298) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.23692190511298) * _TEMP * _4_3;
892319    +_LP0 = _LP0 + (    0.20526853412013) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20526853412013) * _TEMP * _4_4;
892320    +_LP0 = _LP0 + (   -0.17214495632527) * _TEMP * _4_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17214495632527) * _TEMP * _4_5;
892321    +_LP0 = _LP0 + (   -0.39723869175524) * _TEMP * _4_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39723869175524) * _TEMP * _4_6;
892322    +_LP0 = _LP0 + (    0.12606456143445) * _TEMP * _4_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.12606456143445) * _TEMP * _4_7;
892323    +_LP0 = _LP0 + (    0.42361200787646) * _TEMP * _4_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.42361200787646) * _TEMP * _4_8;
892324    +
892325    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
892326    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892327    +_LP0 = _LP0 + (    0.48752062405289) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48752062405289) * _TEMP * _6_0;
892328    +_LP0 = _LP0 + (    0.17481352517088) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17481352517088) * _TEMP * _6_1;
892329    +_LP0 = _LP0 + (    0.09853640441631) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09853640441631) * _TEMP * _6_2;
892330    +_LP0 = _LP0 + (   -0.07229233845021) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.07229233845021) * _TEMP * _6_3;
892331    +_LP0 = _LP0 + (   -0.01389179233941) * _TEMP * _6_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01389179233941) * _TEMP * _6_4;
892332    +_LP0 = _LP0 + (     0.3386403333754) * _TEMP * _6_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3386403333754) * _TEMP * _6_5;
892333    +_LP0 = _LP0 + (   -0.25832507184609) * _TEMP * _6_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25832507184609) * _TEMP * _6_6;
892334    +_LP0 = _LP0 + (   -0.26492098163096) * _TEMP * _6_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.26492098163096) * _TEMP * _6_7;
892335    +
892336    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
892337    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892338    +_LP0 = _LP0 + (   -4.59610842787446) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.59610842787446) * _TEMP * _8_0;
892339    +_LP0 = _LP0 + (   -2.32024987229394) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.32024987229394) * _TEMP * _8_1;
892340    +_LP0 = _LP0 + (   -1.64646759719417) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.64646759719417) * _TEMP * _8_2;
892341    +_LP0 = _LP0 + (   -0.76151212861519) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76151212861519) * _TEMP * _8_3;
892342    +_LP0 = _LP0 + (    0.51722378376922) * _TEMP * _8_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51722378376922) * _TEMP * _8_4;
892343    +_LP0 = _LP0 + (    0.75208074934091) * _TEMP * _8_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.75208074934091) * _TEMP * _8_5;
892344    +_LP0 = _LP0 + (    1.45871842458832) * _TEMP * _8_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.45871842458832) * _TEMP * _8_6;
892345    +_LP0 = _LP0 + (    1.52563715317721) * _TEMP * _8_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.52563715317721) * _TEMP * _8_7;
892346    +_LP0 = _LP0 + (    2.21558270110625) * _TEMP * _8_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.21558270110625) * _TEMP * _8_8;
892347    +
892348    +***  Effect: GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntSweetProducts ;
892349    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892350    +_LP0 = _LP0 + (    0.18739902632568) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18739902632568) * _TEMP * _9_0;
892351    +_LP0 = _LP0 + (    0.37870460830373) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.37870460830373) * _TEMP * _9_1;
892352    +_LP0 = _LP0 + (    0.22908519374031) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22908519374031) * _TEMP * _9_2;
892353    +_LP0 = _LP0 + (   -0.00561701310679) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00561701310679) * _TEMP * _9_3;
892354    +_LP0 = _LP0 + (     0.3857620674363) * _TEMP * _9_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3857620674363) * _TEMP * _9_4;
892355    +_LP0 = _LP0 + (   -0.16844878587934) * _TEMP * _9_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.16844878587934) * _TEMP * _9_5;
892356    +_LP0 = _LP0 + (    -0.1305347485537) * _TEMP * _9_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1305347485537) * _TEMP * _9_6;
892357    +_LP0 = _LP0 + (   -0.18036392668341) * _TEMP * _9_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.18036392668341) * _TEMP * _9_7;
892358    +
892359    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
892360    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892361    +_LP0 = _LP0 + (    2.19744807146287) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.19744807146287) * _TEMP * _10_0;
892362    +_LP0 = _LP0 + (    1.49780556010343) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.49780556010343) * _TEMP * _10_1;
892363    +_LP0 = _LP0 + (    1.20853403645007) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.20853403645007) * _TEMP * _10_2;
892364    +_LP0 = _LP0 + (    0.91522429321633) * _TEMP * _10_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.91522429321633) * _TEMP * _10_3;
892365    +_LP0 = _LP0 + (    0.07188342963614) * _TEMP * _10_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07188342963614) * _TEMP * _10_4;
892366    +_LP0 = _LP0 + (   -0.19911189687109) * _TEMP * _10_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.19911189687109) * _TEMP * _10_5;
892367    +_LP0 = _LP0 + (   -0.89304358322459) * _TEMP * _10_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.89304358322459) * _TEMP * _10_6;
892368    +_LP0 = _LP0 + (   -1.20703026995025) * _TEMP * _10_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.20703026995025) * _TEMP * _10_7;
892369    +_LP0 = _LP0 + (   -1.59039392715362) * _TEMP * _10_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.59039392715362) * _TEMP * _10_8;
892370    +
892371    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
892372    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892373    +_LP0 = _LP0 + (   -3.40703872318535) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.40703872318535) * _TEMP * _11_0;
892374    +_LP0 = _LP0 + (   -1.45181049982561) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.45181049982561) * _TEMP * _11_1;
892375    +_LP0 = _LP0 + (   -0.08347404660345) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.08347404660345) * _TEMP * _11_2;
892376    +_LP0 = _LP0 + (    0.81955944534199) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.81955944534199) * _TEMP * _11_3;
892377    +_LP0 = _LP0 + (    1.45035693356184) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.45035693356184) * _TEMP * _11_4;
892378    +
892379    +***  Effect: GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumWebVisitsMonth ;
892380    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892381    +_LP0 = _LP0 + (   -1.81981937806131) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.81981937806131) * _TEMP * _14_0;
892382    +_LP0 = _LP0 + (   -1.17799242784665) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.17799242784665) * _TEMP * _14_1;
892383    +_LP0 = _LP0 + (   -0.94053899638537) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.94053899638537) * _TEMP * _14_2;
892384    +_LP0 = _LP0 + (   -0.36886112918233) * _TEMP * _14_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36886112918233) * _TEMP * _14_3;
892385    +_LP0 = _LP0 + (    0.29366599559997) * _TEMP * _14_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29366599559997) * _TEMP * _14_4;
892386    +_LP0 = _LP0 + (    0.37587988225403) * _TEMP * _14_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.37587988225403) * _TEMP * _14_5;
892387    +_LP0 = _LP0 + (     1.2821313793468) * _TEMP * _14_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.2821313793468) * _TEMP * _14_6;
892388    +
892389    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
892390    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892391    +_LP0 = _LP0 + (    1.52257971842016) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.52257971842016) * _TEMP * _16_0;
892392    +_LP0 = _LP0 + (    0.89925185098242) * _TEMP * _16_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89925185098242) * _TEMP * _16_1;
892393    +_LP0 = _LP0 + (    0.43979399106939) * _TEMP * _16_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43979399106939) * _TEMP * _16_2;
892394    +_LP0 = _LP0 + (   -0.48868452275874) * _TEMP * _16_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.48868452275874) * _TEMP * _16_3;
892395    +_LP0 = _LP0 + (   -0.47818270496821) * _TEMP * _16_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47818270496821) * _TEMP * _16_4;
892396    +_LP0 = _LP0 + (   -0.97732618505089) * _TEMP * _16_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.97732618505089) * _TEMP * _16_5;
892397    +_LP0 = _LP0 + (   -0.76235371002566) * _TEMP * _16_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76235371002566) * _TEMP * _16_6;
892398    +_LP0 = _LP0 + (   -0.06176798843746) * _TEMP * _16_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06176798843746) * _TEMP * _16_7;
892399    +_LP0 = _LP0 + (   -0.36783009575746) * _TEMP * _16_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36783009575746) * _TEMP * _16_8;
892400    +
892401    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
892402    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
892403    +_LP0 = _LP0 + (    2.27376799087472) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.27376799087472) * _TEMP * _17_0;
892404    +_LP0 = _LP0 + (    1.66840677656296) * _TEMP * _17_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.66840677656296) * _TEMP * _17_1;
892405    +_LP0 = _LP0 + (    1.58394582906104) * _TEMP * _17_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.58394582906104) * _TEMP * _17_2;
892406    +_LP0 = _LP0 + (    0.81992790457539) * _TEMP * _17_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.81992790457539) * _TEMP * _17_3;
892407    +_LP0 = _LP0 + (   -0.09864306453973) * _TEMP * _17_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09864306453973) * _TEMP * _17_4;
892408    +_LP0 = _LP0 + (   -0.23893324542319) * _TEMP * _17_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23893324542319) * _TEMP * _17_5;
892409    +_LP0 = _LP0 + (   -0.78852448679899) * _TEMP * _17_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.78852448679899) * _TEMP * _17_6;
892410    +_LP0 = _LP0 + (   -0.94445512442103) * _TEMP * _17_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.94445512442103) * _TEMP * _17_7;
892411    +_LP0 = _LP0 + (   -2.02058858598198) * _TEMP * _17_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.02058858598198) * _TEMP * _17_8;
892412    +
892413    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
892414    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
892415    +_P0 = probnorm((   -1.74663497603269) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -1.74663497603269) + _LP0);
892416    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
892417    +
892418    +REG7DR1:
892419    +
892420    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
892421    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
892422    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
892423    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
892424    +end;
MPRINT(EM_DIAGRAM):   end;
892425    +else do;
MPRINT(EM_DIAGRAM):   else do;
892426    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
892427    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
892428    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
892429    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
892430    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
892431    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
892432    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
892433    +   end;
MPRINT(EM_DIAGRAM):   end;
892434    +end;
MPRINT(EM_DIAGRAM):   end;
892435    +
892436    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
892437    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
892438    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
892439    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
892440    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
892441    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
892442    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
892443    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
892444    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
892445    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
892446    +end;
MPRINT(EM_DIAGRAM):   end;
892447    +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
892448    +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
892449    +
892450    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
892451    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
892452    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
892453     run;
 
NOTE: DATA STEP view saved on file EMWS8.REG7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
892454     quit;
892455     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
892456     filename emflow
892456   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg7: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
892457     *------------------------------------------------------------*;
892458     * Reg7: Scoring VALIDATE data;
892459     *------------------------------------------------------------*;
892460     data EMWS8.Reg7_VALIDATE
892461     / view=EMWS8.Reg7_VALIDATE
892462     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_VALIDATE / view=EMWS8.Reg7_VALIDATE ;
892463     set EMWS8.BINNING_VALIDATE
892464     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
892465     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas.
892466    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
892467    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
892468    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
892469    +
892470    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
892471    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
892472    +
892473    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
892474    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
892475    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
892476    +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
892477    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
892478    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
892479    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
892480    +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
892481    +
892482    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
892483    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
892484    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
892485    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
892486    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
892487    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892488    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
892489    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
892490    +end;
MPRINT(EM_DIAGRAM):   end;
892491    +else do;
MPRINT(EM_DIAGRAM):   else do;
892492    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
892493    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
892494    +   end;
MPRINT(EM_DIAGRAM):   end;
892495    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
892496    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
892497    +   end;
MPRINT(EM_DIAGRAM):   end;
892498    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892499    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
892500    +   end;
MPRINT(EM_DIAGRAM):   end;
892501    +end;
MPRINT(EM_DIAGRAM):   end;
892502    +
892503    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
892504    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
892505    +
892506    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
892507    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
892508    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
892509    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
892510    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892511    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892512    +end;
MPRINT(EM_DIAGRAM):   end;
892513    +else do;
MPRINT(EM_DIAGRAM):   else do;
892514    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892515    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
892516    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892517    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
892518    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
892519    +   end;
MPRINT(EM_DIAGRAM):   end;
892520    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
892521    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
892522    +   end;
MPRINT(EM_DIAGRAM):   end;
892523    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892524    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
892525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892527    +   end;
MPRINT(EM_DIAGRAM):   end;
892528    +end;
MPRINT(EM_DIAGRAM):   end;
892529    +
892530    +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
892531    +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
892532    +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
892533    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
892534    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892535    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892536    +end;
MPRINT(EM_DIAGRAM):   end;
892537    +else do;
MPRINT(EM_DIAGRAM):   else do;
892538    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892539    +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
892540    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892541    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
892542    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
892543    +   end;
MPRINT(EM_DIAGRAM):   end;
892544    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
892545    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
892546    +   end;
MPRINT(EM_DIAGRAM):   end;
892547    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892548    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
892549    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892550    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892551    +   end;
MPRINT(EM_DIAGRAM):   end;
892552    +end;
MPRINT(EM_DIAGRAM):   end;
892553    +
892554    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
892555    +drop _3_0 _3_1 _3_2 _3_3 _3_4 _3_5 _3_6 _3_7 _3_8 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 _3_3 _3_4 _3_5 _3_6 _3_7 _3_8 ;
892556    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
892557    +_3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
892558    +_3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
892559    +_3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
892560    +_3_3 = 0;
MPRINT(EM_DIAGRAM):   _3_3 = 0;
892561    +_3_4 = 0;
MPRINT(EM_DIAGRAM):   _3_4 = 0;
892562    +_3_5 = 0;
MPRINT(EM_DIAGRAM):   _3_5 = 0;
892563    +_3_6 = 0;
MPRINT(EM_DIAGRAM):   _3_6 = 0;
892564    +_3_7 = 0;
MPRINT(EM_DIAGRAM):   _3_7 = 0;
892565    +_3_8 = 0;
MPRINT(EM_DIAGRAM):   _3_8 = 0;
892566    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
892567    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
892568    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
892569    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
892570    +   _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
892571    +   _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
892572    +   _3_5 = .;
MPRINT(EM_DIAGRAM):   _3_5 = .;
892573    +   _3_6 = .;
MPRINT(EM_DIAGRAM):   _3_6 = .;
892574    +   _3_7 = .;
MPRINT(EM_DIAGRAM):   _3_7 = .;
892575    +   _3_8 = .;
MPRINT(EM_DIAGRAM):   _3_8 = .;
892576    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892577    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892578    +end;
MPRINT(EM_DIAGRAM):   end;
892579    +else do;
MPRINT(EM_DIAGRAM):   else do;
892580    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892581    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
892582    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892583    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
892584    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
892585    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
892586    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
892587    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
892588    +               _3_8 = 1;
MPRINT(EM_DIAGRAM):   _3_8 = 1;
892589    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892590    +            end;
MPRINT(EM_DIAGRAM):   end;
892591    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892592    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
892593    +                  _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
892594    +                  _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
892595    +                  _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
892596    +                  _3_3 = -1;
MPRINT(EM_DIAGRAM):   _3_3 = -1;
892597    +                  _3_4 = -1;
MPRINT(EM_DIAGRAM):   _3_4 = -1;
892598    +                  _3_5 = -1;
MPRINT(EM_DIAGRAM):   _3_5 = -1;
892599    +                  _3_6 = -1;
MPRINT(EM_DIAGRAM):   _3_6 = -1;
892600    +                  _3_7 = -1;
MPRINT(EM_DIAGRAM):   _3_7 = -1;
892601    +                  _3_8 = -1;
MPRINT(EM_DIAGRAM):   _3_8 = -1;
892602    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892603    +               end;
MPRINT(EM_DIAGRAM):   end;
892604    +            end;
MPRINT(EM_DIAGRAM):   end;
892605    +         end;
MPRINT(EM_DIAGRAM):   end;
892606    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892607    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
892608    +               _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
892609    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892610    +            end;
MPRINT(EM_DIAGRAM):   end;
892611    +         end;
MPRINT(EM_DIAGRAM):   end;
892612    +      end;
MPRINT(EM_DIAGRAM):   end;
892613    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892614    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
892615    +            _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
892616    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892617    +         end;
MPRINT(EM_DIAGRAM):   end;
892618    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892619    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
892620    +               _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
892621    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892622    +            end;
MPRINT(EM_DIAGRAM):   end;
892623    +         end;
MPRINT(EM_DIAGRAM):   end;
892624    +      end;
MPRINT(EM_DIAGRAM):   end;
892625    +   end;
MPRINT(EM_DIAGRAM):   end;
892626    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892627    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
892628    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
892629    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
892630    +               _3_3 = 1;
MPRINT(EM_DIAGRAM):   _3_3 = 1;
892631    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892632    +            end;
MPRINT(EM_DIAGRAM):   end;
892633    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892634    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
892635    +                  _3_4 = 1;
MPRINT(EM_DIAGRAM):   _3_4 = 1;
892636    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892637    +               end;
MPRINT(EM_DIAGRAM):   end;
892638    +            end;
MPRINT(EM_DIAGRAM):   end;
892639    +         end;
MPRINT(EM_DIAGRAM):   end;
892640    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892641    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
892642    +               _3_5 = 1;
MPRINT(EM_DIAGRAM):   _3_5 = 1;
892643    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892644    +            end;
MPRINT(EM_DIAGRAM):   end;
892645    +         end;
MPRINT(EM_DIAGRAM):   end;
892646    +      end;
MPRINT(EM_DIAGRAM):   end;
892647    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892648    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
892649    +            _3_6 = 1;
MPRINT(EM_DIAGRAM):   _3_6 = 1;
892650    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892651    +         end;
MPRINT(EM_DIAGRAM):   end;
892652    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892653    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
892654    +               _3_7 = 1;
MPRINT(EM_DIAGRAM):   _3_7 = 1;
892655    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892656    +            end;
MPRINT(EM_DIAGRAM):   end;
892657    +         end;
MPRINT(EM_DIAGRAM):   end;
892658    +      end;
MPRINT(EM_DIAGRAM):   end;
892659    +   end;
MPRINT(EM_DIAGRAM):   end;
892660    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
892661    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
892662    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
892663    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
892664    +      _3_3 = .;
MPRINT(EM_DIAGRAM):   _3_3 = .;
892665    +      _3_4 = .;
MPRINT(EM_DIAGRAM):   _3_4 = .;
892666    +      _3_5 = .;
MPRINT(EM_DIAGRAM):   _3_5 = .;
892667    +      _3_6 = .;
MPRINT(EM_DIAGRAM):   _3_6 = .;
892668    +      _3_7 = .;
MPRINT(EM_DIAGRAM):   _3_7 = .;
892669    +      _3_8 = .;
MPRINT(EM_DIAGRAM):   _3_8 = .;
892670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892672    +   end;
MPRINT(EM_DIAGRAM):   end;
892673    +end;
MPRINT(EM_DIAGRAM):   end;
892674    +
892675    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
892676    +drop _4_0 _4_1 _4_2 _4_3 _4_4 _4_5 _4_6 _4_7 _4_8 ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 _4_3 _4_4 _4_5 _4_6 _4_7 _4_8 ;
892677    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
892678    +_4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
892679    +_4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
892680    +_4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
892681    +_4_3 = 0;
MPRINT(EM_DIAGRAM):   _4_3 = 0;
892682    +_4_4 = 0;
MPRINT(EM_DIAGRAM):   _4_4 = 0;
892683    +_4_5 = 0;
MPRINT(EM_DIAGRAM):   _4_5 = 0;
892684    +_4_6 = 0;
MPRINT(EM_DIAGRAM):   _4_6 = 0;
892685    +_4_7 = 0;
MPRINT(EM_DIAGRAM):   _4_7 = 0;
892686    +_4_8 = 0;
MPRINT(EM_DIAGRAM):   _4_8 = 0;
892687    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
892688    +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
892689    +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
892690    +   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
892691    +   _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
892692    +   _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
892693    +   _4_5 = .;
MPRINT(EM_DIAGRAM):   _4_5 = .;
892694    +   _4_6 = .;
MPRINT(EM_DIAGRAM):   _4_6 = .;
892695    +   _4_7 = .;
MPRINT(EM_DIAGRAM):   _4_7 = .;
892696    +   _4_8 = .;
MPRINT(EM_DIAGRAM):   _4_8 = .;
892697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892699    +end;
MPRINT(EM_DIAGRAM):   end;
892700    +else do;
MPRINT(EM_DIAGRAM):   else do;
892701    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892702    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
892703    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892704    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
892705    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
892706    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
892707    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
892708    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
892709    +               _4_8 = 1;
MPRINT(EM_DIAGRAM):   _4_8 = 1;
892710    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892711    +            end;
MPRINT(EM_DIAGRAM):   end;
892712    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892713    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
892714    +                  _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
892715    +                  _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
892716    +                  _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
892717    +                  _4_3 = -1;
MPRINT(EM_DIAGRAM):   _4_3 = -1;
892718    +                  _4_4 = -1;
MPRINT(EM_DIAGRAM):   _4_4 = -1;
892719    +                  _4_5 = -1;
MPRINT(EM_DIAGRAM):   _4_5 = -1;
892720    +                  _4_6 = -1;
MPRINT(EM_DIAGRAM):   _4_6 = -1;
892721    +                  _4_7 = -1;
MPRINT(EM_DIAGRAM):   _4_7 = -1;
892722    +                  _4_8 = -1;
MPRINT(EM_DIAGRAM):   _4_8 = -1;
892723    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892724    +               end;
MPRINT(EM_DIAGRAM):   end;
892725    +            end;
MPRINT(EM_DIAGRAM):   end;
892726    +         end;
MPRINT(EM_DIAGRAM):   end;
892727    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892728    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
892729    +               _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
892730    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892731    +            end;
MPRINT(EM_DIAGRAM):   end;
892732    +         end;
MPRINT(EM_DIAGRAM):   end;
892733    +      end;
MPRINT(EM_DIAGRAM):   end;
892734    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892735    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
892736    +            _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
892737    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892738    +         end;
MPRINT(EM_DIAGRAM):   end;
892739    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892740    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
892741    +               _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
892742    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892743    +            end;
MPRINT(EM_DIAGRAM):   end;
892744    +         end;
MPRINT(EM_DIAGRAM):   end;
892745    +      end;
MPRINT(EM_DIAGRAM):   end;
892746    +   end;
MPRINT(EM_DIAGRAM):   end;
892747    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892748    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
892749    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
892750    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
892751    +               _4_3 = 1;
MPRINT(EM_DIAGRAM):   _4_3 = 1;
892752    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892753    +            end;
MPRINT(EM_DIAGRAM):   end;
892754    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892755    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
892756    +                  _4_4 = 1;
MPRINT(EM_DIAGRAM):   _4_4 = 1;
892757    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892758    +               end;
MPRINT(EM_DIAGRAM):   end;
892759    +            end;
MPRINT(EM_DIAGRAM):   end;
892760    +         end;
MPRINT(EM_DIAGRAM):   end;
892761    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892762    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
892763    +               _4_5 = 1;
MPRINT(EM_DIAGRAM):   _4_5 = 1;
892764    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892765    +            end;
MPRINT(EM_DIAGRAM):   end;
892766    +         end;
MPRINT(EM_DIAGRAM):   end;
892767    +      end;
MPRINT(EM_DIAGRAM):   end;
892768    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892769    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
892770    +            _4_6 = 1;
MPRINT(EM_DIAGRAM):   _4_6 = 1;
892771    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892772    +         end;
MPRINT(EM_DIAGRAM):   end;
892773    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892774    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
892775    +               _4_7 = 1;
MPRINT(EM_DIAGRAM):   _4_7 = 1;
892776    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892777    +            end;
MPRINT(EM_DIAGRAM):   end;
892778    +         end;
MPRINT(EM_DIAGRAM):   end;
892779    +      end;
MPRINT(EM_DIAGRAM):   end;
892780    +   end;
MPRINT(EM_DIAGRAM):   end;
892781    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
892782    +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
892783    +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
892784    +      _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
892785    +      _4_3 = .;
MPRINT(EM_DIAGRAM):   _4_3 = .;
892786    +      _4_4 = .;
MPRINT(EM_DIAGRAM):   _4_4 = .;
892787    +      _4_5 = .;
MPRINT(EM_DIAGRAM):   _4_5 = .;
892788    +      _4_6 = .;
MPRINT(EM_DIAGRAM):   _4_6 = .;
892789    +      _4_7 = .;
MPRINT(EM_DIAGRAM):   _4_7 = .;
892790    +      _4_8 = .;
MPRINT(EM_DIAGRAM):   _4_8 = .;
892791    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892792    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892793    +   end;
MPRINT(EM_DIAGRAM):   end;
892794    +end;
MPRINT(EM_DIAGRAM):   end;
892795    +
892796    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
892797    +drop _6_0 _6_1 _6_2 _6_3 _6_4 _6_5 _6_6 _6_7 ;
MPRINT(EM_DIAGRAM):   drop _6_0 _6_1 _6_2 _6_3 _6_4 _6_5 _6_6 _6_7 ;
892798    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
892799    +_6_0 = 0;
MPRINT(EM_DIAGRAM):   _6_0 = 0;
892800    +_6_1 = 0;
MPRINT(EM_DIAGRAM):   _6_1 = 0;
892801    +_6_2 = 0;
MPRINT(EM_DIAGRAM):   _6_2 = 0;
892802    +_6_3 = 0;
MPRINT(EM_DIAGRAM):   _6_3 = 0;
892803    +_6_4 = 0;
MPRINT(EM_DIAGRAM):   _6_4 = 0;
892804    +_6_5 = 0;
MPRINT(EM_DIAGRAM):   _6_5 = 0;
892805    +_6_6 = 0;
MPRINT(EM_DIAGRAM):   _6_6 = 0;
892806    +_6_7 = 0;
MPRINT(EM_DIAGRAM):   _6_7 = 0;
892807    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
892808    +   _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
892809    +   _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
892810    +   _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
892811    +   _6_3 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
892812    +   _6_4 = .;
MPRINT(EM_DIAGRAM):   _6_4 = .;
892813    +   _6_5 = .;
MPRINT(EM_DIAGRAM):   _6_5 = .;
892814    +   _6_6 = .;
MPRINT(EM_DIAGRAM):   _6_6 = .;
892815    +   _6_7 = .;
MPRINT(EM_DIAGRAM):   _6_7 = .;
892816    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892817    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892818    +end;
MPRINT(EM_DIAGRAM):   end;
892819    +else do;
MPRINT(EM_DIAGRAM):   else do;
892820    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892821    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
892822    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892823    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
892824    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
892825    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
892826    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
892827    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
892828    +               _6_7 = 1;
MPRINT(EM_DIAGRAM):   _6_7 = 1;
892829    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892830    +            end;
MPRINT(EM_DIAGRAM):   end;
892831    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892832    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
892833    +                  _6_0 = -1;
MPRINT(EM_DIAGRAM):   _6_0 = -1;
892834    +                  _6_1 = -1;
MPRINT(EM_DIAGRAM):   _6_1 = -1;
892835    +                  _6_2 = -1;
MPRINT(EM_DIAGRAM):   _6_2 = -1;
892836    +                  _6_3 = -1;
MPRINT(EM_DIAGRAM):   _6_3 = -1;
892837    +                  _6_4 = -1;
MPRINT(EM_DIAGRAM):   _6_4 = -1;
892838    +                  _6_5 = -1;
MPRINT(EM_DIAGRAM):   _6_5 = -1;
892839    +                  _6_6 = -1;
MPRINT(EM_DIAGRAM):   _6_6 = -1;
892840    +                  _6_7 = -1;
MPRINT(EM_DIAGRAM):   _6_7 = -1;
892841    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892842    +               end;
MPRINT(EM_DIAGRAM):   end;
892843    +            end;
MPRINT(EM_DIAGRAM):   end;
892844    +         end;
MPRINT(EM_DIAGRAM):   end;
892845    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892846    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
892847    +               _6_0 = 1;
MPRINT(EM_DIAGRAM):   _6_0 = 1;
892848    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892849    +            end;
MPRINT(EM_DIAGRAM):   end;
892850    +         end;
MPRINT(EM_DIAGRAM):   end;
892851    +      end;
MPRINT(EM_DIAGRAM):   end;
892852    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892853    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
892854    +            _6_1 = 1;
MPRINT(EM_DIAGRAM):   _6_1 = 1;
892855    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892856    +         end;
MPRINT(EM_DIAGRAM):   end;
892857    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892858    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
892859    +               _6_2 = 1;
MPRINT(EM_DIAGRAM):   _6_2 = 1;
892860    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892861    +            end;
MPRINT(EM_DIAGRAM):   end;
892862    +         end;
MPRINT(EM_DIAGRAM):   end;
892863    +      end;
MPRINT(EM_DIAGRAM):   end;
892864    +   end;
MPRINT(EM_DIAGRAM):   end;
892865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892866    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
892867    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
892868    +            _6_3 = 1;
MPRINT(EM_DIAGRAM):   _6_3 = 1;
892869    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892870    +         end;
MPRINT(EM_DIAGRAM):   end;
892871    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892872    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
892873    +               _6_4 = 1;
MPRINT(EM_DIAGRAM):   _6_4 = 1;
892874    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892875    +            end;
MPRINT(EM_DIAGRAM):   end;
892876    +         end;
MPRINT(EM_DIAGRAM):   end;
892877    +      end;
MPRINT(EM_DIAGRAM):   end;
892878    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892879    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
892880    +            _6_5 = 1;
MPRINT(EM_DIAGRAM):   _6_5 = 1;
892881    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892882    +         end;
MPRINT(EM_DIAGRAM):   end;
892883    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892884    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
892885    +               _6_6 = 1;
MPRINT(EM_DIAGRAM):   _6_6 = 1;
892886    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892887    +            end;
MPRINT(EM_DIAGRAM):   end;
892888    +         end;
MPRINT(EM_DIAGRAM):   end;
892889    +      end;
MPRINT(EM_DIAGRAM):   end;
892890    +   end;
MPRINT(EM_DIAGRAM):   end;
892891    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
892892    +      _6_0 = .;
MPRINT(EM_DIAGRAM):   _6_0 = .;
892893    +      _6_1 = .;
MPRINT(EM_DIAGRAM):   _6_1 = .;
892894    +      _6_2 = .;
MPRINT(EM_DIAGRAM):   _6_2 = .;
892895    +      _6_3 = .;
MPRINT(EM_DIAGRAM):   _6_3 = .;
892896    +      _6_4 = .;
MPRINT(EM_DIAGRAM):   _6_4 = .;
892897    +      _6_5 = .;
MPRINT(EM_DIAGRAM):   _6_5 = .;
892898    +      _6_6 = .;
MPRINT(EM_DIAGRAM):   _6_6 = .;
892899    +      _6_7 = .;
MPRINT(EM_DIAGRAM):   _6_7 = .;
892900    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
892901    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892902    +   end;
MPRINT(EM_DIAGRAM):   end;
892903    +end;
MPRINT(EM_DIAGRAM):   end;
892904    +
892905    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
892906    +drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 _8_4 _8_5 _8_6 _8_7 _8_8 ;
892907    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
892908    +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
892909    +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
892910    +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
892911    +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
892912    +_8_4 = 0;
MPRINT(EM_DIAGRAM):   _8_4 = 0;
892913    +_8_5 = 0;
MPRINT(EM_DIAGRAM):   _8_5 = 0;
892914    +_8_6 = 0;
MPRINT(EM_DIAGRAM):   _8_6 = 0;
892915    +_8_7 = 0;
MPRINT(EM_DIAGRAM):   _8_7 = 0;
892916    +_8_8 = 0;
MPRINT(EM_DIAGRAM):   _8_8 = 0;
892917    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
892918    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
892919    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
892920    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
892921    +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
892922    +   _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
892923    +   _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
892924    +   _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
892925    +   _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
892926    +   _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
892927    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
892928    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
892929    +end;
MPRINT(EM_DIAGRAM):   end;
892930    +else do;
MPRINT(EM_DIAGRAM):   else do;
892931    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
892932    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
892933    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
892934    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
892935    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
892936    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
892937    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
892938    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
892939    +               _8_8 = 1;
MPRINT(EM_DIAGRAM):   _8_8 = 1;
892940    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892941    +            end;
MPRINT(EM_DIAGRAM):   end;
892942    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892943    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
892944    +                  _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
892945    +                  _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
892946    +                  _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
892947    +                  _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
892948    +                  _8_4 = -1;
MPRINT(EM_DIAGRAM):   _8_4 = -1;
892949    +                  _8_5 = -1;
MPRINT(EM_DIAGRAM):   _8_5 = -1;
892950    +                  _8_6 = -1;
MPRINT(EM_DIAGRAM):   _8_6 = -1;
892951    +                  _8_7 = -1;
MPRINT(EM_DIAGRAM):   _8_7 = -1;
892952    +                  _8_8 = -1;
MPRINT(EM_DIAGRAM):   _8_8 = -1;
892953    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892954    +               end;
MPRINT(EM_DIAGRAM):   end;
892955    +            end;
MPRINT(EM_DIAGRAM):   end;
892956    +         end;
MPRINT(EM_DIAGRAM):   end;
892957    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892958    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
892959    +               _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
892960    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892961    +            end;
MPRINT(EM_DIAGRAM):   end;
892962    +         end;
MPRINT(EM_DIAGRAM):   end;
892963    +      end;
MPRINT(EM_DIAGRAM):   end;
892964    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892965    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
892966    +            _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
892967    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892968    +         end;
MPRINT(EM_DIAGRAM):   end;
892969    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892970    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
892971    +               _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
892972    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892973    +            end;
MPRINT(EM_DIAGRAM):   end;
892974    +         end;
MPRINT(EM_DIAGRAM):   end;
892975    +      end;
MPRINT(EM_DIAGRAM):   end;
892976    +   end;
MPRINT(EM_DIAGRAM):   end;
892977    +   else do;
MPRINT(EM_DIAGRAM):   else do;
892978    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
892979    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
892980    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
892981    +               _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
892982    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892983    +            end;
MPRINT(EM_DIAGRAM):   end;
892984    +            else do;
MPRINT(EM_DIAGRAM):   else do;
892985    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
892986    +                  _8_4 = 1;
MPRINT(EM_DIAGRAM):   _8_4 = 1;
892987    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892988    +               end;
MPRINT(EM_DIAGRAM):   end;
892989    +            end;
MPRINT(EM_DIAGRAM):   end;
892990    +         end;
MPRINT(EM_DIAGRAM):   end;
892991    +         else do;
MPRINT(EM_DIAGRAM):   else do;
892992    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
892993    +               _8_5 = 1;
MPRINT(EM_DIAGRAM):   _8_5 = 1;
892994    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
892995    +            end;
MPRINT(EM_DIAGRAM):   end;
892996    +         end;
MPRINT(EM_DIAGRAM):   end;
892997    +      end;
MPRINT(EM_DIAGRAM):   end;
892998    +      else do;
MPRINT(EM_DIAGRAM):   else do;
892999    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
893000    +            _8_6 = 1;
MPRINT(EM_DIAGRAM):   _8_6 = 1;
893001    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893002    +         end;
MPRINT(EM_DIAGRAM):   end;
893003    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893004    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
893005    +               _8_7 = 1;
MPRINT(EM_DIAGRAM):   _8_7 = 1;
893006    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893007    +            end;
MPRINT(EM_DIAGRAM):   end;
893008    +         end;
MPRINT(EM_DIAGRAM):   end;
893009    +      end;
MPRINT(EM_DIAGRAM):   end;
893010    +   end;
MPRINT(EM_DIAGRAM):   end;
893011    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
893012    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
893013    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
893014    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
893015    +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
893016    +      _8_4 = .;
MPRINT(EM_DIAGRAM):   _8_4 = .;
893017    +      _8_5 = .;
MPRINT(EM_DIAGRAM):   _8_5 = .;
893018    +      _8_6 = .;
MPRINT(EM_DIAGRAM):   _8_6 = .;
893019    +      _8_7 = .;
MPRINT(EM_DIAGRAM):   _8_7 = .;
893020    +      _8_8 = .;
MPRINT(EM_DIAGRAM):   _8_8 = .;
893021    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
893022    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893023    +   end;
MPRINT(EM_DIAGRAM):   end;
893024    +end;
MPRINT(EM_DIAGRAM):   end;
893025    +
893026    +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
893027    +drop _9_0 _9_1 _9_2 _9_3 _9_4 _9_5 _9_6 _9_7 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 _9_4 _9_5 _9_6 _9_7 ;
893028    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
893029    +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
893030    +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
893031    +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
893032    +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
893033    +_9_4 = 0;
MPRINT(EM_DIAGRAM):   _9_4 = 0;
893034    +_9_5 = 0;
MPRINT(EM_DIAGRAM):   _9_5 = 0;
893035    +_9_6 = 0;
MPRINT(EM_DIAGRAM):   _9_6 = 0;
893036    +_9_7 = 0;
MPRINT(EM_DIAGRAM):   _9_7 = 0;
893037    +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
893038    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
893039    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
893040    +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
893041    +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
893042    +   _9_4 = .;
MPRINT(EM_DIAGRAM):   _9_4 = .;
893043    +   _9_5 = .;
MPRINT(EM_DIAGRAM):   _9_5 = .;
893044    +   _9_6 = .;
MPRINT(EM_DIAGRAM):   _9_6 = .;
893045    +   _9_7 = .;
MPRINT(EM_DIAGRAM):   _9_7 = .;
893046    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
893047    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893048    +end;
MPRINT(EM_DIAGRAM):   end;
893049    +else do;
MPRINT(EM_DIAGRAM):   else do;
893050    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
893051    +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
893052    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
893053    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
893054    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
893055    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
893056    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
893057    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
893058    +               _9_7 = 1;
MPRINT(EM_DIAGRAM):   _9_7 = 1;
893059    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893060    +            end;
MPRINT(EM_DIAGRAM):   end;
893061    +            else do;
MPRINT(EM_DIAGRAM):   else do;
893062    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
893063    +                  _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
893064    +                  _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
893065    +                  _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
893066    +                  _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
893067    +                  _9_4 = -1;
MPRINT(EM_DIAGRAM):   _9_4 = -1;
893068    +                  _9_5 = -1;
MPRINT(EM_DIAGRAM):   _9_5 = -1;
893069    +                  _9_6 = -1;
MPRINT(EM_DIAGRAM):   _9_6 = -1;
893070    +                  _9_7 = -1;
MPRINT(EM_DIAGRAM):   _9_7 = -1;
893071    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893072    +               end;
MPRINT(EM_DIAGRAM):   end;
893073    +            end;
MPRINT(EM_DIAGRAM):   end;
893074    +         end;
MPRINT(EM_DIAGRAM):   end;
893075    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893076    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
893077    +               _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
893078    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893079    +            end;
MPRINT(EM_DIAGRAM):   end;
893080    +         end;
MPRINT(EM_DIAGRAM):   end;
893081    +      end;
MPRINT(EM_DIAGRAM):   end;
893082    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893083    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
893084    +            _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
893085    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893086    +         end;
MPRINT(EM_DIAGRAM):   end;
893087    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893088    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
893089    +               _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
893090    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893091    +            end;
MPRINT(EM_DIAGRAM):   end;
893092    +         end;
MPRINT(EM_DIAGRAM):   end;
893093    +      end;
MPRINT(EM_DIAGRAM):   end;
893094    +   end;
MPRINT(EM_DIAGRAM):   end;
893095    +   else do;
MPRINT(EM_DIAGRAM):   else do;
893096    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
893097    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
893098    +            _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
893099    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893100    +         end;
MPRINT(EM_DIAGRAM):   end;
893101    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893102    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
893103    +               _9_4 = 1;
MPRINT(EM_DIAGRAM):   _9_4 = 1;
893104    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893105    +            end;
MPRINT(EM_DIAGRAM):   end;
893106    +         end;
MPRINT(EM_DIAGRAM):   end;
893107    +      end;
MPRINT(EM_DIAGRAM):   end;
893108    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893109    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
893110    +            _9_5 = 1;
MPRINT(EM_DIAGRAM):   _9_5 = 1;
893111    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893112    +         end;
MPRINT(EM_DIAGRAM):   end;
893113    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893114    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
893115    +               _9_6 = 1;
MPRINT(EM_DIAGRAM):   _9_6 = 1;
893116    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893117    +            end;
MPRINT(EM_DIAGRAM):   end;
893118    +         end;
MPRINT(EM_DIAGRAM):   end;
893119    +      end;
MPRINT(EM_DIAGRAM):   end;
893120    +   end;
MPRINT(EM_DIAGRAM):   end;
893121    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
893122    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
893123    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
893124    +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
893125    +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
893126    +      _9_4 = .;
MPRINT(EM_DIAGRAM):   _9_4 = .;
893127    +      _9_5 = .;
MPRINT(EM_DIAGRAM):   _9_5 = .;
893128    +      _9_6 = .;
MPRINT(EM_DIAGRAM):   _9_6 = .;
893129    +      _9_7 = .;
MPRINT(EM_DIAGRAM):   _9_7 = .;
893130    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
893131    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893132    +   end;
MPRINT(EM_DIAGRAM):   end;
893133    +end;
MPRINT(EM_DIAGRAM):   end;
893134    +
893135    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
893136    +drop _10_0 _10_1 _10_2 _10_3 _10_4 _10_5 _10_6 _10_7 _10_8 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 _10_3 _10_4 _10_5 _10_6 _10_7 _10_8 ;
893137    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
893138    +_10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
893139    +_10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
893140    +_10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
893141    +_10_3 = 0;
MPRINT(EM_DIAGRAM):   _10_3 = 0;
893142    +_10_4 = 0;
MPRINT(EM_DIAGRAM):   _10_4 = 0;
893143    +_10_5 = 0;
MPRINT(EM_DIAGRAM):   _10_5 = 0;
893144    +_10_6 = 0;
MPRINT(EM_DIAGRAM):   _10_6 = 0;
893145    +_10_7 = 0;
MPRINT(EM_DIAGRAM):   _10_7 = 0;
893146    +_10_8 = 0;
MPRINT(EM_DIAGRAM):   _10_8 = 0;
893147    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
893148    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
893149    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
893150    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
893151    +   _10_3 = .;
MPRINT(EM_DIAGRAM):   _10_3 = .;
893152    +   _10_4 = .;
MPRINT(EM_DIAGRAM):   _10_4 = .;
893153    +   _10_5 = .;
MPRINT(EM_DIAGRAM):   _10_5 = .;
893154    +   _10_6 = .;
MPRINT(EM_DIAGRAM):   _10_6 = .;
893155    +   _10_7 = .;
MPRINT(EM_DIAGRAM):   _10_7 = .;
893156    +   _10_8 = .;
MPRINT(EM_DIAGRAM):   _10_8 = .;
893157    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
893158    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893159    +end;
MPRINT(EM_DIAGRAM):   end;
893160    +else do;
MPRINT(EM_DIAGRAM):   else do;
893161    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
893162    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
893163    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
893164    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
893165    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
893166    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
893167    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
893168    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
893169    +               _10_8 = 1;
MPRINT(EM_DIAGRAM):   _10_8 = 1;
893170    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893171    +            end;
MPRINT(EM_DIAGRAM):   end;
893172    +            else do;
MPRINT(EM_DIAGRAM):   else do;
893173    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
893174    +                  _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
893175    +                  _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
893176    +                  _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
893177    +                  _10_3 = -1;
MPRINT(EM_DIAGRAM):   _10_3 = -1;
893178    +                  _10_4 = -1;
MPRINT(EM_DIAGRAM):   _10_4 = -1;
893179    +                  _10_5 = -1;
MPRINT(EM_DIAGRAM):   _10_5 = -1;
893180    +                  _10_6 = -1;
MPRINT(EM_DIAGRAM):   _10_6 = -1;
893181    +                  _10_7 = -1;
MPRINT(EM_DIAGRAM):   _10_7 = -1;
893182    +                  _10_8 = -1;
MPRINT(EM_DIAGRAM):   _10_8 = -1;
893183    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893184    +               end;
MPRINT(EM_DIAGRAM):   end;
893185    +            end;
MPRINT(EM_DIAGRAM):   end;
893186    +         end;
MPRINT(EM_DIAGRAM):   end;
893187    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893188    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
893189    +               _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
893190    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893191    +            end;
MPRINT(EM_DIAGRAM):   end;
893192    +         end;
MPRINT(EM_DIAGRAM):   end;
893193    +      end;
MPRINT(EM_DIAGRAM):   end;
893194    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893195    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
893196    +            _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
893197    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893198    +         end;
MPRINT(EM_DIAGRAM):   end;
893199    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893200    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
893201    +               _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
893202    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893203    +            end;
MPRINT(EM_DIAGRAM):   end;
893204    +         end;
MPRINT(EM_DIAGRAM):   end;
893205    +      end;
MPRINT(EM_DIAGRAM):   end;
893206    +   end;
MPRINT(EM_DIAGRAM):   end;
893207    +   else do;
MPRINT(EM_DIAGRAM):   else do;
893208    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
893209    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
893210    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
893211    +               _10_3 = 1;
MPRINT(EM_DIAGRAM):   _10_3 = 1;
893212    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893213    +            end;
MPRINT(EM_DIAGRAM):   end;
893214    +            else do;
MPRINT(EM_DIAGRAM):   else do;
893215    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
893216    +                  _10_4 = 1;
MPRINT(EM_DIAGRAM):   _10_4 = 1;
893217    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893218    +               end;
MPRINT(EM_DIAGRAM):   end;
893219    +            end;
MPRINT(EM_DIAGRAM):   end;
893220    +         end;
MPRINT(EM_DIAGRAM):   end;
893221    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893222    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
893223    +               _10_5 = 1;
MPRINT(EM_DIAGRAM):   _10_5 = 1;
893224    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893225    +            end;
MPRINT(EM_DIAGRAM):   end;
893226    +         end;
MPRINT(EM_DIAGRAM):   end;
893227    +      end;
MPRINT(EM_DIAGRAM):   end;
893228    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893229    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
893230    +            _10_6 = 1;
MPRINT(EM_DIAGRAM):   _10_6 = 1;
893231    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893232    +         end;
MPRINT(EM_DIAGRAM):   end;
893233    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893234    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
893235    +               _10_7 = 1;
MPRINT(EM_DIAGRAM):   _10_7 = 1;
893236    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893237    +            end;
MPRINT(EM_DIAGRAM):   end;
893238    +         end;
MPRINT(EM_DIAGRAM):   end;
893239    +      end;
MPRINT(EM_DIAGRAM):   end;
893240    +   end;
MPRINT(EM_DIAGRAM):   end;
893241    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
893242    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
893243    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
893244    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
893245    +      _10_3 = .;
MPRINT(EM_DIAGRAM):   _10_3 = .;
893246    +      _10_4 = .;
MPRINT(EM_DIAGRAM):   _10_4 = .;
893247    +      _10_5 = .;
MPRINT(EM_DIAGRAM):   _10_5 = .;
893248    +      _10_6 = .;
MPRINT(EM_DIAGRAM):   _10_6 = .;
893249    +      _10_7 = .;
MPRINT(EM_DIAGRAM):   _10_7 = .;
893250    +      _10_8 = .;
MPRINT(EM_DIAGRAM):   _10_8 = .;
893251    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
893252    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893253    +   end;
MPRINT(EM_DIAGRAM):   end;
893254    +end;
MPRINT(EM_DIAGRAM):   end;
893255    +
893256    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
893257    +drop _11_0 _11_1 _11_2 _11_3 _11_4 ;
MPRINT(EM_DIAGRAM):   drop _11_0 _11_1 _11_2 _11_3 _11_4 ;
893258    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
893259    +_11_0 = 0;
MPRINT(EM_DIAGRAM):   _11_0 = 0;
893260    +_11_1 = 0;
MPRINT(EM_DIAGRAM):   _11_1 = 0;
893261    +_11_2 = 0;
MPRINT(EM_DIAGRAM):   _11_2 = 0;
893262    +_11_3 = 0;
MPRINT(EM_DIAGRAM):   _11_3 = 0;
893263    +_11_4 = 0;
MPRINT(EM_DIAGRAM):   _11_4 = 0;
893264    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
893265    +   _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_0 = .;
893266    +   _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
893267    +   _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
893268    +   _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
893269    +   _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
893270    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
893271    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893272    +end;
MPRINT(EM_DIAGRAM):   end;
893273    +else do;
MPRINT(EM_DIAGRAM):   else do;
893274    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
893275    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
893276    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
893277    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
893278    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
893279    +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
893280    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
893281    +            _11_0 = 1;
MPRINT(EM_DIAGRAM):   _11_0 = 1;
893282    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893283    +         end;
MPRINT(EM_DIAGRAM):   end;
893284    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893285    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
893286    +               _11_1 = 1;
MPRINT(EM_DIAGRAM):   _11_1 = 1;
893287    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893288    +            end;
MPRINT(EM_DIAGRAM):   end;
893289    +         end;
MPRINT(EM_DIAGRAM):   end;
893290    +      end;
MPRINT(EM_DIAGRAM):   end;
893291    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893292    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
893293    +            _11_2 = 1;
MPRINT(EM_DIAGRAM):   _11_2 = 1;
893294    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893295    +         end;
MPRINT(EM_DIAGRAM):   end;
893296    +      end;
MPRINT(EM_DIAGRAM):   end;
893297    +   end;
MPRINT(EM_DIAGRAM):   end;
893298    +   else do;
MPRINT(EM_DIAGRAM):   else do;
893299    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
893300    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
893301    +            _11_3 = 1;
MPRINT(EM_DIAGRAM):   _11_3 = 1;
893302    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893303    +         end;
MPRINT(EM_DIAGRAM):   end;
893304    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893305    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
893306    +               _11_4 = 1;
MPRINT(EM_DIAGRAM):   _11_4 = 1;
893307    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893308    +            end;
MPRINT(EM_DIAGRAM):   end;
893309    +         end;
MPRINT(EM_DIAGRAM):   end;
893310    +      end;
MPRINT(EM_DIAGRAM):   end;
893311    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893312    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
893313    +            _11_0 = -1;
MPRINT(EM_DIAGRAM):   _11_0 = -1;
893314    +            _11_1 = -1;
MPRINT(EM_DIAGRAM):   _11_1 = -1;
893315    +            _11_2 = -1;
MPRINT(EM_DIAGRAM):   _11_2 = -1;
893316    +            _11_3 = -1;
MPRINT(EM_DIAGRAM):   _11_3 = -1;
893317    +            _11_4 = -1;
MPRINT(EM_DIAGRAM):   _11_4 = -1;
893318    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893319    +         end;
MPRINT(EM_DIAGRAM):   end;
893320    +      end;
MPRINT(EM_DIAGRAM):   end;
893321    +   end;
MPRINT(EM_DIAGRAM):   end;
893322    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
893323    +      _11_0 = .;
MPRINT(EM_DIAGRAM):   _11_0 = .;
893324    +      _11_1 = .;
MPRINT(EM_DIAGRAM):   _11_1 = .;
893325    +      _11_2 = .;
MPRINT(EM_DIAGRAM):   _11_2 = .;
893326    +      _11_3 = .;
MPRINT(EM_DIAGRAM):   _11_3 = .;
893327    +      _11_4 = .;
MPRINT(EM_DIAGRAM):   _11_4 = .;
893328    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
893329    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893330    +   end;
MPRINT(EM_DIAGRAM):   end;
893331    +end;
MPRINT(EM_DIAGRAM):   end;
893332    +
893333    +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
893334    +drop _14_0 _14_1 _14_2 _14_3 _14_4 _14_5 _14_6 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 _14_3 _14_4 _14_5 _14_6 ;
893335    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
893336    +_14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
893337    +_14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
893338    +_14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
893339    +_14_3 = 0;
MPRINT(EM_DIAGRAM):   _14_3 = 0;
893340    +_14_4 = 0;
MPRINT(EM_DIAGRAM):   _14_4 = 0;
893341    +_14_5 = 0;
MPRINT(EM_DIAGRAM):   _14_5 = 0;
893342    +_14_6 = 0;
MPRINT(EM_DIAGRAM):   _14_6 = 0;
893343    +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
893344    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
893345    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
893346    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
893347    +   _14_3 = .;
MPRINT(EM_DIAGRAM):   _14_3 = .;
893348    +   _14_4 = .;
MPRINT(EM_DIAGRAM):   _14_4 = .;
893349    +   _14_5 = .;
MPRINT(EM_DIAGRAM):   _14_5 = .;
893350    +   _14_6 = .;
MPRINT(EM_DIAGRAM):   _14_6 = .;
893351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
893352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893353    +end;
MPRINT(EM_DIAGRAM):   end;
893354    +else do;
MPRINT(EM_DIAGRAM):   else do;
893355    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
893356    +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
893357    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
893358    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
893359    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
893360    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
893361    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
893362    +            _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
893363    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893364    +         end;
MPRINT(EM_DIAGRAM):   end;
893365    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893366    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
893367    +               _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
893368    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893369    +            end;
MPRINT(EM_DIAGRAM):   end;
893370    +         end;
MPRINT(EM_DIAGRAM):   end;
893371    +      end;
MPRINT(EM_DIAGRAM):   end;
893372    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893373    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
893374    +            _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
893375    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893376    +         end;
MPRINT(EM_DIAGRAM):   end;
893377    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893378    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
893379    +               _14_3 = 1;
MPRINT(EM_DIAGRAM):   _14_3 = 1;
893380    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893381    +            end;
MPRINT(EM_DIAGRAM):   end;
893382    +         end;
MPRINT(EM_DIAGRAM):   end;
893383    +      end;
MPRINT(EM_DIAGRAM):   end;
893384    +   end;
MPRINT(EM_DIAGRAM):   end;
893385    +   else do;
MPRINT(EM_DIAGRAM):   else do;
893386    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
893387    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
893388    +            _14_4 = 1;
MPRINT(EM_DIAGRAM):   _14_4 = 1;
893389    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893390    +         end;
MPRINT(EM_DIAGRAM):   end;
893391    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893392    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
893393    +               _14_5 = 1;
MPRINT(EM_DIAGRAM):   _14_5 = 1;
893394    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893395    +            end;
MPRINT(EM_DIAGRAM):   end;
893396    +         end;
MPRINT(EM_DIAGRAM):   end;
893397    +      end;
MPRINT(EM_DIAGRAM):   end;
893398    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893399    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
893400    +            _14_6 = 1;
MPRINT(EM_DIAGRAM):   _14_6 = 1;
893401    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893402    +         end;
MPRINT(EM_DIAGRAM):   end;
893403    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893404    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
893405    +               _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
893406    +               _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
893407    +               _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
893408    +               _14_3 = -1;
MPRINT(EM_DIAGRAM):   _14_3 = -1;
893409    +               _14_4 = -1;
MPRINT(EM_DIAGRAM):   _14_4 = -1;
893410    +               _14_5 = -1;
MPRINT(EM_DIAGRAM):   _14_5 = -1;
893411    +               _14_6 = -1;
MPRINT(EM_DIAGRAM):   _14_6 = -1;
893412    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893413    +            end;
MPRINT(EM_DIAGRAM):   end;
893414    +         end;
MPRINT(EM_DIAGRAM):   end;
893415    +      end;
MPRINT(EM_DIAGRAM):   end;
893416    +   end;
MPRINT(EM_DIAGRAM):   end;
893417    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
893418    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
893419    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
893420    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
893421    +      _14_3 = .;
MPRINT(EM_DIAGRAM):   _14_3 = .;
893422    +      _14_4 = .;
MPRINT(EM_DIAGRAM):   _14_4 = .;
893423    +      _14_5 = .;
MPRINT(EM_DIAGRAM):   _14_5 = .;
893424    +      _14_6 = .;
MPRINT(EM_DIAGRAM):   _14_6 = .;
893425    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
893426    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893427    +   end;
MPRINT(EM_DIAGRAM):   end;
893428    +end;
MPRINT(EM_DIAGRAM):   end;
893429    +
893430    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
893431    +drop _16_0 _16_1 _16_2 _16_3 _16_4 _16_5 _16_6 _16_7 _16_8 ;
MPRINT(EM_DIAGRAM):   drop _16_0 _16_1 _16_2 _16_3 _16_4 _16_5 _16_6 _16_7 _16_8 ;
893432    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
893433    +_16_0 = 0;
MPRINT(EM_DIAGRAM):   _16_0 = 0;
893434    +_16_1 = 0;
MPRINT(EM_DIAGRAM):   _16_1 = 0;
893435    +_16_2 = 0;
MPRINT(EM_DIAGRAM):   _16_2 = 0;
893436    +_16_3 = 0;
MPRINT(EM_DIAGRAM):   _16_3 = 0;
893437    +_16_4 = 0;
MPRINT(EM_DIAGRAM):   _16_4 = 0;
893438    +_16_5 = 0;
MPRINT(EM_DIAGRAM):   _16_5 = 0;
893439    +_16_6 = 0;
MPRINT(EM_DIAGRAM):   _16_6 = 0;
893440    +_16_7 = 0;
MPRINT(EM_DIAGRAM):   _16_7 = 0;
893441    +_16_8 = 0;
MPRINT(EM_DIAGRAM):   _16_8 = 0;
893442    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
893443    +   _16_0 = .;
MPRINT(EM_DIAGRAM):   _16_0 = .;
893444    +   _16_1 = .;
MPRINT(EM_DIAGRAM):   _16_1 = .;
893445    +   _16_2 = .;
MPRINT(EM_DIAGRAM):   _16_2 = .;
893446    +   _16_3 = .;
MPRINT(EM_DIAGRAM):   _16_3 = .;
893447    +   _16_4 = .;
MPRINT(EM_DIAGRAM):   _16_4 = .;
893448    +   _16_5 = .;
MPRINT(EM_DIAGRAM):   _16_5 = .;
893449    +   _16_6 = .;
MPRINT(EM_DIAGRAM):   _16_6 = .;
893450    +   _16_7 = .;
MPRINT(EM_DIAGRAM):   _16_7 = .;
893451    +   _16_8 = .;
MPRINT(EM_DIAGRAM):   _16_8 = .;
893452    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
893453    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893454    +end;
MPRINT(EM_DIAGRAM):   end;
893455    +else do;
MPRINT(EM_DIAGRAM):   else do;
893456    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
893457    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
893458    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
893459    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
893460    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
893461    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
893462    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
893463    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
893464    +               _16_8 = 1;
MPRINT(EM_DIAGRAM):   _16_8 = 1;
893465    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893466    +            end;
MPRINT(EM_DIAGRAM):   end;
893467    +            else do;
MPRINT(EM_DIAGRAM):   else do;
893468    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
893469    +                  _16_0 = -1;
MPRINT(EM_DIAGRAM):   _16_0 = -1;
893470    +                  _16_1 = -1;
MPRINT(EM_DIAGRAM):   _16_1 = -1;
893471    +                  _16_2 = -1;
MPRINT(EM_DIAGRAM):   _16_2 = -1;
893472    +                  _16_3 = -1;
MPRINT(EM_DIAGRAM):   _16_3 = -1;
893473    +                  _16_4 = -1;
MPRINT(EM_DIAGRAM):   _16_4 = -1;
893474    +                  _16_5 = -1;
MPRINT(EM_DIAGRAM):   _16_5 = -1;
893475    +                  _16_6 = -1;
MPRINT(EM_DIAGRAM):   _16_6 = -1;
893476    +                  _16_7 = -1;
MPRINT(EM_DIAGRAM):   _16_7 = -1;
893477    +                  _16_8 = -1;
MPRINT(EM_DIAGRAM):   _16_8 = -1;
893478    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893479    +               end;
MPRINT(EM_DIAGRAM):   end;
893480    +            end;
MPRINT(EM_DIAGRAM):   end;
893481    +         end;
MPRINT(EM_DIAGRAM):   end;
893482    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893483    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
893484    +               _16_0 = 1;
MPRINT(EM_DIAGRAM):   _16_0 = 1;
893485    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893486    +            end;
MPRINT(EM_DIAGRAM):   end;
893487    +         end;
MPRINT(EM_DIAGRAM):   end;
893488    +      end;
MPRINT(EM_DIAGRAM):   end;
893489    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893490    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
893491    +            _16_1 = 1;
MPRINT(EM_DIAGRAM):   _16_1 = 1;
893492    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893493    +         end;
MPRINT(EM_DIAGRAM):   end;
893494    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893495    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
893496    +               _16_2 = 1;
MPRINT(EM_DIAGRAM):   _16_2 = 1;
893497    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893498    +            end;
MPRINT(EM_DIAGRAM):   end;
893499    +         end;
MPRINT(EM_DIAGRAM):   end;
893500    +      end;
MPRINT(EM_DIAGRAM):   end;
893501    +   end;
MPRINT(EM_DIAGRAM):   end;
893502    +   else do;
MPRINT(EM_DIAGRAM):   else do;
893503    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
893504    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
893505    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
893506    +               _16_3 = 1;
MPRINT(EM_DIAGRAM):   _16_3 = 1;
893507    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893508    +            end;
MPRINT(EM_DIAGRAM):   end;
893509    +            else do;
MPRINT(EM_DIAGRAM):   else do;
893510    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
893511    +                  _16_4 = 1;
MPRINT(EM_DIAGRAM):   _16_4 = 1;
893512    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893513    +               end;
MPRINT(EM_DIAGRAM):   end;
893514    +            end;
MPRINT(EM_DIAGRAM):   end;
893515    +         end;
MPRINT(EM_DIAGRAM):   end;
893516    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893517    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
893518    +               _16_5 = 1;
MPRINT(EM_DIAGRAM):   _16_5 = 1;
893519    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893520    +            end;
MPRINT(EM_DIAGRAM):   end;
893521    +         end;
MPRINT(EM_DIAGRAM):   end;
893522    +      end;
MPRINT(EM_DIAGRAM):   end;
893523    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893524    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
893525    +            _16_6 = 1;
MPRINT(EM_DIAGRAM):   _16_6 = 1;
893526    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893527    +         end;
MPRINT(EM_DIAGRAM):   end;
893528    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893529    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
893530    +               _16_7 = 1;
MPRINT(EM_DIAGRAM):   _16_7 = 1;
893531    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893532    +            end;
MPRINT(EM_DIAGRAM):   end;
893533    +         end;
MPRINT(EM_DIAGRAM):   end;
893534    +      end;
MPRINT(EM_DIAGRAM):   end;
893535    +   end;
MPRINT(EM_DIAGRAM):   end;
893536    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
893537    +      _16_0 = .;
MPRINT(EM_DIAGRAM):   _16_0 = .;
893538    +      _16_1 = .;
MPRINT(EM_DIAGRAM):   _16_1 = .;
893539    +      _16_2 = .;
MPRINT(EM_DIAGRAM):   _16_2 = .;
893540    +      _16_3 = .;
MPRINT(EM_DIAGRAM):   _16_3 = .;
893541    +      _16_4 = .;
MPRINT(EM_DIAGRAM):   _16_4 = .;
893542    +      _16_5 = .;
MPRINT(EM_DIAGRAM):   _16_5 = .;
893543    +      _16_6 = .;
MPRINT(EM_DIAGRAM):   _16_6 = .;
893544    +      _16_7 = .;
MPRINT(EM_DIAGRAM):   _16_7 = .;
893545    +      _16_8 = .;
MPRINT(EM_DIAGRAM):   _16_8 = .;
893546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
893547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893548    +   end;
MPRINT(EM_DIAGRAM):   end;
893549    +end;
MPRINT(EM_DIAGRAM):   end;
893550    +
893551    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
893552    +drop _17_0 _17_1 _17_2 _17_3 _17_4 _17_5 _17_6 _17_7 _17_8 ;
MPRINT(EM_DIAGRAM):   drop _17_0 _17_1 _17_2 _17_3 _17_4 _17_5 _17_6 _17_7 _17_8 ;
893553    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
893554    +_17_0 = 0;
MPRINT(EM_DIAGRAM):   _17_0 = 0;
893555    +_17_1 = 0;
MPRINT(EM_DIAGRAM):   _17_1 = 0;
893556    +_17_2 = 0;
MPRINT(EM_DIAGRAM):   _17_2 = 0;
893557    +_17_3 = 0;
MPRINT(EM_DIAGRAM):   _17_3 = 0;
893558    +_17_4 = 0;
MPRINT(EM_DIAGRAM):   _17_4 = 0;
893559    +_17_5 = 0;
MPRINT(EM_DIAGRAM):   _17_5 = 0;
893560    +_17_6 = 0;
MPRINT(EM_DIAGRAM):   _17_6 = 0;
893561    +_17_7 = 0;
MPRINT(EM_DIAGRAM):   _17_7 = 0;
893562    +_17_8 = 0;
MPRINT(EM_DIAGRAM):   _17_8 = 0;
893563    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
893564    +   _17_0 = .;
MPRINT(EM_DIAGRAM):   _17_0 = .;
893565    +   _17_1 = .;
MPRINT(EM_DIAGRAM):   _17_1 = .;
893566    +   _17_2 = .;
MPRINT(EM_DIAGRAM):   _17_2 = .;
893567    +   _17_3 = .;
MPRINT(EM_DIAGRAM):   _17_3 = .;
893568    +   _17_4 = .;
MPRINT(EM_DIAGRAM):   _17_4 = .;
893569    +   _17_5 = .;
MPRINT(EM_DIAGRAM):   _17_5 = .;
893570    +   _17_6 = .;
MPRINT(EM_DIAGRAM):   _17_6 = .;
893571    +   _17_7 = .;
MPRINT(EM_DIAGRAM):   _17_7 = .;
893572    +   _17_8 = .;
MPRINT(EM_DIAGRAM):   _17_8 = .;
893573    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
893574    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893575    +end;
MPRINT(EM_DIAGRAM):   end;
893576    +else do;
MPRINT(EM_DIAGRAM):   else do;
893577    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
893578    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
893579    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
893580    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
893581    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
893582    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
893583    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
893584    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
893585    +               _17_8 = 1;
MPRINT(EM_DIAGRAM):   _17_8 = 1;
893586    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893587    +            end;
MPRINT(EM_DIAGRAM):   end;
893588    +            else do;
MPRINT(EM_DIAGRAM):   else do;
893589    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
893590    +                  _17_0 = -1;
MPRINT(EM_DIAGRAM):   _17_0 = -1;
893591    +                  _17_1 = -1;
MPRINT(EM_DIAGRAM):   _17_1 = -1;
893592    +                  _17_2 = -1;
MPRINT(EM_DIAGRAM):   _17_2 = -1;
893593    +                  _17_3 = -1;
MPRINT(EM_DIAGRAM):   _17_3 = -1;
893594    +                  _17_4 = -1;
MPRINT(EM_DIAGRAM):   _17_4 = -1;
893595    +                  _17_5 = -1;
MPRINT(EM_DIAGRAM):   _17_5 = -1;
893596    +                  _17_6 = -1;
MPRINT(EM_DIAGRAM):   _17_6 = -1;
893597    +                  _17_7 = -1;
MPRINT(EM_DIAGRAM):   _17_7 = -1;
893598    +                  _17_8 = -1;
MPRINT(EM_DIAGRAM):   _17_8 = -1;
893599    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893600    +               end;
MPRINT(EM_DIAGRAM):   end;
893601    +            end;
MPRINT(EM_DIAGRAM):   end;
893602    +         end;
MPRINT(EM_DIAGRAM):   end;
893603    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893604    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
893605    +               _17_0 = 1;
MPRINT(EM_DIAGRAM):   _17_0 = 1;
893606    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893607    +            end;
MPRINT(EM_DIAGRAM):   end;
893608    +         end;
MPRINT(EM_DIAGRAM):   end;
893609    +      end;
MPRINT(EM_DIAGRAM):   end;
893610    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893611    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
893612    +            _17_1 = 1;
MPRINT(EM_DIAGRAM):   _17_1 = 1;
893613    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893614    +         end;
MPRINT(EM_DIAGRAM):   end;
893615    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893616    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
893617    +               _17_2 = 1;
MPRINT(EM_DIAGRAM):   _17_2 = 1;
893618    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893619    +            end;
MPRINT(EM_DIAGRAM):   end;
893620    +         end;
MPRINT(EM_DIAGRAM):   end;
893621    +      end;
MPRINT(EM_DIAGRAM):   end;
893622    +   end;
MPRINT(EM_DIAGRAM):   end;
893623    +   else do;
MPRINT(EM_DIAGRAM):   else do;
893624    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
893625    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
893626    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
893627    +               _17_3 = 1;
MPRINT(EM_DIAGRAM):   _17_3 = 1;
893628    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893629    +            end;
MPRINT(EM_DIAGRAM):   end;
893630    +            else do;
MPRINT(EM_DIAGRAM):   else do;
893631    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
893632    +                  _17_4 = 1;
MPRINT(EM_DIAGRAM):   _17_4 = 1;
893633    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893634    +               end;
MPRINT(EM_DIAGRAM):   end;
893635    +            end;
MPRINT(EM_DIAGRAM):   end;
893636    +         end;
MPRINT(EM_DIAGRAM):   end;
893637    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893638    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
893639    +               _17_5 = 1;
MPRINT(EM_DIAGRAM):   _17_5 = 1;
893640    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893641    +            end;
MPRINT(EM_DIAGRAM):   end;
893642    +         end;
MPRINT(EM_DIAGRAM):   end;
893643    +      end;
MPRINT(EM_DIAGRAM):   end;
893644    +      else do;
MPRINT(EM_DIAGRAM):   else do;
893645    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
893646    +            _17_6 = 1;
MPRINT(EM_DIAGRAM):   _17_6 = 1;
893647    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893648    +         end;
MPRINT(EM_DIAGRAM):   end;
893649    +         else do;
MPRINT(EM_DIAGRAM):   else do;
893650    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
893651    +               _17_7 = 1;
MPRINT(EM_DIAGRAM):   _17_7 = 1;
893652    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
893653    +            end;
MPRINT(EM_DIAGRAM):   end;
893654    +         end;
MPRINT(EM_DIAGRAM):   end;
893655    +      end;
MPRINT(EM_DIAGRAM):   end;
893656    +   end;
MPRINT(EM_DIAGRAM):   end;
893657    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
893658    +      _17_0 = .;
MPRINT(EM_DIAGRAM):   _17_0 = .;
893659    +      _17_1 = .;
MPRINT(EM_DIAGRAM):   _17_1 = .;
893660    +      _17_2 = .;
MPRINT(EM_DIAGRAM):   _17_2 = .;
893661    +      _17_3 = .;
MPRINT(EM_DIAGRAM):   _17_3 = .;
893662    +      _17_4 = .;
MPRINT(EM_DIAGRAM):   _17_4 = .;
893663    +      _17_5 = .;
MPRINT(EM_DIAGRAM):   _17_5 = .;
893664    +      _17_6 = .;
MPRINT(EM_DIAGRAM):   _17_6 = .;
893665    +      _17_7 = .;
MPRINT(EM_DIAGRAM):   _17_7 = .;
893666    +      _17_8 = .;
MPRINT(EM_DIAGRAM):   _17_8 = .;
893667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
893668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
893669    +   end;
MPRINT(EM_DIAGRAM):   end;
893670    +end;
MPRINT(EM_DIAGRAM):   end;
893671    +
893672    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
893673    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
893674    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
893675    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
893676    +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
893677    +end;
MPRINT(EM_DIAGRAM):   end;
893678    +
893679    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
893680    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
893681    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
893682    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
893683    +
893684    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
893685    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893686    +_LP0 = _LP0 + (   -0.43533664969535) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.43533664969535) * _TEMP * _1_0;
893687    +
893688    +***  Effect: GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmpTotal ;
893689    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893690    +_LP0 = _LP0 + (   -0.80259368074474) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.80259368074474) * _TEMP * _2_0;
893691    +
893692    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
893693    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893694    +_LP0 = _LP0 + (    0.91100459014326) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.91100459014326) * _TEMP * _3_0;
893695    +_LP0 = _LP0 + (    1.30517605331849) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.30517605331849) * _TEMP * _3_1;
893696    +_LP0 = _LP0 + (    1.11556358848526) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.11556358848526) * _TEMP * _3_2;
893697    +_LP0 = _LP0 + (    0.75137606837703) * _TEMP * _3_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.75137606837703) * _TEMP * _3_3;
893698    +_LP0 = _LP0 + (    0.22667584665051) * _TEMP * _3_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22667584665051) * _TEMP * _3_4;
893699    +_LP0 = _LP0 + (   -0.36355490163716) * _TEMP * _3_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36355490163716) * _TEMP * _3_5;
893700    +_LP0 = _LP0 + (   -0.27212699434389) * _TEMP * _3_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.27212699434389) * _TEMP * _3_6;
893701    +_LP0 = _LP0 + (   -0.89978590791079) * _TEMP * _3_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.89978590791079) * _TEMP * _3_7;
893702    +_LP0 = _LP0 + (   -0.94480140724689) * _TEMP * _3_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.94480140724689) * _TEMP * _3_8;
893703    +
893704    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
893705    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893706    +_LP0 = _LP0 + (   -0.67863268191527) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.67863268191527) * _TEMP * _4_0;
893707    +_LP0 = _LP0 + (   -0.57046328857592) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57046328857592) * _TEMP * _4_1;
893708    +_LP0 = _LP0 + (    -0.1890918276771) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1890918276771) * _TEMP * _4_2;
893709    +_LP0 = _LP0 + (    0.23692190511298) * _TEMP * _4_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.23692190511298) * _TEMP * _4_3;
893710    +_LP0 = _LP0 + (    0.20526853412013) * _TEMP * _4_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20526853412013) * _TEMP * _4_4;
893711    +_LP0 = _LP0 + (   -0.17214495632527) * _TEMP * _4_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.17214495632527) * _TEMP * _4_5;
893712    +_LP0 = _LP0 + (   -0.39723869175524) * _TEMP * _4_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39723869175524) * _TEMP * _4_6;
893713    +_LP0 = _LP0 + (    0.12606456143445) * _TEMP * _4_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.12606456143445) * _TEMP * _4_7;
893714    +_LP0 = _LP0 + (    0.42361200787646) * _TEMP * _4_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.42361200787646) * _TEMP * _4_8;
893715    +
893716    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
893717    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893718    +_LP0 = _LP0 + (    0.48752062405289) * _TEMP * _6_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48752062405289) * _TEMP * _6_0;
893719    +_LP0 = _LP0 + (    0.17481352517088) * _TEMP * _6_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17481352517088) * _TEMP * _6_1;
893720    +_LP0 = _LP0 + (    0.09853640441631) * _TEMP * _6_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09853640441631) * _TEMP * _6_2;
893721    +_LP0 = _LP0 + (   -0.07229233845021) * _TEMP * _6_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.07229233845021) * _TEMP * _6_3;
893722    +_LP0 = _LP0 + (   -0.01389179233941) * _TEMP * _6_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01389179233941) * _TEMP * _6_4;
893723    +_LP0 = _LP0 + (     0.3386403333754) * _TEMP * _6_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3386403333754) * _TEMP * _6_5;
893724    +_LP0 = _LP0 + (   -0.25832507184609) * _TEMP * _6_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25832507184609) * _TEMP * _6_6;
893725    +_LP0 = _LP0 + (   -0.26492098163096) * _TEMP * _6_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.26492098163096) * _TEMP * _6_7;
893726    +
893727    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
893728    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893729    +_LP0 = _LP0 + (   -4.59610842787446) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.59610842787446) * _TEMP * _8_0;
893730    +_LP0 = _LP0 + (   -2.32024987229394) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.32024987229394) * _TEMP * _8_1;
893731    +_LP0 = _LP0 + (   -1.64646759719417) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.64646759719417) * _TEMP * _8_2;
893732    +_LP0 = _LP0 + (   -0.76151212861519) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76151212861519) * _TEMP * _8_3;
893733    +_LP0 = _LP0 + (    0.51722378376922) * _TEMP * _8_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51722378376922) * _TEMP * _8_4;
893734    +_LP0 = _LP0 + (    0.75208074934091) * _TEMP * _8_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.75208074934091) * _TEMP * _8_5;
893735    +_LP0 = _LP0 + (    1.45871842458832) * _TEMP * _8_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.45871842458832) * _TEMP * _8_6;
893736    +_LP0 = _LP0 + (    1.52563715317721) * _TEMP * _8_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.52563715317721) * _TEMP * _8_7;
893737    +_LP0 = _LP0 + (    2.21558270110625) * _TEMP * _8_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.21558270110625) * _TEMP * _8_8;
893738    +
893739    +***  Effect: GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntSweetProducts ;
893740    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893741    +_LP0 = _LP0 + (    0.18739902632568) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18739902632568) * _TEMP * _9_0;
893742    +_LP0 = _LP0 + (    0.37870460830373) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.37870460830373) * _TEMP * _9_1;
893743    +_LP0 = _LP0 + (    0.22908519374031) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22908519374031) * _TEMP * _9_2;
893744    +_LP0 = _LP0 + (   -0.00561701310679) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00561701310679) * _TEMP * _9_3;
893745    +_LP0 = _LP0 + (     0.3857620674363) * _TEMP * _9_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3857620674363) * _TEMP * _9_4;
893746    +_LP0 = _LP0 + (   -0.16844878587934) * _TEMP * _9_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.16844878587934) * _TEMP * _9_5;
893747    +_LP0 = _LP0 + (    -0.1305347485537) * _TEMP * _9_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1305347485537) * _TEMP * _9_6;
893748    +_LP0 = _LP0 + (   -0.18036392668341) * _TEMP * _9_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.18036392668341) * _TEMP * _9_7;
893749    +
893750    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
893751    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893752    +_LP0 = _LP0 + (    2.19744807146287) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.19744807146287) * _TEMP * _10_0;
893753    +_LP0 = _LP0 + (    1.49780556010343) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.49780556010343) * _TEMP * _10_1;
893754    +_LP0 = _LP0 + (    1.20853403645007) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.20853403645007) * _TEMP * _10_2;
893755    +_LP0 = _LP0 + (    0.91522429321633) * _TEMP * _10_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.91522429321633) * _TEMP * _10_3;
893756    +_LP0 = _LP0 + (    0.07188342963614) * _TEMP * _10_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07188342963614) * _TEMP * _10_4;
893757    +_LP0 = _LP0 + (   -0.19911189687109) * _TEMP * _10_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.19911189687109) * _TEMP * _10_5;
893758    +_LP0 = _LP0 + (   -0.89304358322459) * _TEMP * _10_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.89304358322459) * _TEMP * _10_6;
893759    +_LP0 = _LP0 + (   -1.20703026995025) * _TEMP * _10_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.20703026995025) * _TEMP * _10_7;
893760    +_LP0 = _LP0 + (   -1.59039392715362) * _TEMP * _10_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.59039392715362) * _TEMP * _10_8;
893761    +
893762    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
893763    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893764    +_LP0 = _LP0 + (   -3.40703872318535) * _TEMP * _11_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.40703872318535) * _TEMP * _11_0;
893765    +_LP0 = _LP0 + (   -1.45181049982561) * _TEMP * _11_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.45181049982561) * _TEMP * _11_1;
893766    +_LP0 = _LP0 + (   -0.08347404660345) * _TEMP * _11_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.08347404660345) * _TEMP * _11_2;
893767    +_LP0 = _LP0 + (    0.81955944534199) * _TEMP * _11_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.81955944534199) * _TEMP * _11_3;
893768    +_LP0 = _LP0 + (    1.45035693356184) * _TEMP * _11_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.45035693356184) * _TEMP * _11_4;
893769    +
893770    +***  Effect: GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumWebVisitsMonth ;
893771    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893772    +_LP0 = _LP0 + (   -1.81981937806131) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.81981937806131) * _TEMP * _14_0;
893773    +_LP0 = _LP0 + (   -1.17799242784665) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.17799242784665) * _TEMP * _14_1;
893774    +_LP0 = _LP0 + (   -0.94053899638537) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.94053899638537) * _TEMP * _14_2;
893775    +_LP0 = _LP0 + (   -0.36886112918233) * _TEMP * _14_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36886112918233) * _TEMP * _14_3;
893776    +_LP0 = _LP0 + (    0.29366599559997) * _TEMP * _14_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29366599559997) * _TEMP * _14_4;
893777    +_LP0 = _LP0 + (    0.37587988225403) * _TEMP * _14_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.37587988225403) * _TEMP * _14_5;
893778    +_LP0 = _LP0 + (     1.2821313793468) * _TEMP * _14_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.2821313793468) * _TEMP * _14_6;
893779    +
893780    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
893781    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893782    +_LP0 = _LP0 + (    1.52257971842016) * _TEMP * _16_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.52257971842016) * _TEMP * _16_0;
893783    +_LP0 = _LP0 + (    0.89925185098242) * _TEMP * _16_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89925185098242) * _TEMP * _16_1;
893784    +_LP0 = _LP0 + (    0.43979399106939) * _TEMP * _16_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.43979399106939) * _TEMP * _16_2;
893785    +_LP0 = _LP0 + (   -0.48868452275874) * _TEMP * _16_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.48868452275874) * _TEMP * _16_3;
893786    +_LP0 = _LP0 + (   -0.47818270496821) * _TEMP * _16_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47818270496821) * _TEMP * _16_4;
893787    +_LP0 = _LP0 + (   -0.97732618505089) * _TEMP * _16_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.97732618505089) * _TEMP * _16_5;
893788    +_LP0 = _LP0 + (   -0.76235371002566) * _TEMP * _16_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76235371002566) * _TEMP * _16_6;
893789    +_LP0 = _LP0 + (   -0.06176798843746) * _TEMP * _16_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06176798843746) * _TEMP * _16_7;
893790    +_LP0 = _LP0 + (   -0.36783009575746) * _TEMP * _16_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36783009575746) * _TEMP * _16_8;
893791    +
893792    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
893793    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
893794    +_LP0 = _LP0 + (    2.27376799087472) * _TEMP * _17_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.27376799087472) * _TEMP * _17_0;
893795    +_LP0 = _LP0 + (    1.66840677656296) * _TEMP * _17_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.66840677656296) * _TEMP * _17_1;
893796    +_LP0 = _LP0 + (    1.58394582906104) * _TEMP * _17_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.58394582906104) * _TEMP * _17_2;
893797    +_LP0 = _LP0 + (    0.81992790457539) * _TEMP * _17_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.81992790457539) * _TEMP * _17_3;
893798    +_LP0 = _LP0 + (   -0.09864306453973) * _TEMP * _17_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.09864306453973) * _TEMP * _17_4;
893799    +_LP0 = _LP0 + (   -0.23893324542319) * _TEMP * _17_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23893324542319) * _TEMP * _17_5;
893800    +_LP0 = _LP0 + (   -0.78852448679899) * _TEMP * _17_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.78852448679899) * _TEMP * _17_6;
893801    +_LP0 = _LP0 + (   -0.94445512442103) * _TEMP * _17_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.94445512442103) * _TEMP * _17_7;
893802    +_LP0 = _LP0 + (   -2.02058858598198) * _TEMP * _17_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.02058858598198) * _TEMP * _17_8;
893803    +
893804    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
893805    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
893806    +_P0 = probnorm((   -1.74663497603269) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -1.74663497603269) + _LP0);
893807    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
893808    +
893809    +REG7DR1:
893810    +
893811    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
893812    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
893813    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
893814    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
893815    +end;
MPRINT(EM_DIAGRAM):   end;
893816    +else do;
MPRINT(EM_DIAGRAM):   else do;
893817    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
893818    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
893819    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
893820    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
893821    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
893822    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
893823    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
893824    +   end;
MPRINT(EM_DIAGRAM):   end;
893825    +end;
MPRINT(EM_DIAGRAM):   end;
893826    +
893827    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
893828    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
893829    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
893830    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
893831    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
893832    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
893833    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
893834    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
893835    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
893836    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
893837    +end;
MPRINT(EM_DIAGRAM):   end;
893838    +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
893839    +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
893840    +
893841    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
893842    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
893843    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
893844     run;
 
NOTE: DATA STEP view saved on file EMWS8.REG7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.50 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.51 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
893845     quit;
893846     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
893847     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
893848     * Reg7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg7: Computing metadata for TRAIN data;
893849     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.REG7_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg7_TRAIN out=WORK.M13E4K0M noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13E4K0M;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M13E4K0M(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13E4K0M;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M13E4K0M;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M298I_WM NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M298I_WM;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M298I_WM;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JFL9VJ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M298I_WM;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M298I_WM;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M298I_WM;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M298I_WM;
MPRINT(EMADVISECOLUMNS):   set WORK.M298I_WM;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'GRP_ACCEPTEDCMP5' 'GRP_ACCEPTEDCMPTOTAL' 'GRP_FRQ'
'GRP_INCOME' 'GRP_MNTFISHPRODUCTS' 'GRP_MNTMEATPRODUCTS' 'GRP_MNTSWEETPRODUCTS' 'GRP_MNTWINES'
'GRP_NUMCATALOGPURCHASES' 'GRP_NUMWEBVISITSMONTH' 'GRP_RMNTFRQ' 'GRP_RECENCY' ) then
ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg7: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
894181     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
894182     set EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMINFO;
894183     where DATA='Reg7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
894184     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG7_EMINFO.
      WHERE (DATA='Reg7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894185     data EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMINFO;
894186     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
894187     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
894188     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.REG7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
894192     run;
894193     data EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMINFO;
894194     set EMWS8.Reg7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMINFO WORK.MODELTEMP_INFO;
894195     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.REG7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894196     proc sort data = EMWS8.Reg7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg7_EMINFO NOTHREADS;
894197     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
894198     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.REG7_EMINFO.
NOTE: The data set EMWS8.REG7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
894199     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
894200     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
894201     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894202     proc sort data = EMWS8.Reg7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
894203     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
894204     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894205     data EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMINFO;
894206     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
894207     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
894208     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
894209     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
894210     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
894211     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
894212     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.REG7_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.REG7_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.41 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O11BP0_7
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O11BP0_7 new;
MPRINT(EM_DIAGRAM):   run;
894236     data EMWS8.Reg7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMOUTFIT;
894237     length TARGET $32;
MPRINT(EM_DIAGRAM):   length TARGET $32;
894238     set EMWS8.Reg7_EMESTIMATE end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMESTIMATE end=eof;
894239     where (_TYPE_='PARMS');
MPRINT(EM_DIAGRAM):   where (_TYPE_='PARMS');
894240     drop _STEP_--Year_Birth;
MPRINT(EM_DIAGRAM):   drop _STEP_--Year_Birth;
894241     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
894242     TARGET = "DepVar";
MPRINT(EM_DIAGRAM):   TARGET = "DepVar";
894243     output;
MPRINT(EM_DIAGRAM):   output;
894244     end;
MPRINT(EM_DIAGRAM):   end;
894245     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS8.REG7_EMESTIMATE.
      WHERE _TYPE_='PARMS';
NOTE: The data set EMWS8.REG7_EMOUTFIT has 1 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894246     data EMWS8.Reg7_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMOUTFIT;
894247     set EMWS8.Reg7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMOUTFIT;
894248     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
894249     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
894249   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
894250     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
894251     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.REG7_EMOUTFIT.
NOTE: The data set EMWS8.REG7_EMOUTFIT has 1 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894252     proc sort data=EMWS8.Reg7_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Reg7_EMREPORTFIT nothreads;
894253     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
894254     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS8.REG7_EMREPORTFIT.
NOTE: The data set EMWS8.REG7_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894255     %let _EMwarndup = 0;
894256     %let _EMtargetdup =;
894257     %let _EMASEtargetdup =;
894258     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
894259     set EMWS8.Reg7_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMOUTFIT;
894260     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
894261     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
894262     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
894263     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
894264     end;
MPRINT(EM_DIAGRAM):   end;
894265     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.REG7_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894266     proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
894267     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
894268     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
894269     proc sort data=EMWS8.Reg7_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg7_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
894270     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
894271     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.REG7_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 51 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894272     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
894273     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
894274     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
894275     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 51 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894276     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
894277     set EMWS8.Reg7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_CMeta_TRAIN;
894278     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
894278   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
894279     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.REG7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
894280     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
894281     set EMWS8.Reg7_TRAIN(keep=
894282     F_DepVar
894283     I_DepVar
894284     P_DepVar0
894285     P_DepVar1
894286     R_DepVar0
894287     R_DepVar1
894288     U_DepVar
894289     _WARN_
894290     DepVar
894291     );
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
894292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG7_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG7_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Reg7_0YZ5ASP nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Reg7_0YZ5ASP;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Reg7_0YZ5ASP(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Reg7_0YZ5ASP;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Reg7_0YZ5ASP;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 4.6690225984479E-30 OVLMAX 0.9999999059 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
898558     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
898559     set EMWS8.Reg7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_CMeta_TRAIN;
898560     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
898560   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
898561     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.REG7_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
898562     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
898563     set EMWS8.Reg7_VALIDATE(keep=
898564     F_DepVar
898565     I_DepVar
898566     P_DepVar0
898567     P_DepVar1
898568     R_DepVar0
898569     R_DepVar1
898570     U_DepVar
898571     _WARN_
898572     DepVar
898573     );
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
898574     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.REG7_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.REG7_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Reg7_1DT8ZC5 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Reg7_1DT8ZC5;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Reg7_1DT8ZC5(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMCLASSIFICATION WORK.Reg7_1DT8ZC5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Reg7_1DT8ZC5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 2.4661776228028E-29 OVLMAX 0.9999992771 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
902849     %let _cn = %sysfunc(getoption(CENTER));
902850     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
902851     proc print data=EMWS8.Reg7_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Reg7_EMREPORTFIT noobs label;
902852     var STAT LABEL TRAIN
902853     VALIDATE
902854     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
902855     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
902856     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
902857     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
902858     run;
 
NOTE: There were 20 observations read from the data set EMWS8.REG7_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 645.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
902859     title10;
MPRINT(EM_DIAGRAM):   title10;
902860     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
902861     proc sort data=EMWS8.Reg7_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Reg7_EMCLASSIFICATION nothreads;
902862     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
902863     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.REG7_EMCLASSIFICATION.
NOTE: The data set EMWS8.REG7_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
902864     %let _cn = %sysfunc(getoption(CENTER));
902865     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
902866     proc print data=EMWS8.Reg7_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Reg7_EMCLASSIFICATION noobs label;
902867     var from into pct_row pct_col count percent
902868     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
902869     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
902870     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
902871     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
902872     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
902873     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
902874     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
902875     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
902876     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
902877     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
902878     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
902879     run;
 
NOTE: There were 8 observations read from the data set EMWS8.REG7_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 646.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
902880     title9;
MPRINT(EM_DIAGRAM):   title9;
902881     title10;
MPRINT(EM_DIAGRAM):   title10;
902882     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
902883     %let _cn = %sysfunc(getoption(CENTER));
902884     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
902885     data EMWS8.Reg7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMEVENTREPORT;
902886     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
902886   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
902887     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
902887   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
902887   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
902887   ! FALSEEVENT
902888     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
902888   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
902888   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
902889        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
902890     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
902891     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
902892     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
902893     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
902894     set EMWS8.Reg7_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMEVENTREPORT;
902895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.REG7_EMEVENTREPORT.
NOTE: The data set EMWS8.REG7_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
902896     proc print data=EMWS8.Reg7_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Reg7_EMEVENTREPORT noobs label;
902897     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
902898     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
902899     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
902900     run;
 
NOTE: There were 2 observations read from the data set EMWS8.REG7_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 647.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
902901     title10;
MPRINT(EM_DIAGRAM):   title10;
902902     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
902903     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
902904     modify Reg7_EMRANK;
MPRINT(EM_DIAGRAM):   modify Reg7_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
902905     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
902906     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
902906   ! ;
MPRINT(EM_DIAGRAM):   run;
902907     run;
 
NOTE: MODIFY was successful for EMWS8.REG7_EMRANK.DATA.
902908     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
902909     %let _cn = %sysfunc(getoption(CENTER));
902910     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
902911     proc print data=EMWS8.Reg7_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Reg7_EMRANK label noobs;
902912     var
902913     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
902914     by
902915     notsorted DATAROLE
902916     notsorted TARGET
902917     notsorted TARGETLABEL
902918     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
902919     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
902920     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
902921     run;
 
NOTE: There were 40 observations read from the data set EMWS8.REG7_EMRANK.
NOTE: The PROCEDURE PRINT printed page 648.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
902922     title10;
MPRINT(EM_DIAGRAM):   title10;
902923     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
902924     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
902925     modify Reg7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Reg7_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
902926     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
902926   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
902927     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
902927   ! ;
MPRINT(EM_DIAGRAM):   run;
902928     run;
 
NOTE: MODIFY was successful for EMWS8.REG7_EMSCOREDIST.DATA.
902929     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Reg7_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
