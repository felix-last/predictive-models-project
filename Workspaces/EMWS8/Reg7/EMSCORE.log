MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O06_TMM9 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O06_TMM9 new;
MPRINT(EM_DIAGRAM):   run;
564660     proc transpose data=EMWS8.Reg7_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg7_EMESTIMATE out=WORK.TEMPREG;
564661     where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
564662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.REG7_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 74 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.38 seconds
      cpu time            0.01 seconds
      

564663     proc transpose data=EMWS8.Reg7_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg7_MAPDS out=WORK.TEMPREG2;
564664     var "GRP_AcceptedCmp52"n--"Year_Birth"n;
MPRINT(EM_DIAGRAM):   var "GRP_AcceptedCmp52"n--"Year_Birth"n;
564665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS8.REG7_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 40 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

564666     proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
564667     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
564668     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 74 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

564669     proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
564670     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
564671     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 40 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

564672     data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
564673     merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
564674     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
564675     if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
564676     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.TEMPREG.
NOTE: There were 40 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

564677     data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
564678     length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
564679     set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
564680     i=1;
MPRINT(EM_DIAGRAM):   i=1;
564681     do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
564682     term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
564683     i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
564684     output;
MPRINT(EM_DIAGRAM):   output;
564685     end;
MPRINT(EM_DIAGRAM):   end;
564686     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 28 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 28 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

564687     proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
564688     by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
564689     run;
MPRINT(EM_DIAGRAM):   run;

The SAS System

NOTE: There were 28 observations read from the data set WORK.TEMPREG3.
NOTE: 17 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 11 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

564690     filename emflow
564690   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg7: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
564691     *------------------------------------------------------------*;
564692     * Reg7: Scoring DATA data;
564693     *------------------------------------------------------------*;
564694     data EMWS8.Reg7_TRAIN
564695     / view=EMWS8.Reg7_TRAIN
564696     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_TRAIN / view=EMWS8.Reg7_TRAIN ;
564697     set EMWS8.BINNING_TRAIN
564698     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
564699     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas.
564700    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
564701    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
564702    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
564703    +
564704    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
564705    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
564706    +
564707    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
564708    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
564709    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
564710    +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
564711    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
564712    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
564713    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
564714    +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
564715    +
564716    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
564717    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
564718    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
564719    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
564720    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
564721    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564722    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
564723    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
564724    +end;
MPRINT(EM_DIAGRAM):   end;
564725    +else do;
MPRINT(EM_DIAGRAM):   else do;
564726    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
564727    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
564728    +   end;
MPRINT(EM_DIAGRAM):   end;
564729    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
564730    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
564731    +   end;
MPRINT(EM_DIAGRAM):   end;
564732    +   else do;
MPRINT(EM_DIAGRAM):   else do;
564733    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
564734    +   end;
MPRINT(EM_DIAGRAM):   end;
564735    +end;
MPRINT(EM_DIAGRAM):   end;
564736    +
564737    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
564738    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
564739    +
564740    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
564741    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
564742    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564743    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564744    +end;
MPRINT(EM_DIAGRAM):   end;
564745    +
564746    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
564747    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
564748    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
564749    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
564750    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564751    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564752    +end;
MPRINT(EM_DIAGRAM):   end;
564753    +else do;
MPRINT(EM_DIAGRAM):   else do;
564754    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
564755    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
564756    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564757    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
564758    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
564759    +   end;
MPRINT(EM_DIAGRAM):   end;
564760    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
564761    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
564762    +   end;
MPRINT(EM_DIAGRAM):   end;
564763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
564764    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
564765    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
564766    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564767    +   end;
MPRINT(EM_DIAGRAM):   end;
564768    +end;
MPRINT(EM_DIAGRAM):   end;
564769    +
564770    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
564771    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
564772    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
564773    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
564774    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
564775    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
564776    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564777    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564778    +end;
MPRINT(EM_DIAGRAM):   end;
564779    +else do;
MPRINT(EM_DIAGRAM):   else do;
564780    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
564781    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
564782    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564783    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
564784    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
564785    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
564786    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
564787    +   end;
MPRINT(EM_DIAGRAM):   end;
564788    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
564789    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
564790    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
564791    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
564792    +   end;
MPRINT(EM_DIAGRAM):   end;
564793    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
564794    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
564795    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
564796    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
564797    +   end;
MPRINT(EM_DIAGRAM):   end;
564798    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
564799    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
564800    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
564801    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
564802    +   end;
MPRINT(EM_DIAGRAM):   end;
564803    +   else do;
MPRINT(EM_DIAGRAM):   else do;
564804    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
564805    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
564806    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
564807    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
564808    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564809    +   end;
MPRINT(EM_DIAGRAM):   end;
564810    +end;
MPRINT(EM_DIAGRAM):   end;
564811    +
564812    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
564813    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
564814    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
564815    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
564816    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
564817    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
564818    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564819    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564820    +end;
MPRINT(EM_DIAGRAM):   end;
564821    +else do;
MPRINT(EM_DIAGRAM):   else do;
564822    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
564823    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
564824    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564825    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
564826    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
564827    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
564828    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
564829    +   end;
MPRINT(EM_DIAGRAM):   end;
564830    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
564831    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
564832    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
564833    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
564834    +   end;
MPRINT(EM_DIAGRAM):   end;
564835    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
564836    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
564837    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
564838    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
564839    +   end;
MPRINT(EM_DIAGRAM):   end;
564840    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
564841    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
564842    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
564843    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
564844    +   end;
MPRINT(EM_DIAGRAM):   end;
564845    +   else do;
MPRINT(EM_DIAGRAM):   else do;
564846    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
564847    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
564848    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
564849    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
564850    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564851    +   end;
MPRINT(EM_DIAGRAM):   end;
564852    +end;
MPRINT(EM_DIAGRAM):   end;
564853    +
564854    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
564855    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
564856    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
564857    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
564858    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
564859    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
564860    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564861    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564862    +end;
MPRINT(EM_DIAGRAM):   end;
564863    +else do;
MPRINT(EM_DIAGRAM):   else do;
564864    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
564865    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
564866    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564867    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
564868    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
564869    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
564870    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
564871    +   end;
MPRINT(EM_DIAGRAM):   end;
564872    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
564873    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
564874    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
564875    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
564876    +   end;
MPRINT(EM_DIAGRAM):   end;
564877    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
564878    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
564879    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
564880    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
564881    +   end;
MPRINT(EM_DIAGRAM):   end;
564882    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
564883    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
564884    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
564885    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
564886    +   end;
MPRINT(EM_DIAGRAM):   end;
564887    +   else do;
MPRINT(EM_DIAGRAM):   else do;
564888    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
564889    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
564890    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
564891    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
564892    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564893    +   end;
MPRINT(EM_DIAGRAM):   end;
564894    +end;
MPRINT(EM_DIAGRAM):   end;
564895    +
564896    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
564897    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
564898    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
564899    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
564900    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
564901    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
564902    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564903    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564904    +end;
MPRINT(EM_DIAGRAM):   end;
564905    +else do;
MPRINT(EM_DIAGRAM):   else do;
564906    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
564907    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
564908    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564909    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
564910    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
564911    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
564912    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
564913    +   end;
MPRINT(EM_DIAGRAM):   end;
564914    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
564915    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
564916    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
564917    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
564918    +   end;
MPRINT(EM_DIAGRAM):   end;
564919    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
564920    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
564921    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
564922    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
564923    +   end;
MPRINT(EM_DIAGRAM):   end;
564924    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
564925    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
564926    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
564927    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
564928    +   end;
MPRINT(EM_DIAGRAM):   end;
564929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
564930    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
564931    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
564932    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
564933    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
564934    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564935    +   end;
MPRINT(EM_DIAGRAM):   end;
564936    +end;
MPRINT(EM_DIAGRAM):   end;
564937    +
564938    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
564939    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
564940    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
564941    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
564942    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
564943    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
564944    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564945    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564946    +end;
MPRINT(EM_DIAGRAM):   end;
564947    +else do;
MPRINT(EM_DIAGRAM):   else do;
564948    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
564949    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
564950    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564951    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
564952    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
564953    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
564954    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
564955    +   end;
MPRINT(EM_DIAGRAM):   end;
564956    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
564957    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
564958    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
564959    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
564960    +   end;
MPRINT(EM_DIAGRAM):   end;
564961    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
564962    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
564963    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
564964    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
564965    +   end;
MPRINT(EM_DIAGRAM):   end;
564966    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
564967    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
564968    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
564969    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
564970    +   end;
MPRINT(EM_DIAGRAM):   end;
564971    +   else do;
MPRINT(EM_DIAGRAM):   else do;
564972    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
564973    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
564974    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
564975    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
564976    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564977    +   end;
MPRINT(EM_DIAGRAM):   end;
564978    +end;
MPRINT(EM_DIAGRAM):   end;
564979    +
564980    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
564981    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
564982    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
564983    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
564984    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
564985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
564986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
564987    +end;
MPRINT(EM_DIAGRAM):   end;
564988    +else do;
MPRINT(EM_DIAGRAM):   else do;
564989    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
564990    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
564991    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
564992    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
564993    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
564994    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
564995    +   end;
MPRINT(EM_DIAGRAM):   end;
564996    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
564997    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
564998    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
564999    +   end;
MPRINT(EM_DIAGRAM):   end;
565000    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565001    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
565002    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
565003    +   end;
MPRINT(EM_DIAGRAM):   end;
565004    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565005    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
565006    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
565007    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565008    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565009    +   end;
MPRINT(EM_DIAGRAM):   end;
565010    +end;
MPRINT(EM_DIAGRAM):   end;
565011    +
565012    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
565013    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
565014    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
565015    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
565016    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
565017    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
565018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565020    +end;
MPRINT(EM_DIAGRAM):   end;
565021    +else do;
MPRINT(EM_DIAGRAM):   else do;
565022    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565023    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
565024    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565025    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
565026    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
565027    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
565028    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
565029    +   end;
MPRINT(EM_DIAGRAM):   end;
565030    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565031    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
565032    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
565033    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
565034    +   end;
MPRINT(EM_DIAGRAM):   end;
565035    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565036    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
565037    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
565038    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
565039    +   end;
MPRINT(EM_DIAGRAM):   end;
565040    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
565041    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
565042    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
565043    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
565044    +   end;
MPRINT(EM_DIAGRAM):   end;
565045    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565046    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
565047    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
565048    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
565049    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565050    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565051    +   end;
MPRINT(EM_DIAGRAM):   end;
565052    +end;
MPRINT(EM_DIAGRAM):   end;
565053    +
565054    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
565055    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
565056    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
565057    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
565058    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
565059    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
565060    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565062    +end;
MPRINT(EM_DIAGRAM):   end;
565063    +else do;
MPRINT(EM_DIAGRAM):   else do;
565064    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565065    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
565066    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565067    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
565068    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
565069    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
565070    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
565071    +   end;
MPRINT(EM_DIAGRAM):   end;
565072    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
565073    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
565074    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
565075    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
565076    +   end;
MPRINT(EM_DIAGRAM):   end;
565077    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565078    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
565079    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
565080    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
565081    +   end;
MPRINT(EM_DIAGRAM):   end;
565082    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565083    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
565084    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
565085    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
565086    +   end;
MPRINT(EM_DIAGRAM):   end;
565087    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565088    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
565089    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
565090    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
565091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565093    +   end;
MPRINT(EM_DIAGRAM):   end;
565094    +end;
MPRINT(EM_DIAGRAM):   end;
565095    +
565096    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
565097    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
565098    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
565099    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
565100    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
565101    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
565102    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565103    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565104    +end;
MPRINT(EM_DIAGRAM):   end;
565105    +else do;
MPRINT(EM_DIAGRAM):   else do;
565106    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565107    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
565108    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565109    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
565110    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
565111    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
565112    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
565113    +   end;
MPRINT(EM_DIAGRAM):   end;
565114    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565115    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
565116    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
565117    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
565118    +   end;
MPRINT(EM_DIAGRAM):   end;
565119    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
565120    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
565121    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
565122    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
565123    +   end;
MPRINT(EM_DIAGRAM):   end;
565124    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565125    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
565126    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
565127    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
565128    +   end;
MPRINT(EM_DIAGRAM):   end;
565129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565130    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
565131    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
565132    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
565133    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565134    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565135    +   end;
MPRINT(EM_DIAGRAM):   end;
565136    +end;
MPRINT(EM_DIAGRAM):   end;
565137    +
565138    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
565139    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
565140    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
565141    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
565142    +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
565143    +end;
MPRINT(EM_DIAGRAM):   end;
565144    +
565145    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
565146    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
565147    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
565148    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
565149    +
565150    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
565151    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565152    +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
565153    +
565154    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
565155    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565156    +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
565157    +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
565158    +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
565159    +
565160    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
565161    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565162    +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
565163    +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
565164    +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
565165    +
565166    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
565167    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565168    +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
565169    +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
565170    +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
565171    +
565172    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
565173    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565174    +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
565175    +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
565176    +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
565177    +
565178    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
565179    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565180    +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
565181    +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
565182    +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
565183    +
565184    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
565185    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565186    +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
565187    +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
565188    +
565189    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
565190    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565191    +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
565192    +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
565193    +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
565194    +
565195    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
565196    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565197    +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
565198    +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
565199    +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
565200    +
565201    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
565202    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565203    +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
565204    +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
565205    +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
565206    +
565207    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
565208    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
565209    +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
565210    +
565211    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
565212    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
565213    +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
565214    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
565215    +
565216    +REG7DR1:
565217    +
565218    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
565219    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
565220    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
565221    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
565222    +end;
MPRINT(EM_DIAGRAM):   end;
565223    +else do;
MPRINT(EM_DIAGRAM):   else do;
565224    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
565225    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
565226    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
565227    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
565228    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
565229    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
565230    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
565231    +   end;
MPRINT(EM_DIAGRAM):   end;
565232    +end;
MPRINT(EM_DIAGRAM):   end;
565233    +
565234    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
565235    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
565236    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
565237    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
565238    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
565239    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
565240    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
565241    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
565242    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
565243    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
565244    +end;
MPRINT(EM_DIAGRAM):   end;
565245    +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
565246    +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
565247    +
565248    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
565249    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
565250    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
565251     run;

NOTE: DATA STEP view saved on file EMWS8.REG7_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
565252     quit;
565253     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
565254     filename emflow
565254   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg7: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
565255     *------------------------------------------------------------*;
565256     * Reg7: Scoring VALIDATE data;
565257     *------------------------------------------------------------*;
565258     data EMWS8.Reg7_VALIDATE
565259     / view=EMWS8.Reg7_VALIDATE
565260     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_VALIDATE / view=EMWS8.Reg7_VALIDATE ;
565261     set EMWS8.BINNING_VALIDATE
565262     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
565263     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMFLOWSCORE.sas.
565264    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
565265    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
565266    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
565267    +
565268    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
565269    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
565270    +
565271    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
565272    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
565273    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
565274    +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
565275    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
565276    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
565277    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
565278    +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
565279    +
565280    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
565281    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
565282    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
565283    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
565284    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
565285    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565286    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
565287    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
565288    +end;
MPRINT(EM_DIAGRAM):   end;
565289    +else do;
MPRINT(EM_DIAGRAM):   else do;
565290    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
565291    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
565292    +   end;
MPRINT(EM_DIAGRAM):   end;
565293    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
565294    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
565295    +   end;
MPRINT(EM_DIAGRAM):   end;
565296    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565297    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
565298    +   end;
MPRINT(EM_DIAGRAM):   end;
565299    +end;
MPRINT(EM_DIAGRAM):   end;
565300    +
565301    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
565302    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
565303    +
565304    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
565305    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
565306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565308    +end;
MPRINT(EM_DIAGRAM):   end;
565309    +
565310    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
565311    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
565312    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
565313    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
565314    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565315    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565316    +end;
MPRINT(EM_DIAGRAM):   end;
565317    +else do;
MPRINT(EM_DIAGRAM):   else do;
565318    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565319    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
565320    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565321    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
565322    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
565323    +   end;
MPRINT(EM_DIAGRAM):   end;
565324    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
565325    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
565326    +   end;
MPRINT(EM_DIAGRAM):   end;
565327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565328    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
565329    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565330    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565331    +   end;
MPRINT(EM_DIAGRAM):   end;
565332    +end;
MPRINT(EM_DIAGRAM):   end;
565333    +
565334    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
565335    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
565336    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
565337    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
565338    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
565339    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
565340    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565341    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565342    +end;
MPRINT(EM_DIAGRAM):   end;
565343    +else do;
MPRINT(EM_DIAGRAM):   else do;
565344    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565345    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
565346    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565347    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
565348    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
565349    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
565350    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
565351    +   end;
MPRINT(EM_DIAGRAM):   end;
565352    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
565353    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
565354    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
565355    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
565356    +   end;
MPRINT(EM_DIAGRAM):   end;
565357    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565358    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
565359    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
565360    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
565361    +   end;
MPRINT(EM_DIAGRAM):   end;
565362    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565363    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
565364    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
565365    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
565366    +   end;
MPRINT(EM_DIAGRAM):   end;
565367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565368    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
565369    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
565370    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
565371    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565372    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565373    +   end;
MPRINT(EM_DIAGRAM):   end;
565374    +end;
MPRINT(EM_DIAGRAM):   end;
565375    +
565376    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
565377    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
565378    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
565379    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
565380    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
565381    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
565382    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565383    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565384    +end;
MPRINT(EM_DIAGRAM):   end;
565385    +else do;
MPRINT(EM_DIAGRAM):   else do;
565386    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565387    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
565388    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565389    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
565390    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
565391    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
565392    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
565393    +   end;
MPRINT(EM_DIAGRAM):   end;
565394    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565395    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
565396    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
565397    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
565398    +   end;
MPRINT(EM_DIAGRAM):   end;
565399    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
565400    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
565401    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
565402    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
565403    +   end;
MPRINT(EM_DIAGRAM):   end;
565404    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565405    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
565406    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
565407    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
565408    +   end;
MPRINT(EM_DIAGRAM):   end;
565409    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565410    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
565411    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
565412    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
565413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565415    +   end;
MPRINT(EM_DIAGRAM):   end;
565416    +end;
MPRINT(EM_DIAGRAM):   end;
565417    +
565418    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
565419    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
565420    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
565421    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
565422    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
565423    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
565424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565426    +end;
MPRINT(EM_DIAGRAM):   end;
565427    +else do;
MPRINT(EM_DIAGRAM):   else do;
565428    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565429    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
565430    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565431    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
565432    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
565433    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
565434    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
565435    +   end;
MPRINT(EM_DIAGRAM):   end;
565436    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
565437    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
565438    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
565439    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
565440    +   end;
MPRINT(EM_DIAGRAM):   end;
565441    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565442    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
565443    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
565444    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
565445    +   end;
MPRINT(EM_DIAGRAM):   end;
565446    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565447    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
565448    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
565449    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
565450    +   end;
MPRINT(EM_DIAGRAM):   end;
565451    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565452    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
565453    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
565454    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
565455    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565456    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565457    +   end;
MPRINT(EM_DIAGRAM):   end;
565458    +end;
MPRINT(EM_DIAGRAM):   end;
565459    +
565460    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
565461    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
565462    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
565463    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
565464    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
565465    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
565466    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565467    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565468    +end;
MPRINT(EM_DIAGRAM):   end;
565469    +else do;
MPRINT(EM_DIAGRAM):   else do;
565470    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565471    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
565472    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565473    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
565474    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
565475    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
565476    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
565477    +   end;
MPRINT(EM_DIAGRAM):   end;
565478    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565479    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
565480    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
565481    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
565482    +   end;
MPRINT(EM_DIAGRAM):   end;
565483    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
565484    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
565485    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
565486    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
565487    +   end;
MPRINT(EM_DIAGRAM):   end;
565488    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565489    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
565490    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
565491    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
565492    +   end;
MPRINT(EM_DIAGRAM):   end;
565493    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565494    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
565495    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
565496    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
565497    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565498    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565499    +   end;
MPRINT(EM_DIAGRAM):   end;
565500    +end;
MPRINT(EM_DIAGRAM):   end;
565501    +
565502    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
565503    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
565504    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
565505    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
565506    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
565507    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
565508    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565509    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565510    +end;
MPRINT(EM_DIAGRAM):   end;
565511    +else do;
MPRINT(EM_DIAGRAM):   else do;
565512    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565513    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
565514    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565515    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
565516    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
565517    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
565518    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
565519    +   end;
MPRINT(EM_DIAGRAM):   end;
565520    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
565521    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
565522    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
565523    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
565524    +   end;
MPRINT(EM_DIAGRAM):   end;
565525    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565526    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
565527    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
565528    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
565529    +   end;
MPRINT(EM_DIAGRAM):   end;
565530    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565531    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
565532    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
565533    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
565534    +   end;
MPRINT(EM_DIAGRAM):   end;
565535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565536    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
565537    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
565538    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
565539    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565540    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565541    +   end;
MPRINT(EM_DIAGRAM):   end;
565542    +end;
MPRINT(EM_DIAGRAM):   end;
565543    +
565544    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
565545    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
565546    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
565547    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
565548    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
565549    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565550    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565551    +end;
MPRINT(EM_DIAGRAM):   end;
565552    +else do;
MPRINT(EM_DIAGRAM):   else do;
565553    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565554    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
565555    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565556    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
565557    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
565558    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
565559    +   end;
MPRINT(EM_DIAGRAM):   end;
565560    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
565561    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
565562    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
565563    +   end;
MPRINT(EM_DIAGRAM):   end;
565564    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565565    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
565566    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
565567    +   end;
MPRINT(EM_DIAGRAM):   end;
565568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565569    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
565570    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
565571    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565572    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565573    +   end;
MPRINT(EM_DIAGRAM):   end;
565574    +end;
MPRINT(EM_DIAGRAM):   end;
565575    +
565576    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
565577    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
565578    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
565579    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
565580    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
565581    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
565582    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565583    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565584    +end;
MPRINT(EM_DIAGRAM):   end;
565585    +else do;
MPRINT(EM_DIAGRAM):   else do;
565586    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565587    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
565588    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565589    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
565590    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
565591    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
565592    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
565593    +   end;
MPRINT(EM_DIAGRAM):   end;
565594    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565595    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
565596    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
565597    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
565598    +   end;
MPRINT(EM_DIAGRAM):   end;
565599    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565600    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
565601    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
565602    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
565603    +   end;
MPRINT(EM_DIAGRAM):   end;
565604    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
565605    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
565606    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
565607    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
565608    +   end;
MPRINT(EM_DIAGRAM):   end;
565609    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565610    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
565611    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
565612    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
565613    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565614    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565615    +   end;
MPRINT(EM_DIAGRAM):   end;
565616    +end;
MPRINT(EM_DIAGRAM):   end;
565617    +
565618    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
565619    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
565620    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
565621    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
565622    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
565623    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
565624    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565625    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565626    +end;
MPRINT(EM_DIAGRAM):   end;
565627    +else do;
MPRINT(EM_DIAGRAM):   else do;
565628    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565629    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
565630    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565631    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
565632    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
565633    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
565634    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
565635    +   end;
MPRINT(EM_DIAGRAM):   end;
565636    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
565637    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
565638    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
565639    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
565640    +   end;
MPRINT(EM_DIAGRAM):   end;
565641    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565642    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
565643    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
565644    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
565645    +   end;
MPRINT(EM_DIAGRAM):   end;
565646    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565647    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
565648    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
565649    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
565650    +   end;
MPRINT(EM_DIAGRAM):   end;
565651    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565652    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
565653    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
565654    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
565655    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565656    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565657    +   end;
MPRINT(EM_DIAGRAM):   end;
565658    +end;
MPRINT(EM_DIAGRAM):   end;
565659    +
565660    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
565661    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
565662    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
565663    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
565664    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
565665    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
565666    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
565667    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565668    +end;
MPRINT(EM_DIAGRAM):   end;
565669    +else do;
MPRINT(EM_DIAGRAM):   else do;
565670    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
565671    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
565672    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
565673    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
565674    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
565675    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
565676    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
565677    +   end;
MPRINT(EM_DIAGRAM):   end;
565678    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
565679    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
565680    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
565681    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
565682    +   end;
MPRINT(EM_DIAGRAM):   end;
565683    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
565684    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
565685    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
565686    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
565687    +   end;
MPRINT(EM_DIAGRAM):   end;
565688    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
565689    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
565690    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
565691    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
565692    +   end;
MPRINT(EM_DIAGRAM):   end;
565693    +   else do;
MPRINT(EM_DIAGRAM):   else do;
565694    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
565695    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
565696    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
565697    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
565698    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
565699    +   end;
MPRINT(EM_DIAGRAM):   end;
565700    +end;
MPRINT(EM_DIAGRAM):   end;
565701    +
565702    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
565703    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
565704    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
565705    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
565706    +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
565707    +end;
MPRINT(EM_DIAGRAM):   end;
565708    +
565709    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
565710    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
565711    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
565712    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
565713    +
565714    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
565715    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565716    +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
565717    +
565718    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
565719    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565720    +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
565721    +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
565722    +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
565723    +
565724    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
565725    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565726    +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
565727    +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
565728    +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
565729    +
565730    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
565731    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565732    +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
565733    +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
565734    +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
565735    +
565736    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
565737    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565738    +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
565739    +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
565740    +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
565741    +
565742    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
565743    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565744    +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
565745    +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
565746    +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
565747    +
565748    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
565749    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565750    +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
565751    +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
565752    +
565753    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
565754    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565755    +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
565756    +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
565757    +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
565758    +
565759    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
565760    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565761    +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
565762    +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
565763    +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
565764    +
565765    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
565766    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
565767    +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
565768    +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
565769    +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
565770    +
565771    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
565772    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
565773    +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
565774    +
565775    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
565776    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
565777    +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
565778    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
565779    +
565780    +REG7DR1:
565781    +
565782    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
565783    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
565784    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
565785    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
565786    +end;
MPRINT(EM_DIAGRAM):   end;
565787    +else do;
MPRINT(EM_DIAGRAM):   else do;
565788    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
565789    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
565790    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
565791    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
565792    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
565793    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
565794    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
565795    +   end;
MPRINT(EM_DIAGRAM):   end;
565796    +end;
MPRINT(EM_DIAGRAM):   end;
565797    +
565798    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
565799    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
565800    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
565801    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
565802    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
565803    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
565804    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
565805    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
565806    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
565807    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
565808    +end;
MPRINT(EM_DIAGRAM):   end;
565809    +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
565810    +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
565811    +
565812    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
565813    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
565814    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
565815     run;

NOTE: DATA STEP view saved on file EMWS8.REG7_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
565816     quit;
565817     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
565818     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
565819     * Reg7: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg7: Computing metadata for TRAIN data;
565820     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.REG7_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg7_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg7_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg7_TRAIN out=WORK.M2_L7JC3 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_L7JC3;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_L7JC3(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_L7JC3;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_L7JC3;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2FZESY4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FZESY4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FZESY4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NBWQFZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FZESY4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FZESY4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FZESY4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FZESY4;
MPRINT(EMADVISECOLUMNS):   set WORK.M2FZESY4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg7";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg7";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg7";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg7: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'GRP_ACCEPTEDCMP5' 'GRP_FRQ' 'GRP_INCOME' 
'GRP_MNTFISHPRODUCTS' 'GRP_MNTMEATPRODUCTS' 'GRP_MNTWINES' 'GRP_NUMCATALOGPURCHASES' 
'GRP_NUMDISTPURCHASES' 'GRP_RMNTFRQ' 'GRP_RECENCY' 'YEAR_BIRTH' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg7: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
566151     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
566152     set EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMINFO;
566153     where DATA='Reg7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg7' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
566154     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.REG7_EMINFO.
      WHERE (DATA='Reg7') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

566155     data EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg7_EMINFO;
566156     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
566157     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
566158     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.REG7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
566162     run;
566163     data EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMINFO;
566164     set EMWS8.Reg7_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMINFO WORK.MODELTEMP_INFO;
566165     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG7_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG7_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

566166     proc sort data = EMWS8.Reg7_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg7_EMINFO NOTHREADS;
566167     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
566168     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG7_EMINFO.
NOTE: The data set EMWS8.REG7_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

566169     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
566170     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
566171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

566172     proc sort data = EMWS8.Reg7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg7_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
566173     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
566174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG7_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

566175     data EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg7_EMINFO;
566176     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
566177     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
566178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG7_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

566179     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
566180     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
566181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
566182     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.REG7_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.REG7_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
