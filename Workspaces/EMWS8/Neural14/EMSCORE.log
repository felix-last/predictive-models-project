MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.52 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.52 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1PYKHTU 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1PYKHTU new;
MPRINT(EM_DIAGRAM):   run;
712879     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
712880     set EMWS8.Neural14_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural14_OUTKEY;
712881     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
712882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.NEURAL14_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

712883     filename emflow
712883   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural14: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
712884     *------------------------------------------------------------*;
712885     * Neural14: Scoring DATA data;
712886     *------------------------------------------------------------*;
712887     data EMWS8.Neural14_TRAIN
712888     / view=EMWS8.Neural14_TRAIN
712889     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_TRAIN / view=EMWS8.Neural14_TRAIN ;
712890     set EMWS8.PRINCOMP_TRAIN
712891     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
712892     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas.
712893    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
712894    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
712895    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
712896    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
712897    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
712898    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
712899    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
712900    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
712901    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
712902    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
712903    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
712904    +LENGTH _WARN_ $4
712905    +      F_DepVar  $ 12
712906    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
712907    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
712908    +
712909    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
712910    +
712911    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
712912    +
712913    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
712914    +
712915    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
712916    +
712917    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
712918    +
712919    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
712920    +
712921    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
712922    +
712923    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
712924    +
712925    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
712926    +
712927    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
712928    +
712929    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
712930    +
712931    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
712932    +
712933    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
712934    +
712935    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
712936    +
712937    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
712938    +
712939    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
712940    +
712941    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
712942    +
712943    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
712944    +
712945    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
712946    +
712947    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
712948    +
712949    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
712950    +
712951    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
712952    +
712953    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
712954    +
712955    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
712956    +
712957    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
712958    +
712959    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
712960    +
712961    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
712962    +
712963    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
712964    +
712965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
712966    +*** Checking missing input Interval
712967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
712968    +
712969    +IF NMISS(
712970    +   PC_1 ,
712971    +   PC_10 ,
712972    +   PC_11 ,
712973    +   PC_12 ,
712974    +   PC_13 ,
712975    +   PC_14 ,
712976    +   PC_15 ,
712977    +   PC_16 ,
712978    +   PC_17 ,
712979    +   PC_2 ,
712980    +   PC_3 ,
712981    +   PC_4 ,
712982    +   PC_5 ,
712983    +   PC_6 ,
712984    +   PC_7 ,
712985    +   PC_8 ,
712986    +   PC_9 ,
712987    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
712988    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
712989    +
712990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
712991    +END;
MPRINT(EM_DIAGRAM):   END;
712992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
712993    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
712994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
712995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
712996    +   S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
712997    +   S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
712998    +   S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
712999    +   S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
713000    +   S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
713001    +   S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
713002    +   S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
713003    +   S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
713004    +   S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
713005    +   S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
713006    +   S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
713007    +   S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
713008    +   S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
713009    +   S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
713010    +   S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
713011    +   S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
713012    +   S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
713013    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
713014    +END;
MPRINT(EM_DIAGRAM):   END;
713015    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
713016    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
713017    +   ELSE S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
713018    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
713019    +   ELSE S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
713020    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
713021    +   ELSE S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
713022    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
713023    +   ELSE S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
713024    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
713025    +   ELSE S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
713026    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
713027    +   ELSE S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
713028    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
713029    +   ELSE S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
713030    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
713031    +   ELSE S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
713032    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
713033    +   ELSE S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
713034    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
713035    +   ELSE S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
713036    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
713037    +   ELSE S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
713038    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
713039    +   ELSE S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
713040    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
713041    +   ELSE S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
713042    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
713043    +   ELSE S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
713044    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
713045    +   ELSE S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
713046    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
713047    +   ELSE S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
713048    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
713049    +   ELSE S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
713050    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
713051    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
713052    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
713053    +END;
MPRINT(EM_DIAGRAM):   END;
713054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713055    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
713056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713057    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
713058    +   H11  =    -0.19743350968758 * S_PC_1  +     0.30445645806298 * S_PC_10
713059    +          +    -0.29319213945098 * S_PC_11  +    -0.25119278206844 * S_PC_12
713060    +          +     0.58266759398859 * S_PC_13  +    -0.27174585445956 * S_PC_14
713061    +          +     0.22659187495583 * S_PC_15  +      0.0345118108645 * S_PC_16
713062    +          +     0.12263049485603 * S_PC_17  +     0.19964403857859 * S_PC_2
713063    +          +     0.15954583818685 * S_PC_3  +     -0.2857245627066 * S_PC_4
713064    +          +     0.06098551342127 * S_PC_5  +    -0.08058581454455 * S_PC_6
713065    +          +     0.03452248935562 * S_PC_7  +    -0.14856891517951 * S_PC_8
713066    +          +    -0.23636852409867 * S_PC_9  +    -0.19324045106995 *
713067    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.19743350968758 * S_PC_1 + 0.30445645806298 * S_PC_10 + 
-0.29319213945098 * S_PC_11 + -0.25119278206844 * S_PC_12 + 0.58266759398859 * S_PC_13 + 
-0.27174585445956 * S_PC_14 + 0.22659187495583 * S_PC_15 + 0.0345118108645 * S_PC_16 + 
0.12263049485603 * S_PC_17 + 0.19964403857859 * S_PC_2 + 0.15954583818685 * S_PC_3 + 
-0.2857245627066 * S_PC_4 + 0.06098551342127 * S_PC_5 + -0.08058581454455 * S_PC_6 + 
0.03452248935562 * S_PC_7 + -0.14856891517951 * S_PC_8 + -0.23636852409867 * S_PC_9 + 
-0.19324045106995 * S_Year_Birth ;
713068    +   H12  =     1.14358504176708 * S_PC_1  +    -0.36192369706387 * S_PC_10
713069    +          +    -0.43744112108977 * S_PC_11  +    -0.71275370600445 * S_PC_12
713070    +          +    -0.34045125272447 * S_PC_13  +    -0.15036565546979 * S_PC_14
713071    +          +     0.09646564503434 * S_PC_15  +      0.0305829416967 * S_PC_16
713072    +          +     0.24019272351574 * S_PC_17  +      -0.293912312459 * S_PC_2
713073    +          +     0.56149100357954 * S_PC_3  +    -0.49607477801031 * S_PC_4
713074    +          +     0.06419630336205 * S_PC_5  +    -0.04699602508661 * S_PC_6
713075    +          +    -0.21664449801506 * S_PC_7  +    -0.22336257677766 * S_PC_8
713076    +          +       0.454170642483 * S_PC_9  +     0.00592873995939 *
713077    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 1.14358504176708 * S_PC_1 + -0.36192369706387 * S_PC_10 + 
-0.43744112108977 * S_PC_11 + -0.71275370600445 * S_PC_12 + -0.34045125272447 * S_PC_13 + 
-0.15036565546979 * S_PC_14 + 0.09646564503434 * S_PC_15 + 0.0305829416967 * S_PC_16 + 
0.24019272351574 * S_PC_17 + -0.293912312459 * S_PC_2 + 0.56149100357954 * S_PC_3 + 
-0.49607477801031 * S_PC_4 + 0.06419630336205 * S_PC_5 + -0.04699602508661 * S_PC_6 + 
-0.21664449801506 * S_PC_7 + -0.22336257677766 * S_PC_8 + 0.454170642483 * S_PC_9 + 
0.00592873995939 * S_Year_Birth ;
713078    +   H13  =    -0.22672349443199 * S_PC_1  +     -0.2582497841995 * S_PC_10
713079    +          +    -0.17326402021021 * S_PC_11  +     0.30935515268934 * S_PC_12
713080    +          +    -0.24201742001607 * S_PC_13  +     0.54976933292529 * S_PC_14
713081    +          +     0.10932488301679 * S_PC_15  +     0.96661941192331 * S_PC_16
713082    +          +    -0.08469518132767 * S_PC_17  +    -0.81412040243848 * S_PC_2
713083    +          +    -0.25637624627426 * S_PC_3  +    -0.17164857394469 * S_PC_4
713084    +          +     -0.9026842943155 * S_PC_5  +     0.05018319109787 * S_PC_6
713085    +          +     0.88423272215876 * S_PC_7  +     0.43376749549251 * S_PC_8
713086    +          +     -0.1720661342962 * S_PC_9  +    -0.75152134262635 *
713087    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.22672349443199 * S_PC_1 + -0.2582497841995 * S_PC_10 + 
-0.17326402021021 * S_PC_11 + 0.30935515268934 * S_PC_12 + -0.24201742001607 * S_PC_13 + 
0.54976933292529 * S_PC_14 + 0.10932488301679 * S_PC_15 + 0.96661941192331 * S_PC_16 + 
-0.08469518132767 * S_PC_17 + -0.81412040243848 * S_PC_2 + -0.25637624627426 * S_PC_3 + 
-0.17164857394469 * S_PC_4 + -0.9026842943155 * S_PC_5 + 0.05018319109787 * S_PC_6 + 
0.88423272215876 * S_PC_7 + 0.43376749549251 * S_PC_8 + -0.1720661342962 * S_PC_9 + 
-0.75152134262635 * S_Year_Birth ;
713088    +   H11  =      0.3458013028559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.3458013028559 + H11 ;
713089    +   H12  =    -2.55079965313883 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.55079965313883 + H12 ;
713090    +   H13  =    -1.09335829129594 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.09335829129594 + H13 ;
713091    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
713092    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
713093    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
713094    +END;
MPRINT(EM_DIAGRAM):   END;
713095    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
713096    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
713097    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
713098    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
713099    +END;
MPRINT(EM_DIAGRAM):   END;
713100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713101    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
713102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713103    +
713104    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
713105    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
713106    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
713107    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
713108    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
713109    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
713110    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
713111    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
713112    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
713113    +end;
MPRINT(EM_DIAGRAM):   end;
713114    +else do;
MPRINT(EM_DIAGRAM):   else do;
713115    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
713116    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
713117    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
713118    +   end;
MPRINT(EM_DIAGRAM):   end;
713119    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
713120    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
713121    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
713122    +   end;
MPRINT(EM_DIAGRAM):   end;
713123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
713124    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
713125    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
713126    +   end;
MPRINT(EM_DIAGRAM):   end;
713127    +end;
MPRINT(EM_DIAGRAM):   end;
713128    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
713129    +   P_DepVar1  =     -3.3783400757259 * H11  +     2.62212015591933 * H12
713130    +          +     1.35325151350957 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.3783400757259 * H11 + 2.62212015591933 * H12 + 
1.35325151350957 * H13 ;
713131    +   P_DepVar1  =     0.02395615191895 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02395615191895 + P_DepVar1 ;
713132    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
713133    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
713134    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
713135    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
713136    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
713137    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
713138    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
713139    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
713140    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
713141    +END;
MPRINT(EM_DIAGRAM):   END;
713142    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
713143    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
713144    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
713145    +END;
MPRINT(EM_DIAGRAM):   END;
713146    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
713147    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
713148    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
713149    +END;
MPRINT(EM_DIAGRAM):   END;
713150    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
713151    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
713152    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
713153    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
713154    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
713155    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
713156    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
713157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713158    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
713159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713160    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
713161    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
713162    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
713163    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
713164    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
713165    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
713166    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
713167    +END;
MPRINT(EM_DIAGRAM):   END;
713168    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
713169    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
713170    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
713171    +drop
713172    +H11
713173    +H12
713174    +H13
713175    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
713176    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
713177     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
713178     quit;
713179     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
713180     filename emflow
713180   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural14: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
713181     *------------------------------------------------------------*;
713182     * Neural14: Scoring VALIDATE data;
713183     *------------------------------------------------------------*;
713184     data EMWS8.Neural14_VALIDATE
713185     / view=EMWS8.Neural14_VALIDATE
713186     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_VALIDATE / view=EMWS8.Neural14_VALIDATE ;
713187     set EMWS8.PRINCOMP_VALIDATE
713188     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
713189     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas.
713190    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
713191    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
713192    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
713193    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
713194    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
713195    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
713196    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
713197    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
713198    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
713199    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
713200    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
713201    +LENGTH _WARN_ $4
713202    +      F_DepVar  $ 12
713203    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
713204    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
713205    +
713206    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
713207    +
713208    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
713209    +
713210    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
713211    +
713212    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
713213    +
713214    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
713215    +
713216    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
713217    +
713218    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
713219    +
713220    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
713221    +
713222    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
713223    +
713224    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
713225    +
713226    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
713227    +
713228    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
713229    +
713230    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
713231    +
713232    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
713233    +
713234    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
713235    +
713236    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
713237    +
713238    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
713239    +
713240    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
713241    +
713242    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
713243    +
713244    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
713245    +
713246    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
713247    +
713248    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
713249    +
713250    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
713251    +
713252    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
713253    +
713254    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
713255    +
713256    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
713257    +
713258    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
713259    +
713260    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
713261    +
713262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713263    +*** Checking missing input Interval
713264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
713265    +
713266    +IF NMISS(
713267    +   PC_1 ,
713268    +   PC_10 ,
713269    +   PC_11 ,
713270    +   PC_12 ,
713271    +   PC_13 ,
713272    +   PC_14 ,
713273    +   PC_15 ,
713274    +   PC_16 ,
713275    +   PC_17 ,
713276    +   PC_2 ,
713277    +   PC_3 ,
713278    +   PC_4 ,
713279    +   PC_5 ,
713280    +   PC_6 ,
713281    +   PC_7 ,
713282    +   PC_8 ,
713283    +   PC_9 ,
713284    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
713285    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
713286    +
713287    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
713288    +END;
MPRINT(EM_DIAGRAM):   END;
713289    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713290    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
713291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713292    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
713293    +   S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
713294    +   S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
713295    +   S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
713296    +   S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
713297    +   S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
713298    +   S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
713299    +   S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
713300    +   S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
713301    +   S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
713302    +   S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
713303    +   S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
713304    +   S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
713305    +   S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
713306    +   S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
713307    +   S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
713308    +   S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
713309    +   S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
713310    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
713311    +END;
MPRINT(EM_DIAGRAM):   END;
713312    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
713313    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
713314    +   ELSE S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
713315    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
713316    +   ELSE S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
The SAS System

713317    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
713318    +   ELSE S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
713319    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
713320    +   ELSE S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
713321    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
713322    +   ELSE S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
713323    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
713324    +   ELSE S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
713325    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
713326    +   ELSE S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
713327    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
713328    +   ELSE S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
713329    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
713330    +   ELSE S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
713331    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
713332    +   ELSE S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
713333    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
713334    +   ELSE S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
713335    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
713336    +   ELSE S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
713337    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
713338    +   ELSE S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
713339    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
713340    +   ELSE S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
713341    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
713342    +   ELSE S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
713343    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
713344    +   ELSE S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
713345    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
713346    +   ELSE S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
713347    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
713348    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
713349    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
713350    +END;
MPRINT(EM_DIAGRAM):   END;
713351    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713352    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
713353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713354    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
713355    +   H11  =    -0.19743350968758 * S_PC_1  +     0.30445645806298 * S_PC_10
713356    +          +    -0.29319213945098 * S_PC_11  +    -0.25119278206844 * S_PC_12
713357    +          +     0.58266759398859 * S_PC_13  +    -0.27174585445956 * S_PC_14
713358    +          +     0.22659187495583 * S_PC_15  +      0.0345118108645 * S_PC_16
713359    +          +     0.12263049485603 * S_PC_17  +     0.19964403857859 * S_PC_2
713360    +          +     0.15954583818685 * S_PC_3  +     -0.2857245627066 * S_PC_4
713361    +          +     0.06098551342127 * S_PC_5  +    -0.08058581454455 * S_PC_6
713362    +          +     0.03452248935562 * S_PC_7  +    -0.14856891517951 * S_PC_8
713363    +          +    -0.23636852409867 * S_PC_9  +    -0.19324045106995 *
713364    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.19743350968758 * S_PC_1 + 0.30445645806298 * S_PC_10 + 
-0.29319213945098 * S_PC_11 + -0.25119278206844 * S_PC_12 + 0.58266759398859 * S_PC_13 + 
-0.27174585445956 * S_PC_14 + 0.22659187495583 * S_PC_15 + 0.0345118108645 * S_PC_16 + 
0.12263049485603 * S_PC_17 + 0.19964403857859 * S_PC_2 + 0.15954583818685 * S_PC_3 + 
-0.2857245627066 * S_PC_4 + 0.06098551342127 * S_PC_5 + -0.08058581454455 * S_PC_6 + 
0.03452248935562 * S_PC_7 + -0.14856891517951 * S_PC_8 + -0.23636852409867 * S_PC_9 + 
-0.19324045106995 * S_Year_Birth ;
713365    +   H12  =     1.14358504176708 * S_PC_1  +    -0.36192369706387 * S_PC_10
713366    +          +    -0.43744112108977 * S_PC_11  +    -0.71275370600445 * S_PC_12
713367    +          +    -0.34045125272447 * S_PC_13  +    -0.15036565546979 * S_PC_14
713368    +          +     0.09646564503434 * S_PC_15  +      0.0305829416967 * S_PC_16
713369    +          +     0.24019272351574 * S_PC_17  +      -0.293912312459 * S_PC_2
713370    +          +     0.56149100357954 * S_PC_3  +    -0.49607477801031 * S_PC_4
713371    +          +     0.06419630336205 * S_PC_5  +    -0.04699602508661 * S_PC_6
713372    +          +    -0.21664449801506 * S_PC_7  +    -0.22336257677766 * S_PC_8
713373    +          +       0.454170642483 * S_PC_9  +     0.00592873995939 *
713374    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 1.14358504176708 * S_PC_1 + -0.36192369706387 * S_PC_10 + 
-0.43744112108977 * S_PC_11 + -0.71275370600445 * S_PC_12 + -0.34045125272447 * S_PC_13 + 
-0.15036565546979 * S_PC_14 + 0.09646564503434 * S_PC_15 + 0.0305829416967 * S_PC_16 + 
0.24019272351574 * S_PC_17 + -0.293912312459 * S_PC_2 + 0.56149100357954 * S_PC_3 + 
-0.49607477801031 * S_PC_4 + 0.06419630336205 * S_PC_5 + -0.04699602508661 * S_PC_6 + 
-0.21664449801506 * S_PC_7 + -0.22336257677766 * S_PC_8 + 0.454170642483 * S_PC_9 + 
0.00592873995939 * S_Year_Birth ;
713375    +   H13  =    -0.22672349443199 * S_PC_1  +     -0.2582497841995 * S_PC_10
713376    +          +    -0.17326402021021 * S_PC_11  +     0.30935515268934 * S_PC_12
713377    +          +    -0.24201742001607 * S_PC_13  +     0.54976933292529 * S_PC_14
713378    +          +     0.10932488301679 * S_PC_15  +     0.96661941192331 * S_PC_16
713379    +          +    -0.08469518132767 * S_PC_17  +    -0.81412040243848 * S_PC_2
713380    +          +    -0.25637624627426 * S_PC_3  +    -0.17164857394469 * S_PC_4
713381    +          +     -0.9026842943155 * S_PC_5  +     0.05018319109787 * S_PC_6
713382    +          +     0.88423272215876 * S_PC_7  +     0.43376749549251 * S_PC_8
713383    +          +     -0.1720661342962 * S_PC_9  +    -0.75152134262635 *
713384    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.22672349443199 * S_PC_1 + -0.2582497841995 * S_PC_10 + 
-0.17326402021021 * S_PC_11 + 0.30935515268934 * S_PC_12 + -0.24201742001607 * S_PC_13 + 
0.54976933292529 * S_PC_14 + 0.10932488301679 * S_PC_15 + 0.96661941192331 * S_PC_16 + 
-0.08469518132767 * S_PC_17 + -0.81412040243848 * S_PC_2 + -0.25637624627426 * S_PC_3 + 
-0.17164857394469 * S_PC_4 + -0.9026842943155 * S_PC_5 + 0.05018319109787 * S_PC_6 + 
0.88423272215876 * S_PC_7 + 0.43376749549251 * S_PC_8 + -0.1720661342962 * S_PC_9 + 
-0.75152134262635 * S_Year_Birth ;
713385    +   H11  =      0.3458013028559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.3458013028559 + H11 ;
713386    +   H12  =    -2.55079965313883 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.55079965313883 + H12 ;
713387    +   H13  =    -1.09335829129594 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.09335829129594 + H13 ;
713388    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
713389    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
713390    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
713391    +END;
MPRINT(EM_DIAGRAM):   END;
713392    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
713393    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
713394    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
713395    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
713396    +END;
MPRINT(EM_DIAGRAM):   END;
713397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713398    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
713399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713400    +
713401    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
713402    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
713403    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
713404    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
713405    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
713406    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
713407    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
713408    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
713409    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
713410    +end;
MPRINT(EM_DIAGRAM):   end;
713411    +else do;
MPRINT(EM_DIAGRAM):   else do;
713412    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
713413    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
713414    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
713415    +   end;
MPRINT(EM_DIAGRAM):   end;
713416    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
713417    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
713418    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
713419    +   end;
MPRINT(EM_DIAGRAM):   end;
713420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
713421    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
713422    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
713423    +   end;
MPRINT(EM_DIAGRAM):   end;
713424    +end;
MPRINT(EM_DIAGRAM):   end;
713425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
713426    +   P_DepVar1  =     -3.3783400757259 * H11  +     2.62212015591933 * H12
713427    +          +     1.35325151350957 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.3783400757259 * H11 + 2.62212015591933 * H12 + 
1.35325151350957 * H13 ;
713428    +   P_DepVar1  =     0.02395615191895 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02395615191895 + P_DepVar1 ;
713429    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
713430    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
713431    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
713432    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
713433    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
713434    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
713435    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
713436    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
713437    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
713438    +END;
MPRINT(EM_DIAGRAM):   END;
713439    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
713440    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
713441    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
713442    +END;
MPRINT(EM_DIAGRAM):   END;
713443    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
713444    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
713445    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
713446    +END;
MPRINT(EM_DIAGRAM):   END;
713447    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
713448    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
713449    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
713450    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
713451    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
713452    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
713453    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
713454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713455    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
713456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
713457    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
713458    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
713459    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
713460    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
713461    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
713462    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
713463    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
713464    +END;
MPRINT(EM_DIAGRAM):   END;
713465    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
713466    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
713467    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
713468    +drop
713469    +H11
713470    +H12
713471    +H13
713472    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
713473    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
713474     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
713475     quit;
713476     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
713477     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
713478     * Neural14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural14: Computing metadata for TRAIN data;
713479     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL14_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural14_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural14_TRAIN out=WORK.M2_JPGNL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_JPGNL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_JPGNL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_JPGNL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_JPGNL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0AXPMUU NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AXPMUU;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AXPMUU;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M32Y5YW9(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AXPMUU;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AXPMUU;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AXPMUU;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AXPMUU;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AXPMUU;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
713791     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
713792     set EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural14_EMINFO;
713793     where DATA='Neural14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
713794     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL14_EMINFO.
      WHERE (DATA='Neural14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

713795     data EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural14_EMINFO;
713796     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
713797     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
713798     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
713802     run;
713803     data EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_EMINFO;
713804     set EMWS8.Neural14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural14_EMINFO WORK.MODELTEMP_INFO;
713805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

713806     proc sort data = EMWS8.Neural14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural14_EMINFO NOTHREADS;
713807     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
713808     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL14_EMINFO.
NOTE: The data set EMWS8.NEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

713809     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
713810     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
713811     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

713812     proc sort data = EMWS8.Neural14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
713813     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
713814     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

713815     data EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_EMINFO;
713816     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
713817     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
713818     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

713819     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
713820     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
713821     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
713822     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL14_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL14_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
