MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.13 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.13 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1AQIOGD 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1AQIOGD new;
MPRINT(EM_DIAGRAM):   run;
460308     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
460309     set EMWS8.Neural14_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural14_OUTKEY;
460310     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
460311     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL14_OUTKEY.
NOTE: The data set WORK.OUTKEY has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

460312     filename emflow
460312   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural14: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
460313     *------------------------------------------------------------*;
460314     * Neural14: Scoring DATA data;
460315     *------------------------------------------------------------*;
460316     data EMWS8.Neural14_TRAIN
460317     / view=EMWS8.Neural14_TRAIN
460318     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_TRAIN / view=EMWS8.Neural14_TRAIN ;
460319     set EMWS8.PRINCOMP_TRAIN
460320     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
460321     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas.
460322    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
460323    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
460324    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
460325    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
460326    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
460327    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
460328    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
460329    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
460330    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
460331    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
460332    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
460333    +LENGTH _WARN_ $4
460334    +      F_DepVar  $ 12
460335    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
460336    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
460337    +
460338    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
460339    +
460340    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
460341    +
460342    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
460343    +
460344    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
460345    +
460346    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
460347    +
460348    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
460349    +
460350    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
460351    +
460352    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
460353    +
460354    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
460355    +
460356    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
460357    +
460358    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
460359    +
460360    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
460361    +
460362    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
460363    +
460364    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
460365    +
460366    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
460367    +
460368    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
460369    +
460370    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
460371    +
460372    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
460373    +
460374    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
460375    +
460376    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
460377    +
460378    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
460379    +
460380    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
460381    +
460382    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
460383    +
460384    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
460385    +
460386    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
460387    +
460388    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
460389    +
460390    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
460391    +
460392    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
460393    +
460394    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
460395    +
460396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460397    +*** Checking missing input Interval
460398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
460399    +
460400    +IF NMISS(
460401    +   PC_1 ,
460402    +   PC_10 ,
460403    +   PC_11 ,
460404    +   PC_12 ,
460405    +   PC_13 ,
460406    +   PC_14 ,
460407    +   PC_15 ,
460408    +   PC_16 ,
460409    +   PC_17 ,
460410    +   PC_18 ,
460411    +   PC_19 ,
460412    +   PC_2 ,
460413    +   PC_20 ,
460414    +   PC_3 ,
460415    +   PC_4 ,
460416    +   PC_5 ,
460417    +   PC_6 ,
460418    +   PC_7 ,
460419    +   PC_8 ,
460420    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
460421    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
460422    +
460423    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
460424    +END;
MPRINT(EM_DIAGRAM):   END;
460425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460426    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
460427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460428    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
460429    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
460430    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
460431    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
460432    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
460433    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
460434    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
460435    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
460436    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
460437    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
460438    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
460439    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
460440    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
460441    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
460442    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
460443    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
460444    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
460445    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
460446    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
460447    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
460448    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
460449    +END;
MPRINT(EM_DIAGRAM):   END;
460450    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
460451    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
460452    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
460453    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
460454    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
460455    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
460456    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
460457    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
460458    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
460459    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
460460    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
460461    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
460462    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
460463    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
460464    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
460465    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
460466    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
460467    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
460468    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
460469    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
460470    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
460471    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
460472    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
460473    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
460474    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
460475    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
460476    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
460477    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
460478    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
460479    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
460480    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
460481    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
460482    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
460483    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
460484    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
460485    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
460486    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
460487    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
460488    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
460489    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
460490    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
460491    +END;
MPRINT(EM_DIAGRAM):   END;
460492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460493    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
460494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460495    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
460496    +   H11  =    -1.22196356116954 * S_PC_1  +     0.05344517078482 * S_PC_10
460497    +          +      0.6984203867648 * S_PC_11  +     0.43763918010999 * S_PC_12
460498    +          +    -0.03672422605188 * S_PC_13  +      0.1259516611641 * S_PC_14
460499    +          +    -0.05801762227369 * S_PC_15  +    -0.23391037789444 * S_PC_16
460500    +          +     0.35369298503445 * S_PC_17  +    -0.10423956231111 * S_PC_18
460501    +          +    -0.27725874271308 * S_PC_19  +     0.68948384127666 * S_PC_2
460502    +          +     0.43208892207074 * S_PC_20  +     0.24775274113892 * S_PC_3
460503    +          +    -0.28255600795094 * S_PC_4  +    -0.70550055024725 * S_PC_5
460504    +          +     0.38208838273969 * S_PC_6  +     0.49732720681648 * S_PC_7
460505    +          +     0.01907455998255 * S_PC_8  +    -0.32142612823696 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22196356116954 * S_PC_1 + 0.05344517078482 * S_PC_10 + 
0.6984203867648 * S_PC_11 + 0.43763918010999 * S_PC_12 + -0.03672422605188 * S_PC_13 + 
0.1259516611641 * S_PC_14 + -0.05801762227369 * S_PC_15 + -0.23391037789444 * S_PC_16 + 
0.35369298503445 * S_PC_17 + -0.10423956231111 * S_PC_18 + -0.27725874271308 * S_PC_19 + 
0.68948384127666 * S_PC_2 + 0.43208892207074 * S_PC_20 + 0.24775274113892 * S_PC_3 + 
-0.28255600795094 * S_PC_4 + -0.70550055024725 * S_PC_5 + 0.38208838273969 * S_PC_6 + 
0.49732720681648 * S_PC_7 + 0.01907455998255 * S_PC_8 + -0.32142612823696 * S_PC_9 ;
460506    +   H12  =    -0.14288504420086 * S_PC_1  +    -0.07204180071169 * S_PC_10
460507    +          +      0.2058433777918 * S_PC_11  +    -0.72447280544842 * S_PC_12
460508    +          +    -0.50408454303488 * S_PC_13  +     0.25490464289158 * S_PC_14
460509    +          +     0.28037848773447 * S_PC_15  +    -0.01669043314173 * S_PC_16
460510    +          +    -0.24780211304873 * S_PC_17  +    -0.01106800785825 * S_PC_18
460511    +          +     0.08560543799495 * S_PC_19  +     0.19800464373596 * S_PC_2
460512    +          +    -0.16663011630389 * S_PC_20  +     0.11591720537675 * S_PC_3
460513    +          +     0.17064985813689 * S_PC_4  +    -0.08481806363444 * S_PC_5
460514    +          +    -0.20776813656018 * S_PC_6  +    -0.20149201283191 * S_PC_7
460515    +          +    -0.19048054846238 * S_PC_8  +    -0.17563763618422 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = -0.14288504420086 * S_PC_1 + -0.07204180071169 * S_PC_10 + 
0.2058433777918 * S_PC_11 + -0.72447280544842 * S_PC_12 + -0.50408454303488 * S_PC_13 + 
0.25490464289158 * S_PC_14 + 0.28037848773447 * S_PC_15 + -0.01669043314173 * S_PC_16 + 
-0.24780211304873 * S_PC_17 + -0.01106800785825 * S_PC_18 + 0.08560543799495 * S_PC_19 + 
0.19800464373596 * S_PC_2 + -0.16663011630389 * S_PC_20 + 0.11591720537675 * S_PC_3 + 
0.17064985813689 * S_PC_4 + -0.08481806363444 * S_PC_5 + -0.20776813656018 * S_PC_6 + 
-0.20149201283191 * S_PC_7 + -0.19048054846238 * S_PC_8 + -0.17563763618422 * S_PC_9 ;
460516    +   H11  =     1.75178136878975 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.75178136878975 + H11 ;
460517    +   H12  =     0.49016930986514 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.49016930986514 + H12 ;
460518    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
460519    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
460520    +END;
MPRINT(EM_DIAGRAM):   END;
460521    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
460522    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
460523    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
460524    +END;
MPRINT(EM_DIAGRAM):   END;
460525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460526    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
460527    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460528    +
460529    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
460530    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
460531    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
460532    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
460533    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
460534    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
460535    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
460536    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
460537    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
460538    +end;
MPRINT(EM_DIAGRAM):   end;
460539    +else do;
MPRINT(EM_DIAGRAM):   else do;
460540    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
460541    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
460542    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
460543    +   end;
MPRINT(EM_DIAGRAM):   end;
460544    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
460545    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
460546    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
460547    +   end;
MPRINT(EM_DIAGRAM):   end;
460548    +   else do;
MPRINT(EM_DIAGRAM):   else do;
460549    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
460550    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
460551    +   end;
MPRINT(EM_DIAGRAM):   end;
460552    +end;
MPRINT(EM_DIAGRAM):   end;
460553    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
460554    +   P_DepVar1  =    -2.26178138125299 * H11  +    -3.22279435260946 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26178138125299 * H11 + -3.22279435260946 * H12 ;
460555    +   P_DepVar1  =    -0.85190454292608 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.85190454292608 + P_DepVar1 ;
460556    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
460557    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
460558    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
460559    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
460560    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
460561    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
460562    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
460563    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
460564    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
460565    +END;
MPRINT(EM_DIAGRAM):   END;
460566    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
460567    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
460568    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
460569    +END;
MPRINT(EM_DIAGRAM):   END;
460570    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
460571    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
460572    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
460573    +END;
MPRINT(EM_DIAGRAM):   END;
460574    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
460575    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
460576    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
460577    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
460578    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
460579    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
460580    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
460581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460582    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
460583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460584    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
460585    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
460586    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
460587    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
460588    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
460589    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
460590    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
460591    +END;
MPRINT(EM_DIAGRAM):   END;
460592    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
460593    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
460594    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
460595    +drop
460596    +H11
460597    +H12
460598    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
460599    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
460600     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
460601     quit;
460602     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
460603     filename emflow
460603   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural14: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
460604     *------------------------------------------------------------*;
460605     * Neural14: Scoring VALIDATE data;
460606     *------------------------------------------------------------*;
460607     data EMWS8.Neural14_VALIDATE
460608     / view=EMWS8.Neural14_VALIDATE
460609     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_VALIDATE / view=EMWS8.Neural14_VALIDATE ;
460610     set EMWS8.PRINCOMP_VALIDATE
460611     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
460612     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural14\EMFLOWSCORE.sas.
460613    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
460614    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
460615    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
460616    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
460617    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
460618    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
460619    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
460620    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
460621    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
460622    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
460623    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
460624    +LENGTH _WARN_ $4
460625    +      F_DepVar  $ 12
460626    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
460627    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
460628    +
460629    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
460630    +
460631    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
460632    +
460633    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
460634    +
460635    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
460636    +
460637    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
460638    +
460639    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
460640    +
460641    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
460642    +
460643    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
460644    +
460645    +      label S_PC_18 = 'Standard: PC_18' ;
MPRINT(EM_DIAGRAM):   label S_PC_18 = 'Standard: PC_18' ;
460646    +
460647    +      label S_PC_19 = 'Standard: PC_19' ;
MPRINT(EM_DIAGRAM):   label S_PC_19 = 'Standard: PC_19' ;
460648    +
460649    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
460650    +
460651    +      label S_PC_20 = 'Standard: PC_20' ;
MPRINT(EM_DIAGRAM):   label S_PC_20 = 'Standard: PC_20' ;
460652    +
460653    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
460654    +
460655    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
460656    +
460657    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
460658    +
460659    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
460660    +
460661    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
460662    +
460663    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
460664    +
460665    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
460666    +
460667    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
460668    +
460669    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
460670    +
460671    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
460672    +
460673    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
460674    +
460675    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
460676    +
460677    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
460678    +
460679    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
460680    +
460681    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
460682    +
460683    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
460684    +
460685    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
460686    +
460687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460688    +*** Checking missing input Interval
460689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
460690    +
460691    +IF NMISS(
460692    +   PC_1 ,
460693    +   PC_10 ,
460694    +   PC_11 ,
460695    +   PC_12 ,
460696    +   PC_13 ,
460697    +   PC_14 ,
460698    +   PC_15 ,
460699    +   PC_16 ,
460700    +   PC_17 ,
460701    +   PC_18 ,
460702    +   PC_19 ,
460703    +   PC_2 ,
460704    +   PC_20 ,
460705    +   PC_3 ,
460706    +   PC_4 ,
460707    +   PC_5 ,
460708    +   PC_6 ,
460709    +   PC_7 ,
460710    +   PC_8 ,
460711    +   PC_9   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_18 , PC_19 , PC_2 , PC_20 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 ) THEN 
DO;
460712    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
460713    +
460714    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
460715    +END;
MPRINT(EM_DIAGRAM):   END;
460716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460717    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
460718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460719    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
460720    +   S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
460721    +   S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
460722    +   S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
460723    +   S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
460724    +   S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
460725    +   S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
460726    +   S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
460727    +   S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
460728    +   S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
460729    +   S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
460730    +   S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
460731    +   S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
460732    +   S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
460733    +   S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
460734    +   S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
460735    +   S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
460736    +   S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
460737    +   S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
460738    +   S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
460739    +   S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
460740    +END;
MPRINT(EM_DIAGRAM):   END;
460741    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
460742    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
460743    +   ELSE S_PC_1  = -3.9326340637957E-15 +     0.29856127196125 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.9326340637957E-15 + 0.29856127196125 * PC_1 ;
460744    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
460745    +   ELSE S_PC_10  = -9.2255679809319E-15 +     0.81267664272505 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -9.2255679809319E-15 + 0.81267664272505 * PC_10 ;
460746    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
460747    +   ELSE S_PC_11  =  3.9010508694298E-15 +      0.8343488153056 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 3.9010508694298E-15 + 0.8343488153056 * PC_11 ;
460748    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
460749    +   ELSE S_PC_12  =  -3.549148780412E-15 +     0.88094641144592 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.549148780412E-15 + 0.88094641144592 * PC_12 ;
460750    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
460751    +   ELSE S_PC_13  =  1.2236400050078E-16 +     0.89160303670676 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.2236400050078E-16 + 0.89160303670676 * PC_13 ;
460752    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
460753    +   ELSE S_PC_14  = -2.7740851751603E-15 +     0.89958319422991 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -2.7740851751603E-15 + 0.89958319422991 * PC_14 ;
460754    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
460755    +   ELSE S_PC_15  =  1.2368456096485E-15 +      0.9273996164564 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = 1.2368456096485E-15 + 0.9273996164564 * PC_15 ;
460756    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
460757    +   ELSE S_PC_16  = -9.1662217565311E-16 +     0.94870355386249 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -9.1662217565311E-16 + 0.94870355386249 * PC_16 ;
460758    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
460759    +   ELSE S_PC_17  = -3.2793544087531E-15 +     0.97039233963067 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = -3.2793544087531E-15 + 0.97039233963067 * PC_17 ;
460760    +   IF MISSING( PC_18 ) THEN S_PC_18  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_18 ) THEN S_PC_18 = . ;
460761    +   ELSE S_PC_18  =  2.6573178728951E-15 +     1.01893035135692 * PC_18 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_18 = 2.6573178728951E-15 + 1.01893035135692 * PC_18 ;
460762    +   IF MISSING( PC_19 ) THEN S_PC_19  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_19 ) THEN S_PC_19 = . ;
460763    +   ELSE S_PC_19  =  5.4571033427589E-15 +     1.03575063058043 * PC_19 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_19 = 5.4571033427589E-15 + 1.03575063058043 * PC_19 ;
460764    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
460765    +   ELSE S_PC_2  =  1.7819005044245E-16 +     0.53620237396367 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 1.7819005044245E-16 + 0.53620237396367 * PC_2 ;
460766    +   IF MISSING( PC_20 ) THEN S_PC_20  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_20 ) THEN S_PC_20 = . ;
460767    +   ELSE S_PC_20  = -6.5745909034615E-15 +     1.17404202930983 * PC_20 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_20 = -6.5745909034615E-15 + 1.17404202930983 * PC_20 ;
460768    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
460769    +   ELSE S_PC_3  =  7.2659414314573E-15 +     0.54882613091499 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 7.2659414314573E-15 + 0.54882613091499 * PC_3 ;
460770    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
460771    +   ELSE S_PC_4  =  -9.594020997569E-15 +     0.62616694648196 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -9.594020997569E-15 + 0.62616694648196 * PC_4 ;
460772    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
460773    +   ELSE S_PC_5  =  6.4769256780617E-15 +     0.65381673515035 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = 6.4769256780617E-15 + 0.65381673515035 * PC_5 ;
460774    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
460775    +   ELSE S_PC_6  =   3.580536079847E-15 +     0.70036731226737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 3.580536079847E-15 + 0.70036731226737 * PC_6 ;
460776    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
460777    +   ELSE S_PC_7  =  3.7364722741013E-15 +     0.71812657760342 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 3.7364722741013E-15 + 0.71812657760342 * PC_7 ;
460778    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
460779    +   ELSE S_PC_8  = -1.3132402130488E-15 +     0.77088794083704 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -1.3132402130488E-15 + 0.77088794083704 * PC_8 ;
460780    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
460781    +   ELSE S_PC_9  =   6.653417690349E-15 +     0.79301377407747 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = 6.653417690349E-15 + 0.79301377407747 * PC_9 ;
460782    +END;
MPRINT(EM_DIAGRAM):   END;
460783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460784    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
460785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460786    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
460787    +   H11  =    -1.22196356116954 * S_PC_1  +     0.05344517078482 * S_PC_10
460788    +          +      0.6984203867648 * S_PC_11  +     0.43763918010999 * S_PC_12
460789    +          +    -0.03672422605188 * S_PC_13  +      0.1259516611641 * S_PC_14
460790    +          +    -0.05801762227369 * S_PC_15  +    -0.23391037789444 * S_PC_16
460791    +          +     0.35369298503445 * S_PC_17  +    -0.10423956231111 * S_PC_18
460792    +          +    -0.27725874271308 * S_PC_19  +     0.68948384127666 * S_PC_2
460793    +          +     0.43208892207074 * S_PC_20  +     0.24775274113892 * S_PC_3
460794    +          +    -0.28255600795094 * S_PC_4  +    -0.70550055024725 * S_PC_5
460795    +          +     0.38208838273969 * S_PC_6  +     0.49732720681648 * S_PC_7
460796    +          +     0.01907455998255 * S_PC_8  +    -0.32142612823696 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H11 = -1.22196356116954 * S_PC_1 + 0.05344517078482 * S_PC_10 + 
0.6984203867648 * S_PC_11 + 0.43763918010999 * S_PC_12 + -0.03672422605188 * S_PC_13 + 
0.1259516611641 * S_PC_14 + -0.05801762227369 * S_PC_15 + -0.23391037789444 * S_PC_16 + 
0.35369298503445 * S_PC_17 + -0.10423956231111 * S_PC_18 + -0.27725874271308 * S_PC_19 + 
0.68948384127666 * S_PC_2 + 0.43208892207074 * S_PC_20 + 0.24775274113892 * S_PC_3 + 
-0.28255600795094 * S_PC_4 + -0.70550055024725 * S_PC_5 + 0.38208838273969 * S_PC_6 + 
0.49732720681648 * S_PC_7 + 0.01907455998255 * S_PC_8 + -0.32142612823696 * S_PC_9 ;
460797    +   H12  =    -0.14288504420086 * S_PC_1  +    -0.07204180071169 * S_PC_10
460798    +          +      0.2058433777918 * S_PC_11  +    -0.72447280544842 * S_PC_12
460799    +          +    -0.50408454303488 * S_PC_13  +     0.25490464289158 * S_PC_14
460800    +          +     0.28037848773447 * S_PC_15  +    -0.01669043314173 * S_PC_16
460801    +          +    -0.24780211304873 * S_PC_17  +    -0.01106800785825 * S_PC_18
460802    +          +     0.08560543799495 * S_PC_19  +     0.19800464373596 * S_PC_2
460803    +          +    -0.16663011630389 * S_PC_20  +     0.11591720537675 * S_PC_3
460804    +          +     0.17064985813689 * S_PC_4  +    -0.08481806363444 * S_PC_5
460805    +          +    -0.20776813656018 * S_PC_6  +    -0.20149201283191 * S_PC_7
460806    +          +    -0.19048054846238 * S_PC_8  +    -0.17563763618422 * S_PC_9 ;
MPRINT(EM_DIAGRAM):   H12 = -0.14288504420086 * S_PC_1 + -0.07204180071169 * S_PC_10 + 
0.2058433777918 * S_PC_11 + -0.72447280544842 * S_PC_12 + -0.50408454303488 * S_PC_13 + 
0.25490464289158 * S_PC_14 + 0.28037848773447 * S_PC_15 + -0.01669043314173 * S_PC_16 + 
-0.24780211304873 * S_PC_17 + -0.01106800785825 * S_PC_18 + 0.08560543799495 * S_PC_19 + 
0.19800464373596 * S_PC_2 + -0.16663011630389 * S_PC_20 + 0.11591720537675 * S_PC_3 + 
0.17064985813689 * S_PC_4 + -0.08481806363444 * S_PC_5 + -0.20776813656018 * S_PC_6 + 
-0.20149201283191 * S_PC_7 + -0.19048054846238 * S_PC_8 + -0.17563763618422 * S_PC_9 ;
460807    +   H11  =     1.75178136878975 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.75178136878975 + H11 ;
460808    +   H12  =     0.49016930986514 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.49016930986514 + H12 ;
460809    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
460810    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
460811    +END;
MPRINT(EM_DIAGRAM):   END;
460812    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
460813    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
460814    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
460815    +END;
MPRINT(EM_DIAGRAM):   END;
460816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460817    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
460818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460819    +
460820    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
460821    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
460822    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
460823    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
460824    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
460825    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
460826    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
460827    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
460828    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
460829    +end;
MPRINT(EM_DIAGRAM):   end;
460830    +else do;
MPRINT(EM_DIAGRAM):   else do;
460831    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
460832    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
460833    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
460834    +   end;
MPRINT(EM_DIAGRAM):   end;
460835    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
460836    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
460837    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
460838    +   end;
MPRINT(EM_DIAGRAM):   end;
460839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
460840    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
460841    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
460842    +   end;
MPRINT(EM_DIAGRAM):   end;
460843    +end;
MPRINT(EM_DIAGRAM):   end;
460844    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
460845    +   P_DepVar1  =    -2.26178138125299 * H11  +    -3.22279435260946 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26178138125299 * H11 + -3.22279435260946 * H12 ;
460846    +   P_DepVar1  =    -0.85190454292608 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.85190454292608 + P_DepVar1 ;
460847    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
460848    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
460849    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
460850    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
460851    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
460852    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
460853    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
460854    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
460855    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
460856    +END;
MPRINT(EM_DIAGRAM):   END;
460857    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
460858    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
460859    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
460860    +END;
MPRINT(EM_DIAGRAM):   END;
460861    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
460862    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
460863    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
460864    +END;
MPRINT(EM_DIAGRAM):   END;
460865    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
460866    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
460867    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
460868    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
460869    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
460870    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
460871    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
460872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460873    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
460874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
460875    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
460876    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
460877    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
460878    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
460879    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
460880    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
460881    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
460882    +END;
MPRINT(EM_DIAGRAM):   END;
460883    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
460884    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
460885    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
460886    +drop
460887    +H11
460888    +H12
460889    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
460890    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
460891     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
460892     quit;
460893     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
460894     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
460895     * Neural14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural14: Computing metadata for TRAIN data;
460896     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL14_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural14_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural14_TRAIN out=WORK.M259R6ZY noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M259R6ZY;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M259R6ZY(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M259R6ZY;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M259R6ZY;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2UG41JI NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2UG41JI;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2UG41JI;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1S37JS1(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2UG41JI;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2UG41JI;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2UG41JI;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2UG41JI;
MPRINT(EMADVISECOLUMNS):   set WORK.M2UG41JI;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
461208     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
461209     set EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural14_EMINFO;
461210     where DATA='Neural14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
461211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL14_EMINFO.
      WHERE (DATA='Neural14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

461212     data EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural14_EMINFO;
461213     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
461214     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
461215     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
461219     run;
461220     data EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_EMINFO;
461221     set EMWS8.Neural14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural14_EMINFO WORK.MODELTEMP_INFO;
461222     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

461223     proc sort data = EMWS8.Neural14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural14_EMINFO NOTHREADS;
461224     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
461225     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL14_EMINFO.
NOTE: The data set EMWS8.NEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

461226     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
461227     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
461228     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

461229     proc sort data = EMWS8.Neural14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
461230     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
461231     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

461232     data EMWS8.Neural14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural14_EMINFO;
461233     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
461234     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
461235     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

461236     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
461237     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
461238     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
461239     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL14_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL14_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
