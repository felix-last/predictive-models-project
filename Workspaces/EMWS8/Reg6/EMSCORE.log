MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.12 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.12 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2P8QFUB 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2P8QFUB new;
MPRINT(EM_DIAGRAM):   run;
722145     proc transpose data=EMWS8.Reg6_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg6_EMESTIMATE out=WORK.TEMPREG;
722146     where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
722147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.REG6_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 52 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

722148     proc transpose data=EMWS8.Reg6_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg6_MAPDS out=WORK.TEMPREG2;
722149     var "PC_1"n--"Year_Birth"n;
MPRINT(EM_DIAGRAM):   var "PC_1"n--"Year_Birth"n;
722150     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS8.REG6_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 18 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

722151     proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
722152     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
722153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 52 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 52 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

722154     proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
722155     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
722156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 18 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

722157     data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
722158     merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
722159     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
722160     if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
722161     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 52 observations read from the data set WORK.TEMPREG.
NOTE: There were 18 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

722162     data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
722163     length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
722164     set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
722165     i=1;
MPRINT(EM_DIAGRAM):   i=1;
722166     do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
722167     term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
722168     i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
722169     output;
MPRINT(EM_DIAGRAM):   output;
722170     end;
MPRINT(EM_DIAGRAM):   end;
722171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 16 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

722172     proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
722173     by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
722174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.TEMPREG3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 16 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.78 seconds
      cpu time            0.01 seconds
      

722175     filename emflow
722175   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
722176     *------------------------------------------------------------*;
722177     * Reg6: Scoring DATA data;
722178     *------------------------------------------------------------*;
722179     data EMWS8.Reg6_TRAIN
722180     / view=EMWS8.Reg6_TRAIN
722181     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_TRAIN / view=EMWS8.Reg6_TRAIN ;
722182     set EMWS8.PRINCOMP_TRAIN
722183     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
722184     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas.
722185    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722186    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
722187    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722188    +
722189    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
722190    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
722191    +
722192    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
722193    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
722194    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
722195    +array REG6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG6DRF [2] $12 _temporary_ ('1' '0' );
722196    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
722197    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
722198    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
722199    +ARRAY REG6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG6DRU[2] _TEMPORARY_ (1 0);
722200    +
722201    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
722202    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
722203    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722204    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
722205    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
722206    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
722207    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
722208    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722209    +end;
MPRINT(EM_DIAGRAM):   end;
722210    +else do;
MPRINT(EM_DIAGRAM):   else do;
722211    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
722212    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
722213    +   end;
MPRINT(EM_DIAGRAM):   end;
722214    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
722215    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
722216    +   end;
MPRINT(EM_DIAGRAM):   end;
722217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
722218    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722219    +   end;
MPRINT(EM_DIAGRAM):   end;
722220    +end;
MPRINT(EM_DIAGRAM):   end;
722221    +
722222    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
722223    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
722224    +
722225    +*** Check PC_1 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_1 for missing values ;
722226    +if missing( PC_1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_1 ) then do;
722227    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722228    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722229    +end;
MPRINT(EM_DIAGRAM):   end;
722230    +
722231    +*** Check PC_10 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_10 for missing values ;
722232    +if missing( PC_10 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_10 ) then do;
722233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722235    +end;
MPRINT(EM_DIAGRAM):   end;
722236    +
722237    +*** Check PC_11 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_11 for missing values ;
722238    +if missing( PC_11 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_11 ) then do;
722239    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722240    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722241    +end;
MPRINT(EM_DIAGRAM):   end;
722242    +
722243    +*** Check PC_13 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_13 for missing values ;
722244    +if missing( PC_13 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_13 ) then do;
722245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722247    +end;
MPRINT(EM_DIAGRAM):   end;
722248    +
722249    +*** Check PC_14 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_14 for missing values ;
722250    +if missing( PC_14 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_14 ) then do;
722251    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722252    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722253    +end;
MPRINT(EM_DIAGRAM):   end;
722254    +
722255    +*** Check PC_15 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_15 for missing values ;
722256    +if missing( PC_15 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_15 ) then do;
722257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722259    +end;
MPRINT(EM_DIAGRAM):   end;
722260    +
722261    +*** Check PC_16 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_16 for missing values ;
722262    +if missing( PC_16 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_16 ) then do;
722263    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722264    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722265    +end;
MPRINT(EM_DIAGRAM):   end;
722266    +
722267    +*** Check PC_17 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_17 for missing values ;
722268    +if missing( PC_17 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_17 ) then do;
722269    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722270    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722271    +end;
MPRINT(EM_DIAGRAM):   end;
722272    +
722273    +*** Check PC_2 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_2 for missing values ;
722274    +if missing( PC_2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_2 ) then do;
722275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722277    +end;
MPRINT(EM_DIAGRAM):   end;
722278    +
722279    +*** Check PC_3 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_3 for missing values ;
722280    +if missing( PC_3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_3 ) then do;
722281    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722282    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722283    +end;
MPRINT(EM_DIAGRAM):   end;
722284    +
722285    +*** Check PC_4 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_4 for missing values ;
722286    +if missing( PC_4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_4 ) then do;
722287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722289    +end;
MPRINT(EM_DIAGRAM):   end;
722290    +
722291    +*** Check PC_5 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_5 for missing values ;
722292    +if missing( PC_5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_5 ) then do;
722293    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722294    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722295    +end;
MPRINT(EM_DIAGRAM):   end;
722296    +
722297    +*** Check PC_6 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_6 for missing values ;
722298    +if missing( PC_6 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_6 ) then do;
722299    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722300    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722301    +end;
MPRINT(EM_DIAGRAM):   end;
722302    +
722303    +*** Check PC_7 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_7 for missing values ;
722304    +if missing( PC_7 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_7 ) then do;
722305    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722306    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722307    +end;
MPRINT(EM_DIAGRAM):   end;
722308    +
722309    +*** Check PC_8 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_8 for missing values ;
722310    +if missing( PC_8 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_8 ) then do;
722311    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722313    +end;
MPRINT(EM_DIAGRAM):   end;
722314    +
722315    +*** Check PC_9 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_9 for missing values ;
722316    +if missing( PC_9 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_9 ) then do;
722317    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722319    +end;
MPRINT(EM_DIAGRAM):   end;
722320    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
722321    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
722322    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
722323    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
722324    +   goto REG6DR1;
MPRINT(EM_DIAGRAM):   goto REG6DR1;
722325    +end;
MPRINT(EM_DIAGRAM):   end;
722326    +
722327    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
722328    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
722329    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
722330    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
722331    +
722332    +***  Effect: PC_1 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_1 ;
722333    +_TEMP = PC_1 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_1 ;
722334    +_LP0 = _LP0 + (    0.14662090342114 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.14662090342114 * _TEMP);
722335    +
722336    +***  Effect: PC_10 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_10 ;
722337    +_TEMP = PC_10 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_10 ;
722338    +_LP0 = _LP0 + (   -0.35750931372254 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.35750931372254 * _TEMP);
722339    +
722340    +***  Effect: PC_11 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_11 ;
722341    +_TEMP = PC_11 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_11 ;
722342    +_LP0 = _LP0 + (    0.11763722685971 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11763722685971 * _TEMP);
722343    +
722344    +***  Effect: PC_13 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_13 ;
722345    +_TEMP = PC_13 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_13 ;
722346    +_LP0 = _LP0 + (   -0.57016250198796 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57016250198796 * _TEMP);
722347    +
722348    +***  Effect: PC_14 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_14 ;
722349    +_TEMP = PC_14 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_14 ;
722350    +_LP0 = _LP0 + (    0.23526641771783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.23526641771783 * _TEMP);
722351    +
722352    +***  Effect: PC_15 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_15 ;
722353    +_TEMP = PC_15 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_15 ;
722354    +_LP0 = _LP0 + (    -0.1468551886766 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1468551886766 * _TEMP);
722355    +
722356    +***  Effect: PC_16 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_16 ;
722357    +_TEMP = PC_16 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_16 ;
722358    +_LP0 = _LP0 + (    0.15215028387571 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15215028387571 * _TEMP);
722359    +
722360    +***  Effect: PC_17 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_17 ;
722361    +_TEMP = PC_17 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_17 ;
722362    +_LP0 = _LP0 + (    -0.0770855195369 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0770855195369 * _TEMP);
722363    +
722364    +***  Effect: PC_2 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_2 ;
722365    +_TEMP = PC_2 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_2 ;
722366    +_LP0 = _LP0 + (    -0.2728635756473 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2728635756473 * _TEMP);
722367    +
722368    +***  Effect: PC_3 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_3 ;
722369    +_TEMP = PC_3 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_3 ;
722370    +_LP0 = _LP0 + (   -0.05555466068913 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05555466068913 * _TEMP);
722371    +
722372    +***  Effect: PC_4 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_4 ;
722373    +_TEMP = PC_4 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_4 ;
722374    +_LP0 = _LP0 + (    0.08002910027281 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08002910027281 * _TEMP);
722375    +
722376    +***  Effect: PC_5 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_5 ;
722377    +_TEMP = PC_5 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_5 ;
722378    +_LP0 = _LP0 + (   -0.19899205317242 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.19899205317242 * _TEMP);
722379    +
722380    +***  Effect: PC_6 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_6 ;
722381    +_TEMP = PC_6 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_6 ;
722382    +_LP0 = _LP0 + (    0.09331593245534 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09331593245534 * _TEMP);
722383    +
722384    +***  Effect: PC_7 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_7 ;
722385    +_TEMP = PC_7 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_7 ;
722386    +_LP0 = _LP0 + (    0.07953772701502 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07953772701502 * _TEMP);
722387    +
722388    +***  Effect: PC_8 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_8 ;
722389    +_TEMP = PC_8 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_8 ;
722390    +_LP0 = _LP0 + (    0.18036427134251 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18036427134251 * _TEMP);
722391    +
722392    +***  Effect: PC_9 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_9 ;
722393    +_TEMP = PC_9 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_9 ;
722394    +_LP0 = _LP0 + (    0.25346236398532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25346236398532 * _TEMP);
722395    +
722396    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
722397    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
722398    +_P0 = probnorm((   -1.53806789871552) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -1.53806789871552) + _LP0);
722399    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
722400    +
722401    +REG6DR1:
722402    +
722403    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG6DR1: *** Residuals;
722404    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
722405    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
722406    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
722407    +end;
MPRINT(EM_DIAGRAM):   end;
722408    +else do;
MPRINT(EM_DIAGRAM):   else do;
722409    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
722410    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
722411    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
722412    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
722413    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
722414    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
722415    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
722416    +   end;
MPRINT(EM_DIAGRAM):   end;
722417    +end;
MPRINT(EM_DIAGRAM):   end;
722418    +
722419    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
722420    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
722421    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
722422    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
722423    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
722424    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
722425    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
722426    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
722427    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
722428    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
722429    +end;
MPRINT(EM_DIAGRAM):   end;
722430    +I_DepVar = REG6DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG6DRF[_IY];
722431    +U_DepVar = REG6DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG6DRU[_IY];
722432    +
722433    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722434    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
722435    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
722436     run;

NOTE: DATA STEP view saved on file EMWS8.REG6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
722437     quit;
722438     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
722439     filename emflow
722439   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
722440     *------------------------------------------------------------*;
722441     * Reg6: Scoring VALIDATE data;
722442     *------------------------------------------------------------*;
722443     data EMWS8.Reg6_VALIDATE
722444     / view=EMWS8.Reg6_VALIDATE
722445     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_VALIDATE / view=EMWS8.Reg6_VALIDATE ;
722446     set EMWS8.PRINCOMP_VALIDATE
722447     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
722448     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas.
722449    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722450    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
722451    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722452    +
722453    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
722454    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
722455    +
722456    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
722457    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
722458    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
722459    +array REG6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG6DRF [2] $12 _temporary_ ('1' '0' );
722460    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
722461    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
722462    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
722463    +ARRAY REG6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG6DRU[2] _TEMPORARY_ (1 0);
722464    +
722465    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
722466    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
722467    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722468    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
722469    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
722470    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
722471    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
722472    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722473    +end;
MPRINT(EM_DIAGRAM):   end;
722474    +else do;
MPRINT(EM_DIAGRAM):   else do;
722475    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
722476    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
722477    +   end;
MPRINT(EM_DIAGRAM):   end;
722478    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
722479    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
722480    +   end;
MPRINT(EM_DIAGRAM):   end;
722481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
722482    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722483    +   end;
MPRINT(EM_DIAGRAM):   end;
722484    +end;
MPRINT(EM_DIAGRAM):   end;
722485    +
722486    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
722487    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
722488    +
722489    +*** Check PC_1 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_1 for missing values ;
722490    +if missing( PC_1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_1 ) then do;
722491    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722492    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722493    +end;
MPRINT(EM_DIAGRAM):   end;
722494    +
722495    +*** Check PC_10 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_10 for missing values ;
722496    +if missing( PC_10 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_10 ) then do;
722497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722499    +end;
MPRINT(EM_DIAGRAM):   end;
722500    +
722501    +*** Check PC_11 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_11 for missing values ;
722502    +if missing( PC_11 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_11 ) then do;
722503    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722504    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722505    +end;
MPRINT(EM_DIAGRAM):   end;
722506    +
722507    +*** Check PC_13 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_13 for missing values ;
722508    +if missing( PC_13 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_13 ) then do;
722509    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722510    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722511    +end;
MPRINT(EM_DIAGRAM):   end;
722512    +
722513    +*** Check PC_14 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_14 for missing values ;
722514    +if missing( PC_14 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_14 ) then do;
722515    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722517    +end;
MPRINT(EM_DIAGRAM):   end;
722518    +
722519    +*** Check PC_15 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_15 for missing values ;
722520    +if missing( PC_15 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_15 ) then do;
722521    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722522    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722523    +end;
MPRINT(EM_DIAGRAM):   end;
722524    +
722525    +*** Check PC_16 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_16 for missing values ;
722526    +if missing( PC_16 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_16 ) then do;
722527    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722528    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722529    +end;
MPRINT(EM_DIAGRAM):   end;
722530    +
722531    +*** Check PC_17 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_17 for missing values ;
722532    +if missing( PC_17 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_17 ) then do;
722533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722535    +end;
MPRINT(EM_DIAGRAM):   end;
722536    +
722537    +*** Check PC_2 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_2 for missing values ;
722538    +if missing( PC_2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_2 ) then do;
722539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722541    +end;
MPRINT(EM_DIAGRAM):   end;
722542    +
722543    +*** Check PC_3 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_3 for missing values ;
722544    +if missing( PC_3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_3 ) then do;
722545    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722546    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722547    +end;
MPRINT(EM_DIAGRAM):   end;
722548    +
722549    +*** Check PC_4 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_4 for missing values ;
722550    +if missing( PC_4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_4 ) then do;
722551    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722553    +end;
MPRINT(EM_DIAGRAM):   end;
722554    +
722555    +*** Check PC_5 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_5 for missing values ;
722556    +if missing( PC_5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_5 ) then do;
722557    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722558    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722559    +end;
MPRINT(EM_DIAGRAM):   end;
722560    +
722561    +*** Check PC_6 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_6 for missing values ;
722562    +if missing( PC_6 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_6 ) then do;
722563    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722564    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722565    +end;
MPRINT(EM_DIAGRAM):   end;
722566    +
722567    +*** Check PC_7 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_7 for missing values ;
722568    +if missing( PC_7 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_7 ) then do;
722569    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722570    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722571    +end;
MPRINT(EM_DIAGRAM):   end;
722572    +
722573    +*** Check PC_8 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_8 for missing values ;
722574    +if missing( PC_8 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_8 ) then do;
722575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722577    +end;
MPRINT(EM_DIAGRAM):   end;
722578    +
722579    +*** Check PC_9 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_9 for missing values ;
722580    +if missing( PC_9 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_9 ) then do;
722581    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722583    +end;
MPRINT(EM_DIAGRAM):   end;
722584    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
722585    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
722586    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
722587    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
722588    +   goto REG6DR1;
MPRINT(EM_DIAGRAM):   goto REG6DR1;
722589    +end;
MPRINT(EM_DIAGRAM):   end;
722590    +
722591    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
722592    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
722593    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
722594    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
722595    +
722596    +***  Effect: PC_1 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_1 ;
722597    +_TEMP = PC_1 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_1 ;
722598    +_LP0 = _LP0 + (    0.14662090342114 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.14662090342114 * _TEMP);
722599    +
722600    +***  Effect: PC_10 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_10 ;
722601    +_TEMP = PC_10 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_10 ;
722602    +_LP0 = _LP0 + (   -0.35750931372254 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.35750931372254 * _TEMP);
722603    +
722604    +***  Effect: PC_11 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_11 ;
722605    +_TEMP = PC_11 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_11 ;
722606    +_LP0 = _LP0 + (    0.11763722685971 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11763722685971 * _TEMP);
722607    +
722608    +***  Effect: PC_13 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_13 ;
722609    +_TEMP = PC_13 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_13 ;
722610    +_LP0 = _LP0 + (   -0.57016250198796 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57016250198796 * _TEMP);
722611    +
722612    +***  Effect: PC_14 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_14 ;
722613    +_TEMP = PC_14 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_14 ;
722614    +_LP0 = _LP0 + (    0.23526641771783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.23526641771783 * _TEMP);
722615    +
722616    +***  Effect: PC_15 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_15 ;
722617    +_TEMP = PC_15 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_15 ;
722618    +_LP0 = _LP0 + (    -0.1468551886766 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1468551886766 * _TEMP);
722619    +
722620    +***  Effect: PC_16 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_16 ;
722621    +_TEMP = PC_16 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_16 ;
722622    +_LP0 = _LP0 + (    0.15215028387571 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15215028387571 * _TEMP);
722623    +
722624    +***  Effect: PC_17 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_17 ;
722625    +_TEMP = PC_17 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_17 ;
722626    +_LP0 = _LP0 + (    -0.0770855195369 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0770855195369 * _TEMP);
722627    +
722628    +***  Effect: PC_2 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_2 ;
722629    +_TEMP = PC_2 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_2 ;
722630    +_LP0 = _LP0 + (    -0.2728635756473 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2728635756473 * _TEMP);
722631    +
722632    +***  Effect: PC_3 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_3 ;
722633    +_TEMP = PC_3 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_3 ;
722634    +_LP0 = _LP0 + (   -0.05555466068913 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05555466068913 * _TEMP);
722635    +
722636    +***  Effect: PC_4 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_4 ;
722637    +_TEMP = PC_4 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_4 ;
722638    +_LP0 = _LP0 + (    0.08002910027281 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08002910027281 * _TEMP);
722639    +
722640    +***  Effect: PC_5 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_5 ;
722641    +_TEMP = PC_5 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_5 ;
722642    +_LP0 = _LP0 + (   -0.19899205317242 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.19899205317242 * _TEMP);
722643    +
722644    +***  Effect: PC_6 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_6 ;
722645    +_TEMP = PC_6 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_6 ;
722646    +_LP0 = _LP0 + (    0.09331593245534 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09331593245534 * _TEMP);
722647    +
722648    +***  Effect: PC_7 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_7 ;
722649    +_TEMP = PC_7 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_7 ;
722650    +_LP0 = _LP0 + (    0.07953772701502 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07953772701502 * _TEMP);
722651    +
722652    +***  Effect: PC_8 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_8 ;
722653    +_TEMP = PC_8 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_8 ;
722654    +_LP0 = _LP0 + (    0.18036427134251 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18036427134251 * _TEMP);
722655    +
722656    +***  Effect: PC_9 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_9 ;
722657    +_TEMP = PC_9 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_9 ;
722658    +_LP0 = _LP0 + (    0.25346236398532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25346236398532 * _TEMP);
722659    +
722660    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
722661    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
722662    +_P0 = probnorm((   -1.53806789871552) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -1.53806789871552) + _LP0);
722663    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
722664    +
722665    +REG6DR1:
722666    +
722667    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG6DR1: *** Residuals;
722668    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
722669    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
722670    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
722671    +end;
MPRINT(EM_DIAGRAM):   end;
722672    +else do;
MPRINT(EM_DIAGRAM):   else do;
722673    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
722674    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
722675    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
722676    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
722677    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
722678    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
722679    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
722680    +   end;
MPRINT(EM_DIAGRAM):   end;
722681    +end;
MPRINT(EM_DIAGRAM):   end;
722682    +
722683    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
722684    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
722685    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
722686    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
722687    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
722688    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
722689    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
722690    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
722691    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
722692    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
722693    +end;
MPRINT(EM_DIAGRAM):   end;
722694    +I_DepVar = REG6DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG6DRF[_IY];
722695    +U_DepVar = REG6DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG6DRU[_IY];
722696    +
722697    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722698    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
722699    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
722700     run;

NOTE: DATA STEP view saved on file EMWS8.REG6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):   quit;
722701     quit;
722702     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
722703     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
722704     * Reg6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg6: Computing metadata for TRAIN data;
722705     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.REG6_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg6_TRAIN out=WORK.M17OZ7HM noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M17OZ7HM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M17OZ7HM(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M17OZ7HM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M17OZ7HM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NUT75U NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NUT75U;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NUT75U;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27YB4M4(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NUT75U;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NUT75U;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NUT75U;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NUT75U;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NUT75U;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg6";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'PC_1' 'PC_10' 'PC_11' 'PC_13' 'PC_14' 'PC_15' 
'PC_16' 'PC_17' 'PC_2' 'PC_3' 'PC_4' 'PC_5' 'PC_6' 'PC_7' 'PC_8' 'PC_9' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg6: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
723041     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
723042     set EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg6_EMINFO;
723043     where DATA='Reg6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
723044     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.REG6_EMINFO.
      WHERE (DATA='Reg6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

723045     data EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg6_EMINFO;
723046     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
723047     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
723048     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.REG6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
723052     run;
723053     data EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_EMINFO;
723054     set EMWS8.Reg6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg6_EMINFO WORK.MODELTEMP_INFO;
723055     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

723056     proc sort data = EMWS8.Reg6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg6_EMINFO NOTHREADS;
723057     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723058     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG6_EMINFO.
NOTE: The data set EMWS8.REG6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

723059     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
723060     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723061     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

723062     proc sort data = EMWS8.Reg6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
723063     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723064     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723065     data EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_EMINFO;
723066     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
723067     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

723069     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
723070     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
723071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
723072     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

NOTE: View EMWS8.REG6_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS8.REG6_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
