MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2C3UUBH 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2C3UUBH new;
MPRINT(EM_DIAGRAM):   run;
722465     proc transpose data=EMWS8.Reg6_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg6_EMESTIMATE out=WORK.TEMPREG;
722466     where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
722467     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.REG6_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 52 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

722468     proc transpose data=EMWS8.Reg6_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg6_MAPDS out=WORK.TEMPREG2;
722469     var "PC_1"n--"Year_Birth"n;
MPRINT(EM_DIAGRAM):   var "PC_1"n--"Year_Birth"n;
722470     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS8.REG6_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 18 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

722471     proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
722472     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
722473     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 52 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 52 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

722474     proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
722475     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
722476     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 18 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

722477     data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
722478     merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
722479     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
722480     if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
722481     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 52 observations read from the data set WORK.TEMPREG.
NOTE: There were 18 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

722482     data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
722483     length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
722484     set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
722485     i=1;
MPRINT(EM_DIAGRAM):   i=1;
722486     do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
722487     term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
722488     i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
722489     output;
MPRINT(EM_DIAGRAM):   output;
722490     end;
MPRINT(EM_DIAGRAM):   end;
722491     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 16 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

722492     proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
722493     by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
722494     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.TEMPREG3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 16 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

722495     filename emflow
722495   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
722496     *------------------------------------------------------------*;
722497     * Reg6: Scoring DATA data;
722498     *------------------------------------------------------------*;
722499     data EMWS8.Reg6_TRAIN
722500     / view=EMWS8.Reg6_TRAIN
722501     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_TRAIN / view=EMWS8.Reg6_TRAIN ;
722502     set EMWS8.PRINCOMP_TRAIN
722503     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
722504     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas.
722505    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722506    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
722507    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722508    +
722509    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
722510    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
722511    +
722512    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
722513    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
722514    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
722515    +array REG6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG6DRF [2] $12 _temporary_ ('1' '0' );
722516    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
722517    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
722518    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
722519    +ARRAY REG6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG6DRU[2] _TEMPORARY_ (1 0);
722520    +
722521    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
722522    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
722523    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722524    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
722525    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
722526    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
722527    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
722528    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722529    +end;
MPRINT(EM_DIAGRAM):   end;
722530    +else do;
MPRINT(EM_DIAGRAM):   else do;
722531    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
722532    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
722533    +   end;
MPRINT(EM_DIAGRAM):   end;
722534    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
722535    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
722536    +   end;
MPRINT(EM_DIAGRAM):   end;
722537    +   else do;
MPRINT(EM_DIAGRAM):   else do;
722538    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722539    +   end;
MPRINT(EM_DIAGRAM):   end;
722540    +end;
MPRINT(EM_DIAGRAM):   end;
722541    +
722542    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
722543    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
722544    +
722545    +*** Check PC_1 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_1 for missing values ;
722546    +if missing( PC_1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_1 ) then do;
722547    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722548    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722549    +end;
MPRINT(EM_DIAGRAM):   end;
722550    +
722551    +*** Check PC_10 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_10 for missing values ;
722552    +if missing( PC_10 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_10 ) then do;
722553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722555    +end;
MPRINT(EM_DIAGRAM):   end;
722556    +
722557    +*** Check PC_11 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_11 for missing values ;
722558    +if missing( PC_11 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_11 ) then do;
722559    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722560    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722561    +end;
MPRINT(EM_DIAGRAM):   end;
722562    +
722563    +*** Check PC_13 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_13 for missing values ;
722564    +if missing( PC_13 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_13 ) then do;
722565    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722566    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722567    +end;
MPRINT(EM_DIAGRAM):   end;
722568    +
722569    +*** Check PC_14 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_14 for missing values ;
722570    +if missing( PC_14 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_14 ) then do;
722571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722573    +end;
MPRINT(EM_DIAGRAM):   end;
722574    +
722575    +*** Check PC_15 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_15 for missing values ;
722576    +if missing( PC_15 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_15 ) then do;
722577    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722578    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722579    +end;
MPRINT(EM_DIAGRAM):   end;
722580    +
722581    +*** Check PC_16 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_16 for missing values ;
722582    +if missing( PC_16 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_16 ) then do;
722583    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722584    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722585    +end;
MPRINT(EM_DIAGRAM):   end;
722586    +
722587    +*** Check PC_17 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_17 for missing values ;
722588    +if missing( PC_17 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_17 ) then do;
722589    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722590    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722591    +end;
MPRINT(EM_DIAGRAM):   end;
722592    +
722593    +*** Check PC_2 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_2 for missing values ;
722594    +if missing( PC_2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_2 ) then do;
722595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722597    +end;
MPRINT(EM_DIAGRAM):   end;
722598    +
722599    +*** Check PC_3 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_3 for missing values ;
722600    +if missing( PC_3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_3 ) then do;
722601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722603    +end;
MPRINT(EM_DIAGRAM):   end;
722604    +
722605    +*** Check PC_4 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_4 for missing values ;
722606    +if missing( PC_4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_4 ) then do;
722607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722609    +end;
MPRINT(EM_DIAGRAM):   end;
722610    +
722611    +*** Check PC_5 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_5 for missing values ;
722612    +if missing( PC_5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_5 ) then do;
722613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722615    +end;
MPRINT(EM_DIAGRAM):   end;
722616    +
722617    +*** Check PC_6 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_6 for missing values ;
722618    +if missing( PC_6 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_6 ) then do;
722619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722621    +end;
MPRINT(EM_DIAGRAM):   end;
722622    +
722623    +*** Check PC_7 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_7 for missing values ;
722624    +if missing( PC_7 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_7 ) then do;
722625    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722626    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722627    +end;
MPRINT(EM_DIAGRAM):   end;
722628    +
722629    +*** Check PC_8 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_8 for missing values ;
722630    +if missing( PC_8 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_8 ) then do;
722631    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722632    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722633    +end;
MPRINT(EM_DIAGRAM):   end;
722634    +
722635    +*** Check PC_9 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_9 for missing values ;
722636    +if missing( PC_9 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_9 ) then do;
722637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722639    +end;
MPRINT(EM_DIAGRAM):   end;
722640    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
722641    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
722642    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
722643    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
722644    +   goto REG6DR1;
MPRINT(EM_DIAGRAM):   goto REG6DR1;
722645    +end;
MPRINT(EM_DIAGRAM):   end;
722646    +
722647    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
722648    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
722649    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
722650    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
722651    +
722652    +***  Effect: PC_1 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_1 ;
722653    +_TEMP = PC_1 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_1 ;
722654    +_LP0 = _LP0 + (    0.14662090342114 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.14662090342114 * _TEMP);
722655    +
722656    +***  Effect: PC_10 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_10 ;
722657    +_TEMP = PC_10 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_10 ;
722658    +_LP0 = _LP0 + (   -0.35750931372254 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.35750931372254 * _TEMP);
722659    +
722660    +***  Effect: PC_11 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_11 ;
722661    +_TEMP = PC_11 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_11 ;
722662    +_LP0 = _LP0 + (    0.11763722685971 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11763722685971 * _TEMP);
722663    +
722664    +***  Effect: PC_13 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_13 ;
722665    +_TEMP = PC_13 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_13 ;
722666    +_LP0 = _LP0 + (   -0.57016250198796 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57016250198796 * _TEMP);
722667    +
722668    +***  Effect: PC_14 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_14 ;
722669    +_TEMP = PC_14 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_14 ;
722670    +_LP0 = _LP0 + (    0.23526641771783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.23526641771783 * _TEMP);
722671    +
722672    +***  Effect: PC_15 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_15 ;
722673    +_TEMP = PC_15 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_15 ;
722674    +_LP0 = _LP0 + (    -0.1468551886766 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1468551886766 * _TEMP);
722675    +
722676    +***  Effect: PC_16 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_16 ;
722677    +_TEMP = PC_16 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_16 ;
722678    +_LP0 = _LP0 + (    0.15215028387571 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15215028387571 * _TEMP);
722679    +
722680    +***  Effect: PC_17 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_17 ;
722681    +_TEMP = PC_17 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_17 ;
722682    +_LP0 = _LP0 + (    -0.0770855195369 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0770855195369 * _TEMP);
722683    +
722684    +***  Effect: PC_2 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_2 ;
722685    +_TEMP = PC_2 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_2 ;
722686    +_LP0 = _LP0 + (    -0.2728635756473 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2728635756473 * _TEMP);
722687    +
722688    +***  Effect: PC_3 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_3 ;
722689    +_TEMP = PC_3 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_3 ;
722690    +_LP0 = _LP0 + (   -0.05555466068913 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05555466068913 * _TEMP);
722691    +
722692    +***  Effect: PC_4 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_4 ;
722693    +_TEMP = PC_4 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_4 ;
722694    +_LP0 = _LP0 + (    0.08002910027281 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08002910027281 * _TEMP);
722695    +
722696    +***  Effect: PC_5 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_5 ;
722697    +_TEMP = PC_5 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_5 ;
722698    +_LP0 = _LP0 + (   -0.19899205317242 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.19899205317242 * _TEMP);
722699    +
722700    +***  Effect: PC_6 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_6 ;
722701    +_TEMP = PC_6 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_6 ;
722702    +_LP0 = _LP0 + (    0.09331593245534 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09331593245534 * _TEMP);
722703    +
722704    +***  Effect: PC_7 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_7 ;
722705    +_TEMP = PC_7 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_7 ;
722706    +_LP0 = _LP0 + (    0.07953772701502 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07953772701502 * _TEMP);
722707    +
722708    +***  Effect: PC_8 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_8 ;
722709    +_TEMP = PC_8 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_8 ;
722710    +_LP0 = _LP0 + (    0.18036427134251 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18036427134251 * _TEMP);
722711    +
722712    +***  Effect: PC_9 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_9 ;
722713    +_TEMP = PC_9 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_9 ;
722714    +_LP0 = _LP0 + (    0.25346236398532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25346236398532 * _TEMP);
722715    +
722716    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
722717    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
722718    +_P0 = probnorm((   -1.53806789871552) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -1.53806789871552) + _LP0);
722719    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
722720    +
722721    +REG6DR1:
722722    +
722723    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG6DR1: *** Residuals;
722724    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
722725    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
722726    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
722727    +end;
MPRINT(EM_DIAGRAM):   end;
722728    +else do;
MPRINT(EM_DIAGRAM):   else do;
722729    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
722730    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
722731    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
722732    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
722733    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
722734    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
722735    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
722736    +   end;
MPRINT(EM_DIAGRAM):   end;
722737    +end;
MPRINT(EM_DIAGRAM):   end;
722738    +
722739    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
722740    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
722741    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
722742    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
722743    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
722744    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
722745    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
722746    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
722747    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
722748    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
722749    +end;
MPRINT(EM_DIAGRAM):   end;
722750    +I_DepVar = REG6DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG6DRF[_IY];
722751    +U_DepVar = REG6DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG6DRU[_IY];
722752    +
722753    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722754    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
722755    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
722756     run;

NOTE: DATA STEP view saved on file EMWS8.REG6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
722757     quit;
722758     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
722759     filename emflow
722759   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
722760     *------------------------------------------------------------*;
722761     * Reg6: Scoring VALIDATE data;
722762     *------------------------------------------------------------*;
722763     data EMWS8.Reg6_VALIDATE
722764     / view=EMWS8.Reg6_VALIDATE
722765     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_VALIDATE / view=EMWS8.Reg6_VALIDATE ;
722766     set EMWS8.PRINCOMP_VALIDATE
722767     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
722768     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg6\EMFLOWSCORE.sas.
722769    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722770    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
722771    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
722772    +
722773    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
722774    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
722775    +
722776    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
722777    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
722778    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
722779    +array REG6DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG6DRF [2] $12 _temporary_ ('1' '0' );
722780    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
722781    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
722782    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
722783    +ARRAY REG6DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG6DRU[2] _TEMPORARY_ (1 0);
722784    +
722785    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
722786    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
722787    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
722788    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
722789    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
722790    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
722791    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
722792    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722793    +end;
MPRINT(EM_DIAGRAM):   end;
722794    +else do;
MPRINT(EM_DIAGRAM):   else do;
722795    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
722796    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
722797    +   end;
MPRINT(EM_DIAGRAM):   end;
722798    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
722799    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
722800    +   end;
MPRINT(EM_DIAGRAM):   end;
722801    +   else do;
MPRINT(EM_DIAGRAM):   else do;
722802    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
722803    +   end;
MPRINT(EM_DIAGRAM):   end;
722804    +end;
MPRINT(EM_DIAGRAM):   end;
722805    +
722806    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
722807    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
722808    +
722809    +*** Check PC_1 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_1 for missing values ;
722810    +if missing( PC_1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_1 ) then do;
722811    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722812    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722813    +end;
MPRINT(EM_DIAGRAM):   end;
722814    +
722815    +*** Check PC_10 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_10 for missing values ;
722816    +if missing( PC_10 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_10 ) then do;
722817    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722818    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722819    +end;
MPRINT(EM_DIAGRAM):   end;
722820    +
722821    +*** Check PC_11 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_11 for missing values ;
722822    +if missing( PC_11 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_11 ) then do;
722823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722825    +end;
MPRINT(EM_DIAGRAM):   end;
722826    +
722827    +*** Check PC_13 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_13 for missing values ;
722828    +if missing( PC_13 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_13 ) then do;
722829    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722830    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722831    +end;
MPRINT(EM_DIAGRAM):   end;
722832    +
722833    +*** Check PC_14 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_14 for missing values ;
722834    +if missing( PC_14 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_14 ) then do;
722835    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722836    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722837    +end;
MPRINT(EM_DIAGRAM):   end;
722838    +
722839    +*** Check PC_15 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_15 for missing values ;
722840    +if missing( PC_15 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_15 ) then do;
722841    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722842    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722843    +end;
MPRINT(EM_DIAGRAM):   end;
722844    +
722845    +*** Check PC_16 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_16 for missing values ;
722846    +if missing( PC_16 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_16 ) then do;
722847    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722848    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722849    +end;
MPRINT(EM_DIAGRAM):   end;
722850    +
722851    +*** Check PC_17 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_17 for missing values ;
722852    +if missing( PC_17 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_17 ) then do;
722853    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722854    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722855    +end;
MPRINT(EM_DIAGRAM):   end;
722856    +
722857    +*** Check PC_2 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_2 for missing values ;
722858    +if missing( PC_2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_2 ) then do;
722859    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722860    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722861    +end;
MPRINT(EM_DIAGRAM):   end;
722862    +
722863    +*** Check PC_3 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_3 for missing values ;
722864    +if missing( PC_3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_3 ) then do;
722865    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722867    +end;
MPRINT(EM_DIAGRAM):   end;
722868    +
722869    +*** Check PC_4 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_4 for missing values ;
722870    +if missing( PC_4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_4 ) then do;
722871    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722872    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722873    +end;
MPRINT(EM_DIAGRAM):   end;
722874    +
722875    +*** Check PC_5 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_5 for missing values ;
722876    +if missing( PC_5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_5 ) then do;
722877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722879    +end;
MPRINT(EM_DIAGRAM):   end;
722880    +
722881    +*** Check PC_6 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_6 for missing values ;
722882    +if missing( PC_6 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_6 ) then do;
722883    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722884    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722885    +end;
MPRINT(EM_DIAGRAM):   end;
722886    +
722887    +*** Check PC_7 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_7 for missing values ;
722888    +if missing( PC_7 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_7 ) then do;
722889    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722890    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722891    +end;
MPRINT(EM_DIAGRAM):   end;
722892    +
722893    +*** Check PC_8 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_8 for missing values ;
722894    +if missing( PC_8 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_8 ) then do;
722895    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722896    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722897    +end;
MPRINT(EM_DIAGRAM):   end;
722898    +
722899    +*** Check PC_9 for missing values ;
MPRINT(EM_DIAGRAM):   *** Check PC_9 for missing values ;
722900    +if missing( PC_9 ) then do;
MPRINT(EM_DIAGRAM):   if missing( PC_9 ) then do;
722901    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
722902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
722903    +end;
MPRINT(EM_DIAGRAM):   end;
722904    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
722905    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
722906    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
722907    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
722908    +   goto REG6DR1;
MPRINT(EM_DIAGRAM):   goto REG6DR1;
722909    +end;
MPRINT(EM_DIAGRAM):   end;
722910    +
722911    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
722912    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
722913    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
722914    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
722915    +
722916    +***  Effect: PC_1 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_1 ;
722917    +_TEMP = PC_1 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_1 ;
722918    +_LP0 = _LP0 + (    0.14662090342114 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.14662090342114 * _TEMP);
722919    +
722920    +***  Effect: PC_10 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_10 ;
722921    +_TEMP = PC_10 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_10 ;
722922    +_LP0 = _LP0 + (   -0.35750931372254 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.35750931372254 * _TEMP);
722923    +
722924    +***  Effect: PC_11 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_11 ;
722925    +_TEMP = PC_11 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_11 ;
722926    +_LP0 = _LP0 + (    0.11763722685971 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11763722685971 * _TEMP);
722927    +
722928    +***  Effect: PC_13 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_13 ;
722929    +_TEMP = PC_13 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_13 ;
722930    +_LP0 = _LP0 + (   -0.57016250198796 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57016250198796 * _TEMP);
722931    +
722932    +***  Effect: PC_14 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_14 ;
722933    +_TEMP = PC_14 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_14 ;
722934    +_LP0 = _LP0 + (    0.23526641771783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.23526641771783 * _TEMP);
722935    +
722936    +***  Effect: PC_15 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_15 ;
722937    +_TEMP = PC_15 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_15 ;
722938    +_LP0 = _LP0 + (    -0.1468551886766 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.1468551886766 * _TEMP);
722939    +
722940    +***  Effect: PC_16 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_16 ;
722941    +_TEMP = PC_16 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_16 ;
722942    +_LP0 = _LP0 + (    0.15215028387571 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.15215028387571 * _TEMP);
722943    +
722944    +***  Effect: PC_17 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_17 ;
722945    +_TEMP = PC_17 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_17 ;
722946    +_LP0 = _LP0 + (    -0.0770855195369 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0770855195369 * _TEMP);
722947    +
722948    +***  Effect: PC_2 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_2 ;
722949    +_TEMP = PC_2 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_2 ;
722950    +_LP0 = _LP0 + (    -0.2728635756473 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2728635756473 * _TEMP);
722951    +
722952    +***  Effect: PC_3 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_3 ;
722953    +_TEMP = PC_3 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_3 ;
722954    +_LP0 = _LP0 + (   -0.05555466068913 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05555466068913 * _TEMP);
722955    +
722956    +***  Effect: PC_4 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_4 ;
722957    +_TEMP = PC_4 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_4 ;
722958    +_LP0 = _LP0 + (    0.08002910027281 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.08002910027281 * _TEMP);
722959    +
722960    +***  Effect: PC_5 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_5 ;
722961    +_TEMP = PC_5 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_5 ;
722962    +_LP0 = _LP0 + (   -0.19899205317242 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.19899205317242 * _TEMP);
722963    +
722964    +***  Effect: PC_6 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_6 ;
722965    +_TEMP = PC_6 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_6 ;
722966    +_LP0 = _LP0 + (    0.09331593245534 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09331593245534 * _TEMP);
722967    +
722968    +***  Effect: PC_7 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_7 ;
722969    +_TEMP = PC_7 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_7 ;
722970    +_LP0 = _LP0 + (    0.07953772701502 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07953772701502 * _TEMP);
722971    +
722972    +***  Effect: PC_8 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_8 ;
722973    +_TEMP = PC_8 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_8 ;
722974    +_LP0 = _LP0 + (    0.18036427134251 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18036427134251 * _TEMP);
722975    +
722976    +***  Effect: PC_9 ;
MPRINT(EM_DIAGRAM):   *** Effect: PC_9 ;
722977    +_TEMP = PC_9 ;
MPRINT(EM_DIAGRAM):   _TEMP = PC_9 ;
722978    +_LP0 = _LP0 + (    0.25346236398532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25346236398532 * _TEMP);
722979    +
722980    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
722981    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
722982    +_P0 = probnorm((   -1.53806789871552) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -1.53806789871552) + _LP0);
722983    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
722984    +
722985    +REG6DR1:
722986    +
722987    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG6DR1: *** Residuals;
722988    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
722989    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
722990    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
722991    +end;
MPRINT(EM_DIAGRAM):   end;
722992    +else do;
MPRINT(EM_DIAGRAM):   else do;
722993    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
722994    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
722995    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
722996    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
722997    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
722998    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
722999    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
723000    +   end;
MPRINT(EM_DIAGRAM):   end;
723001    +end;
MPRINT(EM_DIAGRAM):   end;
723002    +
723003    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
723004    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
723005    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
723006    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
723007    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
723008    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
723009    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
723010    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
723011    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
723012    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
723013    +end;
MPRINT(EM_DIAGRAM):   end;
723014    +I_DepVar = REG6DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG6DRF[_IY];
723015    +U_DepVar = REG6DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG6DRU[_IY];
723016    +
723017    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
723018    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
723019    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
723020     run;

NOTE: DATA STEP view saved on file EMWS8.REG6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
723021     quit;
723022     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
723023     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
723024     * Reg6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg6: Computing metadata for TRAIN data;
723025     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.REG6_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg6_TRAIN out=WORK.M21BEY3Q noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21BEY3Q;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M21BEY3Q(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21BEY3Q;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M21BEY3Q;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M062FRGA NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M062FRGA;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M062FRGA;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NQZAVA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M062FRGA;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M062FRGA;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M062FRGA;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M062FRGA;
MPRINT(EMADVISECOLUMNS):   set WORK.M062FRGA;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg6";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg6";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'PC_1' 'PC_10' 'PC_11' 'PC_13' 'PC_14' 'PC_15' 
'PC_16' 'PC_17' 'PC_2' 'PC_3' 'PC_4' 'PC_5' 'PC_6' 'PC_7' 'PC_8' 'PC_9' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg6: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
723361     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
723362     set EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg6_EMINFO;
723363     where DATA='Reg6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg6' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
723364     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.REG6_EMINFO.
      WHERE (DATA='Reg6') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723365     data EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg6_EMINFO;
723366     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
723367     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
723368     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.REG6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
723372     run;
723373     data EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_EMINFO;
723374     set EMWS8.Reg6_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg6_EMINFO WORK.MODELTEMP_INFO;
723375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG6_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723376     proc sort data = EMWS8.Reg6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg6_EMINFO NOTHREADS;
723377     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723378     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG6_EMINFO.
NOTE: The data set EMWS8.REG6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723379     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
723380     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723382     proc sort data = EMWS8.Reg6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
723383     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723384     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

723385     data EMWS8.Reg6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg6_EMINFO;
723386     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
723387     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
723388     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

723389     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
723390     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
723391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
723392     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.REG6_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.REG6_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
