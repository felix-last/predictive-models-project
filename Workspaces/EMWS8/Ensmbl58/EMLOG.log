*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                21.10 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O23_T2HG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O23_T2HG new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[86769] MAX=1 EXCEEDMAXVALUE='' )[86773] )[86767]
VALIDCHOICES=(CHOICE1='Y' )[86771] )[87055] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[86777]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[86781] )[86779] )[86775] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[86785]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[86791] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[86789] )[86787] )[86783] )[86765]
70035      proc freq data=EMWS8.Ensmbl58_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl58_VariableSet noprint;
70036      table ROLE*LEVEL/out=WORK.Ensmbl58META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl58META;
70037      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 76 observations read from the data set EMWS8.ENSMBL58_VARIABLESET.
NOTE: The data set WORK.ENSMBL58META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70038      proc print data=WORK.Ensmbl58META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl58META label noobs;
70039      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
70040      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
70040    ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
70040    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
70041      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
70042      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
70043      run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL58META.
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
70044      title10;
MPRINT(EM_DIAGRAM):   title10;
70045      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural43_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
70074      data WORK.Ensmbl58_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
70075      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
70076      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
70076    ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
70076    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
70077         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
70077    ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
70077    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
70078      set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
70079      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
70080      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
70081      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
70082      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
70083      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
70084      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
70085      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
70086      end;
MPRINT(EM_DIAGRAM):   end;
70087      output;
MPRINT(EM_DIAGRAM):   output;
70088      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL58_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
70089      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
70090      proc print data=WORK.Ensmbl58_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl58_EVENT noobs label;
70091      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
70092      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
70093      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
70094      run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL58_EVENT.
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
70095      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
70096      proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
70097      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
70098      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
70099      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
70099    ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
70099    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
70100      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
70101      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
70102      run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
70103      title10;
MPRINT(EM_DIAGRAM):   title10;
70104      %let groupid =;
70105      %let endGroupid =;
70106      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70107      set EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_EMINFO;
70108      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
70108    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
70109      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
70110      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
70111      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70112      %let groupid =;
70113      %let endGroupid =;
70114      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70115      set EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO;
70116      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
70116    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
70117      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
70118      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
70119      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
70120      %let groupid =;
70121      %let endGroupid =;
70122      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70123      set EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO;
70124      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
70124    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
70125      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
70126      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
70127      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70128      %let groupid =;
70129      %let endGroupid =;
70130      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70131      set EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO;
70132      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
70132    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
70133      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
70134      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
70135      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70136      %let groupid =;
70137      %let endGroupid =;
70138      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70139      set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
70140      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
70140    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
70141      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
70142      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
70143      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70144      %let groupid =;
70145      %let endGroupid =;
70146      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70147      set EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO;
70148      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
70148    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
70149      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
70150      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
70151      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70152      %let groupid =;
70153      %let endGroupid =;
70154      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70155      set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
70156      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
70156    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
70157      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
70158      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
70159      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70160      data WORK.Ensmbl58;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58;
70161      length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
70162      label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
70162    ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
70163      nodeid="AUTONEURAL44";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL44";
70164      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
70165      output;
MPRINT(EM_DIAGRAM):   output;
70166      nodeid="AUTONEURAL45";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL45";
70167      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
70168      output;
MPRINT(EM_DIAGRAM):   output;
70169      nodeid="AUTONEURAL47";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL47";
70170      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
70171      output;
MPRINT(EM_DIAGRAM):   output;
70172      nodeid="AUTONEURAL41";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL41";
70173      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
70174      output;
MPRINT(EM_DIAGRAM):   output;
70175      nodeid="AUTONEURAL42";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL42";
70176      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
70177      output;
MPRINT(EM_DIAGRAM):   output;
70178      nodeid="AUTONEURAL43";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL43";
70179      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
70180      output;
MPRINT(EM_DIAGRAM):   output;
70181      nodeid="AUTONEURAL46";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL46";
70182      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
70183      output;
MPRINT(EM_DIAGRAM):   output;
70184      ;
MPRINT(EM_DIAGRAM):   ;
70185      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL58 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
70186      title;
MPRINT(EM_DIAGRAM):   title;
70187      proc print data=WORK.Ensmbl58 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl58 label noobs;
70188      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
70189      title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
70190      run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL58.
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70191      title9;
MPRINT(EM_DIAGRAM):   title9;
70192      title10;
MPRINT(EM_DIAGRAM):   title10;
70193      data WORK.M0__T1J7;
MPRINT(EM_DIAGRAM):    data WORK.M0__T1J7;
70194      set WORK.M0__T1J7;
MPRINT(EM_DIAGRAM):   set WORK.M0__T1J7;
70195      where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
70196      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0__T1J7.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M0__T1J7 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70197      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
70198      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
70199      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70200      %macro DMDBClass;
70201          DepVar(DESC)
70202      %mend DMDBClass;
70203      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70204      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
70205      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70206      %macro DMDBVar;
70207
70208      %mend DMDBVar;
70209      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70210      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
70211      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70212      proc dmdb batch data=EMWS8.AutoNeural44_TRAIN
70213      dmdbcat=WORK.EM_DMDB
70214      maxlevel = 513
70215      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural44_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
70216      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
70217      target
70218      DepVar
70219      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
70220      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL44_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL44_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
70221      quit;
70222      *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3TCX7XM
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3TCX7XM new;
MPRINT(EM_DIAGRAM):   run;
70324      filename emflow
70324    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring AUTONEURAL44_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70325      *------------------------------------------------------------*;
70326      * Ensmbl58: Scoring AUTONEURAL44_TRAIN data;
70327      *------------------------------------------------------------*;
70328      data EMWS8.Ensmbl58_TRAIN
70329      / view=EMWS8.Ensmbl58_TRAIN
70330      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_TRAIN / view=EMWS8.Ensmbl58_TRAIN ;
70331      set EMWS8.AutoNeural44_TRAIN
70332      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_TRAIN ;
70333      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas.
70334     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70335     +* Ensmbl58: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Combine model for DepVar;
70336     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70337     +* Ensmbl58: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 1 of 7;
70338     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70339     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70340     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
70341     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
70342     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
70343     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70344     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70345     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
70346     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
70347     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
70348     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70349     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70350     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
70351     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
70352     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
70353     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70354     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70355     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
70356     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
70357     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
70358     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70359     +
70360     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
70361     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
70361    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
70362     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
70363     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
70364     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
70365     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
70366     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
70367     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70368     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
70369     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
70370     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
70371     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70372     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70373     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
70374     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70375     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
70376     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
70377     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
70378     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70379     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
70380     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
70381     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
70382     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70383     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70384     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
70385     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
70386     +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
70387     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70388     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70389     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
70390     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
70391     +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
70392     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70393     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70394     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
70395     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70396     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
70397     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
70398     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
70399     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
70400     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
70401     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
70402     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
70403     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
70404     +LENGTH _WARN_ $4
70405     +      F_DepVar  $ 12
70406     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
70407     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
70408     +
70409     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
70410     +
70411     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
70412     +
70413     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
70414     +
70415     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
70416     +
70417     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
70418     +
70419     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
70420     +
70421     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
70422     +
70423     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
70424     +
70425     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
70426     +
70427     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
70428     +
70429     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
70430     +
70431     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
70432     +
70433     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
70434     +
70435     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
70436     +
70437     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
70438     +
70439     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
70440     +
70441     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
70442     +
70443     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
70444     +
70445     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
70446     +
70447     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
70448     +
70449     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
70450     +
70451     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
70452     +
70453     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
70454     +
70455     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
70456     +
70457     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
70458     +
70459     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
70460     +
70461     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
70462     +
70463     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
70464     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
70465     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
70466     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70467     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
70468     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
70469     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
70470     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
70471     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
70472     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70473     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70474     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70475     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70476     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70477     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70478     +end;
MPRINT(EM_DIAGRAM):   end;
70479     +else do;
MPRINT(EM_DIAGRAM):   else do;
70480     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
70481     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
70482     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70483     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
70484     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
70485     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
70486     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
70487     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
70488     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70489     +         end;
MPRINT(EM_DIAGRAM):   end;
70490     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70491     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
70492     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
70493     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70494     +            end;
MPRINT(EM_DIAGRAM):   end;
70495     +         end;
MPRINT(EM_DIAGRAM):   end;
70496     +      end;
MPRINT(EM_DIAGRAM):   end;
70497     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70498     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
70499     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
70500     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70501     +         end;
MPRINT(EM_DIAGRAM):   end;
70502     +      end;
MPRINT(EM_DIAGRAM):   end;
70503     +   end;
MPRINT(EM_DIAGRAM):   end;
70504     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70505     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
70506     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
70507     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70508     +      end;
MPRINT(EM_DIAGRAM):   end;
70509     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70510     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
70511     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
70512     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
70513     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
70514     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
70515     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70516     +         end;
MPRINT(EM_DIAGRAM):   end;
70517     +      end;
MPRINT(EM_DIAGRAM):   end;
70518     +   end;
MPRINT(EM_DIAGRAM):   end;
70519     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
70520     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70521     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70522     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70523     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70524     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70525     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70526     +   end;
MPRINT(EM_DIAGRAM):   end;
70527     +end;
MPRINT(EM_DIAGRAM):   end;
70528     +
70529     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70530     +*** Checking missing input Interval
70531     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
70532     +
70533     +IF NMISS(
70534     +   AcceptedCmpTotal ,
70535     +   Frq ,
70536     +   Income ,
70537     +   Mnt ,
70538     +   MntGoldProds ,
70539     +   MntMeatProducts ,
70540     +   NumCatalogPurchases ,
70541     +   NumDealsPurchases ,
70542     +   NumWebVisitsMonth ,
70543     +   RFMstat ,
70544     +   Recency ,
70545     +   Teenhome ,
70546     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
70547     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
70548     +
70549     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70550     +END;
MPRINT(EM_DIAGRAM):   END;
70551     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70552     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
70553     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70554     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70555     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70556     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
70557     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70558     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70559     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
70560     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70561     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
70562     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
70563     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
70564     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
70565     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
70566     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70567     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
70568     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70569     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
70570     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70571     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70572     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70573     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
70574     +END;
MPRINT(EM_DIAGRAM):   END;
70575     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70576     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
70577     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70578     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
70579     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
70580     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70581     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
70582     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70583     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
70584     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
70585     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
70586     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70587     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
70588     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
70589     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
70590     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
70591     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
70592     +   ELSE S_NumCatalogPurchases
70593     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
70594     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
70595     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
70596     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70597     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
70598     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
70599     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70600     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
70601     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
70602     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70603     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
70604     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70605     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
70606     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70607     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
70608     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
70609     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
70610     +END;
MPRINT(EM_DIAGRAM):   END;
70611     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70612     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
70613     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70614     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70615     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
70616     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70617     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70618     +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
70619     +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
70620     +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
70621     +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
70622     +          +    -1.41682724778123 * S_NumCatalogPurchases
70623     +          +    -0.81806751697478 * S_NumDealsPurchases
70624     +          +     0.13721060582485 * S_NumWebVisitsMonth
70625     +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
70626     +        S_Recency  +    -0.11154618858027 * S_Teenhome
70627     +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 *
S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 *
S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 *
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 *
S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency +
-0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
70628     +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
70629     +          +    -0.42475372885131 * Marital_StatusMarried
70630     +          +     0.12884500504295 * Marital_StatusSingle
70631     +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced +
-0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle +
-0.15810267147538 * Marital_StatusTogether ;
70632     +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
70633     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
70634     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
70635     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
70636     +END;
MPRINT(EM_DIAGRAM):   END;
70637     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70638     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
70639     +END;
MPRINT(EM_DIAGRAM):   END;
70640     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70641     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
70642     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70643     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70644     +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
70645     +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
70646     +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
70647     +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
70648     +          +    -1.27566927607767 * S_NumCatalogPurchases
70649     +          +    -0.30700705450077 * S_NumDealsPurchases
70650     +          +    -1.10002183072059 * S_NumWebVisitsMonth
70651     +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
70652     +        S_Recency  +    -0.46996209026516 * S_Teenhome
70653     +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 *
S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 *
S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 *
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 *
S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency +
-0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
70654     +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
70655     +          +    -0.32389187879499 * Marital_StatusMarried
70656     +          +     0.77856411154011 * Marital_StatusSingle
70657     +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced +
-0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle +
-0.63289071596123 * Marital_StatusTogether ;
70658     +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
70659     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
70660     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
70661     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
70662     +END;
MPRINT(EM_DIAGRAM):   END;
70663     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70664     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
70665     +END;
MPRINT(EM_DIAGRAM):   END;
70666     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70667     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
70668     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70669     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70670     +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
70671     +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
70672     +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
70673     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
70674     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
70675     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
70676     +END;
MPRINT(EM_DIAGRAM):   END;
70677     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70678     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
70679     +END;
MPRINT(EM_DIAGRAM):   END;
70680     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70681     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
70682     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70683     +
70684     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
70685     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
70686     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
70687     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
70688     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
70689     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70690     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
70691     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
70692     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
70693     +end;
MPRINT(EM_DIAGRAM):   end;
70694     +else do;
MPRINT(EM_DIAGRAM):   else do;
70695     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
70696     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
70697     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
70698     +   end;
MPRINT(EM_DIAGRAM):   end;
70699     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
70700     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
70701     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
70702     +   end;
MPRINT(EM_DIAGRAM):   end;
70703     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70704     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
70705     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
70706     +   end;
MPRINT(EM_DIAGRAM):   end;
70707     +end;
MPRINT(EM_DIAGRAM):   end;
70708     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70709     +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
70710     +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
70711     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
70712     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
70713     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
70714     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
70715     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
70716     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
70717     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
70718     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
70719     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
70720     +END;
MPRINT(EM_DIAGRAM):   END;
70721     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70722     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
70723     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
70724     +END;
MPRINT(EM_DIAGRAM):   END;
70725     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
70726     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
70727     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
70728     +END;
MPRINT(EM_DIAGRAM):   END;
70729     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
70730     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
70731     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
70732     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
70733     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
70734     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
70735     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
70736     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70737     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
70738     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70739     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
70740     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
70741     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
70742     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
70743     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
70744     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
70745     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
70746     +END;
MPRINT(EM_DIAGRAM):   END;
70747     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70748     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
70749     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70750     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
70751     +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
70752     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70753     +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
70754     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70755     +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
70756     +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
70757     +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
70758     +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
70759     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70760     +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
70761     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70762     +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
70763     +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
70764     +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
70765     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70766     +* Ensmbl58: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 2 of 7;
70767     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70768     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70769     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
70770     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
70771     +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
70772     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70773     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70774     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
70775     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70776     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
70777     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
70778     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
70779     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
70780     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
70781     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
70782     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
70783     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
70784     +LENGTH _WARN_ $4
70785     +      F_DepVar  $ 12
70786     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
70787     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
70788     +
70789     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
70790     +
70791     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
70792     +
70793     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
70794     +
70795     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
70796     +
70797     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
70798     +
70799     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
70800     +
70801     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
70802     +
70803     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
70804     +
70805     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
70806     +
70807     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
70808     +
70809     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
70810     +
70811     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
70812     +
70813     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
70814     +
70815     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
70816     +
70817     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
70818     +
70819     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
70820     +
70821     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
70822     +
70823     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
70824     +
70825     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
70826     +
70827     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
70828     +
70829     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
70830     +
70831     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
70832     +
70833     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
70834     +
70835     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
70836     +
70837     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
70838     +
70839     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
70840     +
70841     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
70842     +
70843     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
70844     +
70845     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
70846     +
70847     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
70848     +
70849     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
70850     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
70851     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
70852     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70853     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
70854     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
70855     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
70856     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
70857     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
70858     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70859     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70860     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70861     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70862     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70863     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70864     +end;
MPRINT(EM_DIAGRAM):   end;
70865     +else do;
MPRINT(EM_DIAGRAM):   else do;
70866     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
70867     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
70868     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70869     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
70870     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
70871     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
70872     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
70873     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
70874     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70875     +         end;
MPRINT(EM_DIAGRAM):   end;
70876     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70877     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
70878     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
70879     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70880     +            end;
MPRINT(EM_DIAGRAM):   end;
70881     +         end;
MPRINT(EM_DIAGRAM):   end;
70882     +      end;
MPRINT(EM_DIAGRAM):   end;
70883     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70884     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
70885     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
70886     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70887     +         end;
MPRINT(EM_DIAGRAM):   end;
70888     +      end;
MPRINT(EM_DIAGRAM):   end;
70889     +   end;
MPRINT(EM_DIAGRAM):   end;
70890     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70891     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
70892     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
70893     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70894     +      end;
MPRINT(EM_DIAGRAM):   end;
70895     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70896     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
70897     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
70898     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
70899     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
70900     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
70901     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70902     +         end;
MPRINT(EM_DIAGRAM):   end;
70903     +      end;
MPRINT(EM_DIAGRAM):   end;
70904     +   end;
MPRINT(EM_DIAGRAM):   end;
70905     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
70906     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70907     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70908     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70909     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70910     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70911     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70912     +   end;
MPRINT(EM_DIAGRAM):   end;
70913     +end;
MPRINT(EM_DIAGRAM):   end;
70914     +
70915     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70916     +*** Checking missing input Interval
70917     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
70918     +
70919     +IF NMISS(
70920     +   AcceptedCmpTotal ,
70921     +   Frq ,
70922     +   Income ,
70923     +   Mnt ,
70924     +   MntGoldProds ,
70925     +   MntMeatProducts ,
70926     +   NumCatalogPurchases ,
70927     +   NumDealsPurchases ,
70928     +   NumWebVisitsMonth ,
70929     +   RFMstat ,
70930     +   Recency ,
70931     +   Teenhome ,
70932     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
70933     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
70934     +
70935     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70936     +END;
MPRINT(EM_DIAGRAM):   END;
70937     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70938     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
70939     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70940     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70941     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70942     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
70943     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70944     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70945     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
70946     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70947     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
70948     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
70949     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
70950     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
70951     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
70952     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70953     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
70954     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70955     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
70956     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70957     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70958     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70959     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
70960     +END;
MPRINT(EM_DIAGRAM):   END;
70961     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70962     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
70963     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70964     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
70965     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
70966     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70967     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
70968     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70969     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
70970     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
70971     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
70972     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70973     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
70974     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
70975     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
70976     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
70977     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
70978     +   ELSE S_NumCatalogPurchases
70979     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
70980     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
70981     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
70982     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70983     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
70984     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
70985     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70986     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
70987     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
70988     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70989     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
70990     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70991     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
70992     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70993     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
70994     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
70995     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
70996     +END;
MPRINT(EM_DIAGRAM):   END;
70997     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70998     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
70999     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71000     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71001     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
71002     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71003     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71004     +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
71005     +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
71006     +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
71007     +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
71008     +          +    -0.17075976331442 * S_NumCatalogPurchases
71009     +          +     0.11936859656737 * S_NumDealsPurchases
71010     +          +    -0.02241344557322 * S_NumWebVisitsMonth
71011     +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
71012     +        S_Recency  +     0.15041197329983 * S_Teenhome
71013     +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 *
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 *
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 *
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 *
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency +
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
71014     +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
71015     +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
71016     +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
71017     +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
71018     +          +     -0.1082096588215 * S_NumCatalogPurchases
71019     +          +    -0.35286072202398 * S_NumDealsPurchases
71020     +          +     0.41909763538671 * S_NumWebVisitsMonth
71021     +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
71022     +        S_Recency  +     0.03657184300378 * S_Teenhome
71023     +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 *
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 *
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 *
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 *
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency +
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
71024     +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
71025     +          +     0.35890266446407 * Marital_StatusMarried
71026     +          +    -0.32958224268654 * Marital_StatusSingle
71027     +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced +
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle +
0.26093411772209 * Marital_StatusTogether ;
71028     +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
71029     +          +    -0.02828904025667 * Marital_StatusMarried
71030     +          +      0.2062300465945 * Marital_StatusSingle
71031     +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced +
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle +
-0.11283173230117 * Marital_StatusTogether ;
71032     +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
71033     +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
71034     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
71035     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
71036     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
71037     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
71038     +END;
MPRINT(EM_DIAGRAM):   END;
71039     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71040     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
71041     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
71042     +END;
MPRINT(EM_DIAGRAM):   END;
71043     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71044     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
71045     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71046     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71047     +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
71048     +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
71049     +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
71050     +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
71051     +          +    -0.01120232190428 * S_NumCatalogPurchases
71052     +          +     0.08335061407191 * S_NumDealsPurchases
71053     +          +     0.19045617784308 * S_NumWebVisitsMonth
71054     +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
71055     +        S_Recency  +    -0.01223664611486 * S_Teenhome
71056     +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 *
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 *
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 *
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 *
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency +
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
71057     +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
71058     +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
71059     +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
71060     +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
71061     +          +     0.05405710367459 * S_NumCatalogPurchases
71062     +          +     0.05779108423435 * S_NumDealsPurchases
71063     +          +     0.06578830114376 * S_NumWebVisitsMonth
71064     +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
71065     +        S_Recency  +     0.07188455936346 * S_Teenhome
71066     +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 *
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 *
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 *
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 *
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency +
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
71067     +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
71068     +          +     -0.0971208757038 * Marital_StatusMarried
71069     +          +    -0.07250288479873 * Marital_StatusSingle
71070     +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced +
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle +
-0.09370040203357 * Marital_StatusTogether ;
71071     +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
71072     +          +     0.21091057941446 * Marital_StatusMarried
71073     +          +    -0.10578923343752 * Marital_StatusSingle
71074     +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced +
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle +
0.14340624257864 * Marital_StatusTogether ;
71075     +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
71076     +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
71077     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
71078     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
71079     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
71080     +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
71081     +END;
MPRINT(EM_DIAGRAM):   END;
71082     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71083     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
71084     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
71085     +END;
MPRINT(EM_DIAGRAM):   END;
71086     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71087     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
71088     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71089     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71090     +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
71091     +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
71092     +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 *
H1x2_2 ;
71093     +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
71094     +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
71095     +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
71096     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
71097     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
71098     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
71099     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
71100     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
71101     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
71102     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
71103     +END;
MPRINT(EM_DIAGRAM):   END;
71104     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71105     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
71106     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
71107     +END;
MPRINT(EM_DIAGRAM):   END;
71108     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71109     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
71110     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71111     +
71112     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
71113     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
71114     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
71115     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
71116     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
71117     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71118     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
71119     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
71120     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
71121     +end;
MPRINT(EM_DIAGRAM):   end;
71122     +else do;
MPRINT(EM_DIAGRAM):   else do;
71123     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
71124     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
71125     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
71126     +   end;
MPRINT(EM_DIAGRAM):   end;
71127     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
71128     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
71129     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
71130     +   end;
MPRINT(EM_DIAGRAM):   end;
71131     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71132     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
71133     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
71134     +   end;
MPRINT(EM_DIAGRAM):   end;
71135     +end;
MPRINT(EM_DIAGRAM):   end;
71136     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71137     +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
71138     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
71139     +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
71140     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
71141     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
71142     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
71143     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
71144     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
71145     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
71146     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
71147     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
71148     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
71149     +END;
MPRINT(EM_DIAGRAM):   END;
71150     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71151     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
71152     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
71153     +END;
MPRINT(EM_DIAGRAM):   END;
71154     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
71155     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
71156     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
71157     +END;
MPRINT(EM_DIAGRAM):   END;
71158     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
71159     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
71160     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
71161     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
71162     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
71163     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
71164     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
71165     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71166     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
71167     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71168     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
71169     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
71170     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
71171     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
71172     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
71173     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
71174     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
71175     +END;
MPRINT(EM_DIAGRAM):   END;
71176     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71177     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
71178     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71179     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
71180     +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
71181     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71182     +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
71183     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71184     +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
71185     +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
71186     +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
71187     +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
71188     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71189     +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
71190     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71191     +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
71192     +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
71193     +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
71194     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71195     +* Ensmbl58: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 3 of 7;
71196     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71197     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71198     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
71199     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
71200     +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
71201     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71202     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71203     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
71204     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71205     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
71206     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
71207     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
71208     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
71209     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
71210     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
71211     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
71212     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
71213     +LENGTH _WARN_ $4
71214     +      F_DepVar  $ 12
71215     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
71216     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
71217     +
71218     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
71219     +
71220     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
71221     +
71222     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
71223     +
71224     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
71225     +
71226     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
71227     +
71228     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
71229     +
71230     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
71231     +
71232     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
71233     +
71234     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
71235     +
71236     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
71237     +
71238     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
71239     +
71240     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
71241     +
71242     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
71243     +
71244     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
71245     +
71246     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
71247     +
71248     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
71249     +
71250     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
71251     +
71252     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
71253     +
71254     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
71255     +
71256     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
71257     +
71258     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
71259     +
71260     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
71261     +
71262     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
71263     +
71264     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
71265     +
71266     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
71267     +
71268     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
71269     +
71270     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
71271     +
71272     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
71273     +
71274     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
71275     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
71276     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
71277     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71278     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
71279     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
71280     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
71281     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
71282     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
71283     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71284     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71285     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71286     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71287     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71288     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71289     +end;
MPRINT(EM_DIAGRAM):   end;
71290     +else do;
MPRINT(EM_DIAGRAM):   else do;
71291     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
71292     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
71293     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71294     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
71295     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
71296     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
71297     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
71298     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
71299     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71300     +         end;
MPRINT(EM_DIAGRAM):   end;
71301     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71302     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
71303     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
71304     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71305     +            end;
MPRINT(EM_DIAGRAM):   end;
71306     +         end;
MPRINT(EM_DIAGRAM):   end;
71307     +      end;
MPRINT(EM_DIAGRAM):   end;
71308     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71309     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
71310     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
71311     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71312     +         end;
MPRINT(EM_DIAGRAM):   end;
71313     +      end;
MPRINT(EM_DIAGRAM):   end;
71314     +   end;
MPRINT(EM_DIAGRAM):   end;
71315     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71316     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
71317     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
71318     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71319     +      end;
MPRINT(EM_DIAGRAM):   end;
71320     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71321     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
71322     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
71323     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
71324     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
71325     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
71326     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71327     +         end;
MPRINT(EM_DIAGRAM):   end;
71328     +      end;
MPRINT(EM_DIAGRAM):   end;
71329     +   end;
MPRINT(EM_DIAGRAM):   end;
71330     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
71331     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71332     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71333     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71334     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71335     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71336     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71337     +   end;
MPRINT(EM_DIAGRAM):   end;
71338     +end;
MPRINT(EM_DIAGRAM):   end;
71339     +
71340     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71341     +*** Checking missing input Interval
71342     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
71343     +
71344     +IF NMISS(
71345     +   AcceptedCmpTotal ,
71346     +   Frq ,
71347     +   Income ,
71348     +   Mnt ,
71349     +   MntGoldProds ,
71350     +   MntMeatProducts ,
71351     +   NumCatalogPurchases ,
71352     +   NumDealsPurchases ,
71353     +   NumWebVisitsMonth ,
71354     +   RFMstat ,
71355     +   Recency ,
71356     +   Teenhome ,
71357     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
71358     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
71359     +
71360     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71361     +END;
MPRINT(EM_DIAGRAM):   END;
71362     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71363     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
71364     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71365     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71366     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71367     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
71368     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71369     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71370     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
71371     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71372     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
71373     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
71374     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
71375     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
71376     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
71377     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71378     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
71379     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71380     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
71381     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71382     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71383     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71384     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
71385     +END;
MPRINT(EM_DIAGRAM):   END;
71386     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71387     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
71388     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71389     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
71390     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
71391     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71392     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
71393     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71394     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
71395     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
71396     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
71397     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71398     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
71399     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
71400     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
71401     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
71402     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
71403     +   ELSE S_NumCatalogPurchases
71404     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
71405     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
71406     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
71407     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71408     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
71409     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
71410     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71411     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
71412     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
71413     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71414     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
71415     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71416     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
71417     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71418     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
71419     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
71420     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
71421     +END;
MPRINT(EM_DIAGRAM):   END;
71422     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71423     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
71424     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71425     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71426     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
71427     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71428     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71429     +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
71430     +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
71431     +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
71432     +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
71433     +          +     0.96941096546276 * S_NumCatalogPurchases
71434     +          +    -0.78169009272221 * S_NumDealsPurchases
71435     +          +     2.46694552614806 * S_NumWebVisitsMonth
71436     +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
71437     +        S_Recency  +    -1.09760548427625 * S_Teenhome
71438     +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
71439     +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
71440     +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
71441     +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
71442     +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
71443     +          +    -2.01779739147185 * S_NumCatalogPurchases
71444     +          +     -2.6507470301089 * S_NumDealsPurchases
71445     +          +     0.43757499676531 * S_NumWebVisitsMonth
71446     +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
71447     +        S_Recency  +    -0.45321912120397 * S_Teenhome
71448     +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
71449     +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
71450     +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
71451     +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
71452     +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
71453     +          +      3.9474982958259 * S_NumCatalogPurchases
71454     +          +       0.376468804707 * S_NumDealsPurchases
71455     +          +     3.31501013882439 * S_NumWebVisitsMonth
71456     +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
71457     +        S_Recency  +    -1.57729700618019 * S_Teenhome
71458     +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
71459     +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
71460     +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
71461     +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
71462     +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
71463     +          +    -1.47064436222345 * S_NumCatalogPurchases
71464     +          +    -0.47773085529503 * S_NumDealsPurchases
71465     +          +     0.20028656323595 * S_NumWebVisitsMonth
71466     +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
71467     +        S_Recency  +    -0.11530372179295 * S_Teenhome
71468     +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
71469     +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
71470     +          +    -1.68634246986018 * Marital_StatusMarried
71471     +          +     0.61674763327859 * Marital_StatusSingle
71472     +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
71473     +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
71474     +          +    -0.63821523628652 * Marital_StatusMarried
71475     +          +    -1.40431603473643 * Marital_StatusSingle
71476     +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
71477     +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
71478     +          +    -2.86773035723606 * Marital_StatusMarried
71479     +          +     2.52900517550184 * Marital_StatusSingle
71480     +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
71481     +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
71482     +          +    -0.89880425714459 * Marital_StatusMarried
71483     +          +     0.97652284934456 * Marital_StatusSingle
71484     +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
71485     +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
71486     +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
71487     +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
71488     +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
71489     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
71490     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
71491     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
71492     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
71493     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
71494     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
71495     +END;
MPRINT(EM_DIAGRAM):   END;
71496     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71497     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
71498     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
71499     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
71500     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
71501     +END;
MPRINT(EM_DIAGRAM):   END;
71502     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71503     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
71504     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71505     +
71506     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
71507     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
71508     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
71509     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
71510     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
71511     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71512     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
71513     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
71514     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
71515     +end;
MPRINT(EM_DIAGRAM):   end;
71516     +else do;
MPRINT(EM_DIAGRAM):   else do;
71517     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
71518     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
71519     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
71520     +   end;
MPRINT(EM_DIAGRAM):   end;
71521     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
71522     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
71523     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
71524     +   end;
MPRINT(EM_DIAGRAM):   end;
71525     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71526     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
71527     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
71528     +   end;
MPRINT(EM_DIAGRAM):   end;
71529     +end;
MPRINT(EM_DIAGRAM):   end;
71530     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71531     +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
71532     +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
71533     +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
71534     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
71535     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
71536     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
71537     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
71538     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
71539     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
71540     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
71541     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
71542     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
71543     +END;
MPRINT(EM_DIAGRAM):   END;
71544     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71545     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
71546     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
71547     +END;
MPRINT(EM_DIAGRAM):   END;
71548     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
71549     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
71550     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
71551     +END;
MPRINT(EM_DIAGRAM):   END;
71552     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
71553     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
71554     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
71555     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
71556     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
71557     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
71558     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
71559     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71560     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
71561     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71562     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
71563     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
71564     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
71565     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
71566     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
71567     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
71568     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
71569     +END;
MPRINT(EM_DIAGRAM):   END;
71570     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71571     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
71572     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71573     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
71574     +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
71575     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71576     +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
71577     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71578     +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
71579     +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
71580     +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
71581     +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
71582     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71583     +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
71584     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71585     +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
71586     +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
71587     +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
71588     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71589     +* Ensmbl58: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 4 of 7;
71590     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71591     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71592     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
71593     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
71594     +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
71595     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71596     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71597     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
71598     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71599     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
71600     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
71601     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
71602     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
71603     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
71604     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
71605     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
71606     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
71607     +LENGTH _WARN_ $4
71608     +      F_DepVar  $ 12
71609     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
71610     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
71611     +
71612     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
71613     +
71614     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
71615     +
71616     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
71617     +
71618     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
71619     +
71620     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
71621     +
71622     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
71623     +
71624     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
71625     +
71626     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
71627     +
71628     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
71629     +
71630     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
71631     +
71632     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
71633     +
71634     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
71635     +
71636     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
71637     +
71638     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
71639     +
71640     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
71641     +
71642     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
71643     +
71644     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
71645     +
71646     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
71647     +
71648     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
71649     +
71650     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
71651     +
71652     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
71653     +
71654     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
71655     +
71656     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
71657     +
71658     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
71659     +
71660     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
71661     +
71662     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
71663     +
71664     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
71665     +
71666     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
71667     +
71668     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
71669     +
71670     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
71671     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
71672     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
71673     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71674     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
71675     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
71676     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
71677     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
71678     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
71679     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71680     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71681     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71682     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71683     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71684     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71685     +end;
MPRINT(EM_DIAGRAM):   end;
71686     +else do;
MPRINT(EM_DIAGRAM):   else do;
71687     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
71688     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
71689     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71690     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
71691     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
71692     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
71693     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
71694     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
71695     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71696     +         end;
MPRINT(EM_DIAGRAM):   end;
71697     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71698     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
71699     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
71700     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71701     +            end;
MPRINT(EM_DIAGRAM):   end;
71702     +         end;
MPRINT(EM_DIAGRAM):   end;
71703     +      end;
MPRINT(EM_DIAGRAM):   end;
71704     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71705     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
71706     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
71707     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71708     +         end;
MPRINT(EM_DIAGRAM):   end;
71709     +      end;
MPRINT(EM_DIAGRAM):   end;
71710     +   end;
MPRINT(EM_DIAGRAM):   end;
71711     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71712     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
71713     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
71714     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71715     +      end;
MPRINT(EM_DIAGRAM):   end;
71716     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71717     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
71718     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
71719     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
71720     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
71721     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
71722     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71723     +         end;
MPRINT(EM_DIAGRAM):   end;
71724     +      end;
MPRINT(EM_DIAGRAM):   end;
71725     +   end;
MPRINT(EM_DIAGRAM):   end;
71726     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
71727     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71728     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71729     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71730     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71731     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71732     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71733     +   end;
MPRINT(EM_DIAGRAM):   end;
71734     +end;
MPRINT(EM_DIAGRAM):   end;
71735     +
71736     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71737     +*** Checking missing input Interval
71738     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
71739     +
71740     +IF NMISS(
71741     +   AcceptedCmpTotal ,
71742     +   Frq ,
71743     +   Income ,
71744     +   Mnt ,
71745     +   MntGoldProds ,
71746     +   MntMeatProducts ,
71747     +   NumCatalogPurchases ,
71748     +   NumDealsPurchases ,
71749     +   NumWebVisitsMonth ,
71750     +   RFMstat ,
71751     +   Recency ,
71752     +   Teenhome ,
71753     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
71754     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
71755     +
71756     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71757     +END;
MPRINT(EM_DIAGRAM):   END;
71758     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71759     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
71760     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71761     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71762     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71763     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
71764     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71765     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71766     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
71767     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71768     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
71769     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
71770     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
71771     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
71772     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
71773     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71774     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
71775     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71776     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
71777     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71778     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71779     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71780     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
71781     +END;
MPRINT(EM_DIAGRAM):   END;
71782     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71783     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
71784     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71785     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
71786     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
71787     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71788     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
71789     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71790     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
71791     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
71792     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
71793     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71794     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
71795     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
71796     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
71797     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
71798     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
71799     +   ELSE S_NumCatalogPurchases
71800     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
71801     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
71802     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
71803     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71804     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
71805     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
71806     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71807     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
71808     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
71809     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71810     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
71811     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71812     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
71813     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71814     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
71815     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
71816     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
71817     +END;
MPRINT(EM_DIAGRAM):   END;
71818     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71819     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
71820     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71821     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71822     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
71823     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71824     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71825     +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
71826     +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
71827     +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
71828     +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
71829     +          +     0.18813452089487 * S_NumCatalogPurchases
71830     +          +     0.07572009513796 * S_NumDealsPurchases
71831     +          +     0.26290613719398 * S_NumWebVisitsMonth
71832     +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
71833     +        S_Recency  +    -0.08184869022013 * S_Teenhome
71834     +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 *
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 *
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 *
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 *
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency +
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
71835     +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
71836     +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
71837     +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
71838     +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
71839     +          +      0.3860900431806 * S_NumCatalogPurchases
71840     +          +    -0.05602869666287 * S_NumDealsPurchases
71841     +          +     0.25751125196672 * S_NumWebVisitsMonth
71842     +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
71843     +        S_Recency  +     0.00740928227007 * S_Teenhome
71844     +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 *
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 *
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 *
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 *
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency +
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
71845     +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
71846     +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
71847     +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
71848     +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
71849     +          +     0.20017136343834 * S_NumCatalogPurchases
71850     +          +      0.4177949842415 * S_NumDealsPurchases
71851     +          +     0.12267139708832 * S_NumWebVisitsMonth
71852     +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
71853     +        S_Recency  +    -0.04165775695782 * S_Teenhome
71854     +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 *
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 *
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 *
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 *
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency +
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
71855     +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
71856     +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
71857     +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
71858     +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
71859     +          +    -0.41475045310519 * S_NumCatalogPurchases
71860     +          +     0.05270183882345 * S_NumDealsPurchases
71861     +          +     -0.3411138782759 * S_NumWebVisitsMonth
71862     +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
71863     +        S_Recency  +     0.09131411279492 * S_Teenhome
71864     +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 *
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 *
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 *
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 *
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency +
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
71865     +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
71866     +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
71867     +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
71868     +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
71869     +          +     0.28201604995327 * S_NumCatalogPurchases
71870     +          +     -0.0106712941301 * S_NumDealsPurchases
71871     +          +     0.44937825968958 * S_NumWebVisitsMonth
71872     +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
71873     +        S_Recency  +    -0.07776231003236 * S_Teenhome
71874     +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 *
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 *
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 *
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 *
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency +
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
71875     +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
71876     +          +     -0.2248578245828 * Marital_StatusMarried
71877     +          +     0.07509958702397 * Marital_StatusSingle
71878     +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced +
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle +
-0.12991422082545 * Marital_StatusTogether ;
71879     +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
71880     +          +     0.45662921783631 * Marital_StatusMarried
71881     +          +     -0.7587900494362 * Marital_StatusSingle
71882     +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced +
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle +
0.91918379082777 * Marital_StatusTogether ;
71883     +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
71884     +          +     0.48232640763102 * Marital_StatusMarried
71885     +          +    -0.26767355443511 * Marital_StatusSingle
71886     +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced +
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle +
0.26207298280723 * Marital_StatusTogether ;
71887     +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
71888     +          +       0.692510056964 * Marital_StatusMarried
71889     +          +    -0.62467969689335 * Marital_StatusSingle
71890     +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced +
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle +
0.57377256791387 * Marital_StatusTogether ;
71891     +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
71892     +          +    -0.12414433690654 * Marital_StatusMarried
71893     +          +     0.01287765001755 * Marital_StatusSingle
71894     +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced +
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle +
-0.08087882377532 * Marital_StatusTogether ;
71895     +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
71896     +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
71897     +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
71898     +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
71899     +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
71900     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
71901     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
71902     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
71903     +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
71904     +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
71905     +END;
MPRINT(EM_DIAGRAM):   END;
71906     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71907     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
71908     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
71909     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
71910     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
71911     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
71912     +END;
MPRINT(EM_DIAGRAM):   END;
71913     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71914     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
71915     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71916     +
71917     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
71918     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
71919     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
71920     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
71921     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
71922     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71923     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
71924     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
71925     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
71926     +end;
MPRINT(EM_DIAGRAM):   end;
71927     +else do;
MPRINT(EM_DIAGRAM):   else do;
71928     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
71929     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
71930     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
71931     +   end;
MPRINT(EM_DIAGRAM):   end;
71932     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
71933     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
71934     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
71935     +   end;
MPRINT(EM_DIAGRAM):   end;
71936     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71937     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
71938     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
71939     +   end;
MPRINT(EM_DIAGRAM):   end;
71940     +end;
MPRINT(EM_DIAGRAM):   end;
71941     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71942     +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
71943     +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
71944     +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 +
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
71945     +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
71946     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
71947     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
71948     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
71949     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
71950     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
71951     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
71952     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
71953     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
71954     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
71955     +END;
MPRINT(EM_DIAGRAM):   END;
71956     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71957     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
71958     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
71959     +END;
MPRINT(EM_DIAGRAM):   END;
71960     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
71961     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
71962     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
71963     +END;
MPRINT(EM_DIAGRAM):   END;
71964     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
71965     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
71966     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
71967     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
71968     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
71969     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
71970     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
71971     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71972     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
71973     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71974     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
71975     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
71976     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
71977     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
71978     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
71979     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
71980     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
71981     +END;
MPRINT(EM_DIAGRAM):   END;
71982     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71983     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
71984     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71985     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
71986     +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
71987     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71988     +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
71989     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71990     +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
71991     +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
71992     +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
71993     +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
71994     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71995     +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
71996     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71997     +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
71998     +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
71999     +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
72000     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72001     +* Ensmbl58: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 5 of 7;
72002     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72003     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72004     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
72005     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
72006     +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
72007     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72008     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72009     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
72010     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72011     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
72012     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
72013     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
72014     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
72015     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
72016     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
72017     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
72018     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
72019     +LENGTH _WARN_ $4
72020     +      F_DepVar  $ 12
72021     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
72022     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
72023     +
72024     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
72025     +
72026     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
72027     +
72028     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
72029     +
72030     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
72031     +
72032     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
72033     +
72034     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
72035     +
72036     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
72037     +
72038     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
72039     +
72040     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
72041     +
72042     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
72043     +
72044     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
72045     +
72046     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
72047     +
72048     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
72049     +
72050     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
72051     +
72052     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
72053     +
72054     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
72055     +
72056     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
72057     +
72058     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
72059     +
72060     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
72061     +
72062     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
72063     +
72064     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
72065     +
72066     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
72067     +
72068     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
72069     +
72070     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
72071     +
72072     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
72073     +
72074     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
72075     +
72076     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
72077     +
72078     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
72079     +
72080     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
72081     +
72082     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
72083     +
72084     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
72085     +
72086     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
72087     +
72088     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
72089     +
72090     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
The SAS System
 
72091     +
72092     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
72093     +
72094     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
72095     +
72096     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
72097     +
72098     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
72099     +
72100     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
72101     +
72102     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
72103     +
72104     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
72105     +
72106     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
72107     +
72108     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
72109     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
72110     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
72111     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
72112     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
72113     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
72114     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
72115     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
72116     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
72117     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72118     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72119     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72120     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72121     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72122     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72123     +end;
MPRINT(EM_DIAGRAM):   end;
72124     +else do;
MPRINT(EM_DIAGRAM):   else do;
72125     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
72126     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
72127     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72128     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
72129     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
72130     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
72131     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
72132     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
72133     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72134     +         end;
MPRINT(EM_DIAGRAM):   end;
72135     +         else do;
MPRINT(EM_DIAGRAM):   else do;
72136     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
72137     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
72138     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72139     +            end;
MPRINT(EM_DIAGRAM):   end;
72140     +         end;
MPRINT(EM_DIAGRAM):   end;
72141     +      end;
MPRINT(EM_DIAGRAM):   end;
72142     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72143     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
72144     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
72145     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72146     +         end;
MPRINT(EM_DIAGRAM):   end;
72147     +      end;
MPRINT(EM_DIAGRAM):   end;
72148     +   end;
MPRINT(EM_DIAGRAM):   end;
72149     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72150     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
72151     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
72152     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72153     +      end;
MPRINT(EM_DIAGRAM):   end;
72154     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72155     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
72156     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
72157     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
72158     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
72159     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
72160     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72161     +         end;
MPRINT(EM_DIAGRAM):   end;
72162     +      end;
MPRINT(EM_DIAGRAM):   end;
72163     +   end;
MPRINT(EM_DIAGRAM):   end;
72164     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
72165     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72166     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72167     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72168     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72169     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72170     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72171     +   end;
MPRINT(EM_DIAGRAM):   end;
72172     +end;
MPRINT(EM_DIAGRAM):   end;
72173     +
72174     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72175     +*** Checking missing input Interval
72176     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
72177     +
72178     +IF NMISS(
72179     +   AcceptedCmpTotal ,
72180     +   Frq ,
72181     +   Income ,
72182     +   Mnt ,
72183     +   MntGoldProds ,
72184     +   MntMeatProducts ,
72185     +   NumCatalogPurchases ,
72186     +   NumDealsPurchases ,
72187     +   NumWebVisitsMonth ,
72188     +   RFMstat ,
72189     +   Recency ,
72190     +   Teenhome ,
72191     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
72192     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
72193     +
72194     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72195     +END;
MPRINT(EM_DIAGRAM):   END;
72196     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72197     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
72198     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72199     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72200     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72201     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
72202     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72203     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72204     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
72205     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72206     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
72207     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
72208     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
72209     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
72210     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
72211     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72212     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
72213     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72214     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
72215     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72216     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72217     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72218     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
72219     +END;
MPRINT(EM_DIAGRAM):   END;
72220     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72221     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
72222     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72223     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
72224     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
72225     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72226     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
72227     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72228     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
72229     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
72230     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
72231     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72232     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
72233     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
72234     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
72235     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
72236     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
72237     +   ELSE S_NumCatalogPurchases
72238     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
72239     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
72240     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
72241     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72242     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
72243     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
72244     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72245     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
72246     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
72247     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72248     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
72249     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72250     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
72251     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72252     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
72253     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
72254     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
72255     +END;
MPRINT(EM_DIAGRAM):   END;
72256     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72257     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
72258     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72259     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72260     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
72261     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72262     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72263     +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
72264     +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
72265     +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
72266     +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
72267     +          +    -12.1201262560598 * S_NumCatalogPurchases
72268     +          +    -7.64265449386917 * S_NumDealsPurchases
72269     +          +     -0.8154661733691 * S_NumWebVisitsMonth
72270     +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
72271     +        S_Recency  +     3.79010135100643 * S_Teenhome
72272     +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
72273     +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
72274     +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
72275     +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
72276     +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
72277     +          +    -5.64377068696071 * S_NumCatalogPurchases
72278     +          +       1.315880732417 * S_NumDealsPurchases
72279     +          +    -7.12689902819995 * S_NumWebVisitsMonth
72280     +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
72281     +        S_Recency  +     2.42655161118896 * S_Teenhome
72282     +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
72283     +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
72284     +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
72285     +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
72286     +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
72287     +          +    -7.71653347900468 * S_NumCatalogPurchases
72288     +          +    -2.29382480020793 * S_NumDealsPurchases
72289     +          +    -3.92350308032578 * S_NumWebVisitsMonth
72290     +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
72291     +        S_Recency  +     1.88830044274756 * S_Teenhome
72292     +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
72293     +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
72294     +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
72295     +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
72296     +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
72297     +          +     0.50178849511862 * S_NumCatalogPurchases
72298     +          +     3.33915340676542 * S_NumDealsPurchases
72299     +          +     2.99171363234904 * S_NumWebVisitsMonth
72300     +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
72301     +        S_Recency  +     1.84778865722952 * S_Teenhome
72302     +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
72303     +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
72304     +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
72305     +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
72306     +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
72307     +          +    -5.23430097842472 * S_NumCatalogPurchases
72308     +          +    -1.25644862473488 * S_NumDealsPurchases
72309     +          +     -3.0943337340276 * S_NumWebVisitsMonth
72310     +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
72311     +        S_Recency  +     1.52557456336148 * S_Teenhome
72312     +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
72313     +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
72314     +          +     5.12496303990022 * Marital_StatusMarried
72315     +          +    -7.61364369696186 * Marital_StatusSingle
72316     +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
72317     +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
72318     +          +     7.65332274940308 * Marital_StatusMarried
72319     +          +    -5.13332947688313 * Marital_StatusSingle
72320     +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
72321     +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
72322     +          +     7.95162959069432 * Marital_StatusMarried
72323     +          +    -6.10797604390061 * Marital_StatusSingle
72324     +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
72325     +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
72326     +          +     5.45977621823616 * Marital_StatusMarried
72327     +          +    -10.3527985391218 * Marital_StatusSingle
72328     +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
72329     +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
72330     +          +     8.15909630638185 * Marital_StatusMarried
72331     +          +    -5.88497367282032 * Marital_StatusSingle
72332     +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
72333     +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
72334     +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
72335     +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
72336     +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
72337     +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
72338     +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
72339     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
72340     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
72341     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
72342     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
72343     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
72344     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
72345     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
72346     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
72347     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
72348     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
72349     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
72350     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
72351     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
72352     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
72353     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
72354     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
72355     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
72356     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
72357     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
72358     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
72359     +END;
MPRINT(EM_DIAGRAM):   END;
72360     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72361     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
72362     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
72363     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
72364     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
72365     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
72366     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
72367     +END;
MPRINT(EM_DIAGRAM):   END;
72368     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72369     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
72370     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72371     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72372     +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
72373     +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
72374     +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
72375     +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
72376     +          +      0.8747576336553 * S_NumCatalogPurchases
72377     +          +    -0.23551985234916 * S_NumDealsPurchases
72378     +          +     0.83901499225112 * S_NumWebVisitsMonth
72379     +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
72380     +        S_Recency  +    -0.38340703993831 * S_Teenhome
72381     +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
72382     +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
72383     +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
72384     +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
72385     +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
72386     +          +    -0.99107054453387 * S_NumCatalogPurchases
72387     +          +    -0.68379823410573 * S_NumDealsPurchases
72388     +          +    -1.67939872609259 * S_NumWebVisitsMonth
72389     +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
72390     +        S_Recency  +    -1.65033346710833 * S_Teenhome
72391     +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
72392     +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
72393     +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
72394     +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
72395     +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
72396     +          +      1.4506330104932 * S_NumCatalogPurchases
72397     +          +     0.20085283861849 * S_NumDealsPurchases
72398     +          +     2.37974383924154 * S_NumWebVisitsMonth
72399     +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
72400     +        S_Recency  +     0.60726269989058 * S_Teenhome
72401     +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
72402     +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
72403     +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
72404     +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
72405     +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
72406     +          +    -0.79952426911069 * S_NumCatalogPurchases
72407     +          +    -0.70571099772216 * S_NumDealsPurchases
72408     +          +    -0.32158728049114 * S_NumWebVisitsMonth
72409     +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
72410     +        S_Recency  +     2.29389047813725 * S_Teenhome
72411     +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
72412     +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
72413     +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
72414     +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
72415     +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
72416     +          +    -0.41491605544255 * S_NumCatalogPurchases
72417     +          +     0.49374983047507 * S_NumDealsPurchases
72418     +          +    -1.38692718220359 * S_NumWebVisitsMonth
72419     +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
72420     +        S_Recency  +     1.29605991841828 * S_Teenhome
72421     +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
72422     +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
72423     +          +    -1.29227303709115 * Marital_StatusMarried
72424     +          +     0.71446782242025 * Marital_StatusSingle
72425     +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
72426     +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
72427     +          +      2.0815223604364 * Marital_StatusMarried
72428     +          +     0.79462013188709 * Marital_StatusSingle
72429     +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
72430     +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
72431     +          +     0.44769683627357 * Marital_StatusMarried
72432     +          +     1.09957357551209 * Marital_StatusSingle
72433     +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
72434     +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
72435     +          +    -0.71096069683657 * Marital_StatusMarried
72436     +          +    -0.46849808497503 * Marital_StatusSingle
72437     +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
72438     +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
72439     +          +     0.21000014809177 * Marital_StatusMarried
72440     +          +    -1.05959388759825 * Marital_StatusSingle
72441     +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
72442     +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
72443     +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
72444     +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
72445     +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
72446     +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
72447     +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
72448     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
72449     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
72450     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
72451     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
72452     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
72453     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
72454     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
72455     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
72456     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
72457     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
72458     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
72459     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
72460     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
72461     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
72462     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
72463     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
72464     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
72465     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
72466     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
72467     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
72468     +END;
MPRINT(EM_DIAGRAM):   END;
72469     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72470     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
72471     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
72472     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
72473     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
72474     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
72475     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
72476     +END;
MPRINT(EM_DIAGRAM):   END;
72477     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72478     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
72479     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72480     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72481     +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
72482     +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
72483     +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
72484     +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
72485     +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
72486     +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
72487     +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
72488     +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
72489     +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
72490     +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
72491     +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
72492     +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
72493     +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
72494     +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
72495     +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
72496     +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
72497     +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
72498     +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
72499     +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
72500     +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
72501     +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
72502     +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
72503     +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
72504     +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
72505     +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
72506     +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
72507     +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
72508     +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
72509     +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
72510     +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
72511     +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
72512     +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
72513     +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
72514     +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
72515     +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
72516     +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
72517     +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
72518     +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
72519     +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
72520     +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
72521     +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
72522     +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
72523     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
72524     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
72525     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
72526     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
72527     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
72528     +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
72529     +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
72530     +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
72531     +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
72532     +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
72533     +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
72534     +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
72535     +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
72536     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
72537     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
72538     +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
72539     +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
72540     +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
72541     +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
72542     +END;
MPRINT(EM_DIAGRAM):   END;
72543     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72544     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
72545     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
72546     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
72547     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
72548     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
72549     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
72550     +END;
MPRINT(EM_DIAGRAM):   END;
72551     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72552     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
72553     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72554     +
72555     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
72556     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
72557     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
72558     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
72559     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
72560     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72561     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
72562     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
72563     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
72564     +end;
MPRINT(EM_DIAGRAM):   end;
72565     +else do;
MPRINT(EM_DIAGRAM):   else do;
72566     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
72567     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
72568     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
72569     +   end;
MPRINT(EM_DIAGRAM):   end;
72570     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
72571     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
72572     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
72573     +   end;
MPRINT(EM_DIAGRAM):   end;
72574     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72575     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
72576     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
72577     +   end;
MPRINT(EM_DIAGRAM):   end;
72578     +end;
MPRINT(EM_DIAGRAM):   end;
72579     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72580     +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
72581     +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
72582     +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
72583     +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
72584     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
72585     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
72586     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
72587     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
72588     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
72589     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
72590     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
72591     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
72592     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
72593     +END;
MPRINT(EM_DIAGRAM):   END;
72594     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72595     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
72596     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
72597     +END;
MPRINT(EM_DIAGRAM):   END;
72598     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
72599     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
72600     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
72601     +END;
MPRINT(EM_DIAGRAM):   END;
72602     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
72603     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
72604     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
72605     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
72606     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
72607     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
72608     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
72609     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72610     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
72611     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72612     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
72613     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
72614     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
72615     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
72616     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
72617     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
72618     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
72619     +END;
MPRINT(EM_DIAGRAM):   END;
72620     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
72621     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
72622     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
72623     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
72624     +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
72625     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72626     +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
72627     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72628     +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
72629     +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
72630     +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
72631     +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
72632     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72633     +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
72634     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72635     +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
72636     +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
72637     +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
72638     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72639     +* Ensmbl58: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 6 of 7;
72640     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72641     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72642     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
72643     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
72644     +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
72645     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72646     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72647     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
72648     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72649     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
72650     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
72651     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
72652     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
72653     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
72654     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
72655     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
72656     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
72657     +LENGTH _WARN_ $4
72658     +      F_DepVar  $ 12
72659     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
72660     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
72661     +
72662     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
72663     +
72664     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
72665     +
72666     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
72667     +
72668     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
72669     +
72670     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
72671     +
72672     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
72673     +
72674     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
72675     +
72676     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
72677     +
72678     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
72679     +
72680     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
72681     +
72682     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
72683     +
72684     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
72685     +
72686     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
72687     +
72688     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
72689     +
72690     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
72691     +
72692     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
72693     +
72694     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
72695     +
72696     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
72697     +
72698     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
72699     +
72700     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
72701     +
72702     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
72703     +
72704     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
72705     +
72706     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
72707     +
72708     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
72709     +
72710     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
72711     +
72712     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
72713     +
72714     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
72715     +
72716     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
72717     +
72718     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
72719     +
72720     +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
72721     +
72722     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
72723     +
72724     +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
72725     +
72726     +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
72727     +
72728     +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
72729     +
72730     +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
72731     +
72732     +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
72733     +
72734     +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
72735     +
72736     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
72737     +
72738     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
72739     +
72740     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
72741     +
72742     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
72743     +
72744     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
72745     +
72746     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
72747     +
72748     +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
72749     +
72750     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
72751     +
72752     +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
72753     +
72754     +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
72755     +
72756     +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
72757     +
72758     +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
72759     +
72760     +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
72761     +
72762     +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
72763     +
72764     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
72765     +
72766     +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
72767     +
72768     +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
72769     +
72770     +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
72771     +
72772     +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
72773     +
72774     +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
72775     +
72776     +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
72777     +
72778     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
72779     +
72780     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
72781     +
72782     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
72783     +
72784     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
72785     +
72786     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
72787     +
72788     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
72789     +
72790     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
72791     +
72792     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
72793     +
72794     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
72795     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
72796     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
72797     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
72798     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
72799     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
72800     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
72801     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
72802     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
72803     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72804     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72805     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72806     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72807     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72808     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72809     +end;
MPRINT(EM_DIAGRAM):   end;
72810     +else do;
MPRINT(EM_DIAGRAM):   else do;
72811     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
72812     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
72813     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72814     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
72815     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
72816     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
72817     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
72818     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
72819     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72820     +         end;
MPRINT(EM_DIAGRAM):   end;
72821     +         else do;
MPRINT(EM_DIAGRAM):   else do;
72822     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
72823     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
72824     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72825     +            end;
MPRINT(EM_DIAGRAM):   end;
72826     +         end;
MPRINT(EM_DIAGRAM):   end;
72827     +      end;
MPRINT(EM_DIAGRAM):   end;
72828     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72829     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
72830     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
72831     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72832     +         end;
MPRINT(EM_DIAGRAM):   end;
72833     +      end;
MPRINT(EM_DIAGRAM):   end;
72834     +   end;
MPRINT(EM_DIAGRAM):   end;
72835     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72836     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
72837     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
72838     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72839     +      end;
MPRINT(EM_DIAGRAM):   end;
72840     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72841     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
72842     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
72843     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
72844     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
72845     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
72846     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72847     +         end;
MPRINT(EM_DIAGRAM):   end;
72848     +      end;
MPRINT(EM_DIAGRAM):   end;
72849     +   end;
MPRINT(EM_DIAGRAM):   end;
72850     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
72851     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72852     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72853     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72854     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72855     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72856     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72857     +   end;
MPRINT(EM_DIAGRAM):   end;
72858     +end;
MPRINT(EM_DIAGRAM):   end;
72859     +
72860     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72861     +*** Checking missing input Interval
72862     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
72863     +
72864     +IF NMISS(
72865     +   AcceptedCmpTotal ,
72866     +   Frq ,
72867     +   Income ,
72868     +   Mnt ,
72869     +   MntGoldProds ,
72870     +   MntMeatProducts ,
72871     +   NumCatalogPurchases ,
72872     +   NumDealsPurchases ,
72873     +   NumWebVisitsMonth ,
72874     +   RFMstat ,
72875     +   Recency ,
72876     +   Teenhome ,
72877     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
72878     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
72879     +
72880     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72881     +END;
MPRINT(EM_DIAGRAM):   END;
72882     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72883     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
72884     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72885     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72886     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72887     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
72888     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72889     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72890     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
72891     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72892     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
72893     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
72894     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
72895     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
72896     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
72897     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72898     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
72899     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72900     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
72901     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72902     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72903     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72904     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
72905     +END;
MPRINT(EM_DIAGRAM):   END;
72906     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72907     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
72908     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72909     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
72910     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
72911     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72912     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
72913     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72914     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
72915     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
72916     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
72917     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72918     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
72919     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
72920     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
72921     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
72922     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
72923     +   ELSE S_NumCatalogPurchases
72924     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
72925     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
72926     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
72927     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72928     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
72929     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
72930     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72931     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
72932     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
72933     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72934     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
72935     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72936     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
72937     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72938     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
72939     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
72940     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
72941     +END;
MPRINT(EM_DIAGRAM):   END;
72942     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72943     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
72944     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72945     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72946     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
72947     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72948     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72949     +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
72950     +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
72951     +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
72952     +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
72953     +          +    -0.82528424139262 * S_NumCatalogPurchases
72954     +          +      0.5929046965244 * S_NumDealsPurchases
72955     +          +    -0.52362488197384 * S_NumWebVisitsMonth
72956     +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
72957     +        S_Recency  +    -0.83670225777249 * S_Teenhome
72958     +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
72959     +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
72960     +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
72961     +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
72962     +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
72963     +          +    -0.60117742307807 * S_NumCatalogPurchases
72964     +          +     1.09806082321711 * S_NumDealsPurchases
72965     +          +     1.26617704720444 * S_NumWebVisitsMonth
72966     +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
72967     +        S_Recency  +     -0.2630764341314 * S_Teenhome
72968     +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
72969     +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
72970     +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
72971     +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
72972     +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
72973     +          +     1.63075268570383 * S_NumCatalogPurchases
72974     +          +     0.62057902628545 * S_NumDealsPurchases
72975     +          +     1.85944172136218 * S_NumWebVisitsMonth
72976     +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
72977     +        S_Recency  +    -0.78663308544854 * S_Teenhome
72978     +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
72979     +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
72980     +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
72981     +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
72982     +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
72983     +          +    -2.59032878085972 * S_NumCatalogPurchases
72984     +          +    -0.44146008176644 * S_NumDealsPurchases
72985     +          +     1.16377649939583 * S_NumWebVisitsMonth
72986     +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
72987     +        S_Recency  +    -0.44721505258044 * S_Teenhome
72988     +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
72989     +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
72990     +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
72991     +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
72992     +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
72993     +          +    -2.88423926492169 * S_NumCatalogPurchases
72994     +          +     0.76448279454687 * S_NumDealsPurchases
72995     +          +     0.63782718366339 * S_NumWebVisitsMonth
72996     +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
72997     +        S_Recency  +     0.19809045233143 * S_Teenhome
72998     +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
72999     +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
73000     +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
73001     +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
73002     +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
73003     +          +     1.71243370379543 * S_NumCatalogPurchases
73004     +          +     1.59034024362028 * S_NumDealsPurchases
73005     +          +     2.43090724707282 * S_NumWebVisitsMonth
73006     +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
73007     +        S_Recency  +    -1.20398234836557 * S_Teenhome
73008     +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
73009     +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
73010     +          +     1.90782989914192 * Marital_StatusMarried
73011     +          +    -1.16189886119693 * Marital_StatusSingle
73012     +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
73013     +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
73014     +          +     0.30468777490799 * Marital_StatusMarried
73015     +          +     0.61978761938746 * Marital_StatusSingle
73016     +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
73017     +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
73018     +          +    -1.73477859605124 * Marital_StatusMarried
73019     +          +     1.32595981126289 * Marital_StatusSingle
73020     +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
73021     +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
73022     +          +     0.06077392213964 * Marital_StatusMarried
73023     +          +     0.21115279121703 * Marital_StatusSingle
73024     +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
73025     +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
73026     +          +    -0.24067068377767 * Marital_StatusMarried
73027     +          +      0.2728964145401 * Marital_StatusSingle
73028     +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
73029     +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
73030     +          +    -0.15640287278595 * Marital_StatusMarried
73031     +          +     0.54159395450762 * Marital_StatusSingle
73032     +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
73033     +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
73034     +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
73035     +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
73036     +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
73037     +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
73038     +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
73039     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
73040     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
73041     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
73042     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
73043     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
73044     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
73045     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
73046     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
73047     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
73048     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
73049     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
73050     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
73051     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
73052     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
73053     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
73054     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
73055     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
73056     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
73057     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
73058     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
73059     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
73060     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
73061     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
73062     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
73063     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
73064     +END;
MPRINT(EM_DIAGRAM):   END;
73065     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73066     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
73067     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
73068     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
73069     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
73070     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
73071     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
73072     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
73073     +END;
MPRINT(EM_DIAGRAM):   END;
73074     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73075     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
73076     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73077     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73078     +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
73079     +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
73080     +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
73081     +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
73082     +          +     0.14209124492657 * S_NumCatalogPurchases
73083     +          +    -1.31625106509803 * S_NumDealsPurchases
73084     +          +     2.35745588368331 * S_NumWebVisitsMonth
73085     +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
73086     +        S_Recency  +     1.23527100408525 * S_Teenhome
73087     +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
73088     +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
73089     +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
73090     +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
73091     +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
73092     +          +     1.18605040958794 * S_NumCatalogPurchases
73093     +          +    -0.89798157472835 * S_NumDealsPurchases
73094     +          +    -0.09236646871049 * S_NumWebVisitsMonth
73095     +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
73096     +        S_Recency  +    -0.50770218335102 * S_Teenhome
73097     +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
73098     +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
73099     +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
73100     +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
73101     +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
73102     +          +    -1.53424308314822 * S_NumCatalogPurchases
73103     +          +    -0.80590323269981 * S_NumDealsPurchases
73104     +          +    -1.40104490662303 * S_NumWebVisitsMonth
73105     +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
73106     +        S_Recency  +     0.96086280467056 * S_Teenhome
73107     +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
73108     +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
73109     +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
73110     +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
73111     +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
73112     +          +    -1.25862219948587 * S_NumCatalogPurchases
73113     +          +     1.95015982914109 * S_NumDealsPurchases
73114     +          +     0.64320281589594 * S_NumWebVisitsMonth
73115     +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
73116     +        S_Recency  +    -0.00184949563812 * S_Teenhome
73117     +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
73118     +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
73119     +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
73120     +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
73121     +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
73122     +          +     0.30573893169917 * S_NumCatalogPurchases
73123     +          +     0.93169788380491 * S_NumDealsPurchases
73124     +          +     0.04516037232248 * S_NumWebVisitsMonth
73125     +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
73126     +        S_Recency  +      0.1429120113072 * S_Teenhome
73127     +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
73128     +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
73129     +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
73130     +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
73131     +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
73132     +          +      0.2704422632168 * S_NumCatalogPurchases
73133     +          +      2.3389342094366 * S_NumDealsPurchases
73134     +          +     0.01076302858809 * S_NumWebVisitsMonth
73135     +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
73136     +        S_Recency  +     0.68455094392125 * S_Teenhome
73137     +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
73138     +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
73139     +          +      0.8255833782513 * Marital_StatusMarried
73140     +          +    -0.48959165020896 * Marital_StatusSingle
73141     +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
73142     +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
73143     +          +    -0.36405013930464 * Marital_StatusMarried
73144     +          +    -0.11895921007246 * Marital_StatusSingle
73145     +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
73146     +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
73147     +          +    -1.38902793752658 * Marital_StatusMarried
73148     +          +     0.47104623132568 * Marital_StatusSingle
73149     +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
73150     +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
73151     +          +     0.03793816986941 * Marital_StatusMarried
73152     +          +     0.32286910605532 * Marital_StatusSingle
73153     +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
73154     +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
73155     +          +    -0.60013237897988 * Marital_StatusMarried
73156     +          +    -1.54090744803073 * Marital_StatusSingle
73157     +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
73158     +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
73159     +          +     2.39490119482132 * Marital_StatusMarried
73160     +          +     0.73080073298893 * Marital_StatusSingle
73161     +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
73162     +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
73163     +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
73164     +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
73165     +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
73166     +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
73167     +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
73168     +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
73169     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
73170     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
73171     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
73172     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
73173     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
73174     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
73175     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
73176     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
73177     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
73178     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
73179     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
73180     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
73181     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
73182     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
73183     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
73184     +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
73185     +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
73186     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
73187     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
73188     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
73189     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
73190     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
73191     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
73192     +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
73193     +END;
MPRINT(EM_DIAGRAM):   END;
73194     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73195     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
73196     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
73197     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
73198     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
73199     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
73200     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
73201     +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
73202     +END;
MPRINT(EM_DIAGRAM):   END;
73203     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73204     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
73205     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73206     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73207     +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
73208     +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
73209     +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
73210     +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
73211     +          +     2.25334156596167 * S_NumCatalogPurchases
73212     +          +     1.11206221926547 * S_NumDealsPurchases
73213     +          +    -0.86546062057987 * S_NumWebVisitsMonth
73214     +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
73215     +        S_Recency  +    -1.57916593034924 * S_Teenhome
73216     +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
73217     +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
73218     +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
73219     +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
73220     +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
73221     +          +    -0.72830662589886 * S_NumCatalogPurchases
73222     +          +    -1.43194640925705 * S_NumDealsPurchases
73223     +          +     0.27875145672985 * S_NumWebVisitsMonth
73224     +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
73225     +        S_Recency  +    -1.01056905981073 * S_Teenhome
73226     +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
73227     +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
73228     +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
73229     +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
73230     +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
73231     +          +    -0.29577972728188 * S_NumCatalogPurchases
73232     +          +    -0.09204036503823 * S_NumDealsPurchases
73233     +          +     1.09127760712522 * S_NumWebVisitsMonth
73234     +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
73235     +        S_Recency  +    -1.61269837976842 * S_Teenhome
73236     +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
73237     +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
73238     +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
73239     +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
73240     +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
73241     +          +     0.74771164805463 * S_NumCatalogPurchases
73242     +          +     1.48674373289951 * S_NumDealsPurchases
73243     +          +    -0.43724934700095 * S_NumWebVisitsMonth
73244     +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
73245     +        S_Recency  +      1.5969237416548 * S_Teenhome
73246     +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
73247     +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
73248     +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
73249     +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
73250     +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
73251     +          +     0.32607897654777 * S_NumCatalogPurchases
73252     +          +    -0.05989936582211 * S_NumDealsPurchases
73253     +          +     -0.8863628882594 * S_NumWebVisitsMonth
73254     +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
73255     +        S_Recency  +      1.1633098880037 * S_Teenhome
73256     +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
73257     +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
73258     +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
73259     +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
73260     +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
73261     +          +    -0.32855091358254 * S_NumCatalogPurchases
73262     +          +    -0.04262624947945 * S_NumDealsPurchases
73263     +          +     0.34844893542429 * S_NumWebVisitsMonth
73264     +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
73265     +        S_Recency  +     0.25374922499465 * S_Teenhome
73266     +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
73267     +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
73268     +          +    -1.19357131519861 * Marital_StatusMarried
73269     +          +     1.01104838285626 * Marital_StatusSingle
73270     +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
73271     +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
73272     +          +     0.41518199668826 * Marital_StatusMarried
73273     +          +     1.03267293059069 * Marital_StatusSingle
73274     +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
73275     +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
73276     +          +     0.56306179671807 * Marital_StatusMarried
73277     +          +    -1.20896369649342 * Marital_StatusSingle
73278     +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
73279     +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
73280     +          +    -2.56951757071166 * Marital_StatusMarried
73281     +          +     0.89024254219017 * Marital_StatusSingle
73282     +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
73283     +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
73284     +          +    -0.82560993254767 * Marital_StatusMarried
73285     +          +     0.67892086377875 * Marital_StatusSingle
73286     +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
73287     +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
73288     +          +     1.62783448403167 * Marital_StatusMarried
73289     +          +     0.73020544049082 * Marital_StatusSingle
73290     +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
73291     +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
73292     +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
73293     +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
73294     +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
73295     +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
73296     +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
73297     +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
73298     +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
73299     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
73300     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
73301     +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
73302     +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
73303     +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
73304     +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
73305     +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
73306     +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
73307     +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
73308     +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
73309     +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
73310     +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
73311     +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
73312     +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
73313     +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
73314     +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
73315     +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
73316     +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
73317     +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
73318     +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
73319     +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
73320     +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
73321     +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
73322     +END;
MPRINT(EM_DIAGRAM):   END;
73323     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73324     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
73325     +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
73326     +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
73327     +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
73328     +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
73329     +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
73330     +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
73331     +END;
MPRINT(EM_DIAGRAM):   END;
73332     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73333     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
73334     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73335     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73336     +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
73337     +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
73338     +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
73339     +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
73340     +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
73341     +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
73342     +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
73343     +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
73344     +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
73345     +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
73346     +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
73347     +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
73348     +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
73349     +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
73350     +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
73351     +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
73352     +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
73353     +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
73354     +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
73355     +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
73356     +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
73357     +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
73358     +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
73359     +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
73360     +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
73361     +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
73362     +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
73363     +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
73364     +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
73365     +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
73366     +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
73367     +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
73368     +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
73369     +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
73370     +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
73371     +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
73372     +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
73373     +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
73374     +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
73375     +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
73376     +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
73377     +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
73378     +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
73379     +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
73380     +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
73381     +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
73382     +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
73383     +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
73384     +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
73385     +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
73386     +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
73387     +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
73388     +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
73389     +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
73390     +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
73391     +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
73392     +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
73393     +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
73394     +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
73395     +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
73396     +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
73397     +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
73398     +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
73399     +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
73400     +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
73401     +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
73402     +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
73403     +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
73404     +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
73405     +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
73406     +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
73407     +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
73408     +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
73409     +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
73410     +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
73411     +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
73412     +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
73413     +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
73414     +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
73415     +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
73416     +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
73417     +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
73418     +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
73419     +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
73420     +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
73421     +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
73422     +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
73423     +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
73424     +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
73425     +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
73426     +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
73427     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
73428     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
73429     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
73430     +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
73431     +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
73432     +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
73433     +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
73434     +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
73435     +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
73436     +END;
MPRINT(EM_DIAGRAM):   END;
73437     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73438     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
73439     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
73440     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
73441     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
73442     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
73443     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
73444     +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
73445     +END;
MPRINT(EM_DIAGRAM):   END;
73446     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73447     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
73448     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73449     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73450     +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
73451     +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
73452     +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
73453     +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
73454     +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
73455     +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
73456     +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
73457     +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
73458     +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
73459     +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
73460     +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
73461     +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
73462     +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
73463     +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
73464     +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
73465     +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
73466     +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
73467     +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
73468     +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
73469     +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
73470     +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
73471     +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
73472     +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
73473     +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
73474     +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
73475     +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
73476     +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
73477     +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
73478     +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
73479     +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
73480     +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
73481     +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
73482     +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
73483     +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
73484     +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
73485     +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
73486     +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
73487     +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
73488     +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
73489     +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
73490     +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
73491     +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
73492     +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
73493     +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
73494     +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
73495     +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
73496     +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
73497     +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
73498     +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
73499     +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
73500     +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
73501     +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
73502     +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
73503     +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
73504     +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
73505     +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
73506     +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
73507     +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
73508     +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
73509     +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
73510     +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
73511     +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
73512     +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
73513     +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
73514     +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
73515     +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
73516     +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
73517     +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
73518     +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
73519     +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
73520     +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
73521     +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
73522     +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
73523     +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
73524     +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
73525     +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
73526     +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
73527     +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
73528     +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
73529     +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
73530     +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
73531     +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
73532     +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
73533     +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
73534     +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
73535     +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
73536     +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
73537     +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
73538     +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
73539     +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
73540     +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
73541     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
73542     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
73543     +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
73544     +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
73545     +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
73546     +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
73547     +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
73548     +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
73549     +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
73550     +END;
MPRINT(EM_DIAGRAM):   END;
73551     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73552     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
73553     +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
73554     +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
73555     +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
73556     +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
73557     +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
73558     +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
73559     +END;
MPRINT(EM_DIAGRAM):   END;
73560     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73561     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
73562     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73563     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73564     +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
73565     +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
73566     +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
73567     +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
73568     +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
73569     +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
73570     +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
73571     +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
73572     +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
73573     +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
73574     +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
73575     +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
73576     +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
73577     +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
73578     +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
73579     +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
73580     +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
73581     +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
73582     +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
73583     +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
73584     +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
73585     +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
73586     +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
73587     +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
73588     +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
73589     +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
73590     +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
73591     +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
73592     +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
73593     +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
73594     +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
73595     +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
73596     +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
73597     +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
73598     +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
73599     +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
73600     +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
73601     +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
73602     +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
73603     +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
73604     +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
73605     +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
73606     +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
73607     +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
73608     +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
73609     +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
73610     +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
73611     +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
73612     +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
73613     +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
73614     +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
73615     +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
73616     +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
73617     +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
73618     +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
73619     +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
73620     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
73621     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
73622     +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
73623     +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
73624     +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
73625     +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
73626     +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
73627     +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
73628     +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
73629     +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
73630     +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
73631     +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
73632     +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
73633     +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
73634     +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
73635     +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
73636     +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
73637     +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
73638     +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
73639     +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
73640     +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
73641     +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
73642     +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
73643     +END;
MPRINT(EM_DIAGRAM):   END;
73644     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73645     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
73646     +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
73647     +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
73648     +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
73649     +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
73650     +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
73651     +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
73652     +END;
MPRINT(EM_DIAGRAM):   END;
73653     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73654     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
73655     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73656     +
73657     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
73658     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
73659     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
73660     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
73661     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
73662     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73663     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
73664     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
73665     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
73666     +end;
MPRINT(EM_DIAGRAM):   end;
73667     +else do;
MPRINT(EM_DIAGRAM):   else do;
73668     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
73669     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
73670     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
73671     +   end;
MPRINT(EM_DIAGRAM):   end;
73672     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
73673     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
73674     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
73675     +   end;
MPRINT(EM_DIAGRAM):   end;
73676     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73677     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
73678     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
73679     +   end;
MPRINT(EM_DIAGRAM):   end;
73680     +end;
MPRINT(EM_DIAGRAM):   end;
73681     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73682     +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
73683     +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
73684     +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
73685     +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
73686     +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
73687     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
73688     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
73689     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
73690     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
73691     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
73692     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
73693     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
73694     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
73695     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
73696     +END;
MPRINT(EM_DIAGRAM):   END;
73697     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73698     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
73699     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
73700     +END;
MPRINT(EM_DIAGRAM):   END;
73701     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
73702     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
73703     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
73704     +END;
MPRINT(EM_DIAGRAM):   END;
73705     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
73706     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
73707     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
73708     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
73709     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
73710     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
73711     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
73712     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73713     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
73714     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73715     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
73716     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
73717     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
73718     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
73719     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
73720     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
73721     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
73722     +END;
MPRINT(EM_DIAGRAM):   END;
73723     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
73724     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
73725     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
73726     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
73727     +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
73728     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73729     +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
73730     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73731     +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
73732     +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
73733     +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
73734     +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
73735     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73736     +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
73737     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73738     +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
73739     +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
73740     +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
73741     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73742     +* Ensmbl58: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 7 of 7;
73743     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73744     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73745     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
73746     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
73747     +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
73748     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73749     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
73750     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
73751     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
73752     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
73753     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
73754     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
73755     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
73756     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
73757     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
73758     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
73759     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
73760     +LENGTH _WARN_ $4
73761     +      F_DepVar  $ 12
73762     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
73763     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
73764     +
73765     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
73766     +
73767     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
73768     +
73769     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
73770     +
73771     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
73772     +
73773     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
73774     +
73775     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
73776     +
73777     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
73778     +
73779     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
73780     +
73781     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
73782     +
73783     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
73784     +
73785     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
73786     +
73787     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
73788     +
73789     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
73790     +
73791     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
73792     +
73793     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
73794     +
73795     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
73796     +
73797     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
73798     +
73799     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
73800     +
73801     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
73802     +
73803     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
73804     +
73805     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
73806     +
73807     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
73808     +
73809     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
73810     +
73811     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
73812     +
73813     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
73814     +
73815     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
73816     +
73817     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
73818     +
73819     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
73820     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
73821     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
73822     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
73823     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
73824     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
73825     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
73826     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
73827     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
73828     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
73829     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
73830     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
73831     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
73832     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73833     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73834     +end;
MPRINT(EM_DIAGRAM):   end;
73835     +else do;
MPRINT(EM_DIAGRAM):   else do;
73836     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
73837     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
73838     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73839     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
73840     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
73841     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
73842     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
73843     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
73844     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73845     +         end;
MPRINT(EM_DIAGRAM):   end;
73846     +         else do;
MPRINT(EM_DIAGRAM):   else do;
73847     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
73848     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
73849     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73850     +            end;
MPRINT(EM_DIAGRAM):   end;
73851     +         end;
MPRINT(EM_DIAGRAM):   end;
73852     +      end;
MPRINT(EM_DIAGRAM):   end;
73853     +      else do;
MPRINT(EM_DIAGRAM):   else do;
73854     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
73855     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
73856     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73857     +         end;
MPRINT(EM_DIAGRAM):   end;
73858     +      end;
MPRINT(EM_DIAGRAM):   end;
73859     +   end;
MPRINT(EM_DIAGRAM):   end;
73860     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73861     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
73862     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
73863     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73864     +      end;
MPRINT(EM_DIAGRAM):   end;
73865     +      else do;
MPRINT(EM_DIAGRAM):   else do;
73866     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
73867     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
73868     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
73869     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
73870     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
73871     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73872     +         end;
MPRINT(EM_DIAGRAM):   end;
73873     +      end;
MPRINT(EM_DIAGRAM):   end;
73874     +   end;
MPRINT(EM_DIAGRAM):   end;
73875     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
73876     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
73877     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
73878     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
73879     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
73880     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73881     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73882     +   end;
MPRINT(EM_DIAGRAM):   end;
73883     +end;
MPRINT(EM_DIAGRAM):   end;
73884     +
73885     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73886     +*** Checking missing input Interval
73887     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
73888     +
73889     +IF NMISS(
73890     +   AcceptedCmpTotal ,
73891     +   Frq ,
73892     +   Income ,
73893     +   Mnt ,
73894     +   MntGoldProds ,
73895     +   MntMeatProducts ,
73896     +   NumCatalogPurchases ,
73897     +   NumDealsPurchases ,
73898     +   NumWebVisitsMonth ,
73899     +   RFMstat ,
73900     +   Recency ,
73901     +   Teenhome ,
73902     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
73903     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
73904     +
73905     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73906     +END;
MPRINT(EM_DIAGRAM):   END;
73907     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73908     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
73909     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73910     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73911     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
73912     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
73913     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
73914     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
73915     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
73916     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
73917     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
73918     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
73919     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
73920     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
73921     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
73922     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
73923     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
73924     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
73925     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
73926     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
73927     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
73928     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
73929     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
73930     +END;
MPRINT(EM_DIAGRAM):   END;
73931     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73932     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
73933     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
73934     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
73935     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
73936     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
73937     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
73938     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
73939     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
73940     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
73941     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
73942     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
73943     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
73944     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
73945     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
73946     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
73947     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
73948     +   ELSE S_NumCatalogPurchases
73949     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
73950     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
73951     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
73952     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
73953     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
73954     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
73955     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
73956     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
73957     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
73958     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
73959     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
73960     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
73961     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
73962     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
73963     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
73964     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
73965     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
73966     +END;
MPRINT(EM_DIAGRAM):   END;
73967     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73968     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
73969     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73970     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73971     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
73972     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73973     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73974     +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
73975     +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
73976     +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
73977     +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
73978     +          +    -0.01423451356563 * S_NumCatalogPurchases
73979     +          +     0.06006350655487 * S_NumDealsPurchases
73980     +          +    -0.20885493964335 * S_NumWebVisitsMonth
73981     +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
73982     +        S_Recency  +    -0.03326479668652 * S_Teenhome
73983     +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
73984     +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
73985     +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
73986     +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
73987     +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
73988     +          +    -0.03109266966794 * S_NumCatalogPurchases
73989     +          +     0.05524435494328 * S_NumDealsPurchases
73990     +          +     -0.0105802056898 * S_NumWebVisitsMonth
73991     +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
73992     +        S_Recency  +       0.195010707702 * S_Teenhome
73993     +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
73994     +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
73995     +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
73996     +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
73997     +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
73998     +          +     0.07777995109144 * S_NumCatalogPurchases
73999     +          +     0.08683394019767 * S_NumDealsPurchases
74000     +          +     0.27328366433987 * S_NumWebVisitsMonth
74001     +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
74002     +        S_Recency  +      0.0640153287908 * S_Teenhome
74003     +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
74004     +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
74005     +          +    -0.02695167777393 * Marital_StatusMarried
74006     +          +    -0.00733864032764 * Marital_StatusSingle
74007     +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
74008     +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
74009     +          +     0.42249671001117 * Marital_StatusMarried
74010     +          +    -0.18515416581955 * Marital_StatusSingle
74011     +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
74012     +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
74013     +          +     0.45127582934777 * Marital_StatusMarried
74014     +          +       0.358157766485 * Marital_StatusSingle
74015     +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
74016     +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
74017     +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
74018     +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
74019     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
74020     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
74021     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
74022     +END;
MPRINT(EM_DIAGRAM):   END;
74023     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74024     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
74025     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
74026     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
74027     +END;
MPRINT(EM_DIAGRAM):   END;
74028     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74029     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
74030     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74031     +
74032     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
74033     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
74034     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
74035     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
74036     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
74037     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74038     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
74039     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
74040     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
74041     +end;
MPRINT(EM_DIAGRAM):   end;
74042     +else do;
MPRINT(EM_DIAGRAM):   else do;
74043     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
74044     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
74045     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
74046     +   end;
MPRINT(EM_DIAGRAM):   end;
74047     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
74048     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
74049     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
74050     +   end;
MPRINT(EM_DIAGRAM):   end;
74051     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74052     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
74053     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
74054     +   end;
MPRINT(EM_DIAGRAM):   end;
74055     +end;
MPRINT(EM_DIAGRAM):   end;
74056     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74057     +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
74058     +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
74059     +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
74060     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
74061     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
74062     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
74063     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
74064     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
74065     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
74066     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
74067     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
74068     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
74069     +END;
MPRINT(EM_DIAGRAM):   END;
74070     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74071     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
74072     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
74073     +END;
MPRINT(EM_DIAGRAM):   END;
74074     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
74075     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
74076     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
74077     +END;
MPRINT(EM_DIAGRAM):   END;
74078     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
74079     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
74080     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
74081     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
74082     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
74083     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
74084     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
74085     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74086     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
74087     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74088     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
74089     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
74090     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
74091     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
74092     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
74093     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
74094     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
74095     +END;
MPRINT(EM_DIAGRAM):   END;
74096     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
74097     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
74098     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
74099     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
74100     +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
74101     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74102     +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
74103     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74104     +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
74105     +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
74106     +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
74107     +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
74108     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74109     +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
74110     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74111     +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
74112     +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
74113     +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
74114     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74115     +* Ensmbl58: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Maximum Posteriors of 7 models;
74116     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74117     +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
74118     +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
74119     +P_DepVar1 = max(
74120     +AutoNeural44_P_DepVar1 ,
74121     +AutoNeural45_P_DepVar1 ,
74122     +AutoNeural47_P_DepVar1 ,
74123     +AutoNeural41_P_DepVar1 ,
74124     +AutoNeural42_P_DepVar1 ,
74125     +AutoNeural43_P_DepVar1 ,
74126     +AutoNeural46_P_DepVar1
74127     +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural44_P_DepVar1 , AutoNeural45_P_DepVar1 ,
AutoNeural47_P_DepVar1 , AutoNeural41_P_DepVar1 , AutoNeural42_P_DepVar1 ,
AutoNeural43_P_DepVar1 , AutoNeural46_P_DepVar1 );
74128     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
74129     +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
74130     +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
74131     +end;
MPRINT(EM_DIAGRAM):   end;
74132     +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
74133     +P_DepVar0 = max(
74134     +AutoNeural44_P_DepVar0 ,
74135     +AutoNeural45_P_DepVar0 ,
74136     +AutoNeural47_P_DepVar0 ,
74137     +AutoNeural41_P_DepVar0 ,
74138     +AutoNeural42_P_DepVar0 ,
74139     +AutoNeural43_P_DepVar0 ,
74140     +AutoNeural46_P_DepVar0
74141     +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural44_P_DepVar0 , AutoNeural45_P_DepVar0 ,
AutoNeural47_P_DepVar0 , AutoNeural41_P_DepVar0 , AutoNeural42_P_DepVar0 ,
AutoNeural43_P_DepVar0 , AutoNeural46_P_DepVar0 );
74142     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
74143     +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
74144     +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
74145     +end;
MPRINT(EM_DIAGRAM):   end;
74146     +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
74147     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74148     +* Ensmbl58: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Classification Vars;
74149     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74150     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
74151     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
74152     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
74153     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
74154     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
74155     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
74156     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
74157     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
74158     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
74159     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
74160     +end;
MPRINT(EM_DIAGRAM):   end;
74161     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
74162     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
74163     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
74164     +end;
MPRINT(EM_DIAGRAM):   end;
74165     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74166     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74167     +* Ensmbl58: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Producing Unformatted variable;
74168     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74169     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
74170     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
74171     +else
74172     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
74173     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74174     +* Ensmbl58: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing _WARN_ Variable;
74175     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74176     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
74177     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
74178     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
74179     +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
74179    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
74180     +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
74180    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
74181     +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
74181    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
74182     +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
74182    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
74183     +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
74183    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
74184     +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
74184    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
74185     +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
74185    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
74186     +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
74186    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
74187     +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
74187    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
74188     +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
74188    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
74189     +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
74189    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
74190     +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
74190    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
74191     +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
74191    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
74192     +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
74192    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
74193     +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
74193    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
74194     +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
74194    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
74195     +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
74195    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
74196     +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
74196    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
74197     +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
74197    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
74198     +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
74198    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
74199     +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
74199    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
74200     +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
74200    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
74201     +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
74201    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
74202     +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
74202    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
74203     +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
74203    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
74204     +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
74204    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
74205     +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
74205    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
74206     +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
74206    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
74207     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74208     +* Ensmbl58: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Residual Vars;
74209     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74210     +if
74211     +F_DepVar NE '1'
74212     +AND F_DepVar NE '0'
74213     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
74214     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
74215     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
74216     +end;
MPRINT(EM_DIAGRAM):   end;
74217     +else do;
MPRINT(EM_DIAGRAM):   else do;
74218     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
74219     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
74220     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
74221     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
74222     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
74223     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
74224     +END;
MPRINT(EM_DIAGRAM):   END;
74225     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
74226      run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL58_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL44_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
74227      quit;
74228      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
74229      filename emflow
74229    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring AUTONEURAL44_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74230      *------------------------------------------------------------*;
74231      * Ensmbl58: Scoring AUTONEURAL44_VALIDATE data;
74232      *------------------------------------------------------------*;
74233      data EMWS8.Ensmbl58_VALIDATE
74234      / view=EMWS8.Ensmbl58_VALIDATE
74235      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_VALIDATE / view=EMWS8.Ensmbl58_VALIDATE ;
74236      set EMWS8.AutoNeural44_VALIDATE
74237      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_VALIDATE ;
74238      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas.
74239     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74240     +* Ensmbl58: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Combine model for DepVar;
74241     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74242     +* Ensmbl58: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 1 of 7;
74243     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74244     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74245     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
74246     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
74247     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
74248     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74249     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74250     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
74251     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
74252     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
74253     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74254     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74255     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
74256     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
74257     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
74258     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74259     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74260     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
74261     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
74262     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
74263     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74264     +
74265     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
74266     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
74266    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
74267     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
74268     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
74269     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
74270     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
74271     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
74272     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74273     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
74274     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
74275     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
74276     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74277     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74278     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
74279     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74280     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
74281     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
74282     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
74283     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74284     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
74285     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
74286     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
74287     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74288     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74289     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
74290     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
74291     +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
74292     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74293     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74294     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
74295     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
74296     +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
74297     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74298     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
74299     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
74300     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
74301     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
74302     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
74303     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
74304     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
74305     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
74306     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
74307     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
74308     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
74309     +LENGTH _WARN_ $4
74310     +      F_DepVar  $ 12
74311     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
74312     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
74313     +
74314     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
74315     +
74316     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
74317     +
74318     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
74319     +
74320     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
74321     +
74322     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
74323     +
74324     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
74325     +
74326     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
74327     +
74328     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
74329     +
74330     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
74331     +
74332     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
74333     +
74334     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
74335     +
74336     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
74337     +
74338     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
74339     +
74340     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
74341     +
74342     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
74343     +
74344     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
74345     +
74346     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
74347     +
74348     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
74349     +
74350     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
74351     +
74352     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
74353     +
74354     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
74355     +
74356     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
74357     +
74358     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
74359     +
74360     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
74361     +
74362     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
74363     +
74364     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
74365     +
74366     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
74367     +
74368     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
74369     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
74370     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
74371     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
74372     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
74373     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
74374     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
74375     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
74376     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
74377     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
74378     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
74379     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
74380     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
74381     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74382     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74383     +end;
MPRINT(EM_DIAGRAM):   end;
74384     +else do;
MPRINT(EM_DIAGRAM):   else do;
74385     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
74386     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
74387     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74388     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
74389     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
74390     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
74391     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
74392     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
74393     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74394     +         end;
MPRINT(EM_DIAGRAM):   end;
74395     +         else do;
MPRINT(EM_DIAGRAM):   else do;
74396     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
74397     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
74398     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74399     +            end;
MPRINT(EM_DIAGRAM):   end;
74400     +         end;
MPRINT(EM_DIAGRAM):   end;
74401     +      end;
MPRINT(EM_DIAGRAM):   end;
74402     +      else do;
MPRINT(EM_DIAGRAM):   else do;
74403     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
74404     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
74405     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74406     +         end;
MPRINT(EM_DIAGRAM):   end;
74407     +      end;
MPRINT(EM_DIAGRAM):   end;
74408     +   end;
MPRINT(EM_DIAGRAM):   end;
74409     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74410     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
74411     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
74412     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74413     +      end;
MPRINT(EM_DIAGRAM):   end;
74414     +      else do;
MPRINT(EM_DIAGRAM):   else do;
74415     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
74416     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
74417     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
74418     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
74419     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
74420     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74421     +         end;
MPRINT(EM_DIAGRAM):   end;
74422     +      end;
MPRINT(EM_DIAGRAM):   end;
74423     +   end;
MPRINT(EM_DIAGRAM):   end;
74424     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
74425     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
74426     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
74427     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
74428     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
74429     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74430     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74431     +   end;
MPRINT(EM_DIAGRAM):   end;
74432     +end;
MPRINT(EM_DIAGRAM):   end;
74433     +
74434     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74435     +*** Checking missing input Interval
74436     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
74437     +
74438     +IF NMISS(
74439     +   AcceptedCmpTotal ,
74440     +   Frq ,
74441     +   Income ,
74442     +   Mnt ,
74443     +   MntGoldProds ,
74444     +   MntMeatProducts ,
74445     +   NumCatalogPurchases ,
74446     +   NumDealsPurchases ,
74447     +   NumWebVisitsMonth ,
74448     +   RFMstat ,
74449     +   Recency ,
74450     +   Teenhome ,
74451     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
74452     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
74453     +
74454     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74455     +END;
MPRINT(EM_DIAGRAM):   END;
74456     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74457     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
74458     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74459     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74460     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
74461     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
74462     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
74463     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
74464     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
74465     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
74466     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
74467     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
74468     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
74469     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
74470     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
74471     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
74472     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
74473     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
74474     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
74475     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
74476     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
74477     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
74478     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
74479     +END;
MPRINT(EM_DIAGRAM):   END;
74480     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74481     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
74482     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
74483     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
74484     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
74485     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
74486     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
74487     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
74488     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
74489     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
74490     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
74491     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
74492     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
74493     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
74494     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
74495     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
74496     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
74497     +   ELSE S_NumCatalogPurchases
74498     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
74499     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
74500     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
74501     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
74502     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
74503     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
74504     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
74505     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
74506     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
74507     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
74508     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
74509     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
74510     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
74511     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
74512     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
74513     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
74514     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
74515     +END;
MPRINT(EM_DIAGRAM):   END;
74516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74517     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
74518     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74519     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74520     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
74521     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74522     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74523     +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
74524     +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
74525     +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
74526     +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
74527     +          +    -1.41682724778123 * S_NumCatalogPurchases
74528     +          +    -0.81806751697478 * S_NumDealsPurchases
74529     +          +     0.13721060582485 * S_NumWebVisitsMonth
74530     +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
74531     +        S_Recency  +    -0.11154618858027 * S_Teenhome
74532     +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 *
S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 *
S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 *
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 *
S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency +
-0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
74533     +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
74534     +          +    -0.42475372885131 * Marital_StatusMarried
74535     +          +     0.12884500504295 * Marital_StatusSingle
74536     +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced +
-0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle +
-0.15810267147538 * Marital_StatusTogether ;
74537     +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
74538     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
74539     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
74540     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
74541     +END;
MPRINT(EM_DIAGRAM):   END;
74542     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74543     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
74544     +END;
MPRINT(EM_DIAGRAM):   END;
74545     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74546     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
74547     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74548     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74549     +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
74550     +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
74551     +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
74552     +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
74553     +          +    -1.27566927607767 * S_NumCatalogPurchases
74554     +          +    -0.30700705450077 * S_NumDealsPurchases
74555     +          +    -1.10002183072059 * S_NumWebVisitsMonth
74556     +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
74557     +        S_Recency  +    -0.46996209026516 * S_Teenhome
74558     +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 *
S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 *
S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 *
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 *
S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency +
-0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
74559     +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
74560     +          +    -0.32389187879499 * Marital_StatusMarried
74561     +          +     0.77856411154011 * Marital_StatusSingle
74562     +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced +
-0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle +
-0.63289071596123 * Marital_StatusTogether ;
74563     +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
74564     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
74565     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
74566     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
74567     +END;
MPRINT(EM_DIAGRAM):   END;
74568     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74569     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
74570     +END;
MPRINT(EM_DIAGRAM):   END;
74571     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74572     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
74573     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74574     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74575     +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
74576     +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
74577     +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
74578     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
74579     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
74580     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
74581     +END;
MPRINT(EM_DIAGRAM):   END;
74582     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74583     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
74584     +END;
MPRINT(EM_DIAGRAM):   END;
74585     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74586     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
74587     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74588     +
74589     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
74590     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
74591     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
74592     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
74593     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
74594     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74595     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
74596     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
74597     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
74598     +end;
MPRINT(EM_DIAGRAM):   end;
74599     +else do;
MPRINT(EM_DIAGRAM):   else do;
74600     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
74601     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
74602     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
74603     +   end;
MPRINT(EM_DIAGRAM):   end;
74604     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
74605     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
74606     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
74607     +   end;
MPRINT(EM_DIAGRAM):   end;
74608     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74609     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
74610     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
74611     +   end;
MPRINT(EM_DIAGRAM):   end;
74612     +end;
MPRINT(EM_DIAGRAM):   end;
74613     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74614     +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
74615     +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
74616     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
74617     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
74618     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
74619     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
74620     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
74621     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
74622     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
74623     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
74624     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
74625     +END;
MPRINT(EM_DIAGRAM):   END;
74626     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74627     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
74628     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
74629     +END;
MPRINT(EM_DIAGRAM):   END;
74630     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
74631     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
74632     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
74633     +END;
MPRINT(EM_DIAGRAM):   END;
74634     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
74635     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
74636     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
74637     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
74638     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
74639     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
74640     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
74641     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74642     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
74643     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74644     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
74645     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
74646     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
74647     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
74648     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
74649     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
74650     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
74651     +END;
MPRINT(EM_DIAGRAM):   END;
74652     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
74653     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
74654     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
74655     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
74656     +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
74657     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74658     +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
74659     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74660     +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
74661     +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
74662     +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
74663     +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
74664     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74665     +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
74666     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74667     +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
74668     +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
74669     +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
74670     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74671     +* Ensmbl58: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 2 of 7;
74672     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74673     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74674     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
74675     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
74676     +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
74677     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74678     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
74679     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
74680     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
74681     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
74682     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
74683     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
74684     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
74685     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
74686     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
74687     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
74688     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
74689     +LENGTH _WARN_ $4
74690     +      F_DepVar  $ 12
74691     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
74692     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
74693     +
74694     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
74695     +
74696     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
74697     +
74698     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
74699     +
74700     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
74701     +
74702     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
74703     +
74704     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
74705     +
74706     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
74707     +
74708     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
74709     +
74710     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
74711     +
74712     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
74713     +
74714     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
74715     +
74716     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
74717     +
74718     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
74719     +
74720     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
74721     +
74722     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
74723     +
74724     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
74725     +
74726     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
74727     +
74728     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
74729     +
74730     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
74731     +
74732     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
74733     +
74734     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
74735     +
74736     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
74737     +
74738     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
74739     +
74740     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
74741     +
74742     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
74743     +
74744     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
74745     +
74746     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
74747     +
74748     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
74749     +
74750     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
74751     +
74752     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
74753     +
74754     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
74755     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
74756     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
74757     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
74758     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
74759     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
74760     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
74761     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
74762     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
74763     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
74764     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
74765     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
74766     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
74767     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74768     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74769     +end;
MPRINT(EM_DIAGRAM):   end;
74770     +else do;
MPRINT(EM_DIAGRAM):   else do;
74771     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
74772     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
74773     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74774     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
74775     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
74776     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
74777     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
74778     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
74779     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74780     +         end;
MPRINT(EM_DIAGRAM):   end;
74781     +         else do;
MPRINT(EM_DIAGRAM):   else do;
74782     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
74783     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
74784     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74785     +            end;
MPRINT(EM_DIAGRAM):   end;
74786     +         end;
MPRINT(EM_DIAGRAM):   end;
74787     +      end;
MPRINT(EM_DIAGRAM):   end;
74788     +      else do;
MPRINT(EM_DIAGRAM):   else do;
74789     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
74790     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
74791     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74792     +         end;
MPRINT(EM_DIAGRAM):   end;
74793     +      end;
MPRINT(EM_DIAGRAM):   end;
74794     +   end;
MPRINT(EM_DIAGRAM):   end;
74795     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74796     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
74797     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
74798     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74799     +      end;
MPRINT(EM_DIAGRAM):   end;
74800     +      else do;
MPRINT(EM_DIAGRAM):   else do;
74801     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
74802     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
74803     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
74804     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
74805     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
74806     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74807     +         end;
MPRINT(EM_DIAGRAM):   end;
74808     +      end;
MPRINT(EM_DIAGRAM):   end;
74809     +   end;
MPRINT(EM_DIAGRAM):   end;
74810     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
74811     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
74812     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
74813     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
74814     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
74815     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74816     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74817     +   end;
MPRINT(EM_DIAGRAM):   end;
74818     +end;
MPRINT(EM_DIAGRAM):   end;
74819     +
74820     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74821     +*** Checking missing input Interval
74822     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
74823     +
74824     +IF NMISS(
74825     +   AcceptedCmpTotal ,
74826     +   Frq ,
74827     +   Income ,
74828     +   Mnt ,
74829     +   MntGoldProds ,
74830     +   MntMeatProducts ,
74831     +   NumCatalogPurchases ,
74832     +   NumDealsPurchases ,
74833     +   NumWebVisitsMonth ,
74834     +   RFMstat ,
74835     +   Recency ,
74836     +   Teenhome ,
74837     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
74838     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
74839     +
74840     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74841     +END;
MPRINT(EM_DIAGRAM):   END;
74842     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74843     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
74844     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74845     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74846     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
74847     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
74848     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
74849     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
74850     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
74851     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
74852     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
74853     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
74854     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
74855     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
74856     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
74857     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
74858     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
74859     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
74860     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
74861     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
74862     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
74863     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
74864     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
74865     +END;
MPRINT(EM_DIAGRAM):   END;
74866     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74867     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
74868     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
74869     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
74870     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
74871     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
74872     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
74873     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
74874     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
74875     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
74876     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
74877     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
74878     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
74879     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
74880     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
74881     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
74882     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
74883     +   ELSE S_NumCatalogPurchases
74884     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
74885     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
74886     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
74887     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
74888     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
74889     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
74890     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
74891     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
74892     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
74893     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
74894     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
74895     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
74896     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
74897     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
74898     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
74899     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
74900     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
74901     +END;
MPRINT(EM_DIAGRAM):   END;
74902     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74903     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
74904     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74905     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74906     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
74907     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74908     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74909     +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
74910     +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
74911     +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
74912     +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
74913     +          +    -0.17075976331442 * S_NumCatalogPurchases
74914     +          +     0.11936859656737 * S_NumDealsPurchases
74915     +          +    -0.02241344557322 * S_NumWebVisitsMonth
74916     +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
74917     +        S_Recency  +     0.15041197329983 * S_Teenhome
74918     +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 *
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 *
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 *
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 *
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency +
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
74919     +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
74920     +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
74921     +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
74922     +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
74923     +          +     -0.1082096588215 * S_NumCatalogPurchases
74924     +          +    -0.35286072202398 * S_NumDealsPurchases
74925     +          +     0.41909763538671 * S_NumWebVisitsMonth
74926     +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
74927     +        S_Recency  +     0.03657184300378 * S_Teenhome
74928     +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 *
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 *
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 *
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 *
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency +
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
74929     +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
74930     +          +     0.35890266446407 * Marital_StatusMarried
74931     +          +    -0.32958224268654 * Marital_StatusSingle
74932     +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced +
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle +
0.26093411772209 * Marital_StatusTogether ;
74933     +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
74934     +          +    -0.02828904025667 * Marital_StatusMarried
74935     +          +      0.2062300465945 * Marital_StatusSingle
74936     +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced +
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle +
-0.11283173230117 * Marital_StatusTogether ;
74937     +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
74938     +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
74939     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
74940     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
74941     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
74942     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
74943     +END;
MPRINT(EM_DIAGRAM):   END;
74944     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74945     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
74946     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
74947     +END;
MPRINT(EM_DIAGRAM):   END;
74948     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74949     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
74950     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74951     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74952     +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
74953     +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
74954     +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
74955     +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
74956     +          +    -0.01120232190428 * S_NumCatalogPurchases
74957     +          +     0.08335061407191 * S_NumDealsPurchases
74958     +          +     0.19045617784308 * S_NumWebVisitsMonth
74959     +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
74960     +        S_Recency  +    -0.01223664611486 * S_Teenhome
74961     +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 *
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 *
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 *
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 *
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency +
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
74962     +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
74963     +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
74964     +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
74965     +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
74966     +          +     0.05405710367459 * S_NumCatalogPurchases
74967     +          +     0.05779108423435 * S_NumDealsPurchases
74968     +          +     0.06578830114376 * S_NumWebVisitsMonth
74969     +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
74970     +        S_Recency  +     0.07188455936346 * S_Teenhome
74971     +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 *
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 *
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 *
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 *
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency +
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
74972     +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
74973     +          +     -0.0971208757038 * Marital_StatusMarried
74974     +          +    -0.07250288479873 * Marital_StatusSingle
74975     +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced +
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle +
-0.09370040203357 * Marital_StatusTogether ;
74976     +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
74977     +          +     0.21091057941446 * Marital_StatusMarried
74978     +          +    -0.10578923343752 * Marital_StatusSingle
74979     +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced +
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle +
0.14340624257864 * Marital_StatusTogether ;
74980     +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
74981     +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
74982     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
74983     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
74984     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
74985     +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
74986     +END;
MPRINT(EM_DIAGRAM):   END;
74987     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74988     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
74989     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
74990     +END;
MPRINT(EM_DIAGRAM):   END;
74991     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74992     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
74993     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74994     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74995     +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
74996     +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
74997     +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 *
H1x2_2 ;
74998     +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
74999     +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
75000     +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
75001     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
75002     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
75003     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
75004     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
75005     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
75006     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
75007     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
75008     +END;
MPRINT(EM_DIAGRAM):   END;
75009     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75010     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
75011     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
75012     +END;
MPRINT(EM_DIAGRAM):   END;
75013     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75014     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
75015     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75016     +
75017     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
75018     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
75019     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
75020     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
75021     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
75022     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75023     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
75024     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
75025     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
75026     +end;
MPRINT(EM_DIAGRAM):   end;
75027     +else do;
MPRINT(EM_DIAGRAM):   else do;
75028     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
75029     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
75030     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
75031     +   end;
MPRINT(EM_DIAGRAM):   end;
75032     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
75033     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
75034     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
75035     +   end;
MPRINT(EM_DIAGRAM):   end;
75036     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75037     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
75038     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
75039     +   end;
MPRINT(EM_DIAGRAM):   end;
75040     +end;
MPRINT(EM_DIAGRAM):   end;
75041     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75042     +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
75043     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
75044     +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
75045     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
75046     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
75047     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
75048     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
75049     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
75050     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
75051     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
75052     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
75053     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
75054     +END;
MPRINT(EM_DIAGRAM):   END;
75055     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75056     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
75057     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
75058     +END;
MPRINT(EM_DIAGRAM):   END;
75059     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
75060     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
75061     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
75062     +END;
MPRINT(EM_DIAGRAM):   END;
75063     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
75064     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
75065     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
75066     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
75067     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
75068     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
75069     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
75070     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75071     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
75072     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75073     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
75074     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
75075     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
75076     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
75077     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
75078     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
75079     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
75080     +END;
MPRINT(EM_DIAGRAM):   END;
75081     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75082     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
75083     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75084     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
75085     +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
75086     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75087     +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
75088     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75089     +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
75090     +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
75091     +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
75092     +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
75093     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75094     +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
75095     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75096     +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
75097     +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
75098     +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
75099     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75100     +* Ensmbl58: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 3 of 7;
75101     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75102     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75103     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
75104     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
75105     +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
75106     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75107     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75108     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
75109     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75110     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
75111     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
75112     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
75113     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
75114     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
75115     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
75116     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
75117     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
75118     +LENGTH _WARN_ $4
75119     +      F_DepVar  $ 12
75120     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
75121     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
75122     +
75123     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
75124     +
75125     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
75126     +
75127     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
75128     +
75129     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
75130     +
75131     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
75132     +
75133     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
75134     +
75135     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
75136     +
75137     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
75138     +
75139     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
75140     +
75141     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
75142     +
75143     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
75144     +
75145     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
75146     +
75147     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
75148     +
75149     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
75150     +
75151     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
75152     +
75153     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
75154     +
75155     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
75156     +
75157     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
75158     +
75159     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
75160     +
75161     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
75162     +
75163     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
75164     +
75165     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
75166     +
75167     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
75168     +
75169     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
75170     +
75171     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
75172     +
75173     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
75174     +
75175     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
75176     +
75177     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
75178     +
75179     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
75180     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
75181     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
75182     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
75183     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
75184     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
75185     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
75186     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
75187     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
75188     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
75189     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
75190     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
75191     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
75192     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75193     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75194     +end;
MPRINT(EM_DIAGRAM):   end;
75195     +else do;
MPRINT(EM_DIAGRAM):   else do;
75196     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
75197     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
75198     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75199     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
75200     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
75201     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
75202     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
75203     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
75204     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75205     +         end;
MPRINT(EM_DIAGRAM):   end;
75206     +         else do;
MPRINT(EM_DIAGRAM):   else do;
75207     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
75208     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
75209     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75210     +            end;
MPRINT(EM_DIAGRAM):   end;
75211     +         end;
MPRINT(EM_DIAGRAM):   end;
75212     +      end;
MPRINT(EM_DIAGRAM):   end;
75213     +      else do;
MPRINT(EM_DIAGRAM):   else do;
75214     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
75215     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
75216     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75217     +         end;
MPRINT(EM_DIAGRAM):   end;
75218     +      end;
MPRINT(EM_DIAGRAM):   end;
75219     +   end;
MPRINT(EM_DIAGRAM):   end;
75220     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75221     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
75222     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
75223     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75224     +      end;
MPRINT(EM_DIAGRAM):   end;
75225     +      else do;
MPRINT(EM_DIAGRAM):   else do;
75226     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
75227     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
75228     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
75229     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
75230     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
75231     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75232     +         end;
MPRINT(EM_DIAGRAM):   end;
75233     +      end;
MPRINT(EM_DIAGRAM):   end;
75234     +   end;
MPRINT(EM_DIAGRAM):   end;
75235     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
75236     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
75237     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
75238     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
75239     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
75240     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75241     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75242     +   end;
MPRINT(EM_DIAGRAM):   end;
75243     +end;
MPRINT(EM_DIAGRAM):   end;
75244     +
75245     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75246     +*** Checking missing input Interval
75247     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
75248     +
75249     +IF NMISS(
75250     +   AcceptedCmpTotal ,
75251     +   Frq ,
75252     +   Income ,
75253     +   Mnt ,
75254     +   MntGoldProds ,
75255     +   MntMeatProducts ,
75256     +   NumCatalogPurchases ,
75257     +   NumDealsPurchases ,
75258     +   NumWebVisitsMonth ,
75259     +   RFMstat ,
75260     +   Recency ,
75261     +   Teenhome ,
75262     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
75263     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
75264     +
75265     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75266     +END;
MPRINT(EM_DIAGRAM):   END;
75267     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75268     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
75269     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75270     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75271     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
75272     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
75273     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
75274     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
75275     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
75276     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
75277     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
75278     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
75279     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
75280     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
75281     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
75282     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
75283     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
75284     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
75285     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
75286     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
75287     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
75288     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
75289     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
75290     +END;
MPRINT(EM_DIAGRAM):   END;
75291     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75292     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
75293     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
75294     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
75295     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
75296     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
75297     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
75298     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
75299     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
75300     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
75301     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
75302     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
75303     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
75304     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
75305     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
75306     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
75307     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
75308     +   ELSE S_NumCatalogPurchases
75309     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
75310     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
75311     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
75312     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
75313     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
75314     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
75315     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
75316     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
75317     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
75318     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
75319     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
75320     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
75321     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
75322     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
75323     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
75324     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
75325     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
75326     +END;
MPRINT(EM_DIAGRAM):   END;
75327     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75328     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
75329     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75330     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75331     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
75332     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75333     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75334     +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
75335     +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
75336     +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
75337     +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
75338     +          +     0.96941096546276 * S_NumCatalogPurchases
75339     +          +    -0.78169009272221 * S_NumDealsPurchases
75340     +          +     2.46694552614806 * S_NumWebVisitsMonth
75341     +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
75342     +        S_Recency  +    -1.09760548427625 * S_Teenhome
75343     +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
75344     +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
75345     +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
75346     +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
75347     +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
75348     +          +    -2.01779739147185 * S_NumCatalogPurchases
75349     +          +     -2.6507470301089 * S_NumDealsPurchases
75350     +          +     0.43757499676531 * S_NumWebVisitsMonth
75351     +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
75352     +        S_Recency  +    -0.45321912120397 * S_Teenhome
75353     +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
75354     +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
75355     +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
75356     +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
75357     +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
75358     +          +      3.9474982958259 * S_NumCatalogPurchases
75359     +          +       0.376468804707 * S_NumDealsPurchases
75360     +          +     3.31501013882439 * S_NumWebVisitsMonth
75361     +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
75362     +        S_Recency  +    -1.57729700618019 * S_Teenhome
75363     +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
75364     +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
75365     +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
75366     +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
75367     +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
75368     +          +    -1.47064436222345 * S_NumCatalogPurchases
75369     +          +    -0.47773085529503 * S_NumDealsPurchases
75370     +          +     0.20028656323595 * S_NumWebVisitsMonth
75371     +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
75372     +        S_Recency  +    -0.11530372179295 * S_Teenhome
75373     +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
75374     +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
75375     +          +    -1.68634246986018 * Marital_StatusMarried
75376     +          +     0.61674763327859 * Marital_StatusSingle
75377     +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
75378     +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
75379     +          +    -0.63821523628652 * Marital_StatusMarried
75380     +          +    -1.40431603473643 * Marital_StatusSingle
75381     +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
75382     +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
75383     +          +    -2.86773035723606 * Marital_StatusMarried
75384     +          +     2.52900517550184 * Marital_StatusSingle
75385     +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
75386     +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
75387     +          +    -0.89880425714459 * Marital_StatusMarried
75388     +          +     0.97652284934456 * Marital_StatusSingle
75389     +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
75390     +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
75391     +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
75392     +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
75393     +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
75394     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
75395     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
75396     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
75397     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
75398     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
75399     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
75400     +END;
MPRINT(EM_DIAGRAM):   END;
75401     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75402     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
75403     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
75404     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
75405     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
75406     +END;
MPRINT(EM_DIAGRAM):   END;
75407     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75408     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
75409     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75410     +
75411     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
75412     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
75413     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
75414     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
75415     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
75416     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75417     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
75418     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
75419     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
75420     +end;
MPRINT(EM_DIAGRAM):   end;
75421     +else do;
MPRINT(EM_DIAGRAM):   else do;
75422     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
75423     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
75424     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
75425     +   end;
MPRINT(EM_DIAGRAM):   end;
75426     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
75427     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
75428     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
75429     +   end;
MPRINT(EM_DIAGRAM):   end;
75430     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75431     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
75432     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
75433     +   end;
MPRINT(EM_DIAGRAM):   end;
75434     +end;
MPRINT(EM_DIAGRAM):   end;
75435     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75436     +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
75437     +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
75438     +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
75439     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
75440     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
75441     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
75442     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
75443     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
75444     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
75445     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
75446     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
75447     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
75448     +END;
MPRINT(EM_DIAGRAM):   END;
75449     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75450     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
75451     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
75452     +END;
MPRINT(EM_DIAGRAM):   END;
75453     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
75454     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
75455     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
75456     +END;
MPRINT(EM_DIAGRAM):   END;
75457     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
75458     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
75459     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
75460     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
75461     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
75462     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
75463     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
75464     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75465     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
75466     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75467     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
75468     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
75469     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
75470     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
75471     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
75472     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
75473     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
75474     +END;
MPRINT(EM_DIAGRAM):   END;
75475     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75476     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
75477     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75478     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
75479     +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
75480     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75481     +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
75482     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75483     +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
75484     +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
75485     +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
75486     +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
75487     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75488     +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
75489     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75490     +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
75491     +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
75492     +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
75493     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75494     +* Ensmbl58: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 4 of 7;
75495     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75496     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75497     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
75498     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
75499     +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
75500     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75501     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75502     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
75503     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75504     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
75505     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
75506     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
75507     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
75508     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
75509     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
75510     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
75511     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
75512     +LENGTH _WARN_ $4
75513     +      F_DepVar  $ 12
75514     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
75515     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
75516     +
75517     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
75518     +
75519     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
75520     +
75521     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
75522     +
75523     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
75524     +
75525     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
75526     +
75527     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
75528     +
75529     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
75530     +
75531     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
75532     +
75533     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
75534     +
75535     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
75536     +
75537     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
75538     +
75539     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
75540     +
75541     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
75542     +
75543     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
75544     +
75545     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
75546     +
75547     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
75548     +
75549     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
75550     +
75551     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
75552     +
75553     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
75554     +
75555     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
75556     +
75557     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
75558     +
75559     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
75560     +
75561     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
75562     +
75563     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
75564     +
75565     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
75566     +
75567     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
75568     +
75569     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
75570     +
75571     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
75572     +
75573     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
75574     +
75575     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
75576     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
75577     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
75578     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
75579     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
75580     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
75581     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
75582     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
75583     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
75584     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
75585     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
75586     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
75587     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
75588     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75589     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75590     +end;
MPRINT(EM_DIAGRAM):   end;
75591     +else do;
MPRINT(EM_DIAGRAM):   else do;
75592     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
75593     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
75594     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75595     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
75596     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
75597     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
75598     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
75599     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
75600     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75601     +         end;
MPRINT(EM_DIAGRAM):   end;
75602     +         else do;
MPRINT(EM_DIAGRAM):   else do;
75603     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
75604     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
75605     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75606     +            end;
MPRINT(EM_DIAGRAM):   end;
75607     +         end;
MPRINT(EM_DIAGRAM):   end;
75608     +      end;
MPRINT(EM_DIAGRAM):   end;
75609     +      else do;
MPRINT(EM_DIAGRAM):   else do;
75610     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
75611     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
75612     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75613     +         end;
MPRINT(EM_DIAGRAM):   end;
75614     +      end;
MPRINT(EM_DIAGRAM):   end;
75615     +   end;
MPRINT(EM_DIAGRAM):   end;
75616     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75617     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
75618     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
75619     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75620     +      end;
MPRINT(EM_DIAGRAM):   end;
75621     +      else do;
MPRINT(EM_DIAGRAM):   else do;
75622     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
75623     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
75624     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
75625     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
75626     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
75627     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75628     +         end;
MPRINT(EM_DIAGRAM):   end;
75629     +      end;
MPRINT(EM_DIAGRAM):   end;
75630     +   end;
MPRINT(EM_DIAGRAM):   end;
75631     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
75632     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
75633     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
75634     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
75635     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
75636     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75637     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75638     +   end;
MPRINT(EM_DIAGRAM):   end;
75639     +end;
MPRINT(EM_DIAGRAM):   end;
75640     +
75641     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75642     +*** Checking missing input Interval
75643     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
75644     +
75645     +IF NMISS(
75646     +   AcceptedCmpTotal ,
75647     +   Frq ,
75648     +   Income ,
75649     +   Mnt ,
75650     +   MntGoldProds ,
75651     +   MntMeatProducts ,
75652     +   NumCatalogPurchases ,
75653     +   NumDealsPurchases ,
75654     +   NumWebVisitsMonth ,
75655     +   RFMstat ,
75656     +   Recency ,
75657     +   Teenhome ,
75658     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
75659     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
75660     +
75661     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75662     +END;
MPRINT(EM_DIAGRAM):   END;
75663     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75664     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
75665     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75666     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75667     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
75668     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
75669     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
75670     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
75671     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
75672     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
75673     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
75674     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
75675     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
75676     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
75677     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
75678     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
75679     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
75680     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
75681     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
75682     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
75683     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
75684     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
75685     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
75686     +END;
MPRINT(EM_DIAGRAM):   END;
75687     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75688     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
75689     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
75690     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
75691     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
75692     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
75693     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
75694     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
75695     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
75696     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
75697     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
75698     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
75699     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
75700     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
75701     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
75702     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
75703     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
75704     +   ELSE S_NumCatalogPurchases
75705     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
75706     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
75707     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
75708     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
75709     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
75710     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
75711     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
75712     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
75713     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
75714     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
75715     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
75716     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
75717     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
75718     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
75719     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
75720     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
75721     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
75722     +END;
MPRINT(EM_DIAGRAM):   END;
75723     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75724     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
75725     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75726     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75727     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
75728     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75729     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75730     +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
75731     +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
75732     +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
75733     +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
75734     +          +     0.18813452089487 * S_NumCatalogPurchases
75735     +          +     0.07572009513796 * S_NumDealsPurchases
75736     +          +     0.26290613719398 * S_NumWebVisitsMonth
75737     +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
75738     +        S_Recency  +    -0.08184869022013 * S_Teenhome
75739     +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 *
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 *
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 *
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 *
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency +
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
75740     +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
75741     +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
75742     +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
75743     +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
75744     +          +      0.3860900431806 * S_NumCatalogPurchases
75745     +          +    -0.05602869666287 * S_NumDealsPurchases
75746     +          +     0.25751125196672 * S_NumWebVisitsMonth
75747     +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
75748     +        S_Recency  +     0.00740928227007 * S_Teenhome
75749     +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 *
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 *
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 *
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 *
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency +
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
75750     +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
75751     +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
75752     +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
75753     +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
75754     +          +     0.20017136343834 * S_NumCatalogPurchases
75755     +          +      0.4177949842415 * S_NumDealsPurchases
75756     +          +     0.12267139708832 * S_NumWebVisitsMonth
75757     +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
75758     +        S_Recency  +    -0.04165775695782 * S_Teenhome
75759     +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 *
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 *
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 *
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 *
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency +
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
75760     +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
75761     +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
75762     +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
75763     +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
75764     +          +    -0.41475045310519 * S_NumCatalogPurchases
75765     +          +     0.05270183882345 * S_NumDealsPurchases
75766     +          +     -0.3411138782759 * S_NumWebVisitsMonth
75767     +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
75768     +        S_Recency  +     0.09131411279492 * S_Teenhome
75769     +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 *
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 *
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 *
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 *
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency +
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
75770     +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
75771     +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
75772     +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
75773     +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
75774     +          +     0.28201604995327 * S_NumCatalogPurchases
75775     +          +     -0.0106712941301 * S_NumDealsPurchases
75776     +          +     0.44937825968958 * S_NumWebVisitsMonth
75777     +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
75778     +        S_Recency  +    -0.07776231003236 * S_Teenhome
75779     +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 *
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 *
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 *
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 *
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency +
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
75780     +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
75781     +          +     -0.2248578245828 * Marital_StatusMarried
75782     +          +     0.07509958702397 * Marital_StatusSingle
75783     +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced +
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle +
-0.12991422082545 * Marital_StatusTogether ;
75784     +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
75785     +          +     0.45662921783631 * Marital_StatusMarried
75786     +          +     -0.7587900494362 * Marital_StatusSingle
75787     +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced +
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle +
0.91918379082777 * Marital_StatusTogether ;
75788     +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
75789     +          +     0.48232640763102 * Marital_StatusMarried
75790     +          +    -0.26767355443511 * Marital_StatusSingle
75791     +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced +
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle +
0.26207298280723 * Marital_StatusTogether ;
75792     +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
75793     +          +       0.692510056964 * Marital_StatusMarried
75794     +          +    -0.62467969689335 * Marital_StatusSingle
75795     +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced +
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle +
0.57377256791387 * Marital_StatusTogether ;
75796     +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
75797     +          +    -0.12414433690654 * Marital_StatusMarried
75798     +          +     0.01287765001755 * Marital_StatusSingle
75799     +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced +
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle +
-0.08087882377532 * Marital_StatusTogether ;
75800     +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
75801     +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
75802     +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
75803     +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
75804     +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
75805     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
75806     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
75807     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
75808     +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
75809     +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
75810     +END;
MPRINT(EM_DIAGRAM):   END;
75811     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75812     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
75813     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
75814     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
75815     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
75816     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
75817     +END;
MPRINT(EM_DIAGRAM):   END;
75818     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75819     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
75820     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75821     +
75822     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
75823     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
75824     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
75825     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
75826     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
75827     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75828     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
75829     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
75830     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
75831     +end;
MPRINT(EM_DIAGRAM):   end;
75832     +else do;
MPRINT(EM_DIAGRAM):   else do;
75833     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
75834     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
75835     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
75836     +   end;
MPRINT(EM_DIAGRAM):   end;
75837     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
75838     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
75839     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
75840     +   end;
MPRINT(EM_DIAGRAM):   end;
75841     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75842     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
75843     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
75844     +   end;
MPRINT(EM_DIAGRAM):   end;
75845     +end;
MPRINT(EM_DIAGRAM):   end;
75846     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75847     +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
75848     +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
75849     +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 +
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
75850     +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
75851     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
75852     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
75853     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
75854     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
75855     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
75856     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
75857     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
75858     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
75859     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
75860     +END;
MPRINT(EM_DIAGRAM):   END;
75861     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75862     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
75863     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
75864     +END;
MPRINT(EM_DIAGRAM):   END;
75865     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
75866     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
75867     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
75868     +END;
MPRINT(EM_DIAGRAM):   END;
75869     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
75870     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
75871     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
75872     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
75873     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
75874     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
75875     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
75876     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75877     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
75878     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75879     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
75880     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
75881     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
75882     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
75883     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
75884     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
75885     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
75886     +END;
MPRINT(EM_DIAGRAM):   END;
75887     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75888     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
75889     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75890     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
75891     +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
75892     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75893     +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
75894     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75895     +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
75896     +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
75897     +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
75898     +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
75899     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75900     +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
75901     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75902     +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
75903     +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
75904     +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
75905     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75906     +* Ensmbl58: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 5 of 7;
75907     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75908     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75909     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
75910     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
75911     +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
75912     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75913     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75914     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
75915     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75916     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
75917     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
75918     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
75919     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
75920     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
75921     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
75922     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
75923     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
75924     +LENGTH _WARN_ $4
75925     +      F_DepVar  $ 12
75926     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
75927     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
75928     +
75929     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
75930     +
75931     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
75932     +
75933     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
75934     +
75935     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
75936     +
75937     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
75938     +
75939     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
75940     +
75941     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
75942     +
75943     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
75944     +
75945     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
75946     +
75947     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
75948     +
75949     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
75950     +
75951     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
75952     +
75953     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
75954     +
75955     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
75956     +
75957     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
75958     +
75959     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
75960     +
75961     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
75962     +
75963     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
75964     +
75965     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
75966     +
75967     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
75968     +
75969     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
75970     +
75971     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
75972     +
75973     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
75974     +
75975     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
75976     +
75977     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
75978     +
75979     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
75980     +
75981     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
75982     +
75983     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
75984     +
75985     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
75986     +
75987     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
75988     +
75989     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
75990     +
75991     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
75992     +
75993     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
75994     +
75995     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
75996     +
75997     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
75998     +
75999     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
76000     +
76001     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
76002     +
76003     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
76004     +
76005     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
76006     +
76007     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
76008     +
76009     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
76010     +
76011     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
76012     +
76013     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
76014     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
76015     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
76016     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
76017     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
76018     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
76019     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
76020     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
76021     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
76022     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
76023     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
76024     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
76025     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
76026     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76027     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76028     +end;
MPRINT(EM_DIAGRAM):   end;
76029     +else do;
MPRINT(EM_DIAGRAM):   else do;
76030     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
76031     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
76032     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76033     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
76034     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
76035     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
76036     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
76037     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
76038     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76039     +         end;
MPRINT(EM_DIAGRAM):   end;
76040     +         else do;
MPRINT(EM_DIAGRAM):   else do;
76041     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
76042     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
76043     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76044     +            end;
MPRINT(EM_DIAGRAM):   end;
76045     +         end;
MPRINT(EM_DIAGRAM):   end;
76046     +      end;
MPRINT(EM_DIAGRAM):   end;
76047     +      else do;
MPRINT(EM_DIAGRAM):   else do;
76048     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
76049     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
76050     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76051     +         end;
MPRINT(EM_DIAGRAM):   end;
76052     +      end;
MPRINT(EM_DIAGRAM):   end;
76053     +   end;
MPRINT(EM_DIAGRAM):   end;
76054     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76055     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
76056     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
76057     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76058     +      end;
MPRINT(EM_DIAGRAM):   end;
76059     +      else do;
MPRINT(EM_DIAGRAM):   else do;
76060     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
76061     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
76062     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
76063     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
76064     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
76065     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76066     +         end;
MPRINT(EM_DIAGRAM):   end;
76067     +      end;
MPRINT(EM_DIAGRAM):   end;
76068     +   end;
MPRINT(EM_DIAGRAM):   end;
76069     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
76070     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
76071     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
76072     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
76073     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
76074     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76075     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76076     +   end;
MPRINT(EM_DIAGRAM):   end;
76077     +end;
MPRINT(EM_DIAGRAM):   end;
76078     +
76079     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76080     +*** Checking missing input Interval
76081     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
76082     +
76083     +IF NMISS(
76084     +   AcceptedCmpTotal ,
76085     +   Frq ,
76086     +   Income ,
76087     +   Mnt ,
76088     +   MntGoldProds ,
76089     +   MntMeatProducts ,
76090     +   NumCatalogPurchases ,
76091     +   NumDealsPurchases ,
76092     +   NumWebVisitsMonth ,
76093     +   RFMstat ,
76094     +   Recency ,
76095     +   Teenhome ,
76096     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
76097     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
76098     +
76099     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76100     +END;
MPRINT(EM_DIAGRAM):   END;
76101     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76102     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
76103     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76104     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76105     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
76106     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
76107     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
76108     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
76109     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
76110     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
76111     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
76112     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
76113     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
76114     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
76115     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
76116     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
76117     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
76118     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
76119     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
76120     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
76121     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
76122     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
76123     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
76124     +END;
MPRINT(EM_DIAGRAM):   END;
76125     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76126     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
76127     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
76128     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
76129     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
76130     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
76131     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
76132     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
76133     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
76134     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
76135     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
76136     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
76137     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
76138     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
76139     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
76140     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
76141     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
76142     +   ELSE S_NumCatalogPurchases
76143     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
76144     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
76145     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
76146     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
76147     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
76148     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
76149     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
76150     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
76151     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
76152     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
76153     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
76154     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
76155     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
76156     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
76157     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
76158     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
76159     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
76160     +END;
MPRINT(EM_DIAGRAM):   END;
76161     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76162     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
76163     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76164     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76165     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
76166     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76167     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76168     +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
76169     +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
76170     +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
76171     +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
76172     +          +    -12.1201262560598 * S_NumCatalogPurchases
76173     +          +    -7.64265449386917 * S_NumDealsPurchases
76174     +          +     -0.8154661733691 * S_NumWebVisitsMonth
76175     +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
76176     +        S_Recency  +     3.79010135100643 * S_Teenhome
76177     +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
76178     +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
76179     +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
76180     +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
76181     +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
76182     +          +    -5.64377068696071 * S_NumCatalogPurchases
76183     +          +       1.315880732417 * S_NumDealsPurchases
76184     +          +    -7.12689902819995 * S_NumWebVisitsMonth
76185     +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
76186     +        S_Recency  +     2.42655161118896 * S_Teenhome
76187     +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
76188     +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
76189     +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
76190     +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
76191     +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
76192     +          +    -7.71653347900468 * S_NumCatalogPurchases
76193     +          +    -2.29382480020793 * S_NumDealsPurchases
76194     +          +    -3.92350308032578 * S_NumWebVisitsMonth
76195     +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
76196     +        S_Recency  +     1.88830044274756 * S_Teenhome
76197     +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
76198     +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
76199     +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
76200     +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
76201     +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
76202     +          +     0.50178849511862 * S_NumCatalogPurchases
76203     +          +     3.33915340676542 * S_NumDealsPurchases
76204     +          +     2.99171363234904 * S_NumWebVisitsMonth
76205     +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
76206     +        S_Recency  +     1.84778865722952 * S_Teenhome
76207     +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
76208     +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
76209     +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
76210     +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
76211     +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
76212     +          +    -5.23430097842472 * S_NumCatalogPurchases
76213     +          +    -1.25644862473488 * S_NumDealsPurchases
76214     +          +     -3.0943337340276 * S_NumWebVisitsMonth
76215     +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
76216     +        S_Recency  +     1.52557456336148 * S_Teenhome
76217     +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
76218     +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
76219     +          +     5.12496303990022 * Marital_StatusMarried
76220     +          +    -7.61364369696186 * Marital_StatusSingle
76221     +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
76222     +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
76223     +          +     7.65332274940308 * Marital_StatusMarried
76224     +          +    -5.13332947688313 * Marital_StatusSingle
76225     +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
76226     +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
76227     +          +     7.95162959069432 * Marital_StatusMarried
76228     +          +    -6.10797604390061 * Marital_StatusSingle
76229     +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
76230     +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
76231     +          +     5.45977621823616 * Marital_StatusMarried
76232     +          +    -10.3527985391218 * Marital_StatusSingle
76233     +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
76234     +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
76235     +          +     8.15909630638185 * Marital_StatusMarried
76236     +          +    -5.88497367282032 * Marital_StatusSingle
76237     +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
76238     +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
76239     +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
76240     +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
76241     +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
76242     +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
76243     +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
76244     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
76245     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
76246     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
76247     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
76248     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
76249     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
76250     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
76251     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
76252     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
76253     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
76254     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
76255     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
76256     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
76257     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
76258     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
76259     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
76260     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
76261     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
76262     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
76263     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
76264     +END;
MPRINT(EM_DIAGRAM):   END;
76265     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76266     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
76267     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
76268     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
76269     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
76270     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
76271     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
76272     +END;
MPRINT(EM_DIAGRAM):   END;
76273     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76274     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
76275     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76276     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76277     +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
76278     +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
76279     +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
76280     +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
76281     +          +      0.8747576336553 * S_NumCatalogPurchases
76282     +          +    -0.23551985234916 * S_NumDealsPurchases
76283     +          +     0.83901499225112 * S_NumWebVisitsMonth
76284     +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
76285     +        S_Recency  +    -0.38340703993831 * S_Teenhome
76286     +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
76287     +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
76288     +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
76289     +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
76290     +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
76291     +          +    -0.99107054453387 * S_NumCatalogPurchases
76292     +          +    -0.68379823410573 * S_NumDealsPurchases
76293     +          +    -1.67939872609259 * S_NumWebVisitsMonth
76294     +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
76295     +        S_Recency  +    -1.65033346710833 * S_Teenhome
76296     +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
76297     +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
76298     +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
76299     +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
76300     +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
76301     +          +      1.4506330104932 * S_NumCatalogPurchases
76302     +          +     0.20085283861849 * S_NumDealsPurchases
76303     +          +     2.37974383924154 * S_NumWebVisitsMonth
76304     +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
76305     +        S_Recency  +     0.60726269989058 * S_Teenhome
76306     +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
76307     +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
76308     +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
76309     +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
76310     +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
76311     +          +    -0.79952426911069 * S_NumCatalogPurchases
76312     +          +    -0.70571099772216 * S_NumDealsPurchases
76313     +          +    -0.32158728049114 * S_NumWebVisitsMonth
76314     +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
76315     +        S_Recency  +     2.29389047813725 * S_Teenhome
76316     +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
76317     +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
76318     +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
76319     +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
76320     +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
76321     +          +    -0.41491605544255 * S_NumCatalogPurchases
76322     +          +     0.49374983047507 * S_NumDealsPurchases
76323     +          +    -1.38692718220359 * S_NumWebVisitsMonth
76324     +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
76325     +        S_Recency  +     1.29605991841828 * S_Teenhome
76326     +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
76327     +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
76328     +          +    -1.29227303709115 * Marital_StatusMarried
76329     +          +     0.71446782242025 * Marital_StatusSingle
76330     +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
76331     +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
76332     +          +      2.0815223604364 * Marital_StatusMarried
76333     +          +     0.79462013188709 * Marital_StatusSingle
76334     +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
76335     +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
76336     +          +     0.44769683627357 * Marital_StatusMarried
76337     +          +     1.09957357551209 * Marital_StatusSingle
76338     +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
76339     +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
76340     +          +    -0.71096069683657 * Marital_StatusMarried
76341     +          +    -0.46849808497503 * Marital_StatusSingle
76342     +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
76343     +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
76344     +          +     0.21000014809177 * Marital_StatusMarried
76345     +          +    -1.05959388759825 * Marital_StatusSingle
76346     +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
76347     +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
76348     +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
76349     +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
76350     +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
76351     +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
76352     +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
76353     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
76354     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
76355     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
76356     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
76357     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
76358     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
76359     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
76360     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
76361     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
76362     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
76363     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
76364     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
76365     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
76366     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
76367     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
76368     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
76369     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
76370     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
76371     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
76372     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
76373     +END;
MPRINT(EM_DIAGRAM):   END;
76374     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76375     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
76376     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
76377     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
76378     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
76379     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
76380     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
76381     +END;
MPRINT(EM_DIAGRAM):   END;
76382     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76383     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
76384     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76385     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76386     +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
76387     +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
76388     +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
76389     +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
76390     +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
76391     +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
76392     +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
76393     +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
76394     +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
76395     +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
76396     +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
76397     +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
76398     +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
76399     +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
76400     +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
76401     +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
76402     +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
76403     +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
76404     +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
76405     +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
76406     +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
76407     +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
76408     +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
76409     +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
76410     +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
76411     +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
76412     +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
76413     +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
76414     +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
76415     +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
76416     +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
76417     +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
76418     +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
76419     +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
76420     +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
76421     +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
76422     +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
76423     +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
76424     +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
76425     +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
76426     +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
76427     +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
76428     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
76429     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
76430     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
76431     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
76432     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
76433     +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
76434     +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
76435     +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
76436     +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
76437     +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
76438     +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
76439     +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
76440     +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
76441     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
76442     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
76443     +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
76444     +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
76445     +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
76446     +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
76447     +END;
MPRINT(EM_DIAGRAM):   END;
76448     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76449     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
76450     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
76451     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
76452     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
76453     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
76454     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
76455     +END;
MPRINT(EM_DIAGRAM):   END;
76456     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76457     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
76458     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76459     +
76460     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
76461     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
76462     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
76463     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
76464     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
76465     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76466     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
76467     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
76468     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
76469     +end;
MPRINT(EM_DIAGRAM):   end;
76470     +else do;
MPRINT(EM_DIAGRAM):   else do;
76471     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
76472     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
76473     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
76474     +   end;
MPRINT(EM_DIAGRAM):   end;
76475     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
76476     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
76477     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
76478     +   end;
MPRINT(EM_DIAGRAM):   end;
76479     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76480     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
76481     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
76482     +   end;
MPRINT(EM_DIAGRAM):   end;
76483     +end;
MPRINT(EM_DIAGRAM):   end;
76484     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76485     +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
76486     +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
76487     +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
76488     +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
76489     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
76490     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
76491     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
76492     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
76493     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
76494     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
76495     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
76496     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
76497     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
76498     +END;
MPRINT(EM_DIAGRAM):   END;
76499     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76500     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
76501     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
76502     +END;
MPRINT(EM_DIAGRAM):   END;
76503     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
76504     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
76505     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
76506     +END;
MPRINT(EM_DIAGRAM):   END;
76507     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
76508     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
76509     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
76510     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
76511     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
76512     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
76513     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
76514     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76515     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
76516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76517     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
76518     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
76519     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
76520     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
76521     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
76522     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
76523     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
76524     +END;
MPRINT(EM_DIAGRAM):   END;
76525     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
76526     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
76527     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
76528     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
76529     +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
76530     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76531     +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
76532     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76533     +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
76534     +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
76535     +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
76536     +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
76537     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76538     +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
76539     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76540     +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
76541     +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
76542     +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
76543     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76544     +* Ensmbl58: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 6 of 7;
76545     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76546     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76547     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
76548     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
76549     +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
76550     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76551     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
76552     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
76553     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
76554     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
76555     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
76556     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
76557     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
76558     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
76559     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
76560     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
76561     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
76562     +LENGTH _WARN_ $4
76563     +      F_DepVar  $ 12
76564     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
76565     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
76566     +
76567     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
76568     +
76569     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
76570     +
76571     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
76572     +
76573     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
76574     +
76575     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
76576     +
76577     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
76578     +
76579     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
76580     +
76581     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
76582     +
76583     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
76584     +
76585     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
76586     +
76587     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
76588     +
76589     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
76590     +
76591     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
76592     +
76593     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
76594     +
76595     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
76596     +
76597     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
76598     +
76599     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
76600     +
76601     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
76602     +
76603     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
76604     +
76605     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
76606     +
76607     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
76608     +
76609     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
76610     +
76611     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
76612     +
76613     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
76614     +
76615     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
76616     +
76617     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
76618     +
76619     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
76620     +
76621     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
76622     +
76623     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
76624     +
76625     +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
76626     +
76627     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
76628     +
76629     +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
76630     +
76631     +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
76632     +
76633     +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
76634     +
76635     +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
76636     +
76637     +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
76638     +
76639     +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
76640     +
76641     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
76642     +
76643     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
76644     +
76645     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
76646     +
76647     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
76648     +
76649     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
76650     +
76651     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
76652     +
76653     +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
76654     +
76655     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
76656     +
76657     +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
76658     +
76659     +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
76660     +
76661     +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
76662     +
76663     +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
76664     +
76665     +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
76666     +
76667     +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
76668     +
76669     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
76670     +
76671     +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
76672     +
76673     +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
76674     +
76675     +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
76676     +
76677     +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
76678     +
76679     +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
76680     +
76681     +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
76682     +
76683     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
76684     +
76685     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
76686     +
76687     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
76688     +
76689     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
76690     +
76691     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
76692     +
76693     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
76694     +
76695     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
76696     +
76697     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
76698     +
76699     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
76700     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
76701     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
76702     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
76703     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
76704     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
76705     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
76706     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
76707     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
76708     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
76709     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
76710     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
76711     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
76712     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76713     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76714     +end;
MPRINT(EM_DIAGRAM):   end;
76715     +else do;
MPRINT(EM_DIAGRAM):   else do;
76716     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
76717     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
76718     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76719     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
76720     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
76721     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
76722     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
76723     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
76724     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76725     +         end;
MPRINT(EM_DIAGRAM):   end;
76726     +         else do;
MPRINT(EM_DIAGRAM):   else do;
76727     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
76728     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
76729     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76730     +            end;
MPRINT(EM_DIAGRAM):   end;
76731     +         end;
MPRINT(EM_DIAGRAM):   end;
76732     +      end;
MPRINT(EM_DIAGRAM):   end;
76733     +      else do;
MPRINT(EM_DIAGRAM):   else do;
76734     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
76735     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
76736     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76737     +         end;
MPRINT(EM_DIAGRAM):   end;
76738     +      end;
MPRINT(EM_DIAGRAM):   end;
76739     +   end;
MPRINT(EM_DIAGRAM):   end;
76740     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76741     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
76742     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
76743     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76744     +      end;
MPRINT(EM_DIAGRAM):   end;
76745     +      else do;
MPRINT(EM_DIAGRAM):   else do;
76746     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
76747     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
76748     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
76749     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
76750     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
76751     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76752     +         end;
MPRINT(EM_DIAGRAM):   end;
76753     +      end;
MPRINT(EM_DIAGRAM):   end;
76754     +   end;
MPRINT(EM_DIAGRAM):   end;
76755     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
76756     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
76757     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
76758     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
76759     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
76760     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76761     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76762     +   end;
MPRINT(EM_DIAGRAM):   end;
76763     +end;
MPRINT(EM_DIAGRAM):   end;
76764     +
76765     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76766     +*** Checking missing input Interval
76767     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
76768     +
76769     +IF NMISS(
76770     +   AcceptedCmpTotal ,
76771     +   Frq ,
76772     +   Income ,
76773     +   Mnt ,
76774     +   MntGoldProds ,
76775     +   MntMeatProducts ,
76776     +   NumCatalogPurchases ,
76777     +   NumDealsPurchases ,
76778     +   NumWebVisitsMonth ,
76779     +   RFMstat ,
76780     +   Recency ,
76781     +   Teenhome ,
76782     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
76783     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
76784     +
76785     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76786     +END;
MPRINT(EM_DIAGRAM):   END;
76787     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76788     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
76789     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76790     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76791     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
76792     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
76793     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
76794     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
76795     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
76796     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
76797     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
76798     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
76799     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
76800     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
76801     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
76802     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
76803     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
76804     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
76805     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
76806     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
76807     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
76808     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
76809     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
76810     +END;
MPRINT(EM_DIAGRAM):   END;
76811     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76812     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
76813     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
76814     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
76815     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
76816     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
76817     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
76818     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
76819     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
76820     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
76821     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
76822     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
76823     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
76824     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
76825     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
76826     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
76827     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
76828     +   ELSE S_NumCatalogPurchases
76829     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
76830     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
76831     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
76832     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
76833     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
76834     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
76835     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
76836     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
76837     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
76838     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
76839     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
76840     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
76841     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
76842     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
76843     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
76844     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
76845     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
76846     +END;
MPRINT(EM_DIAGRAM):   END;
76847     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76848     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
76849     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76850     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76851     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
76852     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76853     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76854     +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
76855     +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
76856     +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
76857     +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
76858     +          +    -0.82528424139262 * S_NumCatalogPurchases
76859     +          +      0.5929046965244 * S_NumDealsPurchases
76860     +          +    -0.52362488197384 * S_NumWebVisitsMonth
76861     +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
76862     +        S_Recency  +    -0.83670225777249 * S_Teenhome
76863     +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
76864     +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
76865     +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
76866     +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
76867     +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
76868     +          +    -0.60117742307807 * S_NumCatalogPurchases
76869     +          +     1.09806082321711 * S_NumDealsPurchases
76870     +          +     1.26617704720444 * S_NumWebVisitsMonth
76871     +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
76872     +        S_Recency  +     -0.2630764341314 * S_Teenhome
76873     +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
76874     +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
76875     +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
76876     +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
76877     +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
76878     +          +     1.63075268570383 * S_NumCatalogPurchases
76879     +          +     0.62057902628545 * S_NumDealsPurchases
76880     +          +     1.85944172136218 * S_NumWebVisitsMonth
76881     +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
76882     +        S_Recency  +    -0.78663308544854 * S_Teenhome
76883     +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
76884     +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
76885     +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
76886     +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
76887     +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
76888     +          +    -2.59032878085972 * S_NumCatalogPurchases
76889     +          +    -0.44146008176644 * S_NumDealsPurchases
76890     +          +     1.16377649939583 * S_NumWebVisitsMonth
76891     +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
76892     +        S_Recency  +    -0.44721505258044 * S_Teenhome
76893     +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
76894     +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
76895     +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
76896     +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
76897     +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
76898     +          +    -2.88423926492169 * S_NumCatalogPurchases
76899     +          +     0.76448279454687 * S_NumDealsPurchases
76900     +          +     0.63782718366339 * S_NumWebVisitsMonth
76901     +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
76902     +        S_Recency  +     0.19809045233143 * S_Teenhome
76903     +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
76904     +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
76905     +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
76906     +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
76907     +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
76908     +          +     1.71243370379543 * S_NumCatalogPurchases
76909     +          +     1.59034024362028 * S_NumDealsPurchases
76910     +          +     2.43090724707282 * S_NumWebVisitsMonth
76911     +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
76912     +        S_Recency  +    -1.20398234836557 * S_Teenhome
76913     +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
76914     +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
76915     +          +     1.90782989914192 * Marital_StatusMarried
76916     +          +    -1.16189886119693 * Marital_StatusSingle
76917     +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
76918     +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
76919     +          +     0.30468777490799 * Marital_StatusMarried
76920     +          +     0.61978761938746 * Marital_StatusSingle
76921     +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
76922     +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
76923     +          +    -1.73477859605124 * Marital_StatusMarried
76924     +          +     1.32595981126289 * Marital_StatusSingle
76925     +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
76926     +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
76927     +          +     0.06077392213964 * Marital_StatusMarried
76928     +          +     0.21115279121703 * Marital_StatusSingle
76929     +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
76930     +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
76931     +          +    -0.24067068377767 * Marital_StatusMarried
76932     +          +      0.2728964145401 * Marital_StatusSingle
76933     +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
76934     +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
76935     +          +    -0.15640287278595 * Marital_StatusMarried
76936     +          +     0.54159395450762 * Marital_StatusSingle
76937     +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
76938     +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
76939     +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
76940     +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
76941     +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
76942     +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
76943     +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
76944     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
76945     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
76946     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
76947     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
76948     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
76949     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
76950     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
76951     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
76952     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
76953     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
76954     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
76955     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
76956     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
76957     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
76958     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
76959     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
76960     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
76961     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
76962     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
76963     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
76964     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
76965     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
76966     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
76967     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
76968     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
76969     +END;
MPRINT(EM_DIAGRAM):   END;
76970     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76971     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
76972     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
76973     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
76974     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
76975     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
76976     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
76977     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
76978     +END;
MPRINT(EM_DIAGRAM):   END;
76979     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76980     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
76981     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76982     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76983     +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
76984     +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
76985     +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
76986     +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
76987     +          +     0.14209124492657 * S_NumCatalogPurchases
76988     +          +    -1.31625106509803 * S_NumDealsPurchases
76989     +          +     2.35745588368331 * S_NumWebVisitsMonth
76990     +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
76991     +        S_Recency  +     1.23527100408525 * S_Teenhome
76992     +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
76993     +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
76994     +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
76995     +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
76996     +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
76997     +          +     1.18605040958794 * S_NumCatalogPurchases
76998     +          +    -0.89798157472835 * S_NumDealsPurchases
76999     +          +    -0.09236646871049 * S_NumWebVisitsMonth
77000     +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
77001     +        S_Recency  +    -0.50770218335102 * S_Teenhome
77002     +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
77003     +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
77004     +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
77005     +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
77006     +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
77007     +          +    -1.53424308314822 * S_NumCatalogPurchases
77008     +          +    -0.80590323269981 * S_NumDealsPurchases
77009     +          +    -1.40104490662303 * S_NumWebVisitsMonth
77010     +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
77011     +        S_Recency  +     0.96086280467056 * S_Teenhome
77012     +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
77013     +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
77014     +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
77015     +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
77016     +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
77017     +          +    -1.25862219948587 * S_NumCatalogPurchases
77018     +          +     1.95015982914109 * S_NumDealsPurchases
77019     +          +     0.64320281589594 * S_NumWebVisitsMonth
77020     +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
77021     +        S_Recency  +    -0.00184949563812 * S_Teenhome
77022     +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
77023     +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
77024     +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
77025     +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
77026     +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
77027     +          +     0.30573893169917 * S_NumCatalogPurchases
77028     +          +     0.93169788380491 * S_NumDealsPurchases
77029     +          +     0.04516037232248 * S_NumWebVisitsMonth
77030     +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
77031     +        S_Recency  +      0.1429120113072 * S_Teenhome
77032     +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
77033     +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
77034     +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
77035     +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
77036     +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
77037     +          +      0.2704422632168 * S_NumCatalogPurchases
77038     +          +      2.3389342094366 * S_NumDealsPurchases
77039     +          +     0.01076302858809 * S_NumWebVisitsMonth
77040     +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
77041     +        S_Recency  +     0.68455094392125 * S_Teenhome
77042     +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
77043     +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
77044     +          +      0.8255833782513 * Marital_StatusMarried
77045     +          +    -0.48959165020896 * Marital_StatusSingle
77046     +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
77047     +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
77048     +          +    -0.36405013930464 * Marital_StatusMarried
77049     +          +    -0.11895921007246 * Marital_StatusSingle
77050     +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
77051     +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
77052     +          +    -1.38902793752658 * Marital_StatusMarried
77053     +          +     0.47104623132568 * Marital_StatusSingle
77054     +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
77055     +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
77056     +          +     0.03793816986941 * Marital_StatusMarried
77057     +          +     0.32286910605532 * Marital_StatusSingle
77058     +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
77059     +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
77060     +          +    -0.60013237897988 * Marital_StatusMarried
77061     +          +    -1.54090744803073 * Marital_StatusSingle
77062     +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
77063     +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
77064     +          +     2.39490119482132 * Marital_StatusMarried
77065     +          +     0.73080073298893 * Marital_StatusSingle
77066     +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
77067     +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
77068     +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
77069     +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
77070     +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
77071     +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
77072     +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
77073     +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
77074     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
77075     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
77076     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
77077     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
77078     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
77079     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
77080     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
77081     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
77082     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
77083     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
77084     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
77085     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
77086     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
77087     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
77088     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
77089     +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
77090     +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
77091     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
77092     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
77093     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
77094     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
77095     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
77096     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
77097     +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
77098     +END;
MPRINT(EM_DIAGRAM):   END;
77099     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77100     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
77101     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
77102     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
77103     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
77104     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
77105     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
77106     +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
77107     +END;
MPRINT(EM_DIAGRAM):   END;
77108     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77109     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
77110     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77111     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77112     +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
77113     +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
77114     +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
77115     +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
77116     +          +     2.25334156596167 * S_NumCatalogPurchases
77117     +          +     1.11206221926547 * S_NumDealsPurchases
77118     +          +    -0.86546062057987 * S_NumWebVisitsMonth
77119     +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
77120     +        S_Recency  +    -1.57916593034924 * S_Teenhome
77121     +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
77122     +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
77123     +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
77124     +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
77125     +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
77126     +          +    -0.72830662589886 * S_NumCatalogPurchases
77127     +          +    -1.43194640925705 * S_NumDealsPurchases
77128     +          +     0.27875145672985 * S_NumWebVisitsMonth
77129     +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
77130     +        S_Recency  +    -1.01056905981073 * S_Teenhome
77131     +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
77132     +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
77133     +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
77134     +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
77135     +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
77136     +          +    -0.29577972728188 * S_NumCatalogPurchases
77137     +          +    -0.09204036503823 * S_NumDealsPurchases
77138     +          +     1.09127760712522 * S_NumWebVisitsMonth
77139     +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
77140     +        S_Recency  +    -1.61269837976842 * S_Teenhome
77141     +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
77142     +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
77143     +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
77144     +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
77145     +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
77146     +          +     0.74771164805463 * S_NumCatalogPurchases
77147     +          +     1.48674373289951 * S_NumDealsPurchases
77148     +          +    -0.43724934700095 * S_NumWebVisitsMonth
77149     +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
77150     +        S_Recency  +      1.5969237416548 * S_Teenhome
77151     +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
77152     +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
77153     +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
77154     +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
77155     +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
77156     +          +     0.32607897654777 * S_NumCatalogPurchases
77157     +          +    -0.05989936582211 * S_NumDealsPurchases
77158     +          +     -0.8863628882594 * S_NumWebVisitsMonth
77159     +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
77160     +        S_Recency  +      1.1633098880037 * S_Teenhome
77161     +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
77162     +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
77163     +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
77164     +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
77165     +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
77166     +          +    -0.32855091358254 * S_NumCatalogPurchases
77167     +          +    -0.04262624947945 * S_NumDealsPurchases
77168     +          +     0.34844893542429 * S_NumWebVisitsMonth
77169     +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
77170     +        S_Recency  +     0.25374922499465 * S_Teenhome
77171     +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
77172     +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
77173     +          +    -1.19357131519861 * Marital_StatusMarried
77174     +          +     1.01104838285626 * Marital_StatusSingle
77175     +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
77176     +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
77177     +          +     0.41518199668826 * Marital_StatusMarried
77178     +          +     1.03267293059069 * Marital_StatusSingle
77179     +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
77180     +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
77181     +          +     0.56306179671807 * Marital_StatusMarried
77182     +          +    -1.20896369649342 * Marital_StatusSingle
77183     +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
77184     +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
77185     +          +    -2.56951757071166 * Marital_StatusMarried
77186     +          +     0.89024254219017 * Marital_StatusSingle
77187     +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
77188     +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
77189     +          +    -0.82560993254767 * Marital_StatusMarried
77190     +          +     0.67892086377875 * Marital_StatusSingle
77191     +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
77192     +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
77193     +          +     1.62783448403167 * Marital_StatusMarried
77194     +          +     0.73020544049082 * Marital_StatusSingle
77195     +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
77196     +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
77197     +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
77198     +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
77199     +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
77200     +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
77201     +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
77202     +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
77203     +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
77204     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
77205     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
77206     +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
77207     +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
77208     +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
77209     +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
77210     +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
77211     +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
77212     +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
77213     +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
77214     +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
77215     +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
77216     +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
77217     +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
77218     +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
77219     +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
77220     +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
77221     +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
77222     +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
77223     +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
77224     +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
77225     +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
77226     +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
77227     +END;
MPRINT(EM_DIAGRAM):   END;
77228     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77229     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
77230     +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
77231     +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
77232     +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
77233     +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
77234     +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
77235     +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
77236     +END;
MPRINT(EM_DIAGRAM):   END;
77237     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77238     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
77239     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77240     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77241     +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
77242     +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
77243     +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
77244     +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
77245     +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
77246     +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
77247     +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
77248     +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
77249     +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
77250     +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
77251     +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
77252     +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
77253     +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
77254     +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
77255     +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
77256     +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
77257     +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
77258     +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
77259     +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
77260     +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
77261     +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
77262     +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
77263     +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
77264     +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
77265     +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
77266     +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
77267     +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
77268     +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
77269     +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
77270     +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
77271     +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
77272     +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
77273     +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
77274     +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
77275     +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
77276     +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
77277     +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
77278     +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
77279     +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
77280     +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
77281     +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
77282     +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
77283     +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
77284     +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
77285     +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
77286     +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
77287     +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
77288     +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
77289     +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
77290     +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
77291     +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
77292     +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
77293     +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
77294     +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
77295     +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
77296     +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
77297     +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
77298     +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
77299     +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
77300     +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
77301     +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
77302     +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
77303     +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
77304     +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
77305     +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
77306     +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
77307     +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
77308     +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
77309     +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
77310     +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
77311     +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
77312     +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
77313     +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
77314     +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
77315     +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
77316     +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
77317     +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
77318     +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
77319     +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
77320     +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
77321     +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
77322     +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
77323     +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
77324     +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
77325     +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
77326     +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
77327     +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
77328     +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
77329     +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
77330     +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
77331     +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
77332     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
77333     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
77334     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
77335     +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
77336     +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
77337     +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
77338     +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
77339     +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
77340     +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
77341     +END;
MPRINT(EM_DIAGRAM):   END;
77342     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77343     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
77344     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
77345     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
77346     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
77347     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
77348     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
77349     +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
77350     +END;
MPRINT(EM_DIAGRAM):   END;
77351     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77352     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
77353     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77354     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77355     +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
77356     +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
77357     +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
77358     +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
77359     +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
77360     +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
77361     +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
77362     +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
77363     +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
77364     +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
77365     +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
77366     +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
77367     +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
77368     +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
77369     +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
77370     +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
77371     +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
77372     +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
77373     +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
77374     +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
77375     +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
77376     +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
77377     +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
77378     +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
77379     +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
77380     +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
77381     +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
77382     +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
77383     +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
77384     +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
77385     +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
77386     +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
77387     +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
77388     +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
77389     +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
77390     +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
77391     +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
77392     +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
77393     +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
77394     +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
77395     +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
77396     +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
77397     +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
77398     +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
77399     +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
77400     +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
77401     +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
77402     +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
77403     +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
77404     +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
77405     +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
77406     +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
77407     +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
77408     +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
77409     +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
77410     +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
77411     +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
77412     +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
77413     +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
77414     +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
77415     +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
77416     +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
77417     +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
77418     +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
77419     +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
77420     +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
77421     +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
77422     +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
77423     +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
77424     +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
77425     +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
77426     +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
77427     +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
77428     +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
77429     +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
77430     +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
77431     +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
77432     +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
77433     +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
77434     +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
77435     +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
77436     +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
77437     +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
77438     +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
77439     +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
77440     +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
77441     +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
77442     +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
77443     +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
77444     +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
77445     +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
77446     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
77447     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
77448     +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
77449     +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
77450     +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
77451     +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
77452     +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
77453     +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
77454     +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
77455     +END;
MPRINT(EM_DIAGRAM):   END;
77456     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77457     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
77458     +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
77459     +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
77460     +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
77461     +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
77462     +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
77463     +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
77464     +END;
MPRINT(EM_DIAGRAM):   END;
77465     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77466     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
77467     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77468     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77469     +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
77470     +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
77471     +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
77472     +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
77473     +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
77474     +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
77475     +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
77476     +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
77477     +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
77478     +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
77479     +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
77480     +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
77481     +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
77482     +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
77483     +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
77484     +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
77485     +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
77486     +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
77487     +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
77488     +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
77489     +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
77490     +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
77491     +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
77492     +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
77493     +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
77494     +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
77495     +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
77496     +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
77497     +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
77498     +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
77499     +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
77500     +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
77501     +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
77502     +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
77503     +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
77504     +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
77505     +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
77506     +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
77507     +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
77508     +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
77509     +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
77510     +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
77511     +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
77512     +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
77513     +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
77514     +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
77515     +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
77516     +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
77517     +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
77518     +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
77519     +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
77520     +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
77521     +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
77522     +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
77523     +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
77524     +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
77525     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
77526     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
77527     +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
77528     +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
77529     +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
77530     +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
77531     +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
77532     +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
77533     +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
77534     +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
77535     +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
77536     +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
77537     +   H3x1_6  = EXP(H3x1_6  - _MAX_);
The SAS System
 
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
77538     +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
77539     +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
77540     +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
77541     +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
77542     +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
77543     +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
77544     +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
77545     +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
77546     +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
77547     +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
77548     +END;
MPRINT(EM_DIAGRAM):   END;
77549     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77550     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
77551     +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
77552     +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
77553     +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
77554     +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
77555     +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
77556     +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
77557     +END;
MPRINT(EM_DIAGRAM):   END;
77558     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77559     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
77560     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77561     +
77562     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
77563     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
77564     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
77565     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
77566     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
77567     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77568     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
77569     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
77570     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
77571     +end;
MPRINT(EM_DIAGRAM):   end;
77572     +else do;
MPRINT(EM_DIAGRAM):   else do;
77573     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
77574     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
77575     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
77576     +   end;
MPRINT(EM_DIAGRAM):   end;
77577     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
77578     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
77579     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
77580     +   end;
MPRINT(EM_DIAGRAM):   end;
77581     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77582     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
77583     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
77584     +   end;
MPRINT(EM_DIAGRAM):   end;
77585     +end;
MPRINT(EM_DIAGRAM):   end;
77586     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77587     +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
77588     +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
77589     +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
77590     +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
77591     +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
77592     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
77593     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
77594     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
77595     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
77596     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
77597     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
77598     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
77599     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
77600     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
77601     +END;
MPRINT(EM_DIAGRAM):   END;
77602     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77603     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
77604     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
77605     +END;
MPRINT(EM_DIAGRAM):   END;
77606     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
77607     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
77608     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
77609     +END;
MPRINT(EM_DIAGRAM):   END;
77610     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
77611     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
77612     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
77613     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
77614     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
77615     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
77616     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
77617     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77618     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
77619     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77620     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
77621     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
77622     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
77623     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
77624     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
77625     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
77626     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
77627     +END;
MPRINT(EM_DIAGRAM):   END;
77628     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
77629     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
77630     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
77631     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
77632     +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
77633     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77634     +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
77635     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77636     +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
77637     +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
77638     +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
77639     +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
77640     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77641     +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
77642     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77643     +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
77644     +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
77645     +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
77646     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77647     +* Ensmbl58: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 7 of 7;
77648     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77649     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77650     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
77651     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
77652     +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
77653     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77654     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
77655     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
77656     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
77657     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
77658     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
77659     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
77660     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
77661     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
77662     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
77663     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
77664     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
77665     +LENGTH _WARN_ $4
77666     +      F_DepVar  $ 12
77667     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
77668     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
77669     +
77670     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
77671     +
77672     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
77673     +
77674     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
77675     +
77676     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
77677     +
77678     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
77679     +
77680     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
77681     +
77682     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
77683     +
77684     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
77685     +
77686     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
77687     +
77688     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
77689     +
77690     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
77691     +
77692     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
77693     +
77694     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
77695     +
77696     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
77697     +
77698     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
77699     +
77700     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
77701     +
77702     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
77703     +
77704     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
77705     +
77706     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
77707     +
77708     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
77709     +
77710     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
77711     +
77712     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
77713     +
77714     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
77715     +
77716     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
77717     +
77718     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
77719     +
77720     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
77721     +
77722     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
77723     +
77724     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
77725     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
77726     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
77727     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
77728     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
77729     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
77730     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
77731     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
77732     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
77733     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
77734     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
77735     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
77736     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
77737     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77738     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77739     +end;
MPRINT(EM_DIAGRAM):   end;
77740     +else do;
MPRINT(EM_DIAGRAM):   else do;
77741     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
77742     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
77743     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77744     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
77745     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
77746     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
77747     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
77748     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
77749     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77750     +         end;
MPRINT(EM_DIAGRAM):   end;
77751     +         else do;
MPRINT(EM_DIAGRAM):   else do;
77752     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
77753     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
77754     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77755     +            end;
MPRINT(EM_DIAGRAM):   end;
77756     +         end;
MPRINT(EM_DIAGRAM):   end;
77757     +      end;
MPRINT(EM_DIAGRAM):   end;
77758     +      else do;
MPRINT(EM_DIAGRAM):   else do;
77759     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
77760     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
77761     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77762     +         end;
MPRINT(EM_DIAGRAM):   end;
77763     +      end;
MPRINT(EM_DIAGRAM):   end;
77764     +   end;
MPRINT(EM_DIAGRAM):   end;
77765     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77766     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
77767     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
77768     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77769     +      end;
MPRINT(EM_DIAGRAM):   end;
77770     +      else do;
MPRINT(EM_DIAGRAM):   else do;
77771     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
77772     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
77773     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
77774     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
77775     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
77776     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77777     +         end;
MPRINT(EM_DIAGRAM):   end;
77778     +      end;
MPRINT(EM_DIAGRAM):   end;
77779     +   end;
MPRINT(EM_DIAGRAM):   end;
77780     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
77781     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
77782     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
77783     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
77784     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
77785     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77786     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77787     +   end;
MPRINT(EM_DIAGRAM):   end;
77788     +end;
MPRINT(EM_DIAGRAM):   end;
77789     +
77790     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77791     +*** Checking missing input Interval
77792     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
77793     +
77794     +IF NMISS(
77795     +   AcceptedCmpTotal ,
77796     +   Frq ,
77797     +   Income ,
77798     +   Mnt ,
77799     +   MntGoldProds ,
77800     +   MntMeatProducts ,
77801     +   NumCatalogPurchases ,
77802     +   NumDealsPurchases ,
77803     +   NumWebVisitsMonth ,
77804     +   RFMstat ,
77805     +   Recency ,
77806     +   Teenhome ,
77807     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
77808     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
77809     +
77810     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77811     +END;
MPRINT(EM_DIAGRAM):   END;
77812     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77813     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
77814     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77815     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77816     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
77817     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
77818     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
77819     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
77820     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
77821     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
77822     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
77823     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
77824     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
77825     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
77826     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
77827     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
77828     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
77829     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
77830     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
77831     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
77832     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
77833     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
77834     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
77835     +END;
MPRINT(EM_DIAGRAM):   END;
77836     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77837     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
77838     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
77839     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
77840     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
77841     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
77842     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
77843     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
77844     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
77845     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
77846     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
77847     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
77848     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
77849     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
77850     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
77851     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
77852     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
77853     +   ELSE S_NumCatalogPurchases
77854     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
77855     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
77856     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
77857     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
77858     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
77859     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
77860     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
77861     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
77862     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
77863     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
77864     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
77865     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
77866     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
77867     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
77868     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
77869     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
77870     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
77871     +END;
MPRINT(EM_DIAGRAM):   END;
77872     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77873     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
77874     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77875     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77876     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
77877     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77878     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77879     +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
77880     +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
77881     +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
77882     +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
77883     +          +    -0.01423451356563 * S_NumCatalogPurchases
77884     +          +     0.06006350655487 * S_NumDealsPurchases
77885     +          +    -0.20885493964335 * S_NumWebVisitsMonth
77886     +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
77887     +        S_Recency  +    -0.03326479668652 * S_Teenhome
77888     +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
77889     +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
77890     +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
77891     +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
77892     +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
77893     +          +    -0.03109266966794 * S_NumCatalogPurchases
77894     +          +     0.05524435494328 * S_NumDealsPurchases
77895     +          +     -0.0105802056898 * S_NumWebVisitsMonth
77896     +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
77897     +        S_Recency  +       0.195010707702 * S_Teenhome
77898     +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
77899     +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
77900     +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
77901     +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
77902     +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
77903     +          +     0.07777995109144 * S_NumCatalogPurchases
77904     +          +     0.08683394019767 * S_NumDealsPurchases
77905     +          +     0.27328366433987 * S_NumWebVisitsMonth
77906     +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
77907     +        S_Recency  +      0.0640153287908 * S_Teenhome
77908     +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
77909     +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
77910     +          +    -0.02695167777393 * Marital_StatusMarried
77911     +          +    -0.00733864032764 * Marital_StatusSingle
77912     +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
77913     +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
77914     +          +     0.42249671001117 * Marital_StatusMarried
77915     +          +    -0.18515416581955 * Marital_StatusSingle
77916     +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
77917     +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
77918     +          +     0.45127582934777 * Marital_StatusMarried
77919     +          +       0.358157766485 * Marital_StatusSingle
77920     +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
77921     +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
77922     +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
77923     +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
77924     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
77925     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
77926     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
77927     +END;
MPRINT(EM_DIAGRAM):   END;
77928     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77929     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
77930     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
77931     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
77932     +END;
MPRINT(EM_DIAGRAM):   END;
77933     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77934     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
77935     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77936     +
77937     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
77938     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
77939     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
77940     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
77941     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
77942     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77943     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
77944     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
77945     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
77946     +end;
MPRINT(EM_DIAGRAM):   end;
77947     +else do;
MPRINT(EM_DIAGRAM):   else do;
77948     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
77949     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
77950     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
77951     +   end;
MPRINT(EM_DIAGRAM):   end;
77952     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
77953     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
77954     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
77955     +   end;
MPRINT(EM_DIAGRAM):   end;
77956     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77957     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
77958     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
77959     +   end;
MPRINT(EM_DIAGRAM):   end;
77960     +end;
MPRINT(EM_DIAGRAM):   end;
77961     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77962     +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
77963     +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
77964     +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
77965     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
77966     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
77967     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
77968     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
77969     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
77970     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
77971     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
77972     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
77973     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
77974     +END;
MPRINT(EM_DIAGRAM):   END;
77975     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77976     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
77977     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
77978     +END;
MPRINT(EM_DIAGRAM):   END;
77979     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
77980     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
77981     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
77982     +END;
MPRINT(EM_DIAGRAM):   END;
77983     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
77984     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
77985     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
77986     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
77987     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
77988     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
77989     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
77990     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77991     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
77992     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77993     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
77994     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
77995     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
77996     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
77997     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
77998     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
77999     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
78000     +END;
MPRINT(EM_DIAGRAM):   END;
78001     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
78002     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
78003     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
78004     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
78005     +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
78006     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78007     +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
78008     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78009     +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
78010     +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
78011     +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
78012     +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
78013     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78014     +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
78015     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78016     +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
78017     +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
78018     +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
78019     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78020     +* Ensmbl58: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Maximum Posteriors of 7 models;
78021     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78022     +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
78023     +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
78024     +P_DepVar1 = max(
78025     +AutoNeural44_P_DepVar1 ,
78026     +AutoNeural45_P_DepVar1 ,
78027     +AutoNeural47_P_DepVar1 ,
78028     +AutoNeural41_P_DepVar1 ,
78029     +AutoNeural42_P_DepVar1 ,
78030     +AutoNeural43_P_DepVar1 ,
78031     +AutoNeural46_P_DepVar1
78032     +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural44_P_DepVar1 , AutoNeural45_P_DepVar1 ,
AutoNeural47_P_DepVar1 , AutoNeural41_P_DepVar1 , AutoNeural42_P_DepVar1 ,
AutoNeural43_P_DepVar1 , AutoNeural46_P_DepVar1 );
78033     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
78034     +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
78035     +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
78036     +end;
MPRINT(EM_DIAGRAM):   end;
78037     +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
78038     +P_DepVar0 = max(
78039     +AutoNeural44_P_DepVar0 ,
78040     +AutoNeural45_P_DepVar0 ,
78041     +AutoNeural47_P_DepVar0 ,
78042     +AutoNeural41_P_DepVar0 ,
78043     +AutoNeural42_P_DepVar0 ,
78044     +AutoNeural43_P_DepVar0 ,
78045     +AutoNeural46_P_DepVar0
78046     +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural44_P_DepVar0 , AutoNeural45_P_DepVar0 ,
AutoNeural47_P_DepVar0 , AutoNeural41_P_DepVar0 , AutoNeural42_P_DepVar0 ,
AutoNeural43_P_DepVar0 , AutoNeural46_P_DepVar0 );
78047     +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
78048     +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
78049     +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
78050     +end;
MPRINT(EM_DIAGRAM):   end;
78051     +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
78052     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78053     +* Ensmbl58: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Classification Vars;
78054     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78055     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
78056     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
78057     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
78058     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
78059     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
78060     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
78061     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
78062     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
78063     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
78064     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
78065     +end;
MPRINT(EM_DIAGRAM):   end;
78066     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
78067     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
78068     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
78069     +end;
MPRINT(EM_DIAGRAM):   end;
78070     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78071     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78072     +* Ensmbl58: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Producing Unformatted variable;
78073     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78074     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
78075     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
78076     +else
78077     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
78078     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78079     +* Ensmbl58: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing _WARN_ Variable;
78080     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78081     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
78082     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
78083     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
78084     +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
78084    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
78085     +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
78085    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
78086     +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
78086    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
78087     +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
78087    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
78088     +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
78088    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
78089     +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
78089    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
78090     +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
78090    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
78091     +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
78091    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
78092     +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
78092    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
78093     +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
78093    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
78094     +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
78094    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
78095     +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
78095    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
78096     +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
78096    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
78097     +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
78097    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
78098     +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
78098    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
78099     +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
78099    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
78100     +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
78100    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
78101     +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
78101    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
78102     +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
78102    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
78103     +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
78103    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
78104     +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
78104    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
78105     +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
78105    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
78106     +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
78106    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
78107     +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
78107    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
78108     +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
78108    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
78109     +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
78109    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
78110     +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
78110    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
78111     +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
78111    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
78112     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78113     +* Ensmbl58: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Residual Vars;
78114     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78115     +if
78116     +F_DepVar NE '1'
78117     +AND F_DepVar NE '0'
78118     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
78119     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
78120     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
78121     +end;
MPRINT(EM_DIAGRAM):   end;
78122     +else do;
MPRINT(EM_DIAGRAM):   else do;
78123     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
78124     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
78125     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
78126     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
78127     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
78128     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
78129     +END;
MPRINT(EM_DIAGRAM):   END;
78130     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
78131      run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL58_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL44_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
78132      quit;
78133      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl58_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl58_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl58_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
78193      filename _pref
78193    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
78194      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
78195      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas.
78196     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
78197     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
78198     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
78199     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
78200     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
78201     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
78202     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
78203     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
78204     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
78205     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
78206     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
78207     +LENGTH _WARN_ $4
78208     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
78209     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
78210     +
78211     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
78212     +
78213     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
78214     +
78215     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
78216     +
78217     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
78218     +
78219     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
78220     +
78221     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
78222     +
78223     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
78224     +
78225     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
78226     +
78227     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
78228     +
78229     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
78230     +
78231     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
78232     +
78233     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
78234     +
78235     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
78236     +
78237     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
78238     +
78239     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
78240     +
78241     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
78242     +
78243     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
78244     +
78245     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
78246     +
78247     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
78248     +
78249     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
78250     +
78251     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
78252     +
78253     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
78254     +
78255     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
78256     +
78257     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
78258     +
78259     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
78260     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
78261     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
78262     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
78263     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
78264     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
78265     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
78266     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
78267     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
78268     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
78269     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
78270     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
78271     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
78272     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
78273     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
78274     +end;
MPRINT(EM_DIAGRAM):   end;
78275     +else do;
MPRINT(EM_DIAGRAM):   else do;
78276     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
78277     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
78278     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
78279     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
78280     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
78281     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
78282     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
78283     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
78284     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78285     +         end;
MPRINT(EM_DIAGRAM):   end;
78286     +         else do;
MPRINT(EM_DIAGRAM):   else do;
78287     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
78288     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
78289     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78290     +            end;
MPRINT(EM_DIAGRAM):   end;
78291     +         end;
MPRINT(EM_DIAGRAM):   end;
78292     +      end;
MPRINT(EM_DIAGRAM):   end;
78293     +      else do;
MPRINT(EM_DIAGRAM):   else do;
78294     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
78295     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
78296     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78297     +         end;
MPRINT(EM_DIAGRAM):   end;
78298     +      end;
MPRINT(EM_DIAGRAM):   end;
78299     +   end;
MPRINT(EM_DIAGRAM):   end;
78300     +   else do;
MPRINT(EM_DIAGRAM):   else do;
78301     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
78302     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
78303     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78304     +      end;
MPRINT(EM_DIAGRAM):   end;
78305     +      else do;
MPRINT(EM_DIAGRAM):   else do;
78306     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
78307     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
78308     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
78309     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
78310     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
78311     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78312     +         end;
MPRINT(EM_DIAGRAM):   end;
78313     +      end;
MPRINT(EM_DIAGRAM):   end;
78314     +   end;
MPRINT(EM_DIAGRAM):   end;
78315     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
78316     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
78317     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
78318     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
78319     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
78320     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
78321     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
78322     +   end;
MPRINT(EM_DIAGRAM):   end;
78323     +end;
MPRINT(EM_DIAGRAM):   end;
78324     +
78325     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78326     +*** Checking missing input Interval
78327     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
78328     +
78329     +IF NMISS(
78330     +   AcceptedCmpTotal ,
78331     +   Frq ,
78332     +   Income ,
78333     +   Mnt ,
78334     +   MntGoldProds ,
78335     +   MntMeatProducts ,
78336     +   NumCatalogPurchases ,
78337     +   NumDealsPurchases ,
78338     +   NumWebVisitsMonth ,
78339     +   RFMstat ,
78340     +   Recency ,
78341     +   Teenhome ,
78342     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
78343     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
78344     +
78345     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
78346     +END;
MPRINT(EM_DIAGRAM):   END;
78347     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78348     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
78349     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78350     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
78351     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
78352     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
78353     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
78354     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
78355     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
78356     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
78357     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
78358     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
78359     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
78360     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
78361     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
78362     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
78363     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
78364     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
78365     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
78366     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
78367     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
78368     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
78369     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
78370     +END;
MPRINT(EM_DIAGRAM):   END;
78371     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78372     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
78373     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
78374     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
78375     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
78376     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
78377     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
78378     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
78379     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
78380     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
78381     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
78382     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
78383     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
78384     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
78385     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
78386     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
78387     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
78388     +   ELSE S_NumCatalogPurchases
78389     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
78390     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
78391     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
78392     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
78393     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
78394     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
78395     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
78396     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
78397     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
78398     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
78399     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
78400     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
78401     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
78402     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
78403     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
78404     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
78405     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
78406     +END;
MPRINT(EM_DIAGRAM):   END;
78407     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78408     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
78409     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78410     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78411     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
78412     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78413     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
78414     +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
78415     +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
78416     +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
78417     +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
78418     +          +    -1.41682724778123 * S_NumCatalogPurchases
78419     +          +    -0.81806751697478 * S_NumDealsPurchases
78420     +          +     0.13721060582485 * S_NumWebVisitsMonth
78421     +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
78422     +        S_Recency  +    -0.11154618858027 * S_Teenhome
78423     +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 *
S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 *
S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 *
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 *
S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency +
-0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
78424     +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
78425     +          +    -0.42475372885131 * Marital_StatusMarried
78426     +          +     0.12884500504295 * Marital_StatusSingle
78427     +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced +
-0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle +
-0.15810267147538 * Marital_StatusTogether ;
78428     +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
78429     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
78430     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
78431     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
78432     +END;
MPRINT(EM_DIAGRAM):   END;
78433     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78434     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
78435     +END;
MPRINT(EM_DIAGRAM):   END;
78436     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78437     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
78438     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78439     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
78440     +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
78441     +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
78442     +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
78443     +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
78444     +          +    -1.27566927607767 * S_NumCatalogPurchases
78445     +          +    -0.30700705450077 * S_NumDealsPurchases
78446     +          +    -1.10002183072059 * S_NumWebVisitsMonth
78447     +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
78448     +        S_Recency  +    -0.46996209026516 * S_Teenhome
78449     +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 *
S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 *
S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 *
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 *
S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency +
-0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
78450     +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
78451     +          +    -0.32389187879499 * Marital_StatusMarried
78452     +          +     0.77856411154011 * Marital_StatusSingle
78453     +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced +
-0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle +
-0.63289071596123 * Marital_StatusTogether ;
78454     +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
78455     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
78456     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
78457     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
78458     +END;
MPRINT(EM_DIAGRAM):   END;
78459     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78460     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
78461     +END;
MPRINT(EM_DIAGRAM):   END;
78462     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78463     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
78464     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78465     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
78466     +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
78467     +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
78468     +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
78469     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
78470     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
78471     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
78472     +END;
MPRINT(EM_DIAGRAM):   END;
78473     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78474     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
78475     +END;
MPRINT(EM_DIAGRAM):   END;
78476     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78477     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
78478     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78479     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
78480     +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
78481     +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
78482     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
78483     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
78484     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
78485     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
78486     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
78487     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
78488     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
78489     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
78490     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
78491     +END;
MPRINT(EM_DIAGRAM):   END;
78492     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78493     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
78494     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
78495     +END;
MPRINT(EM_DIAGRAM):   END;
78496     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
78497     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
78498     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
78499     +END;
MPRINT(EM_DIAGRAM):   END;
78500     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78501     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
78502     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
78503     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
78504     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
78505     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
78506     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
78507     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
78508     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
78509     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
78510     +END;
MPRINT(EM_DIAGRAM):   END;
78511     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
78512     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
78513     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
78514     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
78515      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
78516      quit;
78517      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
78518      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
78519      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
78520      retain ID 2 Node "AutoNeural44";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural44";
78521      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
78522      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 997 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 997 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78523      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
78524      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78525      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 997 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 997 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78526      proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME
CREATOR);
78527      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78528      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL44_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78529      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78530      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
78531      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
78532      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78533      proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
78534      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
78535      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
78536      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78537      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78538      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78539      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
78540      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78541      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78542      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
78543      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
78543    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 514 rows and 5 columns.
 
78544      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
78545      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
78546      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 514 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 514 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78547      filename _pref
78547    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
78548      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
78549      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
78550     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78551     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
78552     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78553     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
78554     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
78555     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
78556      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
78557      quit;
78558      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
78559      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
78560      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
78561      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
78562      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
78563      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78564      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
78565      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78566      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78567      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
78568      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78569      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78570      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78571      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
78572      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
78573      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78574      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
78575      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
78576      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
78577      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78579      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78580      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
78581      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78582      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78583      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
78584      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
78584    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
78585      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
78586      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
78587      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 518 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78588      filename _pref
78588    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
78589      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
78590      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
78591     +
78592     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
78593     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
78593    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
78594     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
78595     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
78596     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
78597     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
78598     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
78599      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
78600      quit;
78601      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
78602      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
78603      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
78604      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
78605      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
78606      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78607      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
78608      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78609      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78610      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
78611      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78612      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
78613      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78614      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
78615      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
78616      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78617      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
78618      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78619      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
78620      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78621      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78622      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78623      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
78624      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78625      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
78626      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
78627      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
78627    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
78628      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78629      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
78630      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 557 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78631      filename _pref
78631    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
78632      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
78633      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
78634     +
78635     +
78636     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
78637     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
78638     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
78639     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
78640     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
78641     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78642     +
78643     +
78644     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
78645     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
78646     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
78647     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
78648     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
78649     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78650     +
78651     +
78652     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
78653     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
78654     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
78655     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
78656     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
78657     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78658     +
78659     +
78660     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
78661     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
78662     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
78663     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
78664     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
78665     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78666     +
78667     +
78668     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
78669     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
78670     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
78671     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
78672     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
78673     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78674     +
78675     +
78676     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
78677     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
78678     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
78679     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
78680     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
78681     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78682     +
78683     +
78684     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
78685     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
78686     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
78687     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
78688     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
78689     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78690     +
78691     +
78692     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
78693     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
78694     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
78695     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
78696     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
78697     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78698     +if
78699     +_FILTERNORM1 not in ( '.')
78700     + and
78701     +_FILTERNORM2 not in ( '.')
78702     + and
78703     +_FILTERNORM3 not in ( '.')
78704     + and
78705     +_FILTERNORM4 not in ( '.')
78706     + and
78707     +_FILTERNORM5 not in ( '.')
78708     + and
78709     +_FILTERNORM6 not in ( '.')
78710     + and
78711     +_FILTERNORM7 not in ( ' ')
78712     + and
78713     +_FILTERNORM8 not in ( ' ')
78714     +and
78715     +( Dt_Customer ne .)
78716     +and ( Income ne . and (Income<=107000))
78717     +and ( Kidhome ne .)
78718     +and ( MntFishProducts ne .)
78719     +and ( MntFruits ne .)
78720     +and ( MntGoldProds ne .)
78721     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
78722     +and ( MntSweetProducts ne .)
78723     +and ( MntWines ne .)
78724     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
78725     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
78726     +and ( NumStorePurchases ne .)
78727     +and ( NumWebPurchases ne .)
78728     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
78729     +and ( Recency ne .)
78730     +and ( Teenhome ne .)
78731     +and ( Year_Birth ne .)
78732     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
78733     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
78734     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
78735     +end;
MPRINT(EM_DIAGRAM):   end;
78736     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
78737     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
78738      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
78739      quit;
78740      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
78741      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
78742      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
78743      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
78744      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
78745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78746      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
78747      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78748      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
78749      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
78750      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78751      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78752      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78753      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
78754      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
78755      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78756      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
78757      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
78758      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
78759      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78760      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78761      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78762      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
78763      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78764      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78765      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
78766      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
78766    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
78767      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78768      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
78769      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
78770      %macro varDept(fcmpdata=,id=);
78771      %global nobs&id scoreFlag&id;
78772      %let scoreFlag&id = 0;
78773      %if &id=1 or ^&fcmpStart %then %do;
78774      proc sort data=&fcmpdata out=_temp&id nodupkey;
78775      by NAME;
78776      where id=&id and LHS in( %let j=1;
78777      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
78778      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
78779      "&var" %let j = %eval(&j+1);
78780      %end;
78781      );
78782      run;
78783      %let dsid = %sysfunc(open(_temp&id));
78784      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78785      %let dsid = %sysfunc(close(&dsid));
78786      %if &&nobs&id %then %do;
78787      %let scoreFlag&id = 1;
78788      %let fcmpStart = 1;
78789      %end;
78790      %else %let fcmpStart = 0;
78791      %end;
78792      %else %do;
78793      proc sort data=&fcmpdata out=_tempid;
78794      where id=&id;
78795      by LHS;
78796      run;
78797      %let dsid = %sysfunc(open(_tempid));
78798      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78799      %let dsid = %sysfunc(close(&dsid));
78800      %if ^&&nobs&id %then %do;
78801      proc datasets lib=work nolist;
78802      delete _tempid;
78803      run;
78804      quit;
78805      %end;
78806      %else %do;
78807      data _tempAll;
78808      set %let j=%eval(&id-1);
78809      %do x=1 %to &j;
78810      %if &&nobs&x %then %do;
78811      _temp&x %end;
78812      %end;
78813      ;
78814      run;
78815      proc sql;
78816      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
78816    ! work._tempid p2 where p.name=p2.lhs;
78817      quit;
78818      data _temp&id;
78819      set _temp&id;
78820      where LHS ne '' and NAME ne '' and Node ne '';
78821      run;
78822      proc datasets lib=work nolist;
78823      delete _tempAll;
78824      run;
78825      %let dsid = %sysfunc(open(_temp&id));
78826      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78827      %let dsid = %sysfunc(close(&dsid));
78828      %if ^&&nobs&id %then %do;
78829      proc datasets lib=work nolist;
78830      delete _temp&id;
78831      run;
78832      quit;
78833      %end;
78834      %else %do;
78835      %let scoreFlag&id = 1;
78836      data _temp&id;
78837      set _temp&id;
78838      where LHS ne NAME and node ne '';
78839      run;
78840      %let dsid = %sysfunc(open(_temp&id));
78841      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78842      %let dsid = %sysfunc(close(&dsid));
78843      %if ^&&nobs&id %then %do;
78844      proc datasets lib=work nolist;
78845      delete _temp&id;
78846      run;
78847      quit;
78848      %end;
78849      %else %do;
78850      proc sort data=_temp&id nodupkey;
78851      by LHS NAME;
78852      run;
78853      %end;
78854      %end;
78855      %end;
78856      %end;
78857      %mend varDept;
78858      %macro optCode(outdata=fcmpdata);
78859      %global fcmpStart;
78860      %let fcmpStart = 0;
78861      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
78862      %let NumNodes=9;
78863      %do k=1 %to &NumNodes;
78864      %vardept(fcmpdata=&outdata, id=&k);
78865      %end;
78866      %mend optCode;
78867      %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 71 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
78868      filename _pref
78868    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
78869      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
78870      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas.
78871     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
78872     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
78873     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
78874     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
78875     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
78876     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
78877     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
78878     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
78879     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
78880     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
78881     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
78882     +LENGTH _WARN_ $4
78883     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
78884     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
78885     +
78886     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
78887     +
78888     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
78889     +
78890     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
78891     +
78892     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
78893     +
78894     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
78895     +
78896     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
78897     +
78898     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
78899     +
78900     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
78901     +
78902     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
78903     +
78904     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
78905     +
78906     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
78907     +
78908     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
78909     +
78910     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
78911     +
78912     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
78913     +
78914     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
78915     +
78916     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
78917     +
78918     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
78919     +
78920     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
78921     +
78922     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
78923     +
78924     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
78925     +
78926     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
78927     +
78928     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
78929     +
78930     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
78931     +
78932     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
78933     +
78934     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
78935     +
78936     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
78937     +
78938     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
78939     +
78940     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
78941     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
78942     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
78943     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
78944     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
78945     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
78946     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
78947     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
78948     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
78949     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
78950     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
78951     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
78952     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
78953     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
78954     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
78955     +end;
MPRINT(EM_DIAGRAM):   end;
78956     +else do;
MPRINT(EM_DIAGRAM):   else do;
78957     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
78958     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
78959     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
78960     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
78961     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
78962     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
78963     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
78964     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
78965     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78966     +         end;
MPRINT(EM_DIAGRAM):   end;
78967     +         else do;
MPRINT(EM_DIAGRAM):   else do;
78968     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
78969     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
78970     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78971     +            end;
MPRINT(EM_DIAGRAM):   end;
78972     +         end;
MPRINT(EM_DIAGRAM):   end;
78973     +      end;
MPRINT(EM_DIAGRAM):   end;
78974     +      else do;
MPRINT(EM_DIAGRAM):   else do;
78975     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
78976     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
78977     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78978     +         end;
MPRINT(EM_DIAGRAM):   end;
78979     +      end;
MPRINT(EM_DIAGRAM):   end;
78980     +   end;
MPRINT(EM_DIAGRAM):   end;
78981     +   else do;
MPRINT(EM_DIAGRAM):   else do;
78982     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
78983     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
78984     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78985     +      end;
MPRINT(EM_DIAGRAM):   end;
78986     +      else do;
MPRINT(EM_DIAGRAM):   else do;
78987     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
78988     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
78989     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
78990     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
78991     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
78992     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
78993     +         end;
MPRINT(EM_DIAGRAM):   end;
78994     +      end;
MPRINT(EM_DIAGRAM):   end;
78995     +   end;
MPRINT(EM_DIAGRAM):   end;
78996     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
78997     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
78998     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
78999     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
79000     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
79001     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79002     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79003     +   end;
MPRINT(EM_DIAGRAM):   end;
79004     +end;
MPRINT(EM_DIAGRAM):   end;
79005     +
79006     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79007     +*** Checking missing input Interval
79008     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
79009     +
79010     +IF NMISS(
79011     +   AcceptedCmpTotal ,
79012     +   Frq ,
79013     +   Income ,
79014     +   Mnt ,
79015     +   MntGoldProds ,
79016     +   MntMeatProducts ,
79017     +   NumCatalogPurchases ,
79018     +   NumDealsPurchases ,
79019     +   NumWebVisitsMonth ,
79020     +   RFMstat ,
79021     +   Recency ,
79022     +   Teenhome ,
79023     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
79024     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
79025     +
79026     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79027     +END;
MPRINT(EM_DIAGRAM):   END;
79028     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79029     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
79030     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79031     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79032     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
79033     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
79034     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
79035     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
79036     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
79037     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
79038     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
79039     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
79040     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
79041     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
79042     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
79043     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
79044     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
79045     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
79046     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
79047     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
79048     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
79049     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
79050     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
79051     +END;
MPRINT(EM_DIAGRAM):   END;
79052     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79053     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
79054     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
79055     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
79056     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
79057     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
79058     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
79059     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
79060     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
79061     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
79062     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
79063     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
79064     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
79065     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
79066     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
79067     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
79068     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
79069     +   ELSE S_NumCatalogPurchases
79070     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
79071     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
79072     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
79073     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
79074     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
79075     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
79076     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
79077     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
79078     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
79079     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
79080     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
79081     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
79082     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
79083     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
79084     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
79085     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
79086     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
79087     +END;
MPRINT(EM_DIAGRAM):   END;
79088     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79089     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
79090     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79091     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79092     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
79093     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79094     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79095     +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
79096     +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
79097     +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
79098     +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
79099     +          +    -0.17075976331442 * S_NumCatalogPurchases
79100     +          +     0.11936859656737 * S_NumDealsPurchases
79101     +          +    -0.02241344557322 * S_NumWebVisitsMonth
79102     +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
79103     +        S_Recency  +     0.15041197329983 * S_Teenhome
79104     +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 *
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 *
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 *
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 *
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency +
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
79105     +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
79106     +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
79107     +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
79108     +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
79109     +          +     -0.1082096588215 * S_NumCatalogPurchases
79110     +          +    -0.35286072202398 * S_NumDealsPurchases
79111     +          +     0.41909763538671 * S_NumWebVisitsMonth
79112     +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
79113     +        S_Recency  +     0.03657184300378 * S_Teenhome
79114     +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 *
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 *
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 *
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 *
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency +
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
79115     +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
79116     +          +     0.35890266446407 * Marital_StatusMarried
79117     +          +    -0.32958224268654 * Marital_StatusSingle
79118     +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced +
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle +
0.26093411772209 * Marital_StatusTogether ;
79119     +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
79120     +          +    -0.02828904025667 * Marital_StatusMarried
79121     +          +      0.2062300465945 * Marital_StatusSingle
79122     +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced +
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle +
-0.11283173230117 * Marital_StatusTogether ;
79123     +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
79124     +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
79125     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
79126     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
79127     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
79128     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
79129     +END;
MPRINT(EM_DIAGRAM):   END;
79130     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79131     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
79132     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
79133     +END;
MPRINT(EM_DIAGRAM):   END;
79134     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79135     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
79136     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79137     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79138     +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
79139     +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
79140     +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
79141     +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
79142     +          +    -0.01120232190428 * S_NumCatalogPurchases
79143     +          +     0.08335061407191 * S_NumDealsPurchases
79144     +          +     0.19045617784308 * S_NumWebVisitsMonth
79145     +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
79146     +        S_Recency  +    -0.01223664611486 * S_Teenhome
79147     +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 *
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 *
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 *
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 *
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency +
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
79148     +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
79149     +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
79150     +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
79151     +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
79152     +          +     0.05405710367459 * S_NumCatalogPurchases
79153     +          +     0.05779108423435 * S_NumDealsPurchases
79154     +          +     0.06578830114376 * S_NumWebVisitsMonth
79155     +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
79156     +        S_Recency  +     0.07188455936346 * S_Teenhome
79157     +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 *
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 *
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 *
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 *
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency +
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
79158     +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
79159     +          +     -0.0971208757038 * Marital_StatusMarried
79160     +          +    -0.07250288479873 * Marital_StatusSingle
79161     +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced +
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle +
-0.09370040203357 * Marital_StatusTogether ;
79162     +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
79163     +          +     0.21091057941446 * Marital_StatusMarried
79164     +          +    -0.10578923343752 * Marital_StatusSingle
79165     +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced +
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle +
0.14340624257864 * Marital_StatusTogether ;
79166     +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
79167     +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
79168     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
79169     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
79170     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
79171     +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
79172     +END;
MPRINT(EM_DIAGRAM):   END;
79173     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79174     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
79175     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
79176     +END;
MPRINT(EM_DIAGRAM):   END;
79177     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79178     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
79179     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79180     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79181     +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
79182     +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
79183     +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 *
H1x2_2 ;
79184     +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
79185     +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
79186     +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
79187     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
79188     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
79189     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
79190     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
79191     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
79192     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
79193     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
79194     +END;
MPRINT(EM_DIAGRAM):   END;
79195     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79196     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
79197     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
79198     +END;
MPRINT(EM_DIAGRAM):   END;
79199     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79200     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
79201     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79202     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79203     +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
79204     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
79205     +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
79206     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
79207     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
79208     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
79209     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
79210     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
79211     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
79212     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
79213     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
79214     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
79215     +END;
MPRINT(EM_DIAGRAM):   END;
79216     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79217     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
79218     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
79219     +END;
MPRINT(EM_DIAGRAM):   END;
79220     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
79221     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
79222     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
79223     +END;
MPRINT(EM_DIAGRAM):   END;
79224     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79225     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
79226     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79227     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
79228     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
79229     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
79230     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
79231     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
79232     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
79233     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
79234     +END;
MPRINT(EM_DIAGRAM):   END;
79235     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
79236     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
79237     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
79238     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
79239      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
79240      quit;
79241      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
79242      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
79243      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
79244      retain ID 2 Node "AutoNeural45";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural45";
79245      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
79246      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1339 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1339 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79247      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
79248      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79249      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1339 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1339 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79250      proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME
CREATOR);
79251      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79252      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL45_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79253      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79254      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
79255      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
79256      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79257      proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
79258      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
79259      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
79260      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79261      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79262      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79263      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
79264      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79265      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79266      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
79267      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
79267    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 658 rows and 5 columns.
 
79268      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79269      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
79270      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 658 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 658 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79271      filename _pref
79271    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
79272      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
79273      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
79274     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
79275     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
79276     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
79277     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
79278     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
79279     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
79280      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
79281      quit;
79282      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
79283      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
79284      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
79285      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
79286      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
79287      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79288      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
79289      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79290      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79291      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
79292      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79293      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79294      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79295      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
79296      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
79297      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79298      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
79299      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79300      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
79301      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79302      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79303      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79304      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
79305      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79306      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79307      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
79308      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
79308    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
79309      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79310      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
79311      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 662 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79312      filename _pref
79312    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
79313      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
79314      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
79315     +
79316     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
79317     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
79317    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
79318     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
79319     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
79320     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
79321     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
79322     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
79323      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
79324      quit;
79325      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
79326      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
79327      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
79328      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
79329      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
79330      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79331      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
79332      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79333      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79334      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
79335      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79336      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79337      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79338      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
79339      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
79340      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79341      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
79342      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79343      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
79344      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79345      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79346      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79347      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
79348      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79349      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79350      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
79351      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
79351    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
79352      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79353      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
79354      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 701 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79355      filename _pref
79355    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
79356      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
79357      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
79358     +
79359     +
79360     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
79361     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
79362     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
79363     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
79364     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
79365     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79366     +
79367     +
79368     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
79369     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
79370     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
79371     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
79372     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
79373     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79374     +
79375     +
79376     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
79377     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
79378     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
79379     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
79380     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
79381     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79382     +
79383     +
79384     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
79385     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
79386     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
79387     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
79388     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
79389     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79390     +
79391     +
79392     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
79393     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
79394     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
79395     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
79396     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
79397     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79398     +
79399     +
79400     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
79401     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
79402     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
79403     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
79404     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
79405     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79406     +
79407     +
79408     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
79409     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
79410     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
79411     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
79412     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
79413     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79414     +
79415     +
79416     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
79417     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
79418     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
79419     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
79420     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
79421     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
79422     +if
79423     +_FILTERNORM1 not in ( '.')
79424     + and
79425     +_FILTERNORM2 not in ( '.')
79426     + and
79427     +_FILTERNORM3 not in ( '.')
79428     + and
79429     +_FILTERNORM4 not in ( '.')
79430     + and
79431     +_FILTERNORM5 not in ( '.')
79432     + and
79433     +_FILTERNORM6 not in ( '.')
79434     + and
79435     +_FILTERNORM7 not in ( ' ')
79436     + and
79437     +_FILTERNORM8 not in ( ' ')
79438     +and
79439     +( Dt_Customer ne .)
79440     +and ( Income ne . and (Income<=107000))
79441     +and ( Kidhome ne .)
79442     +and ( MntFishProducts ne .)
79443     +and ( MntFruits ne .)
79444     +and ( MntGoldProds ne .)
79445     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
79446     +and ( MntSweetProducts ne .)
79447     +and ( MntWines ne .)
79448     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
79449     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
79450     +and ( NumStorePurchases ne .)
79451     +and ( NumWebPurchases ne .)
79452     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
79453     +and ( Recency ne .)
79454     +and ( Teenhome ne .)
79455     +and ( Year_Birth ne .)
79456     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
79457     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
79458     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
79459     +end;
MPRINT(EM_DIAGRAM):   end;
79460     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
79461     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
79462      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
79463      quit;
79464      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
79465      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
79466      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
79467      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
79468      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
79469      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79470      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
79471      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79472      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79473      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
79474      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79475      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79476      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79477      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
79478      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
79479      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79480      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
79481      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
79482      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
79483      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79484      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79485      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79486      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
79487      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79488      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79489      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
79490      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
79490    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
79491      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79492      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
79493      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 767 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79494      %macro varDept(fcmpdata=,id=);
79495      %global nobs&id scoreFlag&id;
79496      %let scoreFlag&id = 0;
79497      %if &id=1 or ^&fcmpStart %then %do;
79498      proc sort data=&fcmpdata out=_temp&id nodupkey;
79499      by NAME;
79500      where id=&id and LHS in( %let j=1;
79501      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
79502      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
79503      "&var" %let j = %eval(&j+1);
79504      %end;
79505      );
79506      run;
79507      %let dsid = %sysfunc(open(_temp&id));
79508      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
79509      %let dsid = %sysfunc(close(&dsid));
79510      %if &&nobs&id %then %do;
79511      %let scoreFlag&id = 1;
79512      %let fcmpStart = 1;
79513      %end;
79514      %else %let fcmpStart = 0;
79515      %end;
79516      %else %do;
79517      proc sort data=&fcmpdata out=_tempid;
79518      where id=&id;
79519      by LHS;
79520      run;
79521      %let dsid = %sysfunc(open(_tempid));
79522      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
79523      %let dsid = %sysfunc(close(&dsid));
79524      %if ^&&nobs&id %then %do;
79525      proc datasets lib=work nolist;
79526      delete _tempid;
79527      run;
79528      quit;
79529      %end;
79530      %else %do;
79531      data _tempAll;
79532      set %let j=%eval(&id-1);
79533      %do x=1 %to &j;
79534      %if &&nobs&x %then %do;
79535      _temp&x %end;
79536      %end;
79537      ;
79538      run;
79539      proc sql;
79540      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
79540    ! work._tempid p2 where p.name=p2.lhs;
79541      quit;
79542      data _temp&id;
79543      set _temp&id;
79544      where LHS ne '' and NAME ne '' and Node ne '';
79545      run;
79546      proc datasets lib=work nolist;
79547      delete _tempAll;
79548      run;
79549      %let dsid = %sysfunc(open(_temp&id));
79550      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
79551      %let dsid = %sysfunc(close(&dsid));
79552      %if ^&&nobs&id %then %do;
79553      proc datasets lib=work nolist;
79554      delete _temp&id;
79555      run;
79556      quit;
79557      %end;
79558      %else %do;
79559      %let scoreFlag&id = 1;
79560      data _temp&id;
79561      set _temp&id;
79562      where LHS ne NAME and node ne '';
79563      run;
79564      %let dsid = %sysfunc(open(_temp&id));
79565      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
79566      %let dsid = %sysfunc(close(&dsid));
79567      %if ^&&nobs&id %then %do;
79568      proc datasets lib=work nolist;
79569      delete _temp&id;
79570      run;
79571      quit;
79572      %end;
79573      %else %do;
79574      proc sort data=_temp&id nodupkey;
79575      by LHS NAME;
79576      run;
79577      %end;
79578      %end;
79579      %end;
79580      %end;
79581      %mend varDept;
79582      %macro optCode(outdata=fcmpdata);
79583      %global fcmpStart;
79584      %let fcmpStart = 0;
79585      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
79586      %let NumNodes=9;
79587      %do k=1 %to &NumNodes;
79588      %vardept(fcmpdata=&outdata, id=&k);
79589      %end;
79590      %mend optCode;
79591      %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 80 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 58 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 48 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
79592      filename _pref
79592    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
79593      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
79594      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
79595     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
79596     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
79597     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
79598     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
79599     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
79600     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
79601     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
79602     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
79603     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
79604     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
79605     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
79606     +LENGTH _WARN_ $4
79607     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
79608     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
79609     +
79610     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
79611     +
79612     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
79613     +
79614     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
79615     +
79616     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
79617     +
79618     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
79619     +
79620     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
79621     +
79622     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
79623     +
79624     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
79625     +
79626     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
79627     +
79628     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
79629     +
79630     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
79631     +
79632     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
79633     +
79634     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
79635     +
79636     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
79637     +
79638     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
79639     +
79640     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
79641     +
79642     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
79643     +
79644     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
79645     +
79646     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
79647     +
79648     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
79649     +
79650     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
79651     +
79652     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
79653     +
79654     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
79655     +
79656     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
79657     +
79658     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
79659     +
79660     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
79661     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
79662     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
79663     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
79664     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
79665     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
79666     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
79667     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
79668     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
79669     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
79670     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
79671     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
79672     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
79673     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
79674     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79675     +end;
MPRINT(EM_DIAGRAM):   end;
79676     +else do;
MPRINT(EM_DIAGRAM):   else do;
79677     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
79678     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
79679     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
79680     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
79681     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
79682     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
79683     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
79684     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
79685     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79686     +         end;
MPRINT(EM_DIAGRAM):   end;
79687     +         else do;
MPRINT(EM_DIAGRAM):   else do;
79688     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
79689     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
79690     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79691     +            end;
MPRINT(EM_DIAGRAM):   end;
79692     +         end;
MPRINT(EM_DIAGRAM):   end;
79693     +      end;
MPRINT(EM_DIAGRAM):   end;
79694     +      else do;
MPRINT(EM_DIAGRAM):   else do;
79695     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
79696     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
79697     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79698     +         end;
MPRINT(EM_DIAGRAM):   end;
79699     +      end;
MPRINT(EM_DIAGRAM):   end;
79700     +   end;
MPRINT(EM_DIAGRAM):   end;
79701     +   else do;
MPRINT(EM_DIAGRAM):   else do;
79702     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
79703     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
79704     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79705     +      end;
MPRINT(EM_DIAGRAM):   end;
79706     +      else do;
MPRINT(EM_DIAGRAM):   else do;
79707     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
79708     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
79709     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
79710     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
79711     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
79712     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
79713     +         end;
MPRINT(EM_DIAGRAM):   end;
79714     +      end;
MPRINT(EM_DIAGRAM):   end;
79715     +   end;
MPRINT(EM_DIAGRAM):   end;
79716     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
79717     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
79718     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
79719     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
79720     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
79721     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
79722     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79723     +   end;
MPRINT(EM_DIAGRAM):   end;
79724     +end;
MPRINT(EM_DIAGRAM):   end;
79725     +
79726     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79727     +*** Checking missing input Interval
79728     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
79729     +
79730     +IF NMISS(
79731     +   AcceptedCmpTotal ,
79732     +   Frq ,
79733     +   Income ,
79734     +   Mnt ,
79735     +   MntGoldProds ,
79736     +   MntMeatProducts ,
79737     +   NumCatalogPurchases ,
79738     +   NumDealsPurchases ,
79739     +   NumWebVisitsMonth ,
79740     +   RFMstat ,
79741     +   Recency ,
79742     +   Teenhome ,
79743     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
79744     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
79745     +
79746     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
79747     +END;
MPRINT(EM_DIAGRAM):   END;
79748     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79749     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
79750     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79751     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79752     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
79753     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
79754     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
79755     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
79756     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
79757     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
79758     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
79759     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
79760     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
79761     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
79762     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
79763     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
79764     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
79765     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
79766     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
79767     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
79768     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
79769     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
79770     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
79771     +END;
MPRINT(EM_DIAGRAM):   END;
79772     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79773     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
79774     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
79775     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
79776     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
79777     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
79778     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
79779     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
79780     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
79781     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
79782     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
79783     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
79784     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
79785     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
79786     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
79787     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
79788     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
79789     +   ELSE S_NumCatalogPurchases
79790     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
79791     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
79792     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
79793     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
79794     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
79795     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
79796     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
79797     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
79798     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
79799     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
79800     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
79801     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
79802     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
79803     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
79804     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
79805     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
79806     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
79807     +END;
MPRINT(EM_DIAGRAM):   END;
79808     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79809     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
79810     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79811     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79812     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
79813     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79814     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79815     +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
79816     +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
79817     +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
79818     +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
79819     +          +     0.96941096546276 * S_NumCatalogPurchases
79820     +          +    -0.78169009272221 * S_NumDealsPurchases
79821     +          +     2.46694552614806 * S_NumWebVisitsMonth
79822     +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
79823     +        S_Recency  +    -1.09760548427625 * S_Teenhome
79824     +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
79825     +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
79826     +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
79827     +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
79828     +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
79829     +          +    -2.01779739147185 * S_NumCatalogPurchases
79830     +          +     -2.6507470301089 * S_NumDealsPurchases
79831     +          +     0.43757499676531 * S_NumWebVisitsMonth
79832     +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
79833     +        S_Recency  +    -0.45321912120397 * S_Teenhome
79834     +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
79835     +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
79836     +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
79837     +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
79838     +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
79839     +          +      3.9474982958259 * S_NumCatalogPurchases
79840     +          +       0.376468804707 * S_NumDealsPurchases
79841     +          +     3.31501013882439 * S_NumWebVisitsMonth
79842     +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
79843     +        S_Recency  +    -1.57729700618019 * S_Teenhome
79844     +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
79845     +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
79846     +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
79847     +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
79848     +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
79849     +          +    -1.47064436222345 * S_NumCatalogPurchases
79850     +          +    -0.47773085529503 * S_NumDealsPurchases
79851     +          +     0.20028656323595 * S_NumWebVisitsMonth
79852     +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
79853     +        S_Recency  +    -0.11530372179295 * S_Teenhome
79854     +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
79855     +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
79856     +          +    -1.68634246986018 * Marital_StatusMarried
79857     +          +     0.61674763327859 * Marital_StatusSingle
79858     +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
79859     +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
79860     +          +    -0.63821523628652 * Marital_StatusMarried
79861     +          +    -1.40431603473643 * Marital_StatusSingle
79862     +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
79863     +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
79864     +          +    -2.86773035723606 * Marital_StatusMarried
79865     +          +     2.52900517550184 * Marital_StatusSingle
79866     +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
79867     +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
79868     +          +    -0.89880425714459 * Marital_StatusMarried
79869     +          +     0.97652284934456 * Marital_StatusSingle
79870     +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
79871     +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
79872     +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
79873     +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
79874     +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
79875     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
79876     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
79877     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
79878     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
79879     +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
79880     +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
79881     +END;
MPRINT(EM_DIAGRAM):   END;
79882     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79883     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
79884     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
79885     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
79886     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
79887     +END;
MPRINT(EM_DIAGRAM):   END;
79888     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79889     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
79890     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79891     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
79892     +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
79893     +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
79894     +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
79895     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
79896     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
79897     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
79898     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
79899     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
79900     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
79901     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
79902     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
79903     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
79904     +END;
MPRINT(EM_DIAGRAM):   END;
79905     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
79906     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
79907     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
79908     +END;
MPRINT(EM_DIAGRAM):   END;
79909     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
79910     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
79911     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
79912     +END;
MPRINT(EM_DIAGRAM):   END;
79913     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79914     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
79915     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
79916     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
79917     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
79918     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
79919     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
79920     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
79921     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
79922     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
79923     +END;
MPRINT(EM_DIAGRAM):   END;
79924     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
79925     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
79926     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
79927     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
79928      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
79929      quit;
79930      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
79931      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
79932      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
79933      retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
79934      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
79935      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
79936      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
79937      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79938      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79939      proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME
CREATOR);
79940      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79941      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79942      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79943      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
79944      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
79945      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79946      proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
79947      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79948      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
79949      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79950      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79951      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79952      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
79953      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79954      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79955      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
79956      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
79956    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 550 rows and 5 columns.
 
79957      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79958      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
79959      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 550 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 550 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79960      filename _pref
79960    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
79961      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
79962      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
79963     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
79964     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
79965     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
79966     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
79967     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
79968     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
79969      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
79970      quit;
79971      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
79972      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
79973      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
79974      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
79975      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
79976      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79977      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
79978      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79979      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79980      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
79981      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79982      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79983      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79984      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
79985      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
79986      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79987      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
79988      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79989      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
79990      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79991      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79992      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
79993      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
79994      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
79995      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
79996      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
79997      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
79997    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
79998      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
79999      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
80000      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 554 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80001      filename _pref
80001    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
80002      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
80003      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
80004     +
80005     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
80006     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
80006    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
80007     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
80008     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
80009     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
80010     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
80011     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
80012      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
80013      quit;
80014      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
80015      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
80016      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
80017      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
80018      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
80019      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80020      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
80021      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80022      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80023      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
80024      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80025      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80026      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80027      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
80028      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
80029      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80030      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
80031      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80032      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
80033      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80034      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80035      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80036      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
80037      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80038      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80039      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
80040      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
80040    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
80041      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80042      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
80043      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 593 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80044      filename _pref
80044    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
80045      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
80046      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
80047     +
80048     +
80049     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
80050     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
80051     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
80052     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
80053     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
80054     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80055     +
80056     +
80057     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
80058     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
80059     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
80060     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
80061     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
80062     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80063     +
80064     +
80065     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
80066     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
80067     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
80068     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
80069     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
80070     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80071     +
80072     +
80073     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
80074     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
80075     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
80076     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
80077     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
80078     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80079     +
80080     +
80081     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
80082     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
80083     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
80084     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
80085     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
80086     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80087     +
80088     +
80089     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
80090     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
80091     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
80092     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
80093     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
80094     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80095     +
80096     +
80097     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
80098     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
80099     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
80100     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
80101     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
80102     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80103     +
80104     +
80105     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
80106     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
80107     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
80108     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
80109     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
80110     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80111     +if
80112     +_FILTERNORM1 not in ( '.')
80113     + and
80114     +_FILTERNORM2 not in ( '.')
80115     + and
80116     +_FILTERNORM3 not in ( '.')
80117     + and
80118     +_FILTERNORM4 not in ( '.')
80119     + and
80120     +_FILTERNORM5 not in ( '.')
80121     + and
80122     +_FILTERNORM6 not in ( '.')
80123     + and
80124     +_FILTERNORM7 not in ( ' ')
80125     + and
80126     +_FILTERNORM8 not in ( ' ')
80127     +and
80128     +( Dt_Customer ne .)
80129     +and ( Income ne . and (Income<=107000))
80130     +and ( Kidhome ne .)
80131     +and ( MntFishProducts ne .)
80132     +and ( MntFruits ne .)
80133     +and ( MntGoldProds ne .)
80134     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
80135     +and ( MntSweetProducts ne .)
80136     +and ( MntWines ne .)
80137     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
80138     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
80139     +and ( NumStorePurchases ne .)
80140     +and ( NumWebPurchases ne .)
80141     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
80142     +and ( Recency ne .)
80143     +and ( Teenhome ne .)
80144     +and ( Year_Birth ne .)
80145     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
80146     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
80147     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
80148     +end;
MPRINT(EM_DIAGRAM):   end;
80149     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
80150     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
80151      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
80152      quit;
80153      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
80154      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
80155      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
80156      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
80157      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
80158      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80159      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
80160      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80161      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80162      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
80163      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80164      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80165      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80166      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
80167      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
80168      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
80169      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
80170      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80171      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
80172      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80173      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80174      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80175      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
80176      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80177      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80178      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
80179      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
80179    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
80180      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80181      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
80182      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80183      %macro varDept(fcmpdata=,id=);
80184      %global nobs&id scoreFlag&id;
80185      %let scoreFlag&id = 0;
80186      %if &id=1 or ^&fcmpStart %then %do;
80187      proc sort data=&fcmpdata out=_temp&id nodupkey;
80188      by NAME;
80189      where id=&id and LHS in( %let j=1;
80190      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
80191      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
80192      "&var" %let j = %eval(&j+1);
80193      %end;
80194      );
80195      run;
80196      %let dsid = %sysfunc(open(_temp&id));
80197      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80198      %let dsid = %sysfunc(close(&dsid));
80199      %if &&nobs&id %then %do;
80200      %let scoreFlag&id = 1;
80201      %let fcmpStart = 1;
80202      %end;
80203      %else %let fcmpStart = 0;
80204      %end;
80205      %else %do;
80206      proc sort data=&fcmpdata out=_tempid;
80207      where id=&id;
80208      by LHS;
80209      run;
80210      %let dsid = %sysfunc(open(_tempid));
80211      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80212      %let dsid = %sysfunc(close(&dsid));
80213      %if ^&&nobs&id %then %do;
80214      proc datasets lib=work nolist;
80215      delete _tempid;
80216      run;
80217      quit;
80218      %end;
80219      %else %do;
80220      data _tempAll;
80221      set %let j=%eval(&id-1);
80222      %do x=1 %to &j;
80223      %if &&nobs&x %then %do;
80224      _temp&x %end;
80225      %end;
80226      ;
80227      run;
80228      proc sql;
80229      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
80229    ! work._tempid p2 where p.name=p2.lhs;
80230      quit;
80231      data _temp&id;
80232      set _temp&id;
80233      where LHS ne '' and NAME ne '' and Node ne '';
80234      run;
80235      proc datasets lib=work nolist;
80236      delete _tempAll;
80237      run;
80238      %let dsid = %sysfunc(open(_temp&id));
80239      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80240      %let dsid = %sysfunc(close(&dsid));
80241      %if ^&&nobs&id %then %do;
80242      proc datasets lib=work nolist;
80243      delete _temp&id;
80244      run;
80245      quit;
80246      %end;
80247      %else %do;
80248      %let scoreFlag&id = 1;
80249      data _temp&id;
80250      set _temp&id;
80251      where LHS ne NAME and node ne '';
80252      run;
80253      %let dsid = %sysfunc(open(_temp&id));
80254      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80255      %let dsid = %sysfunc(close(&dsid));
80256      %if ^&&nobs&id %then %do;
80257      proc datasets lib=work nolist;
80258      delete _temp&id;
80259      run;
80260      quit;
80261      %end;
80262      %else %do;
80263      proc sort data=_temp&id nodupkey;
80264      by LHS NAME;
80265      run;
80266      %end;
80267      %end;
80268      %end;
80269      %end;
80270      %mend varDept;
80271      %macro optCode(outdata=fcmpdata);
80272      %global fcmpStart;
80273      %let fcmpStart = 0;
80274      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
80275      %let NumNodes=9;
80276      %do k=1 %to &NumNodes;
80277      %vardept(fcmpdata=&outdata, id=&k);
80278      %end;
80279      %mend optCode;
80280      %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 46 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
80281      filename _pref
80281    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
80282      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
80283      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas.
80284     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
80285     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
80286     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
80287     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
80288     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
80289     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
80290     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
80291     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
80292     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
80293     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
80294     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
80295     +LENGTH _WARN_ $4
80296     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
80297     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
80298     +
80299     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
80300     +
80301     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
80302     +
80303     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
80304     +
80305     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
80306     +
80307     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
80308     +
80309     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
80310     +
80311     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
80312     +
80313     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
80314     +
80315     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
80316     +
80317     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
80318     +
80319     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
80320     +
80321     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
80322     +
80323     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
80324     +
80325     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
80326     +
80327     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
80328     +
80329     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
80330     +
80331     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
80332     +
80333     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
80334     +
80335     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
80336     +
80337     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
80338     +
80339     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
80340     +
80341     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
80342     +
80343     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
80344     +
80345     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
80346     +
80347     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
80348     +
80349     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
80350     +
80351     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
80352     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
80353     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
80354     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
80355     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
80356     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
80357     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
80358     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
80359     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
80360     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
80361     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
80362     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
80363     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
80364     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
80365     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80366     +end;
MPRINT(EM_DIAGRAM):   end;
80367     +else do;
MPRINT(EM_DIAGRAM):   else do;
80368     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
80369     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
80370     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
80371     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
80372     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
80373     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
80374     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
80375     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
80376     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80377     +         end;
MPRINT(EM_DIAGRAM):   end;
80378     +         else do;
MPRINT(EM_DIAGRAM):   else do;
80379     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
80380     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
80381     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80382     +            end;
MPRINT(EM_DIAGRAM):   end;
80383     +         end;
MPRINT(EM_DIAGRAM):   end;
80384     +      end;
MPRINT(EM_DIAGRAM):   end;
80385     +      else do;
MPRINT(EM_DIAGRAM):   else do;
80386     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
80387     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
80388     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80389     +         end;
MPRINT(EM_DIAGRAM):   end;
80390     +      end;
MPRINT(EM_DIAGRAM):   end;
80391     +   end;
MPRINT(EM_DIAGRAM):   end;
80392     +   else do;
MPRINT(EM_DIAGRAM):   else do;
80393     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
80394     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
80395     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80396     +      end;
MPRINT(EM_DIAGRAM):   end;
80397     +      else do;
MPRINT(EM_DIAGRAM):   else do;
80398     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
80399     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
80400     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
80401     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
80402     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
80403     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
80404     +         end;
MPRINT(EM_DIAGRAM):   end;
80405     +      end;
MPRINT(EM_DIAGRAM):   end;
80406     +   end;
MPRINT(EM_DIAGRAM):   end;
80407     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
80408     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
80409     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
80410     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
80411     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
80412     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
80413     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80414     +   end;
MPRINT(EM_DIAGRAM):   end;
80415     +end;
MPRINT(EM_DIAGRAM):   end;
80416     +
80417     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80418     +*** Checking missing input Interval
80419     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
80420     +
80421     +IF NMISS(
80422     +   AcceptedCmpTotal ,
80423     +   Frq ,
80424     +   Income ,
80425     +   Mnt ,
80426     +   MntGoldProds ,
80427     +   MntMeatProducts ,
80428     +   NumCatalogPurchases ,
80429     +   NumDealsPurchases ,
80430     +   NumWebVisitsMonth ,
80431     +   RFMstat ,
80432     +   Recency ,
80433     +   Teenhome ,
80434     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
80435     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
80436     +
80437     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
80438     +END;
MPRINT(EM_DIAGRAM):   END;
80439     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80440     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
80441     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80442     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
80443     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
80444     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
80445     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
80446     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
80447     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
80448     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
80449     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
80450     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
80451     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
80452     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
80453     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
80454     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
80455     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
80456     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
80457     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
80458     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
80459     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
80460     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
80461     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
80462     +END;
MPRINT(EM_DIAGRAM):   END;
80463     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
80464     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
80465     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
80466     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
80467     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
80468     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
80469     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
80470     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
80471     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
80472     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
80473     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
80474     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
80475     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
80476     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
80477     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
80478     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
80479     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
80480     +   ELSE S_NumCatalogPurchases
80481     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
80482     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
80483     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
80484     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
80485     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
80486     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
80487     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
80488     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
80489     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
80490     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
80491     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
80492     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
80493     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
80494     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
80495     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
80496     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
80497     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
80498     +END;
MPRINT(EM_DIAGRAM):   END;
80499     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80500     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
80501     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80502     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80503     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
80504     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80505     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
80506     +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
80507     +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
80508     +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
80509     +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
80510     +          +     0.18813452089487 * S_NumCatalogPurchases
80511     +          +     0.07572009513796 * S_NumDealsPurchases
80512     +          +     0.26290613719398 * S_NumWebVisitsMonth
80513     +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
80514     +        S_Recency  +    -0.08184869022013 * S_Teenhome
80515     +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 *
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 *
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 *
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 *
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency +
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
80516     +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
80517     +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
80518     +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
80519     +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
80520     +          +      0.3860900431806 * S_NumCatalogPurchases
80521     +          +    -0.05602869666287 * S_NumDealsPurchases
80522     +          +     0.25751125196672 * S_NumWebVisitsMonth
80523     +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
80524     +        S_Recency  +     0.00740928227007 * S_Teenhome
80525     +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 *
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 *
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 *
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 *
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency +
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
80526     +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
80527     +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
80528     +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
80529     +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
80530     +          +     0.20017136343834 * S_NumCatalogPurchases
80531     +          +      0.4177949842415 * S_NumDealsPurchases
80532     +          +     0.12267139708832 * S_NumWebVisitsMonth
80533     +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
80534     +        S_Recency  +    -0.04165775695782 * S_Teenhome
80535     +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 *
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 *
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 *
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 *
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency +
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
80536     +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
80537     +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
80538     +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
80539     +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
80540     +          +    -0.41475045310519 * S_NumCatalogPurchases
80541     +          +     0.05270183882345 * S_NumDealsPurchases
80542     +          +     -0.3411138782759 * S_NumWebVisitsMonth
80543     +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
80544     +        S_Recency  +     0.09131411279492 * S_Teenhome
80545     +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 *
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 *
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 *
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 *
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency +
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
80546     +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
80547     +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
80548     +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
80549     +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
80550     +          +     0.28201604995327 * S_NumCatalogPurchases
80551     +          +     -0.0106712941301 * S_NumDealsPurchases
80552     +          +     0.44937825968958 * S_NumWebVisitsMonth
80553     +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
80554     +        S_Recency  +    -0.07776231003236 * S_Teenhome
80555     +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 *
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 *
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 *
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 *
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency +
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
80556     +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
80557     +          +     -0.2248578245828 * Marital_StatusMarried
80558     +          +     0.07509958702397 * Marital_StatusSingle
80559     +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced +
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle +
-0.12991422082545 * Marital_StatusTogether ;
80560     +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
80561     +          +     0.45662921783631 * Marital_StatusMarried
80562     +          +     -0.7587900494362 * Marital_StatusSingle
80563     +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced +
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle +
0.91918379082777 * Marital_StatusTogether ;
80564     +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
80565     +          +     0.48232640763102 * Marital_StatusMarried
80566     +          +    -0.26767355443511 * Marital_StatusSingle
80567     +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced +
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle +
0.26207298280723 * Marital_StatusTogether ;
80568     +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
80569     +          +       0.692510056964 * Marital_StatusMarried
80570     +          +    -0.62467969689335 * Marital_StatusSingle
80571     +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced +
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle +
0.57377256791387 * Marital_StatusTogether ;
80572     +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
80573     +          +    -0.12414433690654 * Marital_StatusMarried
80574     +          +     0.01287765001755 * Marital_StatusSingle
80575     +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced +
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle +
-0.08087882377532 * Marital_StatusTogether ;
80576     +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
80577     +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
80578     +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
80579     +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
80580     +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
80581     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
80582     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
80583     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
80584     +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
80585     +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
80586     +END;
MPRINT(EM_DIAGRAM):   END;
80587     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
80588     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
80589     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
80590     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
80591     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
80592     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
80593     +END;
MPRINT(EM_DIAGRAM):   END;
80594     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80595     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
80596     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80597     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
80598     +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
80599     +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
80600     +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 +
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
80601     +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
80602     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
80603     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
80604     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
80605     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
80606     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
80607     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
80608     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
80609     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
80610     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
80611     +END;
MPRINT(EM_DIAGRAM):   END;
80612     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
80613     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
80614     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
80615     +END;
MPRINT(EM_DIAGRAM):   END;
80616     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
80617     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
80618     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
80619     +END;
MPRINT(EM_DIAGRAM):   END;
80620     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80621     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
80622     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
80623     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
80624     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
80625     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
80626     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
80627     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
80628     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
80629     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
80630     +END;
MPRINT(EM_DIAGRAM):   END;
80631     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
80632     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
80633     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
80634     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
80635      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
80636      quit;
80637      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
80638      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
80639      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
80640      retain ID 2 Node "AutoNeural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural41";
80641      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
80642      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80643      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
80644      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80645      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80646      proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME
CREATOR);
80647      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80648      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80649      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80650      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
80651      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
80652      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80653      proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
80654      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80655      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
80656      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80657      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80658      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80659      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
80660      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80661      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80662      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
80663      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
80663    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 576 rows and 5 columns.
 
80664      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80665      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
80666      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 576 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 576 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80667      filename _pref
80667    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
80668      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
80669      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
80670     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
80671     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
80672     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
80673     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
80674     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
80675     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
80676      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
80677      quit;
80678      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
80679      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
80680      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
80681      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
80682      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
80683      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80684      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
80685      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80686      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80687      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
80688      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80689      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80690      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80691      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
80692      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
80693      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80694      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
80695      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80696      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
80697      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80698      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80699      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80700      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
80701      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80702      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80703      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
80704      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
80704    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
80705      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80706      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
80707      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 580 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80708      filename _pref
80708    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
80709      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
80710      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
80711     +
80712     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
80713     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
80713    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
80714     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
80715     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
80716     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
80717     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
80718     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
80719      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
80720      quit;
80721      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
80722      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
80723      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
80724      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
80725      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
80726      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80727      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
80728      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80729      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80730      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
80731      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80732      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80733      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80734      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
80735      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
80736      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80737      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
80738      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80739      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
80740      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80741      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80742      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80743      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
80744      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80745      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80746      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
80747      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
80747    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
80748      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80749      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
80750      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 619 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80751      filename _pref
80751    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
80752      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
80753      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
80754     +
80755     +
80756     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
80757     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
80758     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
80759     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
80760     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
80761     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80762     +
80763     +
80764     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
80765     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
80766     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
80767     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
80768     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
80769     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80770     +
80771     +
80772     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
80773     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
80774     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
80775     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
80776     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
80777     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80778     +
80779     +
80780     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
80781     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
80782     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
80783     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
80784     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
80785     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80786     +
80787     +
80788     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
80789     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
80790     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
80791     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
80792     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
80793     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80794     +
80795     +
80796     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
80797     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
80798     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
80799     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
80800     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
80801     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80802     +
80803     +
80804     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
80805     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
80806     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
80807     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
80808     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
80809     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80810     +
80811     +
80812     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
80813     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
80814     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
80815     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
80816     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
80817     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
80818     +if
80819     +_FILTERNORM1 not in ( '.')
80820     + and
80821     +_FILTERNORM2 not in ( '.')
80822     + and
80823     +_FILTERNORM3 not in ( '.')
80824     + and
80825     +_FILTERNORM4 not in ( '.')
80826     + and
80827     +_FILTERNORM5 not in ( '.')
80828     + and
80829     +_FILTERNORM6 not in ( '.')
80830     + and
80831     +_FILTERNORM7 not in ( ' ')
80832     + and
80833     +_FILTERNORM8 not in ( ' ')
80834     +and
80835     +( Dt_Customer ne .)
80836     +and ( Income ne . and (Income<=107000))
80837     +and ( Kidhome ne .)
80838     +and ( MntFishProducts ne .)
80839     +and ( MntFruits ne .)
80840     +and ( MntGoldProds ne .)
80841     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
80842     +and ( MntSweetProducts ne .)
80843     +and ( MntWines ne .)
80844     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
80845     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
80846     +and ( NumStorePurchases ne .)
80847     +and ( NumWebPurchases ne .)
80848     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
80849     +and ( Recency ne .)
80850     +and ( Teenhome ne .)
80851     +and ( Year_Birth ne .)
80852     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
80853     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
80854     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
80855     +end;
MPRINT(EM_DIAGRAM):   end;
80856     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
80857     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
80858      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
80859      quit;
80860      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
80861      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
80862      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
80863      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
80864      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
80865      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80866      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
80867      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80868      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
80869      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
80870      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80871      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80872      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80873      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
80874      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
80875      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80876      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
80877      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
80878      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
80879      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80880      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80881      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
80882      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
80883      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
80884      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80885      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
80886      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
80886    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
80887      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80888      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
80889      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 685 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80890      %macro varDept(fcmpdata=,id=);
80891      %global nobs&id scoreFlag&id;
80892      %let scoreFlag&id = 0;
80893      %if &id=1 or ^&fcmpStart %then %do;
80894      proc sort data=&fcmpdata out=_temp&id nodupkey;
80895      by NAME;
80896      where id=&id and LHS in( %let j=1;
80897      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
80898      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
80899      "&var" %let j = %eval(&j+1);
80900      %end;
80901      );
80902      run;
80903      %let dsid = %sysfunc(open(_temp&id));
80904      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80905      %let dsid = %sysfunc(close(&dsid));
80906      %if &&nobs&id %then %do;
80907      %let scoreFlag&id = 1;
80908      %let fcmpStart = 1;
80909      %end;
80910      %else %let fcmpStart = 0;
80911      %end;
80912      %else %do;
80913      proc sort data=&fcmpdata out=_tempid;
80914      where id=&id;
80915      by LHS;
80916      run;
80917      %let dsid = %sysfunc(open(_tempid));
80918      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80919      %let dsid = %sysfunc(close(&dsid));
80920      %if ^&&nobs&id %then %do;
80921      proc datasets lib=work nolist;
80922      delete _tempid;
80923      run;
80924      quit;
80925      %end;
80926      %else %do;
80927      data _tempAll;
80928      set %let j=%eval(&id-1);
80929      %do x=1 %to &j;
80930      %if &&nobs&x %then %do;
80931      _temp&x %end;
80932      %end;
80933      ;
80934      run;
80935      proc sql;
80936      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
80936    ! work._tempid p2 where p.name=p2.lhs;
80937      quit;
80938      data _temp&id;
80939      set _temp&id;
80940      where LHS ne '' and NAME ne '' and Node ne '';
80941      run;
80942      proc datasets lib=work nolist;
80943      delete _tempAll;
80944      run;
80945      %let dsid = %sysfunc(open(_temp&id));
80946      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80947      %let dsid = %sysfunc(close(&dsid));
80948      %if ^&&nobs&id %then %do;
80949      proc datasets lib=work nolist;
80950      delete _temp&id;
80951      run;
80952      quit;
80953      %end;
80954      %else %do;
80955      %let scoreFlag&id = 1;
80956      data _temp&id;
80957      set _temp&id;
80958      where LHS ne NAME and node ne '';
80959      run;
80960      %let dsid = %sysfunc(open(_temp&id));
80961      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
80962      %let dsid = %sysfunc(close(&dsid));
80963      %if ^&&nobs&id %then %do;
80964      proc datasets lib=work nolist;
80965      delete _temp&id;
80966      run;
80967      quit;
80968      %end;
80969      %else %do;
80970      proc sort data=_temp&id nodupkey;
80971      by LHS NAME;
80972      run;
80973      %end;
80974      %end;
80975      %end;
80976      %end;
80977      %mend varDept;
80978      %macro optCode(outdata=fcmpdata);
80979      %global fcmpStart;
80980      %let fcmpStart = 0;
80981      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
80982      %let NumNodes=9;
80983      %do k=1 %to &NumNodes;
80984      %vardept(fcmpdata=&outdata, id=&k);
80985      %end;
80986      %mend optCode;
80987      %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 77 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 56 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
80988      filename _pref
80988    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
80989      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
80990      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
80991     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
80992     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
80993     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
80994     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
80995     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
80996     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
80997     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
80998     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
80999     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
81000     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
81001     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
81002     +LENGTH _WARN_ $4
81003     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
81004     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
81005     +
81006     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
81007     +
81008     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
81009     +
81010     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
81011     +
81012     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
81013     +
81014     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
81015     +
81016     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
81017     +
81018     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
81019     +
81020     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
81021     +
81022     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
81023     +
81024     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
81025     +
81026     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
81027     +
81028     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
81029     +
81030     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
81031     +
81032     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
81033     +
81034     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
81035     +
81036     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
81037     +
81038     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
81039     +
81040     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
81041     +
81042     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
81043     +
81044     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
81045     +
81046     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
81047     +
81048     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
81049     +
81050     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
81051     +
81052     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
81053     +
81054     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
81055     +
81056     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
81057     +
81058     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
81059     +
81060     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
81061     +
81062     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
81063     +
81064     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
81065     +
81066     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
81067     +
81068     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
81069     +
81070     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
81071     +
81072     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
81073     +
81074     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
81075     +
81076     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
81077     +
81078     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
81079     +
81080     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
81081     +
81082     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
81083     +
81084     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
81085     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
81086     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
81087     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
81088     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
81089     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
81090     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
81091     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
81092     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
81093     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
81094     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
81095     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
81096     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
81097     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
81098     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
81099     +end;
MPRINT(EM_DIAGRAM):   end;
81100     +else do;
MPRINT(EM_DIAGRAM):   else do;
81101     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
81102     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
81103     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
81104     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
81105     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
81106     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
81107     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
81108     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
81109     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
81110     +         end;
MPRINT(EM_DIAGRAM):   end;
81111     +         else do;
MPRINT(EM_DIAGRAM):   else do;
81112     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
81113     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
81114     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
81115     +            end;
MPRINT(EM_DIAGRAM):   end;
81116     +         end;
MPRINT(EM_DIAGRAM):   end;
81117     +      end;
MPRINT(EM_DIAGRAM):   end;
81118     +      else do;
MPRINT(EM_DIAGRAM):   else do;
81119     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
81120     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
81121     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
81122     +         end;
MPRINT(EM_DIAGRAM):   end;
81123     +      end;
MPRINT(EM_DIAGRAM):   end;
81124     +   end;
MPRINT(EM_DIAGRAM):   end;
81125     +   else do;
MPRINT(EM_DIAGRAM):   else do;
81126     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
81127     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
81128     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
81129     +      end;
MPRINT(EM_DIAGRAM):   end;
81130     +      else do;
MPRINT(EM_DIAGRAM):   else do;
81131     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
81132     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
81133     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
81134     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
81135     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
81136     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
81137     +         end;
MPRINT(EM_DIAGRAM):   end;
81138     +      end;
MPRINT(EM_DIAGRAM):   end;
81139     +   end;
MPRINT(EM_DIAGRAM):   end;
81140     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
81141     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
81142     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
81143     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
81144     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
81145     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
81146     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
81147     +   end;
MPRINT(EM_DIAGRAM):   end;
81148     +end;
MPRINT(EM_DIAGRAM):   end;
81149     +
81150     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81151     +*** Checking missing input Interval
81152     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
81153     +
81154     +IF NMISS(
81155     +   AcceptedCmpTotal ,
81156     +   Frq ,
81157     +   Income ,
81158     +   Mnt ,
81159     +   MntGoldProds ,
81160     +   MntMeatProducts ,
81161     +   NumCatalogPurchases ,
81162     +   NumDealsPurchases ,
81163     +   NumWebVisitsMonth ,
81164     +   RFMstat ,
81165     +   Recency ,
81166     +   Teenhome ,
81167     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
81168     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
81169     +
81170     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
81171     +END;
MPRINT(EM_DIAGRAM):   END;
81172     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81173     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
81174     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81175     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
81176     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
81177     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
81178     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
81179     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
81180     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
81181     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
81182     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
81183     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
81184     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
81185     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
81186     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
81187     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
81188     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
81189     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
81190     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
81191     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
81192     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
81193     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
81194     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
81195     +END;
MPRINT(EM_DIAGRAM):   END;
81196     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
81197     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
81198     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
81199     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
81200     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
81201     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
81202     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
81203     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
81204     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
81205     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
81206     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
81207     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
81208     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
81209     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
81210     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
81211     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
81212     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
81213     +   ELSE S_NumCatalogPurchases
81214     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
81215     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
81216     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
81217     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
81218     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
81219     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
81220     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
81221     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
81222     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
81223     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
81224     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
81225     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
81226     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
81227     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
81228     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
81229     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
81230     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
81231     +END;
MPRINT(EM_DIAGRAM):   END;
81232     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81233     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
81234     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81235     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81236     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
81237     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81238     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
81239     +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
81240     +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
81241     +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
81242     +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
81243     +          +    -12.1201262560598 * S_NumCatalogPurchases
81244     +          +    -7.64265449386917 * S_NumDealsPurchases
81245     +          +     -0.8154661733691 * S_NumWebVisitsMonth
81246     +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
81247     +        S_Recency  +     3.79010135100643 * S_Teenhome
81248     +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
81249     +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
81250     +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
81251     +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
81252     +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
81253     +          +    -5.64377068696071 * S_NumCatalogPurchases
81254     +          +       1.315880732417 * S_NumDealsPurchases
81255     +          +    -7.12689902819995 * S_NumWebVisitsMonth
81256     +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
81257     +        S_Recency  +     2.42655161118896 * S_Teenhome
81258     +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
81259     +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
81260     +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
81261     +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
81262     +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
81263     +          +    -7.71653347900468 * S_NumCatalogPurchases
81264     +          +    -2.29382480020793 * S_NumDealsPurchases
81265     +          +    -3.92350308032578 * S_NumWebVisitsMonth
81266     +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
81267     +        S_Recency  +     1.88830044274756 * S_Teenhome
81268     +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
81269     +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
81270     +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
81271     +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
81272     +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
81273     +          +     0.50178849511862 * S_NumCatalogPurchases
81274     +          +     3.33915340676542 * S_NumDealsPurchases
81275     +          +     2.99171363234904 * S_NumWebVisitsMonth
81276     +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
81277     +        S_Recency  +     1.84778865722952 * S_Teenhome
81278     +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
81279     +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
81280     +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
81281     +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
81282     +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
81283     +          +    -5.23430097842472 * S_NumCatalogPurchases
81284     +          +    -1.25644862473488 * S_NumDealsPurchases
81285     +          +     -3.0943337340276 * S_NumWebVisitsMonth
81286     +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
81287     +        S_Recency  +     1.52557456336148 * S_Teenhome
81288     +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
81289     +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
81290     +          +     5.12496303990022 * Marital_StatusMarried
81291     +          +    -7.61364369696186 * Marital_StatusSingle
81292     +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
81293     +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
81294     +          +     7.65332274940308 * Marital_StatusMarried
81295     +          +    -5.13332947688313 * Marital_StatusSingle
81296     +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
81297     +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
81298     +          +     7.95162959069432 * Marital_StatusMarried
81299     +          +    -6.10797604390061 * Marital_StatusSingle
81300     +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
81301     +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
81302     +          +     5.45977621823616 * Marital_StatusMarried
81303     +          +    -10.3527985391218 * Marital_StatusSingle
81304     +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
81305     +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
81306     +          +     8.15909630638185 * Marital_StatusMarried
81307     +          +    -5.88497367282032 * Marital_StatusSingle
81308     +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
81309     +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
81310     +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
81311     +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
81312     +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
81313     +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
81314     +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
81315     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
81316     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
81317     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
81318     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
81319     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
81320     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
81321     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
81322     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
81323     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
81324     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
81325     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
81326     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
81327     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
81328     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
81329     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
81330     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
81331     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
81332     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
81333     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
81334     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
81335     +END;
MPRINT(EM_DIAGRAM):   END;
81336     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
81337     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
81338     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
81339     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
81340     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
81341     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
81342     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
81343     +END;
MPRINT(EM_DIAGRAM):   END;
81344     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81345     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
81346     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81347     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
81348     +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
81349     +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
81350     +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
81351     +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
81352     +          +      0.8747576336553 * S_NumCatalogPurchases
81353     +          +    -0.23551985234916 * S_NumDealsPurchases
81354     +          +     0.83901499225112 * S_NumWebVisitsMonth
81355     +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
81356     +        S_Recency  +    -0.38340703993831 * S_Teenhome
81357     +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
81358     +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
81359     +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
81360     +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
81361     +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
81362     +          +    -0.99107054453387 * S_NumCatalogPurchases
81363     +          +    -0.68379823410573 * S_NumDealsPurchases
81364     +          +    -1.67939872609259 * S_NumWebVisitsMonth
81365     +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
81366     +        S_Recency  +    -1.65033346710833 * S_Teenhome
81367     +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
81368     +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
81369     +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
81370     +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
81371     +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
81372     +          +      1.4506330104932 * S_NumCatalogPurchases
81373     +          +     0.20085283861849 * S_NumDealsPurchases
81374     +          +     2.37974383924154 * S_NumWebVisitsMonth
81375     +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
81376     +        S_Recency  +     0.60726269989058 * S_Teenhome
81377     +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
81378     +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
81379     +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
81380     +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
81381     +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
81382     +          +    -0.79952426911069 * S_NumCatalogPurchases
81383     +          +    -0.70571099772216 * S_NumDealsPurchases
81384     +          +    -0.32158728049114 * S_NumWebVisitsMonth
81385     +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
81386     +        S_Recency  +     2.29389047813725 * S_Teenhome
81387     +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
81388     +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
81389     +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
81390     +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
81391     +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
81392     +          +    -0.41491605544255 * S_NumCatalogPurchases
81393     +          +     0.49374983047507 * S_NumDealsPurchases
81394     +          +    -1.38692718220359 * S_NumWebVisitsMonth
81395     +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
81396     +        S_Recency  +     1.29605991841828 * S_Teenhome
81397     +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
81398     +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
81399     +          +    -1.29227303709115 * Marital_StatusMarried
81400     +          +     0.71446782242025 * Marital_StatusSingle
81401     +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
81402     +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
81403     +          +      2.0815223604364 * Marital_StatusMarried
81404     +          +     0.79462013188709 * Marital_StatusSingle
81405     +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
81406     +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
81407     +          +     0.44769683627357 * Marital_StatusMarried
81408     +          +     1.09957357551209 * Marital_StatusSingle
81409     +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
81410     +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
81411     +          +    -0.71096069683657 * Marital_StatusMarried
81412     +          +    -0.46849808497503 * Marital_StatusSingle
81413     +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
81414     +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
81415     +          +     0.21000014809177 * Marital_StatusMarried
81416     +          +    -1.05959388759825 * Marital_StatusSingle
81417     +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
81418     +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
81419     +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
81420     +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
81421     +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
81422     +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
81423     +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
81424     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
81425     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
81426     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
81427     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
81428     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
81429     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
81430     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
81431     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
81432     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
81433     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
81434     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
81435     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
81436     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
81437     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
81438     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
81439     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
81440     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
81441     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
81442     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
81443     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
81444     +END;
MPRINT(EM_DIAGRAM):   END;
81445     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
81446     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
81447     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
81448     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
81449     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
81450     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
81451     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
81452     +END;
MPRINT(EM_DIAGRAM):   END;
81453     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81454     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
81455     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81456     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
81457     +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
81458     +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
81459     +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
81460     +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
81461     +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
81462     +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
81463     +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
81464     +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
81465     +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
81466     +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
81467     +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
81468     +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
81469     +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
81470     +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
81471     +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
81472     +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
81473     +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
81474     +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
81475     +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
81476     +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
81477     +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
81478     +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
81479     +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
81480     +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
81481     +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
81482     +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
81483     +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
The SAS System
 
+ 0.83089577154267 * H1x2_6 ;
81484     +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
81485     +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
81486     +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
81487     +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
81488     +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
81489     +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
81490     +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
81491     +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
81492     +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
81493     +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
81494     +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
81495     +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
81496     +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
81497     +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
81498     +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
81499     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
81500     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
81501     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
81502     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
81503     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
81504     +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
81505     +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
81506     +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
81507     +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
81508     +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
81509     +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
81510     +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
81511     +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
81512     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
81513     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
81514     +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
81515     +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
81516     +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
81517     +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
81518     +END;
MPRINT(EM_DIAGRAM):   END;
81519     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
81520     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
81521     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
81522     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
81523     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
81524     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
81525     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
81526     +END;
MPRINT(EM_DIAGRAM):   END;
81527     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81528     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
81529     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81530     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
81531     +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
81532     +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
81533     +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
81534     +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
81535     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
81536     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
81537     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
81538     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
81539     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
81540     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
81541     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
81542     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
81543     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
81544     +END;
MPRINT(EM_DIAGRAM):   END;
81545     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
81546     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
81547     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
81548     +END;
MPRINT(EM_DIAGRAM):   END;
81549     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
81550     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
81551     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
81552     +END;
MPRINT(EM_DIAGRAM):   END;
81553     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81554     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
81555     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
81556     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
81557     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
81558     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
81559     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
81560     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
81561     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
81562     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
81563     +END;
MPRINT(EM_DIAGRAM):   END;
81564     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
81565     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
81566     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
81567     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
81568      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
81569      quit;
81570      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
81571      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
81572      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
81573      retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
81574      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
81575      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81576      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
81577      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81579      proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME
CREATOR);
81580      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81581      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81582      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81583      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
81584      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
81585      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81586      proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
81587      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81588      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
81589      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81590      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81591      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81592      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
81593      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81594      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81595      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
81596      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
81596    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1780 rows and 5 columns.
 
81597      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81598      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
81599      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1780 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1780 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.22 seconds
      cpu time            0.01 seconds
 
 
81600      filename _pref
81600    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
81601      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
81602      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
81603     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
81604     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
81605     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
81606     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
81607     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
81608     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
81609      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
81610      quit;
81611      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
81612      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
81613      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
81614      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
81615      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
81616      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81617      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
81618      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81619      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81620      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
81621      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81622      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81623      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81624      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
81625      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
81626      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81627      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
81628      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
81629      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
81630      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81631      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81632      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81633      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
81634      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81635      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81636      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
81637      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
81637    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
81638      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81639      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
81640      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1784 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81641      filename _pref
81641    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
81642      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
81643      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
81644     +
81645     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
81646     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
81646    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
81647     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
81648     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
81649     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
81650     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
81651     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
81652      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
81653      quit;
81654      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
81655      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
81656      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
81657      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
81658      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
81659      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81660      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
81661      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81662      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81663      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
81664      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81665      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81666      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81667      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
81668      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
81669      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81670      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
81671      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81672      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
81673      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81674      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81675      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81676      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
81677      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81678      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81679      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
81680      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
81680    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
81681      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81682      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
81683      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1823 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81684      filename _pref
81684    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
81685      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
81686      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
81687     +
81688     +
81689     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
81690     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
81691     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
81692     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
81693     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
81694     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81695     +
81696     +
81697     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
81698     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
81699     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
81700     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
81701     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
81702     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81703     +
81704     +
81705     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
81706     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
81707     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
81708     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
81709     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
81710     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81711     +
81712     +
81713     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
81714     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
81715     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
81716     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
81717     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
81718     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81719     +
81720     +
81721     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
81722     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
81723     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
81724     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
81725     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
81726     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81727     +
81728     +
81729     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
81730     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
81731     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
81732     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
81733     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
81734     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81735     +
81736     +
81737     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
81738     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
81739     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
81740     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
81741     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
81742     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81743     +
81744     +
81745     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
81746     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
81747     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
81748     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
81749     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
81750     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
81751     +if
81752     +_FILTERNORM1 not in ( '.')
81753     + and
81754     +_FILTERNORM2 not in ( '.')
81755     + and
81756     +_FILTERNORM3 not in ( '.')
81757     + and
81758     +_FILTERNORM4 not in ( '.')
81759     + and
81760     +_FILTERNORM5 not in ( '.')
81761     + and
81762     +_FILTERNORM6 not in ( '.')
81763     + and
81764     +_FILTERNORM7 not in ( ' ')
81765     + and
81766     +_FILTERNORM8 not in ( ' ')
81767     +and
81768     +( Dt_Customer ne .)
81769     +and ( Income ne . and (Income<=107000))
81770     +and ( Kidhome ne .)
81771     +and ( MntFishProducts ne .)
81772     +and ( MntFruits ne .)
81773     +and ( MntGoldProds ne .)
81774     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
81775     +and ( MntSweetProducts ne .)
81776     +and ( MntWines ne .)
81777     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
81778     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
81779     +and ( NumStorePurchases ne .)
81780     +and ( NumWebPurchases ne .)
81781     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
81782     +and ( Recency ne .)
81783     +and ( Teenhome ne .)
81784     +and ( Year_Birth ne .)
81785     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
81786     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
81787     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
81788     +end;
MPRINT(EM_DIAGRAM):   end;
81789     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
81790     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
81791      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
81792      quit;
81793      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
81794      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
81795      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
81796      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
81797      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
81798      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81799      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
81800      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81801      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81802      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
81803      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81804      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81805      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81806      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
81807      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
81808      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81809      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
81810      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81811      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
81812      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81813      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81814      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
81815      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
81816      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
81817      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
81818      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
81819      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
81819    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
81820      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81821      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
81822      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1889 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
81823      %macro varDept(fcmpdata=,id=);
81824      %global nobs&id scoreFlag&id;
81825      %let scoreFlag&id = 0;
81826      %if &id=1 or ^&fcmpStart %then %do;
81827      proc sort data=&fcmpdata out=_temp&id nodupkey;
81828      by NAME;
81829      where id=&id and LHS in( %let j=1;
81830      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
81831      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
81832      "&var" %let j = %eval(&j+1);
81833      %end;
81834      );
81835      run;
81836      %let dsid = %sysfunc(open(_temp&id));
81837      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
81838      %let dsid = %sysfunc(close(&dsid));
81839      %if &&nobs&id %then %do;
81840      %let scoreFlag&id = 1;
81841      %let fcmpStart = 1;
81842      %end;
81843      %else %let fcmpStart = 0;
81844      %end;
81845      %else %do;
81846      proc sort data=&fcmpdata out=_tempid;
81847      where id=&id;
81848      by LHS;
81849      run;
81850      %let dsid = %sysfunc(open(_tempid));
81851      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
81852      %let dsid = %sysfunc(close(&dsid));
81853      %if ^&&nobs&id %then %do;
81854      proc datasets lib=work nolist;
81855      delete _tempid;
81856      run;
81857      quit;
81858      %end;
81859      %else %do;
81860      data _tempAll;
81861      set %let j=%eval(&id-1);
81862      %do x=1 %to &j;
81863      %if &&nobs&x %then %do;
81864      _temp&x %end;
81865      %end;
81866      ;
81867      run;
81868      proc sql;
81869      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
81869    ! work._tempid p2 where p.name=p2.lhs;
81870      quit;
81871      data _temp&id;
81872      set _temp&id;
81873      where LHS ne '' and NAME ne '' and Node ne '';
81874      run;
81875      proc datasets lib=work nolist;
81876      delete _tempAll;
81877      run;
81878      %let dsid = %sysfunc(open(_temp&id));
81879      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
81880      %let dsid = %sysfunc(close(&dsid));
81881      %if ^&&nobs&id %then %do;
81882      proc datasets lib=work nolist;
81883      delete _temp&id;
81884      run;
81885      quit;
81886      %end;
81887      %else %do;
81888      %let scoreFlag&id = 1;
81889      data _temp&id;
81890      set _temp&id;
81891      where LHS ne NAME and node ne '';
81892      run;
81893      %let dsid = %sysfunc(open(_temp&id));
81894      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
81895      %let dsid = %sysfunc(close(&dsid));
81896      %if ^&&nobs&id %then %do;
81897      proc datasets lib=work nolist;
81898      delete _temp&id;
81899      run;
81900      quit;
81901      %end;
81902      %else %do;
81903      proc sort data=_temp&id nodupkey;
81904      by LHS NAME;
81905      run;
81906      %end;
81907      %end;
81908      %end;
81909      %end;
81910      %mend varDept;
81911      %macro optCode(outdata=fcmpdata);
81912      %global fcmpStart;
81913      %let fcmpStart = 0;
81914      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
81915      %let NumNodes=9;
81916      %do k=1 %to &NumNodes;
81917      %vardept(fcmpdata=&outdata, id=&k);
81918      %end;
81919      %mend optCode;
81920      %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 60 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
81921      filename _pref
81921    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
81922      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
81923      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas.
81924     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
81925     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
81926     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
81927     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
81928     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
81929     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
81930     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
81931     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
81932     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
81933     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
81934     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
81935     +LENGTH _WARN_ $4
81936     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
81937     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
81938     +
81939     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
81940     +
81941     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
81942     +
81943     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
81944     +
81945     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
81946     +
81947     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
81948     +
81949     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
81950     +
81951     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
81952     +
81953     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
81954     +
81955     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
81956     +
81957     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
81958     +
81959     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
81960     +
81961     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
81962     +
81963     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
81964     +
81965     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
81966     +
81967     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
81968     +
81969     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
81970     +
81971     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
81972     +
81973     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
81974     +
81975     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
81976     +
81977     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
81978     +
81979     +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
81980     +
81981     +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
81982     +
81983     +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
81984     +
81985     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
81986     +
81987     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
81988     +
81989     +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
81990     +
81991     +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
81992     +
81993     +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
81994     +
81995     +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
81996     +
81997     +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
81998     +
81999     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
82000     +
82001     +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
82002     +
82003     +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
82004     +
82005     +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
82006     +
82007     +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
82008     +
82009     +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
82010     +
82011     +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
82012     +
82013     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
82014     +
82015     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
82016     +
82017     +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
82018     +
82019     +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
82020     +
82021     +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
82022     +
82023     +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
82024     +
82025     +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
82026     +
82027     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
82028     +
82029     +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
82030     +
82031     +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
82032     +
82033     +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
82034     +
82035     +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
82036     +
82037     +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
82038     +
82039     +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
82040     +
82041     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
82042     +
82043     +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
82044     +
82045     +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
82046     +
82047     +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
82048     +
82049     +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
82050     +
82051     +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
82052     +
82053     +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
82054     +
82055     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
82056     +
82057     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
82058     +
82059     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
82060     +
82061     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
82062     +
82063     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
82064     +
82065     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
82066     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
82067     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
82068     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
82069     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
82070     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
82071     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
82072     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
82073     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
82074     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
82075     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
82076     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
82077     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
82078     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
82079     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
82080     +end;
MPRINT(EM_DIAGRAM):   end;
82081     +else do;
MPRINT(EM_DIAGRAM):   else do;
82082     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
82083     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
82084     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
82085     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
82086     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
82087     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
82088     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
82089     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
82090     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
82091     +         end;
MPRINT(EM_DIAGRAM):   end;
82092     +         else do;
MPRINT(EM_DIAGRAM):   else do;
82093     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
82094     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
82095     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
82096     +            end;
MPRINT(EM_DIAGRAM):   end;
82097     +         end;
MPRINT(EM_DIAGRAM):   end;
82098     +      end;
MPRINT(EM_DIAGRAM):   end;
82099     +      else do;
MPRINT(EM_DIAGRAM):   else do;
82100     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
82101     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
82102     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
82103     +         end;
MPRINT(EM_DIAGRAM):   end;
82104     +      end;
MPRINT(EM_DIAGRAM):   end;
82105     +   end;
MPRINT(EM_DIAGRAM):   end;
82106     +   else do;
MPRINT(EM_DIAGRAM):   else do;
82107     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
82108     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
82109     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
82110     +      end;
MPRINT(EM_DIAGRAM):   end;
82111     +      else do;
MPRINT(EM_DIAGRAM):   else do;
82112     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
82113     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
82114     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
82115     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
82116     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
82117     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
82118     +         end;
MPRINT(EM_DIAGRAM):   end;
82119     +      end;
MPRINT(EM_DIAGRAM):   end;
82120     +   end;
MPRINT(EM_DIAGRAM):   end;
82121     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
82122     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
82123     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
82124     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
82125     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
82126     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
82127     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
82128     +   end;
MPRINT(EM_DIAGRAM):   end;
82129     +end;
MPRINT(EM_DIAGRAM):   end;
82130     +
82131     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82132     +*** Checking missing input Interval
82133     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
82134     +
82135     +IF NMISS(
82136     +   AcceptedCmpTotal ,
82137     +   Frq ,
82138     +   Income ,
82139     +   Mnt ,
82140     +   MntGoldProds ,
82141     +   MntMeatProducts ,
82142     +   NumCatalogPurchases ,
82143     +   NumDealsPurchases ,
82144     +   NumWebVisitsMonth ,
82145     +   RFMstat ,
82146     +   Recency ,
82147     +   Teenhome ,
82148     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
82149     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
82150     +
82151     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
82152     +END;
MPRINT(EM_DIAGRAM):   END;
82153     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82154     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
82155     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82156     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82157     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
82158     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
82159     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
82160     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
82161     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
82162     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
82163     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
82164     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
82165     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
82166     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
82167     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
82168     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
82169     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
82170     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
82171     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
82172     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
82173     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
82174     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
82175     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
82176     +END;
MPRINT(EM_DIAGRAM):   END;
82177     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82178     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
82179     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
82180     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
82181     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
82182     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
82183     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
82184     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
82185     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
82186     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
82187     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
82188     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
82189     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
82190     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
82191     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
82192     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
82193     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
82194     +   ELSE S_NumCatalogPurchases
82195     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
82196     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
82197     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
82198     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
82199     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
82200     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
82201     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
82202     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
82203     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
82204     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
82205     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
82206     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
82207     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
82208     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
82209     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
82210     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
82211     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
82212     +END;
MPRINT(EM_DIAGRAM):   END;
82213     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82214     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
82215     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82216     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82217     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
82218     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82219     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82220     +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
82221     +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
82222     +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
82223     +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
82224     +          +    -0.82528424139262 * S_NumCatalogPurchases
82225     +          +      0.5929046965244 * S_NumDealsPurchases
82226     +          +    -0.52362488197384 * S_NumWebVisitsMonth
82227     +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
82228     +        S_Recency  +    -0.83670225777249 * S_Teenhome
82229     +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
82230     +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
82231     +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
82232     +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
82233     +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
82234     +          +    -0.60117742307807 * S_NumCatalogPurchases
82235     +          +     1.09806082321711 * S_NumDealsPurchases
82236     +          +     1.26617704720444 * S_NumWebVisitsMonth
82237     +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
82238     +        S_Recency  +     -0.2630764341314 * S_Teenhome
82239     +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
82240     +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
82241     +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
82242     +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
82243     +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
82244     +          +     1.63075268570383 * S_NumCatalogPurchases
82245     +          +     0.62057902628545 * S_NumDealsPurchases
82246     +          +     1.85944172136218 * S_NumWebVisitsMonth
82247     +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
82248     +        S_Recency  +    -0.78663308544854 * S_Teenhome
82249     +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
82250     +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
82251     +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
82252     +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
82253     +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
82254     +          +    -2.59032878085972 * S_NumCatalogPurchases
82255     +          +    -0.44146008176644 * S_NumDealsPurchases
82256     +          +     1.16377649939583 * S_NumWebVisitsMonth
82257     +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
82258     +        S_Recency  +    -0.44721505258044 * S_Teenhome
82259     +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
82260     +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
82261     +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
82262     +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
82263     +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
82264     +          +    -2.88423926492169 * S_NumCatalogPurchases
82265     +          +     0.76448279454687 * S_NumDealsPurchases
82266     +          +     0.63782718366339 * S_NumWebVisitsMonth
82267     +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
82268     +        S_Recency  +     0.19809045233143 * S_Teenhome
82269     +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
82270     +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
82271     +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
82272     +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
82273     +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
82274     +          +     1.71243370379543 * S_NumCatalogPurchases
82275     +          +     1.59034024362028 * S_NumDealsPurchases
82276     +          +     2.43090724707282 * S_NumWebVisitsMonth
82277     +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
82278     +        S_Recency  +    -1.20398234836557 * S_Teenhome
82279     +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
82280     +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
82281     +          +     1.90782989914192 * Marital_StatusMarried
82282     +          +    -1.16189886119693 * Marital_StatusSingle
82283     +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
82284     +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
82285     +          +     0.30468777490799 * Marital_StatusMarried
82286     +          +     0.61978761938746 * Marital_StatusSingle
82287     +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
82288     +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
82289     +          +    -1.73477859605124 * Marital_StatusMarried
82290     +          +     1.32595981126289 * Marital_StatusSingle
82291     +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
82292     +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
82293     +          +     0.06077392213964 * Marital_StatusMarried
82294     +          +     0.21115279121703 * Marital_StatusSingle
82295     +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
82296     +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
82297     +          +    -0.24067068377767 * Marital_StatusMarried
82298     +          +      0.2728964145401 * Marital_StatusSingle
82299     +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
82300     +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
82301     +          +    -0.15640287278595 * Marital_StatusMarried
82302     +          +     0.54159395450762 * Marital_StatusSingle
82303     +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
82304     +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
82305     +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
82306     +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
82307     +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
82308     +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
82309     +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
82310     +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
82311     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
82312     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
82313     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
82314     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
82315     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
82316     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
82317     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
82318     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
82319     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
82320     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
82321     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
82322     +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
82323     +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
82324     +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
82325     +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
82326     +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
82327     +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
82328     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
82329     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
82330     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
82331     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
82332     +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
82333     +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
82334     +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
82335     +END;
MPRINT(EM_DIAGRAM):   END;
82336     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82337     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
82338     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
82339     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
82340     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
82341     +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
82342     +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
82343     +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
82344     +END;
MPRINT(EM_DIAGRAM):   END;
82345     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82346     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
82347     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82348     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82349     +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
82350     +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
82351     +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
82352     +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
82353     +          +     0.14209124492657 * S_NumCatalogPurchases
82354     +          +    -1.31625106509803 * S_NumDealsPurchases
82355     +          +     2.35745588368331 * S_NumWebVisitsMonth
82356     +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
82357     +        S_Recency  +     1.23527100408525 * S_Teenhome
82358     +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
82359     +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
82360     +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
82361     +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
82362     +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
82363     +          +     1.18605040958794 * S_NumCatalogPurchases
82364     +          +    -0.89798157472835 * S_NumDealsPurchases
82365     +          +    -0.09236646871049 * S_NumWebVisitsMonth
82366     +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
82367     +        S_Recency  +    -0.50770218335102 * S_Teenhome
82368     +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
82369     +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
82370     +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
82371     +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
82372     +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
82373     +          +    -1.53424308314822 * S_NumCatalogPurchases
82374     +          +    -0.80590323269981 * S_NumDealsPurchases
82375     +          +    -1.40104490662303 * S_NumWebVisitsMonth
82376     +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
82377     +        S_Recency  +     0.96086280467056 * S_Teenhome
82378     +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
82379     +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
82380     +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
82381     +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
82382     +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
82383     +          +    -1.25862219948587 * S_NumCatalogPurchases
82384     +          +     1.95015982914109 * S_NumDealsPurchases
82385     +          +     0.64320281589594 * S_NumWebVisitsMonth
82386     +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
82387     +        S_Recency  +    -0.00184949563812 * S_Teenhome
82388     +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
82389     +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
82390     +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
82391     +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
82392     +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
82393     +          +     0.30573893169917 * S_NumCatalogPurchases
82394     +          +     0.93169788380491 * S_NumDealsPurchases
82395     +          +     0.04516037232248 * S_NumWebVisitsMonth
82396     +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
82397     +        S_Recency  +      0.1429120113072 * S_Teenhome
82398     +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
82399     +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
82400     +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
82401     +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
82402     +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
82403     +          +      0.2704422632168 * S_NumCatalogPurchases
82404     +          +      2.3389342094366 * S_NumDealsPurchases
82405     +          +     0.01076302858809 * S_NumWebVisitsMonth
82406     +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
82407     +        S_Recency  +     0.68455094392125 * S_Teenhome
82408     +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
82409     +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
82410     +          +      0.8255833782513 * Marital_StatusMarried
82411     +          +    -0.48959165020896 * Marital_StatusSingle
82412     +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
82413     +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
82414     +          +    -0.36405013930464 * Marital_StatusMarried
82415     +          +    -0.11895921007246 * Marital_StatusSingle
82416     +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
82417     +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
82418     +          +    -1.38902793752658 * Marital_StatusMarried
82419     +          +     0.47104623132568 * Marital_StatusSingle
82420     +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
82421     +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
82422     +          +     0.03793816986941 * Marital_StatusMarried
82423     +          +     0.32286910605532 * Marital_StatusSingle
82424     +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
82425     +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
82426     +          +    -0.60013237897988 * Marital_StatusMarried
82427     +          +    -1.54090744803073 * Marital_StatusSingle
82428     +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
82429     +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
82430     +          +     2.39490119482132 * Marital_StatusMarried
82431     +          +     0.73080073298893 * Marital_StatusSingle
82432     +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
82433     +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
82434     +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
82435     +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
82436     +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
82437     +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
82438     +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
82439     +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
82440     +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
82441     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
82442     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
82443     +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
82444     +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
82445     +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
82446     +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
82447     +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
82448     +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
82449     +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
82450     +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
82451     +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
82452     +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
82453     +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
82454     +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
82455     +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
82456     +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
82457     +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
82458     +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
82459     +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
82460     +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
82461     +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
82462     +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
82463     +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
82464     +END;
MPRINT(EM_DIAGRAM):   END;
82465     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82466     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
82467     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
82468     +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
82469     +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
82470     +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
82471     +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
82472     +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
82473     +END;
MPRINT(EM_DIAGRAM):   END;
82474     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82475     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
82476     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82477     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82478     +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
82479     +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
82480     +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
82481     +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
82482     +          +     2.25334156596167 * S_NumCatalogPurchases
82483     +          +     1.11206221926547 * S_NumDealsPurchases
82484     +          +    -0.86546062057987 * S_NumWebVisitsMonth
82485     +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
82486     +        S_Recency  +    -1.57916593034924 * S_Teenhome
82487     +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
82488     +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
82489     +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
82490     +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
82491     +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
82492     +          +    -0.72830662589886 * S_NumCatalogPurchases
82493     +          +    -1.43194640925705 * S_NumDealsPurchases
82494     +          +     0.27875145672985 * S_NumWebVisitsMonth
82495     +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
82496     +        S_Recency  +    -1.01056905981073 * S_Teenhome
82497     +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
82498     +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
82499     +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
82500     +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
82501     +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
82502     +          +    -0.29577972728188 * S_NumCatalogPurchases
82503     +          +    -0.09204036503823 * S_NumDealsPurchases
82504     +          +     1.09127760712522 * S_NumWebVisitsMonth
82505     +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
82506     +        S_Recency  +    -1.61269837976842 * S_Teenhome
82507     +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
82508     +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
82509     +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
82510     +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
82511     +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
82512     +          +     0.74771164805463 * S_NumCatalogPurchases
82513     +          +     1.48674373289951 * S_NumDealsPurchases
82514     +          +    -0.43724934700095 * S_NumWebVisitsMonth
82515     +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
82516     +        S_Recency  +      1.5969237416548 * S_Teenhome
82517     +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
82518     +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
82519     +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
82520     +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
82521     +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
82522     +          +     0.32607897654777 * S_NumCatalogPurchases
82523     +          +    -0.05989936582211 * S_NumDealsPurchases
82524     +          +     -0.8863628882594 * S_NumWebVisitsMonth
82525     +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
82526     +        S_Recency  +      1.1633098880037 * S_Teenhome
82527     +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
82528     +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
82529     +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
82530     +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
82531     +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
82532     +          +    -0.32855091358254 * S_NumCatalogPurchases
82533     +          +    -0.04262624947945 * S_NumDealsPurchases
82534     +          +     0.34844893542429 * S_NumWebVisitsMonth
82535     +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
82536     +        S_Recency  +     0.25374922499465 * S_Teenhome
82537     +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
82538     +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
82539     +          +    -1.19357131519861 * Marital_StatusMarried
82540     +          +     1.01104838285626 * Marital_StatusSingle
82541     +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
82542     +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
82543     +          +     0.41518199668826 * Marital_StatusMarried
82544     +          +     1.03267293059069 * Marital_StatusSingle
82545     +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
82546     +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
82547     +          +     0.56306179671807 * Marital_StatusMarried
82548     +          +    -1.20896369649342 * Marital_StatusSingle
82549     +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
82550     +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
82551     +          +    -2.56951757071166 * Marital_StatusMarried
82552     +          +     0.89024254219017 * Marital_StatusSingle
82553     +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
82554     +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
82555     +          +    -0.82560993254767 * Marital_StatusMarried
82556     +          +     0.67892086377875 * Marital_StatusSingle
82557     +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
82558     +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
82559     +          +     1.62783448403167 * Marital_StatusMarried
82560     +          +     0.73020544049082 * Marital_StatusSingle
82561     +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
82562     +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
82563     +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
82564     +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
82565     +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
82566     +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
82567     +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
82568     +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
82569     +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
82570     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
82571     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
82572     +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
82573     +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
82574     +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
82575     +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
82576     +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
82577     +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
82578     +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
82579     +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
82580     +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
82581     +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
82582     +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
82583     +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
82584     +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
82585     +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
82586     +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
82587     +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
82588     +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
82589     +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
82590     +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
82591     +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
82592     +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
82593     +END;
MPRINT(EM_DIAGRAM):   END;
82594     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82595     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
82596     +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
82597     +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
82598     +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
82599     +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
82600     +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
82601     +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
82602     +END;
MPRINT(EM_DIAGRAM):   END;
82603     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82604     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
82605     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82606     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82607     +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
82608     +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
82609     +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
82610     +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
82611     +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
82612     +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
82613     +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
82614     +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
82615     +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
82616     +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
82617     +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
82618     +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
82619     +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
82620     +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
82621     +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
82622     +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
82623     +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
82624     +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
82625     +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
82626     +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
82627     +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
82628     +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
82629     +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
82630     +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
82631     +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
82632     +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
82633     +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
82634     +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
82635     +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
82636     +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
82637     +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
82638     +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
82639     +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
82640     +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
82641     +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
82642     +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
82643     +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
82644     +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
82645     +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
82646     +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
82647     +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
82648     +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
82649     +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
82650     +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
82651     +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
82652     +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
82653     +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
82654     +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
82655     +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
82656     +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
82657     +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
82658     +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
82659     +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
82660     +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
82661     +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
82662     +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
82663     +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
82664     +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
82665     +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
82666     +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
82667     +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
82668     +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
82669     +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
82670     +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
82671     +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
82672     +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
82673     +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
82674     +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
82675     +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
82676     +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
82677     +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
82678     +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
82679     +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
82680     +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
82681     +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
82682     +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
82683     +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
82684     +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
82685     +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
82686     +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
82687     +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
82688     +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
82689     +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
82690     +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
82691     +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
82692     +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
82693     +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
82694     +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
82695     +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
82696     +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
82697     +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
82698     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
82699     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
82700     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
82701     +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
82702     +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
82703     +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
82704     +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
82705     +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
82706     +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
82707     +END;
MPRINT(EM_DIAGRAM):   END;
82708     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82709     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
82710     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
82711     +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
82712     +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
82713     +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
82714     +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
82715     +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
82716     +END;
MPRINT(EM_DIAGRAM):   END;
82717     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82718     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
82719     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82720     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82721     +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
82722     +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
82723     +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
82724     +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
82725     +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
82726     +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
82727     +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
82728     +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
82729     +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
82730     +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
82731     +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
82732     +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
82733     +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
82734     +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
82735     +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
82736     +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
82737     +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
82738     +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
82739     +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
82740     +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
82741     +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
82742     +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
82743     +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
82744     +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
82745     +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
82746     +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
82747     +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
82748     +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
82749     +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
82750     +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
82751     +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
82752     +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
82753     +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
82754     +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
82755     +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
82756     +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
82757     +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
82758     +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
82759     +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
82760     +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
82761     +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
82762     +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
82763     +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
82764     +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
82765     +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
82766     +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
82767     +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
82768     +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
82769     +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
82770     +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
82771     +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
82772     +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
82773     +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
82774     +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
82775     +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
82776     +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
82777     +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
82778     +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
82779     +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
82780     +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
82781     +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
82782     +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
82783     +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
82784     +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
82785     +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
82786     +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
82787     +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
82788     +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
82789     +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
82790     +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
82791     +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
82792     +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
82793     +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
82794     +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
82795     +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
82796     +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
82797     +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
82798     +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
82799     +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
82800     +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
82801     +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
82802     +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
82803     +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
82804     +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
82805     +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
82806     +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
82807     +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
82808     +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
82809     +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
82810     +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
82811     +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
82812     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
82813     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
82814     +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
82815     +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
82816     +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
82817     +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
82818     +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
82819     +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
82820     +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
82821     +END;
MPRINT(EM_DIAGRAM):   END;
82822     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82823     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
82824     +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
82825     +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
82826     +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
82827     +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
82828     +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
82829     +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
82830     +END;
MPRINT(EM_DIAGRAM):   END;
82831     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82832     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
82833     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82834     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82835     +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
82836     +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
82837     +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
82838     +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
82839     +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
82840     +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
82841     +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
82842     +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
82843     +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
82844     +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
82845     +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
82846     +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
82847     +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
82848     +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
82849     +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
82850     +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
82851     +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
82852     +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
82853     +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
82854     +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
82855     +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
82856     +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
82857     +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
82858     +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
82859     +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
82860     +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
82861     +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
82862     +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
82863     +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
82864     +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
82865     +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
82866     +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
82867     +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
82868     +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
82869     +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
82870     +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
82871     +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
82872     +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
82873     +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
82874     +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
82875     +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
82876     +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
82877     +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
82878     +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
82879     +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
82880     +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
82881     +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
82882     +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
82883     +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
82884     +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
82885     +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
82886     +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
82887     +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
82888     +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
82889     +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
82890     +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
82891     +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
82892     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
82893     +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
82894     +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
82895     +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
82896     +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
82897     +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
82898     +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
82899     +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
82900     +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
82901     +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
82902     +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
82903     +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
82904     +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
82905     +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
82906     +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
82907     +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
82908     +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
82909     +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
82910     +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
82911     +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
82912     +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
82913     +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
82914     +END;
MPRINT(EM_DIAGRAM):   END;
82915     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82916     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
82917     +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
82918     +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
82919     +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
82920     +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
82921     +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
82922     +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
82923     +END;
MPRINT(EM_DIAGRAM):   END;
82924     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82925     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
82926     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82927     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
82928     +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
82929     +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
82930     +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
82931     +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
82932     +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
82933     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
82934     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
82935     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
82936     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
82937     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
82938     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
82939     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
82940     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
82941     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
82942     +END;
MPRINT(EM_DIAGRAM):   END;
82943     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
82944     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
82945     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
82946     +END;
MPRINT(EM_DIAGRAM):   END;
82947     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
82948     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
82949     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
82950     +END;
MPRINT(EM_DIAGRAM):   END;
82951     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82952     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
82953     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
82954     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
82955     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
82956     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
82957     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
82958     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
82959     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
82960     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
82961     +END;
MPRINT(EM_DIAGRAM):   END;
82962     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
82963     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
82964     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
82965     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
82966      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
82967      quit;
82968      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
82969      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
82970      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
82971      retain ID 2 Node "AutoNeural43";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural43";
82972      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
82973      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12131 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 12131 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
82974      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
82975      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82976      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12131 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 12131 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
82977      proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME
CREATOR);
82978      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82979      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
82980      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
82981      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
82982      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
82983      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
82984      proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
82985      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
82986      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
82987      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82988      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
82989      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
82990      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
82991      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
82992      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
82993      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
82994      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
82994    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 5682 rows and 5 columns.
 
82995      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
82996      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
82997      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5682 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 5682 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
82998      filename _pref
82998    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
82999      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
83000      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
83001     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
83002     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
83003     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
83004     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
83005     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
83006     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
83007      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
83008      quit;
83009      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
83010      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
83011      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
83012      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
83013      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
83014      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83015      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
83016      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83017      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83018      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
83019      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83020      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83021      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83022      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
83023      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
83024      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83025      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
83026      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83027      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
83028      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83029      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83030      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83031      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
83032      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83033      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83034      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
83035      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
83035    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
83036      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83037      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
83038      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 5686 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83039      filename _pref
83039    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
83040      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
83041      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
83042     +
83043     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
83044     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
83044    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
83045     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
83046     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
83047     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
83048     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
83049     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
83050      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
83051      quit;
83052      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
83053      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
83054      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
83055      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
83056      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
83057      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83058      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
83059      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83060      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83061      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
83062      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83063      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83064      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83065      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
83066      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
83067      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83068      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
83069      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83070      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
83071      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83072      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83073      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83074      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
83075      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83076      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83077      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
83078      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
83078    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
83079      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83080      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
83081      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 5725 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83082      filename _pref
83082    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
83083      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
83084      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
83085     +
83086     +
83087     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
83088     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
83089     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
83090     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
83091     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
83092     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83093     +
83094     +
83095     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
83096     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
83097     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
83098     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
83099     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
83100     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83101     +
83102     +
83103     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
83104     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
83105     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
83106     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
83107     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
83108     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83109     +
83110     +
83111     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
83112     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
83113     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
83114     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
83115     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
83116     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83117     +
83118     +
83119     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
83120     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
83121     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
83122     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
83123     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
83124     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83125     +
83126     +
83127     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
83128     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
83129     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
83130     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
83131     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
83132     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83133     +
83134     +
83135     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
83136     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
83137     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
83138     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
83139     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
83140     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83141     +
83142     +
83143     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
83144     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
83145     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
83146     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
83147     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
83148     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83149     +if
83150     +_FILTERNORM1 not in ( '.')
83151     + and
83152     +_FILTERNORM2 not in ( '.')
83153     + and
83154     +_FILTERNORM3 not in ( '.')
83155     + and
83156     +_FILTERNORM4 not in ( '.')
83157     + and
83158     +_FILTERNORM5 not in ( '.')
83159     + and
83160     +_FILTERNORM6 not in ( '.')
83161     + and
83162     +_FILTERNORM7 not in ( ' ')
83163     + and
83164     +_FILTERNORM8 not in ( ' ')
83165     +and
83166     +( Dt_Customer ne .)
83167     +and ( Income ne . and (Income<=107000))
83168     +and ( Kidhome ne .)
83169     +and ( MntFishProducts ne .)
83170     +and ( MntFruits ne .)
83171     +and ( MntGoldProds ne .)
83172     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
83173     +and ( MntSweetProducts ne .)
83174     +and ( MntWines ne .)
83175     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
83176     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
83177     +and ( NumStorePurchases ne .)
83178     +and ( NumWebPurchases ne .)
83179     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
83180     +and ( Recency ne .)
83181     +and ( Teenhome ne .)
83182     +and ( Year_Birth ne .)
83183     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
83184     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
83185     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
83186     +end;
MPRINT(EM_DIAGRAM):   end;
83187     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
83188     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
83189      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
83190      quit;
83191      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
83192      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
83193      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
83194      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
83195      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
83196      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83197      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
83198      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83199      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83200      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
83201      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83202      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83203      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83204      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
83205      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
83206      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83207      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
83208      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83209      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
83210      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83211      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83212      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83213      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
83214      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83215      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83216      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
83217      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
83217    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
83218      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83219      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
83220      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 5791 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83221      %macro varDept(fcmpdata=,id=);
83222      %global nobs&id scoreFlag&id;
83223      %let scoreFlag&id = 0;
83224      %if &id=1 or ^&fcmpStart %then %do;
83225      proc sort data=&fcmpdata out=_temp&id nodupkey;
83226      by NAME;
83227      where id=&id and LHS in( %let j=1;
83228      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
83229      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
83230      "&var" %let j = %eval(&j+1);
83231      %end;
83232      );
83233      run;
83234      %let dsid = %sysfunc(open(_temp&id));
83235      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83236      %let dsid = %sysfunc(close(&dsid));
83237      %if &&nobs&id %then %do;
83238      %let scoreFlag&id = 1;
83239      %let fcmpStart = 1;
83240      %end;
83241      %else %let fcmpStart = 0;
83242      %end;
83243      %else %do;
83244      proc sort data=&fcmpdata out=_tempid;
83245      where id=&id;
83246      by LHS;
83247      run;
83248      %let dsid = %sysfunc(open(_tempid));
83249      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83250      %let dsid = %sysfunc(close(&dsid));
83251      %if ^&&nobs&id %then %do;
83252      proc datasets lib=work nolist;
83253      delete _tempid;
83254      run;
83255      quit;
83256      %end;
83257      %else %do;
83258      data _tempAll;
83259      set %let j=%eval(&id-1);
83260      %do x=1 %to &j;
83261      %if &&nobs&x %then %do;
83262      _temp&x %end;
83263      %end;
83264      ;
83265      run;
83266      proc sql;
83267      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
83267    ! work._tempid p2 where p.name=p2.lhs;
83268      quit;
83269      data _temp&id;
83270      set _temp&id;
83271      where LHS ne '' and NAME ne '' and Node ne '';
83272      run;
83273      proc datasets lib=work nolist;
83274      delete _tempAll;
83275      run;
83276      %let dsid = %sysfunc(open(_temp&id));
83277      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83278      %let dsid = %sysfunc(close(&dsid));
83279      %if ^&&nobs&id %then %do;
83280      proc datasets lib=work nolist;
83281      delete _temp&id;
83282      run;
83283      quit;
83284      %end;
83285      %else %do;
83286      %let scoreFlag&id = 1;
83287      data _temp&id;
83288      set _temp&id;
83289      where LHS ne NAME and node ne '';
83290      run;
83291      %let dsid = %sysfunc(open(_temp&id));
83292      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83293      %let dsid = %sysfunc(close(&dsid));
83294      %if ^&&nobs&id %then %do;
83295      proc datasets lib=work nolist;
83296      delete _temp&id;
83297      run;
83298      quit;
83299      %end;
83300      %else %do;
83301      proc sort data=_temp&id nodupkey;
83302      by LHS NAME;
83303      run;
83304      %end;
83305      %end;
83306      %end;
83307      %end;
83308      %mend varDept;
83309      %macro optCode(outdata=fcmpdata);
83310      %global fcmpStart;
83311      %let fcmpStart = 0;
83312      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
83313      %let NumNodes=9;
83314      %do k=1 %to &NumNodes;
83315      %vardept(fcmpdata=&outdata, id=&k);
83316      %end;
83317      %mend optCode;
83318      %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 58 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 84 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
83319      filename _pref
83319    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
83320      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
83321      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
83322     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
83323     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
83324     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
83325     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
83326     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
83327     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
83328     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
83329     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
83330     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
83331     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
83332     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
83333     +LENGTH _WARN_ $4
83334     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
83335     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
83336     +
83337     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
83338     +
83339     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
83340     +
83341     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
83342     +
83343     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
83344     +
83345     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
83346     +
83347     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
83348     +
83349     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
83350     +
83351     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
83352     +
83353     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
83354     +
83355     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
83356     +
83357     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
83358     +
83359     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
83360     +
83361     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
83362     +
83363     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
83364     +
83365     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
83366     +
83367     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
83368     +
83369     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
83370     +
83371     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
83372     +
83373     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
83374     +
83375     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
83376     +
83377     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
83378     +
83379     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
83380     +
83381     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
83382     +
83383     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
83384     +
83385     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
83386     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
83387     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
83388     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
83389     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
83390     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
83391     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
83392     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
83393     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
83394     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
83395     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
83396     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
83397     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
83398     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
83399     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
83400     +end;
MPRINT(EM_DIAGRAM):   end;
83401     +else do;
MPRINT(EM_DIAGRAM):   else do;
83402     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
83403     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
83404     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
83405     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
83406     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
83407     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
83408     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
83409     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
83410     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
83411     +         end;
MPRINT(EM_DIAGRAM):   end;
83412     +         else do;
MPRINT(EM_DIAGRAM):   else do;
83413     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
83414     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
83415     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
83416     +            end;
MPRINT(EM_DIAGRAM):   end;
83417     +         end;
MPRINT(EM_DIAGRAM):   end;
83418     +      end;
MPRINT(EM_DIAGRAM):   end;
83419     +      else do;
MPRINT(EM_DIAGRAM):   else do;
83420     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
83421     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
83422     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
83423     +         end;
MPRINT(EM_DIAGRAM):   end;
83424     +      end;
MPRINT(EM_DIAGRAM):   end;
83425     +   end;
MPRINT(EM_DIAGRAM):   end;
83426     +   else do;
MPRINT(EM_DIAGRAM):   else do;
83427     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
83428     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
83429     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
83430     +      end;
MPRINT(EM_DIAGRAM):   end;
83431     +      else do;
MPRINT(EM_DIAGRAM):   else do;
83432     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
83433     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
83434     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
83435     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
83436     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
83437     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
83438     +         end;
MPRINT(EM_DIAGRAM):   end;
83439     +      end;
MPRINT(EM_DIAGRAM):   end;
83440     +   end;
MPRINT(EM_DIAGRAM):   end;
83441     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
83442     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
83443     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
83444     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
83445     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
83446     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
83447     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
83448     +   end;
MPRINT(EM_DIAGRAM):   end;
83449     +end;
MPRINT(EM_DIAGRAM):   end;
83450     +
83451     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83452     +*** Checking missing input Interval
83453     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
83454     +
83455     +IF NMISS(
83456     +   AcceptedCmpTotal ,
83457     +   Frq ,
83458     +   Income ,
83459     +   Mnt ,
83460     +   MntGoldProds ,
83461     +   MntMeatProducts ,
83462     +   NumCatalogPurchases ,
83463     +   NumDealsPurchases ,
83464     +   NumWebVisitsMonth ,
83465     +   RFMstat ,
83466     +   Recency ,
83467     +   Teenhome ,
83468     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
83469     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
83470     +
83471     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
83472     +END;
MPRINT(EM_DIAGRAM):   END;
83473     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83474     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
83475     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83476     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
83477     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
83478     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
83479     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
83480     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
83481     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
83482     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
83483     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
83484     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
83485     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
83486     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
83487     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
83488     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
83489     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
83490     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
83491     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
83492     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
83493     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
83494     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
83495     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
83496     +END;
MPRINT(EM_DIAGRAM):   END;
83497     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
83498     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
83499     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
83500     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
83501     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
83502     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
83503     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
83504     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
83505     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
83506     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
83507     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
83508     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
83509     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
83510     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
83511     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
83512     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
83513     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
83514     +   ELSE S_NumCatalogPurchases
83515     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
83516     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
83517     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
83518     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
83519     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
83520     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
83521     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
83522     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
83523     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
83524     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
83525     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
83526     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
83527     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
83528     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
83529     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
83530     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
83531     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
83532     +END;
MPRINT(EM_DIAGRAM):   END;
83533     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83534     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
83535     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83536     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83537     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
83538     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83539     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
83540     +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
83541     +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
83542     +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
83543     +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
83544     +          +    -0.01423451356563 * S_NumCatalogPurchases
83545     +          +     0.06006350655487 * S_NumDealsPurchases
83546     +          +    -0.20885493964335 * S_NumWebVisitsMonth
83547     +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
83548     +        S_Recency  +    -0.03326479668652 * S_Teenhome
83549     +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
83550     +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
83551     +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
83552     +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
83553     +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
83554     +          +    -0.03109266966794 * S_NumCatalogPurchases
83555     +          +     0.05524435494328 * S_NumDealsPurchases
83556     +          +     -0.0105802056898 * S_NumWebVisitsMonth
83557     +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
83558     +        S_Recency  +       0.195010707702 * S_Teenhome
83559     +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
83560     +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
83561     +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
83562     +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
83563     +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
83564     +          +     0.07777995109144 * S_NumCatalogPurchases
83565     +          +     0.08683394019767 * S_NumDealsPurchases
83566     +          +     0.27328366433987 * S_NumWebVisitsMonth
83567     +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
83568     +        S_Recency  +      0.0640153287908 * S_Teenhome
83569     +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
83570     +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
83571     +          +    -0.02695167777393 * Marital_StatusMarried
83572     +          +    -0.00733864032764 * Marital_StatusSingle
83573     +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
83574     +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
83575     +          +     0.42249671001117 * Marital_StatusMarried
83576     +          +    -0.18515416581955 * Marital_StatusSingle
83577     +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
83578     +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
83579     +          +     0.45127582934777 * Marital_StatusMarried
83580     +          +       0.358157766485 * Marital_StatusSingle
83581     +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
83582     +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
83583     +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
83584     +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
83585     +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
83586     +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
83587     +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
83588     +END;
MPRINT(EM_DIAGRAM):   END;
83589     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
83590     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
83591     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
83592     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
83593     +END;
MPRINT(EM_DIAGRAM):   END;
83594     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83595     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
83596     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83597     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
83598     +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
83599     +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
83600     +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
83601     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
83602     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
83603     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
83604     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
83605     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
83606     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
83607     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
83608     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
83609     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
83610     +END;
MPRINT(EM_DIAGRAM):   END;
83611     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
83612     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
83613     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
83614     +END;
MPRINT(EM_DIAGRAM):   END;
83615     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
83616     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
83617     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
83618     +END;
MPRINT(EM_DIAGRAM):   END;
83619     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83620     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
83621     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
83622     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
83623     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
83624     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
83625     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
83626     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
83627     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
83628     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
83629     +END;
MPRINT(EM_DIAGRAM):   END;
83630     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
83631     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
83632     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
83633     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
83634      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
83635      quit;
83636      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
83637      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
83638      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
83639      retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
83640      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
83641      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83642      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
83643      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83644      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83645      proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME
CREATOR);
83646      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83647      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83648      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83649      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
83650      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
83651      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83652      proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
83653      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83654      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
83655      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83656      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83657      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83658      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
83659      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83660      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83661      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
83662      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
83662    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 496 rows and 5 columns.
 
83663      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83664      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
83665      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 496 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 496 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83666      filename _pref
83666    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
83667      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
83668      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
83669     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
83670     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
83671     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
83672     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
83673     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
83674     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
83675      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
83676      quit;
83677      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
83678      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
83679      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
83680      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
83681      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
83682      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83683      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
83684      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83685      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83686      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
83687      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83688      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83689      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83690      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
83691      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
83692      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83693      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
83694      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83695      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
83696      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83697      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83698      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83699      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
83700      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83701      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83702      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
83703      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
83703    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
83704      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83705      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
83706      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 500 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83707      filename _pref
83707    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
83708      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
83709      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
83710     +
83711     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
83712     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
83712    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
83713     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
83714     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
83715     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
83716     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
83717     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
83718      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
83719      quit;
83720      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
83721      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
83722      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
83723      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
83724      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
83725      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83726      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
83727      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83728      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83729      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
83730      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83731      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83732      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83733      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
83734      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
83735      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83736      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
83737      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83738      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
83739      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83740      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83741      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83742      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
83743      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83744      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83745      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
83746      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
83746    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
83747      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83748      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
83749      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 539 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83750      filename _pref
83750    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
83751      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
83752      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
83753     +
83754     +
83755     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
83756     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
83757     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
83758     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
83759     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
83760     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83761     +
83762     +
83763     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
83764     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
83765     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
83766     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
83767     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
83768     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83769     +
83770     +
83771     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
83772     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
83773     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
83774     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
83775     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
83776     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83777     +
83778     +
83779     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
83780     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
83781     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
83782     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
83783     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
83784     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83785     +
83786     +
83787     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
83788     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
83789     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
83790     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
83791     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
83792     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83793     +
83794     +
83795     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
83796     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
83797     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
83798     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
83799     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
83800     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83801     +
83802     +
83803     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
83804     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
83805     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
83806     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
83807     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
83808     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83809     +
83810     +
83811     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
83812     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
83813     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
83814     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
83815     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
83816     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
83817     +if
83818     +_FILTERNORM1 not in ( '.')
83819     + and
83820     +_FILTERNORM2 not in ( '.')
83821     + and
83822     +_FILTERNORM3 not in ( '.')
83823     + and
83824     +_FILTERNORM4 not in ( '.')
83825     + and
83826     +_FILTERNORM5 not in ( '.')
83827     + and
83828     +_FILTERNORM6 not in ( '.')
83829     + and
83830     +_FILTERNORM7 not in ( ' ')
83831     + and
83832     +_FILTERNORM8 not in ( ' ')
83833     +and
83834     +( Dt_Customer ne .)
83835     +and ( Income ne . and (Income<=107000))
83836     +and ( Kidhome ne .)
83837     +and ( MntFishProducts ne .)
83838     +and ( MntFruits ne .)
83839     +and ( MntGoldProds ne .)
83840     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
83841     +and ( MntSweetProducts ne .)
83842     +and ( MntWines ne .)
83843     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
83844     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
83845     +and ( NumStorePurchases ne .)
83846     +and ( NumWebPurchases ne .)
83847     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
83848     +and ( Recency ne .)
83849     +and ( Teenhome ne .)
83850     +and ( Year_Birth ne .)
83851     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
83852     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
83853     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
83854     +end;
MPRINT(EM_DIAGRAM):   end;
83855     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
83856     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
83857      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
83858      quit;
83859      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
83860      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
83861      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
83862      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
83863      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
83864      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83865      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
83866      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83867      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83868      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
83869      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83870      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83871      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83872      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
83873      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
83874      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83875      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
83876      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
83877      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
83878      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83879      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83880      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
83881      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
83882      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
83883      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83884      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
83885      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
83885    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
83886      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
83887      proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
83888      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 605 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
83889      %macro varDept(fcmpdata=,id=);
83890      %global nobs&id scoreFlag&id;
83891      %let scoreFlag&id = 0;
83892      %if &id=1 or ^&fcmpStart %then %do;
83893      proc sort data=&fcmpdata out=_temp&id nodupkey;
83894      by NAME;
83895      where id=&id and LHS in( %let j=1;
83896      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
83897      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
83898      "&var" %let j = %eval(&j+1);
83899      %end;
83900      );
83901      run;
83902      %let dsid = %sysfunc(open(_temp&id));
83903      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83904      %let dsid = %sysfunc(close(&dsid));
83905      %if &&nobs&id %then %do;
83906      %let scoreFlag&id = 1;
83907      %let fcmpStart = 1;
83908      %end;
83909      %else %let fcmpStart = 0;
83910      %end;
83911      %else %do;
83912      proc sort data=&fcmpdata out=_tempid;
83913      where id=&id;
83914      by LHS;
83915      run;
83916      %let dsid = %sysfunc(open(_tempid));
83917      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83918      %let dsid = %sysfunc(close(&dsid));
83919      %if ^&&nobs&id %then %do;
83920      proc datasets lib=work nolist;
83921      delete _tempid;
83922      run;
83923      quit;
83924      %end;
83925      %else %do;
83926      data _tempAll;
83927      set %let j=%eval(&id-1);
83928      %do x=1 %to &j;
83929      %if &&nobs&x %then %do;
83930      _temp&x %end;
83931      %end;
83932      ;
83933      run;
83934      proc sql;
83935      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
83935    ! work._tempid p2 where p.name=p2.lhs;
83936      quit;
83937      data _temp&id;
83938      set _temp&id;
83939      where LHS ne '' and NAME ne '' and Node ne '';
83940      run;
83941      proc datasets lib=work nolist;
83942      delete _tempAll;
83943      run;
83944      %let dsid = %sysfunc(open(_temp&id));
83945      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83946      %let dsid = %sysfunc(close(&dsid));
83947      %if ^&&nobs&id %then %do;
83948      proc datasets lib=work nolist;
83949      delete _temp&id;
83950      run;
83951      quit;
83952      %end;
83953      %else %do;
83954      %let scoreFlag&id = 1;
83955      data _temp&id;
83956      set _temp&id;
83957      where LHS ne NAME and node ne '';
83958      run;
83959      %let dsid = %sysfunc(open(_temp&id));
83960      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
83961      %let dsid = %sysfunc(close(&dsid));
83962      %if ^&&nobs&id %then %do;
83963      proc datasets lib=work nolist;
83964      delete _temp&id;
83965      run;
83966      quit;
83967      %end;
83968      %else %do;
83969      proc sort data=_temp&id nodupkey;
83970      by LHS NAME;
83971      run;
83972      %end;
83973      %end;
83974      %end;
83975      %end;
83976      %mend varDept;
83977      %macro optCode(outdata=fcmpdata);
83978      %global fcmpStart;
83979      %let fcmpStart = 0;
83980      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
83981      %let NumNodes=9;
83982      %do k=1 %to &NumNodes;
83983      %vardept(fcmpdata=&outdata, id=&k);
83984      %end;
83985      %mend optCode;
83986      %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 71 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
83987      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
83988      * Ensmbl58: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing metadata for TRAIN data;
83989      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL58_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl58_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl58_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl58_TRAIN out=WORK.M3B9KUWS noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B9KUWS;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B9KUWS(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B9KUWS;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B9KUWS;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0WDU8X7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WDU8X7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WDU8X7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2SNUCGV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WDU8X7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WDU8X7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WDU8X7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WDU8X7;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WDU8X7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl58";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl58";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
84309      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
84310      set EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMINFO;
84311      where DATA='Ensmbl58' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl58' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
84312      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_EMINFO.
      WHERE (DATA='Ensmbl58') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84313      data EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMINFO;
84314      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
84315      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
84316      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
84320      run;
84321      data EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMINFO;
84322      set EMWS8.Ensmbl58_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMINFO WORK.MODELTEMP_INFO;
84323      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL58_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
84324      proc sort data = EMWS8.Ensmbl58_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl58_EMINFO NOTHREADS;
84325      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
84326      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL58_EMINFO.
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84327      proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
84328      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
84329      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84330      proc sort data = EMWS8.Ensmbl58_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl58_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
84331      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
84332      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL58_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84333      data EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMINFO;
84334      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
84335      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
84336      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84337      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
84338      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
84339      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
84340      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL58_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL58_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FR4GSN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FR4GSN new;
MPRINT(EM_DIAGRAM):   run;
84364      data EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMOUTFIT;
84365      set EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMOUTFIT;
84366      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
84367      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
84367    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
84368      if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
84369      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL58_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL58_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84370      proc sort data=EMWS8.Ensmbl58_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl58_EMREPORTFIT nothreads;
84371      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
84372      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL58_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL58_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
84373      %let _EMwarndup = 0;
84374      %let _EMtargetdup =;
84375      %let _EMASEtargetdup =;
84376      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
84377      set EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMOUTFIT;
84378      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
84379      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
84380      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
84381      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
84382      end;
MPRINT(EM_DIAGRAM):   end;
84383      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL58_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84384      proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
84385      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
84386      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 86 observations read from the data set EMWS8.AUTONEURAL43_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 86 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84387      proc sort data=EMWS8.Ensmbl58_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl58_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
84388      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
84389      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 76 observations read from the data set EMWS8.ENSMBL58_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 76 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
84390      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
84391      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
84392      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
84393      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 86 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 76 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 86 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84394      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
84395      set EMWS8.Ensmbl58_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_CMeta_TRAIN;
84396      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
84396    ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
84397      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL58_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
84398      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
84399      set EMWS8.Ensmbl58_TRAIN(keep=
84400      F_DepVar
84401      I_DepVar
84402      P_DepVar0
84403      P_DepVar1
84404      R_DepVar0
84405      R_DepVar1
84406      U_DepVar
84407      _WARN_
84408      DepVar
84409      );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
84410      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL58_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL44_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL58_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl58_0ORBR00 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58_0ORBR00;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_0ORBR00(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_0ORBR00;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_0ORBR00;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.000094744 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
88676      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
88677      set EMWS8.Ensmbl58_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_CMeta_TRAIN;
88678      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
88678    ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
88679      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL58_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
88680      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
88681      set EMWS8.Ensmbl58_VALIDATE(keep=
88682      F_DepVar
88683      I_DepVar
88684      P_DepVar0
88685      P_DepVar1
88686      R_DepVar0
88687      R_DepVar1
88688      U_DepVar
88689      _WARN_
88690      DepVar
88691      );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
88692      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL58_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL44_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL58_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl58_2EW9V_3 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58_2EW9V_3;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_2EW9V_3(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMCLASSIFICATION WORK.Ensmbl58_2EW9V_3;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_2EW9V_3;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000947328 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
92967      %let _cn = %sysfunc(getoption(CENTER));
92968      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
92969      proc print data=EMWS8.Ensmbl58_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMREPORTFIT noobs label;
92970      var STAT LABEL TRAIN
92971      VALIDATE
92972      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
92973      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
92974      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
92975      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
92976      run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL58_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 14.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
92977      title10;
MPRINT(EM_DIAGRAM):   title10;
92978      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
92979      proc sort data=EMWS8.Ensmbl58_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl58_EMCLASSIFICATION nothreads;
92980      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
92981      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL58_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL58_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
92982      %let _cn = %sysfunc(getoption(CENTER));
92983      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
92984      proc print data=EMWS8.Ensmbl58_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMCLASSIFICATION noobs label;
92985      var from into pct_row pct_col count percent
92986      ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
92987      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
92988      label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
92989      label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
92990      label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
92991      label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
92992      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
92993      label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
92994      where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
92995      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
92996      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
92997      run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL58_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 15.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
92998      title9;
MPRINT(EM_DIAGRAM):   title9;
92999      title10;
MPRINT(EM_DIAGRAM):   title10;
93000      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
93001      %let _cn = %sysfunc(getoption(CENTER));
93002      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
93003      data EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMEVENTREPORT;
93004      length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
93004    ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
93005      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
93005    !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
93005    ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
93005    ! FALSEEVENT
93006      = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
93006    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
93006    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
93007         "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
93008      FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
93009      FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
93010      TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
93011      TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
93012      set EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMEVENTREPORT;
93013      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL58_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL58_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
93014      proc print data=EMWS8.Ensmbl58_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMEVENTREPORT noobs label;
93015      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
93016      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
93017      by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
93018      run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL58_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 16.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
93019      title10;
MPRINT(EM_DIAGRAM):   title10;
93020      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
93021      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
93022      modify Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
93023      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
93024      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
93024    ! ;
MPRINT(EM_DIAGRAM):   run;
93025      run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL58_EMRANK.DATA.
93026      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
93027      %let _cn = %sysfunc(getoption(CENTER));
93028      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
93029      proc print data=EMWS8.Ensmbl58_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMRANK label noobs;
93030      var
93031      decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
93032      by
93033      notsorted DATAROLE
93034      notsorted TARGET
93035      notsorted TARGETLABEL
93036      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
93037      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
93038      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
93039      run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL58_EMRANK.
NOTE: The PROCEDURE PRINT printed page 17.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
93040      title10;
MPRINT(EM_DIAGRAM):   title10;
93041      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
93042      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
93043      modify Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
93044      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
93044    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
93045      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
93045    ! ;
MPRINT(EM_DIAGRAM):   run;
93046      run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL58_EMSCOREDIST.DATA.
93047      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
