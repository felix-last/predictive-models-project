*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                12.03 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3LUQQRI
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3LUQQRI new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[94665] MAX=1 EXCEEDMAXVALUE='' )[94669] )[94663]
VALIDCHOICES=(CHOICE1='Y' )[94667] )[94951] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[94673]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[94677] )[94675] )[94671] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[94681]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[94687] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[94685] )[94683] )[94679] )[94661]
201815     proc freq data=EMWS8.Ensmbl58_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl58_VariableSet noprint;
201816     table ROLE*LEVEL/out=WORK.Ensmbl58META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl58META;
201817     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS8.ENSMBL58_VARIABLESET.
NOTE: The data set WORK.ENSMBL58META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
201818     proc print data=WORK.Ensmbl58META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl58META label noobs;
201819     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
201820     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
201820   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
201820   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
201821     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
201822     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
201823     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL58META.
NOTE: The PROCEDURE PRINT printed page 61.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201824     title10;
MPRINT(EM_DIAGRAM):   title10;
201825     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural43_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
201854     data WORK.Ensmbl58_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
201855     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
201856     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
201856   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
201856   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
201857        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
201857   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
201857   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
201858     set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
201859     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
201860     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
201861     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
201862     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
201863     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
201864     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
201865     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
201866     end;
MPRINT(EM_DIAGRAM):   end;
201867     output;
MPRINT(EM_DIAGRAM):   output;
201868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL58_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201869     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
201870     proc print data=WORK.Ensmbl58_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl58_EVENT noobs label;
201871     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
201872     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
201873     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
201874     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL58_EVENT.
NOTE: The PROCEDURE PRINT printed page 62.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
201875     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
201876     proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
201877     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
201878     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
201879     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
201879   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
201879   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
201880     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
201881     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
201882     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 63.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
201883     title10;
MPRINT(EM_DIAGRAM):   title10;
201884     %let groupid =;
201885     %let endGroupid =;
201886     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201887     set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
201888     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
201888   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
201889     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
201890     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
201891     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201892     %let groupid =;
201893     %let endGroupid =;
201894     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201895     set EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO;
201896     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
201896   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
201897     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
201898     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
201899     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201900     %let groupid =;
201901     %let endGroupid =;
201902     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201903     set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
201904     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
201904   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
201905     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
201906     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
201907     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
201908     %let groupid =;
201909     %let endGroupid =;
201910     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201911     set EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO;
201912     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
201912   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
201913     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
201914     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
201915     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201916     %let groupid =;
201917     %let endGroupid =;
201918     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201919     set EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO;
201920     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
201920   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
201921     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
201922     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
201923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201924     %let groupid =;
201925     %let endGroupid =;
201926     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201927     set EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO;
201928     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
201928   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
201929     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
201930     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
201931     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201932     %let groupid =;
201933     %let endGroupid =;
201934     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201935     set EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_EMINFO;
201936     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
201936   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
201937     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
201938     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
201939     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201940     data WORK.Ensmbl58;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58;
201941     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
201942     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
201942   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
201943     nodeid="AUTONEURAL46";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL46";
201944     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
201945     output;
MPRINT(EM_DIAGRAM):   output;
201946     nodeid="AUTONEURAL43";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL43";
201947     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
201948     output;
MPRINT(EM_DIAGRAM):   output;
201949     nodeid="AUTONEURAL42";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL42";
201950     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
201951     output;
MPRINT(EM_DIAGRAM):   output;
201952     nodeid="AUTONEURAL41";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL41";
201953     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
201954     output;
MPRINT(EM_DIAGRAM):   output;
201955     nodeid="AUTONEURAL47";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL47";
201956     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
201957     output;
MPRINT(EM_DIAGRAM):   output;
201958     nodeid="AUTONEURAL45";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL45";
201959     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
201960     output;
MPRINT(EM_DIAGRAM):   output;
201961     nodeid="AUTONEURAL44";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL44";
201962     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
201963     output;
MPRINT(EM_DIAGRAM):   output;
201964     ;
MPRINT(EM_DIAGRAM):   ;
201965     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL58 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
201966     title;
MPRINT(EM_DIAGRAM):   title;
201967     proc print data=WORK.Ensmbl58 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl58 label noobs;
201968     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
201969     title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
201970     run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL58.
NOTE: The PROCEDURE PRINT printed page 64.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201971     title9;
MPRINT(EM_DIAGRAM):   title9;
201972     title10;
MPRINT(EM_DIAGRAM):   title10;
201973     data WORK.M194FS6D;
MPRINT(EM_DIAGRAM):    data WORK.M194FS6D;
201974     set WORK.M194FS6D;
MPRINT(EM_DIAGRAM):   set WORK.M194FS6D;
201975     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
201976     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M194FS6D.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M194FS6D has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201977     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
201978     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
201979     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
201980     %macro DMDBClass;
201981         DepVar(DESC)
201982     %mend DMDBClass;
201983     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
201984     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
201985     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
201986     %macro DMDBVar;
201987
201988     %mend DMDBVar;
201989     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
201990     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
201991     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
201992     proc dmdb batch data=EMWS8.AutoNeural46_TRAIN
201993     dmdbcat=WORK.EM_DMDB
201994     maxlevel = 513
201995     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural46_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
201996     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
201997     target
201998     DepVar
201999     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
202000     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL46_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
202001     quit;
202002     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O36LIZNH
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O36LIZNH new;
MPRINT(EM_DIAGRAM):   run;
202104     filename emflow
202104   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring AUTONEURAL46_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202105     *------------------------------------------------------------*;
202106     * Ensmbl58: Scoring AUTONEURAL46_TRAIN data;
202107     *------------------------------------------------------------*;
202108     data EMWS8.Ensmbl58_TRAIN
202109     / view=EMWS8.Ensmbl58_TRAIN
202110     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_TRAIN / view=EMWS8.Ensmbl58_TRAIN ;
202111     set EMWS8.AutoNeural46_TRAIN
202112     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_TRAIN ;
202113     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas.
202114    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202115    +* Ensmbl58: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Combine model for DepVar;
202116    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202117    +* Ensmbl58: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 1 of 7;
202118    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202119    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202120    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
202121    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
202122    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
202123    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202124    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202125    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
202126    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
202127    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
202128    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202129    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202130    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
202131    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
202132    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
202133    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202134    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202135    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
202136    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
202137    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
202138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202139    +
202140    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
202141    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
202141   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
202142    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
202143    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
202144    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
202145    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
202146    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
202147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202148    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
202149    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
202150    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
202151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202152    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202153    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
202154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202155    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
202156    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
202157    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
202158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202159    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
202160    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
202161    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
202162    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202163    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202164    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
202165    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
202166    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
202167    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202169    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
202170    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
202171    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
202172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202173    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
202174    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
202175    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
202176    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
202177    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
202178    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
202179    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
202180    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
202181    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
202182    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
202183    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
202184    +LENGTH _WARN_ $4
202185    +      F_DepVar  $ 12
202186    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
202187    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
202188    +
202189    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
202190    +
202191    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
202192    +
202193    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
202194    +
202195    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
202196    +
202197    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
202198    +
202199    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
202200    +
202201    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
202202    +
202203    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
202204    +
202205    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
202206    +
202207    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
202208    +
202209    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
202210    +
202211    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
202212    +
202213    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
202214    +
202215    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
202216    +
202217    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
202218    +
202219    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
202220    +
202221    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
202222    +
202223    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
202224    +
202225    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
202226    +
202227    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
202228    +
202229    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
202230    +
202231    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
202232    +
202233    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
202234    +
202235    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
202236    +
202237    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
202238    +
202239    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
202240    +
202241    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
202242    +
202243    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
202244    +
202245    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
202246    +
202247    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
202248    +
202249    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
202250    +
202251    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
202252    +
202253    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
202254    +
202255    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
202256    +
202257    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
202258    +
202259    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
202260    +
202261    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
202262    +
202263    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
202264    +
202265    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
202266    +
202267    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
202268    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
202269    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
202270    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
202271    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202272    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202273    +end;
MPRINT(EM_DIAGRAM):   end;
202274    +else do;
MPRINT(EM_DIAGRAM):   else do;
202275    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202276    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
202277    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202278    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202279    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
202280    +   end;
MPRINT(EM_DIAGRAM):   end;
202281    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202282    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
202283    +   end;
MPRINT(EM_DIAGRAM):   end;
202284    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202285    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
202286    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202287    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202288    +   end;
MPRINT(EM_DIAGRAM):   end;
202289    +end;
MPRINT(EM_DIAGRAM):   end;
202290    +
202291    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
202292    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
202293    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
202294    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
202295    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202296    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202297    +end;
MPRINT(EM_DIAGRAM):   end;
202298    +else do;
MPRINT(EM_DIAGRAM):   else do;
202299    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202300    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
202301    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202302    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202303    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
202304    +   end;
MPRINT(EM_DIAGRAM):   end;
202305    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202306    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
202307    +   end;
MPRINT(EM_DIAGRAM):   end;
202308    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202309    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
202310    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202311    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202312    +   end;
MPRINT(EM_DIAGRAM):   end;
202313    +end;
MPRINT(EM_DIAGRAM):   end;
202314    +
202315    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
202316    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
202317    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
202318    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
202319    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202320    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202321    +end;
MPRINT(EM_DIAGRAM):   end;
202322    +else do;
MPRINT(EM_DIAGRAM):   else do;
202323    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202324    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
202325    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202326    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202327    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
202328    +   end;
MPRINT(EM_DIAGRAM):   end;
202329    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202330    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
202331    +   end;
MPRINT(EM_DIAGRAM):   end;
202332    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202333    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
202334    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202335    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202336    +   end;
MPRINT(EM_DIAGRAM):   end;
202337    +end;
MPRINT(EM_DIAGRAM):   end;
202338    +
202339    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
202340    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
202341    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
202342    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
202343    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202344    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202345    +end;
MPRINT(EM_DIAGRAM):   end;
202346    +else do;
MPRINT(EM_DIAGRAM):   else do;
202347    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202348    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
202349    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202350    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202351    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
202352    +   end;
MPRINT(EM_DIAGRAM):   end;
202353    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202354    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
202355    +   end;
MPRINT(EM_DIAGRAM):   end;
202356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202357    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
202358    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202359    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202360    +   end;
MPRINT(EM_DIAGRAM):   end;
202361    +end;
MPRINT(EM_DIAGRAM):   end;
202362    +
202363    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
202364    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
202365    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
202366    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
202367    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202369    +end;
MPRINT(EM_DIAGRAM):   end;
202370    +else do;
MPRINT(EM_DIAGRAM):   else do;
202371    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202372    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
202373    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202374    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202375    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
202376    +   end;
MPRINT(EM_DIAGRAM):   end;
202377    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202378    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
202379    +   end;
MPRINT(EM_DIAGRAM):   end;
202380    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202381    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
202382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202384    +   end;
MPRINT(EM_DIAGRAM):   end;
202385    +end;
MPRINT(EM_DIAGRAM):   end;
202386    +
202387    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
202388    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
202389    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
202390    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
202391    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202392    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202393    +end;
MPRINT(EM_DIAGRAM):   end;
202394    +else do;
MPRINT(EM_DIAGRAM):   else do;
202395    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202396    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
202397    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202398    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202399    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
202400    +   end;
MPRINT(EM_DIAGRAM):   end;
202401    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202402    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
202403    +   end;
MPRINT(EM_DIAGRAM):   end;
202404    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202405    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
202406    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202407    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202408    +   end;
MPRINT(EM_DIAGRAM):   end;
202409    +end;
MPRINT(EM_DIAGRAM):   end;
202410    +
202411    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
202412    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
202413    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
202414    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
202415    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
202416    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
202417    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
202418    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
202419    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
202420    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
202421    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
202422    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
202423    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202424    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202425    +end;
MPRINT(EM_DIAGRAM):   end;
202426    +else do;
MPRINT(EM_DIAGRAM):   else do;
202427    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
202428    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
202429    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202430    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
202431    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
202432    +   end;
MPRINT(EM_DIAGRAM):   end;
202433    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
202434    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
202435    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
202436    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
202437    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
202438    +   end;
MPRINT(EM_DIAGRAM):   end;
202439    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
202440    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
202441    +   end;
MPRINT(EM_DIAGRAM):   end;
202442    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
202443    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
202444    +   end;
MPRINT(EM_DIAGRAM):   end;
202445    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
202446    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
202447    +   end;
MPRINT(EM_DIAGRAM):   end;
202448    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202449    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
202450    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
202451    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
202452    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
202453    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202454    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202455    +   end;
MPRINT(EM_DIAGRAM):   end;
202456    +end;
MPRINT(EM_DIAGRAM):   end;
202457    +
202458    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
202459    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
202460    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
202461    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
202462    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
202463    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
202464    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
202465    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
202466    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
202467    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
202468    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
202469    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
202470    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
202471    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202472    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202473    +end;
MPRINT(EM_DIAGRAM):   end;
202474    +else do;
MPRINT(EM_DIAGRAM):   else do;
202475    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
202476    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
202477    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202478    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
202479    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
202480    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
202481    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
202482    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
202483    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
202484    +         end;
MPRINT(EM_DIAGRAM):   end;
202485    +         else do;
MPRINT(EM_DIAGRAM):   else do;
202486    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
202487    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
202488    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
202489    +            end;
MPRINT(EM_DIAGRAM):   end;
202490    +         end;
MPRINT(EM_DIAGRAM):   end;
202491    +      end;
MPRINT(EM_DIAGRAM):   end;
202492    +      else do;
MPRINT(EM_DIAGRAM):   else do;
202493    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
202494    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
202495    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
202496    +         end;
MPRINT(EM_DIAGRAM):   end;
202497    +      end;
MPRINT(EM_DIAGRAM):   end;
202498    +   end;
MPRINT(EM_DIAGRAM):   end;
202499    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202500    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
202501    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
202502    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
202503    +      end;
MPRINT(EM_DIAGRAM):   end;
202504    +      else do;
MPRINT(EM_DIAGRAM):   else do;
202505    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
202506    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
202507    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
202508    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
202509    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
202510    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
202511    +         end;
MPRINT(EM_DIAGRAM):   end;
202512    +      end;
MPRINT(EM_DIAGRAM):   end;
202513    +   end;
MPRINT(EM_DIAGRAM):   end;
202514    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
202515    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
202516    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
202517    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
202518    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
202519    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202520    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202521    +   end;
MPRINT(EM_DIAGRAM):   end;
202522    +end;
MPRINT(EM_DIAGRAM):   end;
202523    +
202524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202525    +*** Checking missing input Interval
202526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
202527    +
202528    +IF NMISS(
202529    +   Income ,
202530    +   Kidhome ,
202531    +   MntFishProducts ,
202532    +   MntFruits ,
202533    +   MntGoldProds ,
202534    +   MntMeatProducts ,
202535    +   MntSweetProducts ,
202536    +   MntWines ,
202537    +   NumCatalogPurchases ,
202538    +   NumDealsPurchases ,
202539    +   NumStorePurchases ,
202540    +   NumWebPurchases ,
202541    +   NumWebVisitsMonth ,
202542    +   Recency ,
202543    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
202544    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
202545    +
202546    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202547    +END;
MPRINT(EM_DIAGRAM):   END;
202548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202549    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
202550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202551    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
202552    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
202553    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
202554    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
202555    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
202556    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
202557    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
202558    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
202559    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
202560    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
202561    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
202562    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
202563    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
202564    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
202565    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
202566    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
202567    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
202568    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
202569    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
202570    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
202571    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
202572    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
202573    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
202574    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
202575    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
202576    +END;
MPRINT(EM_DIAGRAM):   END;
202577    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
202578    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
202579    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
202580    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
202581    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
202582    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
202583    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
202584    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
202585    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
202586    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
202587    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
202588    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
202589    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
202590    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
202591    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
202592    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
202593    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
202594    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
202595    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
202596    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
202597    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
202598    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
202599    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
202600    +   ELSE S_NumCatalogPurchases
202601    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
202602    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
202603    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
202604    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
202605    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
202606    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
202607    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
202608    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
202609    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
202610    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
202611    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
202612    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
202613    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
202614    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
202615    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
202616    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
202617    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
202618    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
202619    +END;
MPRINT(EM_DIAGRAM):   END;
202620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202621    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
202622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202624    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
202625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202627    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
202628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202629    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
202630    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
202631    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
202632    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
202633    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
202634    +          +      0.0311909552218 * S_MntSweetProducts
202635    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
202636    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
202637    +          +     0.12294876865087 * S_NumStorePurchases
202638    +          +     0.11602382379314 * S_NumWebPurchases
202639    +          +    -0.23519567542635 * S_NumWebVisitsMonth
202640    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
202641    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
202642    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
202643    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
202644    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
202645    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
202646    +          +     0.00133400054994 * S_MntSweetProducts
202647    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
202648    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
202649    +          +    -0.49595472235036 * S_NumStorePurchases
202650    +          +    -0.24747548015204 * S_NumWebPurchases
202651    +          +     0.12326047694811 * S_NumWebVisitsMonth
202652    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
202653    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
202654    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
202655    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
202656    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
202657    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
202658    +          +    -0.03908755288099 * S_MntSweetProducts
202659    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
202660    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
202661    +          +    -0.20634630081435 * S_NumStorePurchases
202662    +          +    -0.06734935798888 * S_NumWebPurchases
202663    +          +     0.32288250215418 * S_NumWebVisitsMonth
202664    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
202665    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
202666    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
202667    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
202668    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
202669    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
202670    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
202671    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
202672    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
202673    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
202674    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
202675    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
202676    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
202677    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
202678    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
202679    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
202680    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
202681    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
202682    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
202683    +        EducationGraduation  +     0.07475697967073 * EducationMaster
202684    +          +    -0.04265434587882 * Marital_StatusDivorced
202685    +          +     0.17114014094758 * Marital_StatusMarried
202686    +          +     -0.1537035921296 * Marital_StatusSingle
202687    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
202688    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
202689    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
202690    +        EducationGraduation  +     0.04507684017588 * EducationMaster
202691    +          +     0.25534272809394 * Marital_StatusDivorced
202692    +          +     0.20034903346804 * Marital_StatusMarried
202693    +          +    -0.38348393943797 * Marital_StatusSingle
202694    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
202695    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
202696    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
202697    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
202698    +          +      0.1988416043876 * Marital_StatusDivorced
202699    +          +    -0.21663959478684 * Marital_StatusMarried
202700    +          +     0.06591480171547 * Marital_StatusSingle
202701    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
202702    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
202703    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
202704    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
202705    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
202706    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
202707    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
202708    +END;
MPRINT(EM_DIAGRAM):   END;
202709    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
202710    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
202711    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
202712    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
202713    +END;
MPRINT(EM_DIAGRAM):   END;
202714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202715    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
202716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202717    +
202718    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
202719    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
202720    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
202721    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
202722    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
202723    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202724    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
202725    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
202726    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
202727    +end;
MPRINT(EM_DIAGRAM):   end;
202728    +else do;
MPRINT(EM_DIAGRAM):   else do;
202729    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
202730    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
202731    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
202732    +   end;
MPRINT(EM_DIAGRAM):   end;
202733    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
202734    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
202735    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
202736    +   end;
MPRINT(EM_DIAGRAM):   end;
202737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202738    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
202739    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
202740    +   end;
MPRINT(EM_DIAGRAM):   end;
202741    +end;
MPRINT(EM_DIAGRAM):   end;
202742    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
202743    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
202744    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
202745    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
202746    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
202747    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
202748    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
202749    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
202750    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
202751    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
202752    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
202753    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
202754    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
202755    +END;
MPRINT(EM_DIAGRAM):   END;
202756    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
202757    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
202758    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
202759    +END;
MPRINT(EM_DIAGRAM):   END;
202760    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
202761    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
202762    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
202763    +END;
MPRINT(EM_DIAGRAM):   END;
202764    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
202765    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
202766    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
202767    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
202768    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
202769    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
202770    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
202771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202772    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
202773    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
202774    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
202775    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
202776    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
202777    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
202778    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
202779    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
202780    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
202781    +END;
MPRINT(EM_DIAGRAM):   END;
202782    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
202783    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
202784    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
202785    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
202786    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
202787    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202788    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
202789    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202790    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
202791    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
202792    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
202793    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
202794    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202795    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
202796    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202797    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
202798    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
202799    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
202800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202801    +* Ensmbl58: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 2 of 7;
202802    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202803    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202804    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
202805    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
202806    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
202807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202808    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
202809    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
202810    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
202811    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
202812    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
202813    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
202814    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
202815    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
202816    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
202817    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
202818    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
202819    +LENGTH _WARN_ $4
202820    +      F_DepVar  $ 12
202821    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
202822    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
202823    +
202824    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
202825    +
202826    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
202827    +
202828    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
202829    +
202830    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
202831    +
202832    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
202833    +
202834    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
202835    +
202836    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
202837    +
202838    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
202839    +
202840    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
202841    +
202842    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
202843    +
202844    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
202845    +
202846    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
202847    +
202848    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
202849    +
202850    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
202851    +
202852    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
202853    +
202854    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
202855    +
202856    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
202857    +
202858    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
202859    +
202860    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
202861    +
202862    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
202863    +
202864    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
202865    +
202866    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
202867    +
202868    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
202869    +
202870    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
202871    +
202872    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
202873    +
202874    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
202875    +
202876    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
202877    +
202878    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
202879    +
202880    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
202881    +
202882    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
202883    +
202884    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
202885    +
202886    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
202887    +
202888    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
202889    +
202890    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
202891    +
202892    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
202893    +
202894    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
202895    +
202896    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
202897    +
202898    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
202899    +
202900    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
202901    +
202902    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
202903    +
202904    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
202905    +
202906    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
202907    +
202908    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
202909    +
202910    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
202911    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
202912    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
202913    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
202914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202916    +end;
MPRINT(EM_DIAGRAM):   end;
202917    +else do;
MPRINT(EM_DIAGRAM):   else do;
202918    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202919    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
202920    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202921    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202922    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
202923    +   end;
MPRINT(EM_DIAGRAM):   end;
202924    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202925    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
202926    +   end;
MPRINT(EM_DIAGRAM):   end;
202927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202928    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
202929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202931    +   end;
MPRINT(EM_DIAGRAM):   end;
202932    +end;
MPRINT(EM_DIAGRAM):   end;
202933    +
202934    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
202935    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
202936    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
202937    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
202938    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202939    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202940    +end;
MPRINT(EM_DIAGRAM):   end;
202941    +else do;
MPRINT(EM_DIAGRAM):   else do;
202942    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202943    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
202944    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202945    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202946    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
202947    +   end;
MPRINT(EM_DIAGRAM):   end;
202948    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202949    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
202950    +   end;
MPRINT(EM_DIAGRAM):   end;
202951    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202952    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
202953    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202954    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202955    +   end;
MPRINT(EM_DIAGRAM):   end;
202956    +end;
MPRINT(EM_DIAGRAM):   end;
202957    +
202958    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
202959    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
202960    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
202961    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
202962    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202964    +end;
MPRINT(EM_DIAGRAM):   end;
202965    +else do;
MPRINT(EM_DIAGRAM):   else do;
202966    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202967    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
202968    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202969    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202970    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
202971    +   end;
MPRINT(EM_DIAGRAM):   end;
202972    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202973    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
202974    +   end;
MPRINT(EM_DIAGRAM):   end;
202975    +   else do;
MPRINT(EM_DIAGRAM):   else do;
202976    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
202977    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
202978    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202979    +   end;
MPRINT(EM_DIAGRAM):   end;
202980    +end;
MPRINT(EM_DIAGRAM):   end;
202981    +
202982    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
202983    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
202984    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
202985    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
202986    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
202987    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
202988    +end;
MPRINT(EM_DIAGRAM):   end;
202989    +else do;
MPRINT(EM_DIAGRAM):   else do;
202990    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
202991    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
202992    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
202993    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
202994    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
202995    +   end;
MPRINT(EM_DIAGRAM):   end;
202996    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
202997    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
202998    +   end;
MPRINT(EM_DIAGRAM):   end;
202999    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203000    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
203001    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203002    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203003    +   end;
MPRINT(EM_DIAGRAM):   end;
203004    +end;
MPRINT(EM_DIAGRAM):   end;
203005    +
203006    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
203007    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
203008    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
203009    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
203010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203012    +end;
MPRINT(EM_DIAGRAM):   end;
203013    +else do;
MPRINT(EM_DIAGRAM):   else do;
203014    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203015    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
203016    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203017    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203018    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
203019    +   end;
MPRINT(EM_DIAGRAM):   end;
203020    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203021    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
203022    +   end;
MPRINT(EM_DIAGRAM):   end;
203023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203024    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
203025    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203026    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203027    +   end;
MPRINT(EM_DIAGRAM):   end;
203028    +end;
MPRINT(EM_DIAGRAM):   end;
203029    +
203030    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
203031    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
203032    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
203033    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
203034    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203035    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203036    +end;
MPRINT(EM_DIAGRAM):   end;
203037    +else do;
MPRINT(EM_DIAGRAM):   else do;
203038    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203039    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
203040    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203041    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203042    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
203043    +   end;
MPRINT(EM_DIAGRAM):   end;
203044    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203045    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
203046    +   end;
MPRINT(EM_DIAGRAM):   end;
203047    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203048    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
203049    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203050    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203051    +   end;
MPRINT(EM_DIAGRAM):   end;
203052    +end;
MPRINT(EM_DIAGRAM):   end;
203053    +
203054    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
203055    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
203056    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203057    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
203058    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
203059    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
203060    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
203061    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
203062    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
203063    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
203064    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
203065    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
203066    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203067    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203068    +end;
MPRINT(EM_DIAGRAM):   end;
203069    +else do;
MPRINT(EM_DIAGRAM):   else do;
203070    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
203071    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
203072    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203073    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
203074    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
203075    +   end;
MPRINT(EM_DIAGRAM):   end;
203076    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
203077    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
203078    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
203079    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
203080    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
203081    +   end;
MPRINT(EM_DIAGRAM):   end;
203082    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
203083    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
203084    +   end;
MPRINT(EM_DIAGRAM):   end;
203085    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
203086    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
203087    +   end;
MPRINT(EM_DIAGRAM):   end;
203088    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
203089    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
203090    +   end;
MPRINT(EM_DIAGRAM):   end;
203091    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203092    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
203093    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
203094    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
203095    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
203096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203098    +   end;
MPRINT(EM_DIAGRAM):   end;
203099    +end;
MPRINT(EM_DIAGRAM):   end;
203100    +
203101    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
203102    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
203103    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
203104    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203105    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
203106    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
203107    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
203108    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
203109    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
203110    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
203111    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
203112    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
203113    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
203114    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203115    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203116    +end;
MPRINT(EM_DIAGRAM):   end;
203117    +else do;
MPRINT(EM_DIAGRAM):   else do;
203118    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
203119    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
203120    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203121    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
203122    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
203123    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
203124    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
203125    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
203126    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203127    +         end;
MPRINT(EM_DIAGRAM):   end;
203128    +         else do;
MPRINT(EM_DIAGRAM):   else do;
203129    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
203130    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
203131    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203132    +            end;
MPRINT(EM_DIAGRAM):   end;
203133    +         end;
MPRINT(EM_DIAGRAM):   end;
203134    +      end;
MPRINT(EM_DIAGRAM):   end;
203135    +      else do;
MPRINT(EM_DIAGRAM):   else do;
203136    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
203137    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
203138    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203139    +         end;
MPRINT(EM_DIAGRAM):   end;
203140    +      end;
MPRINT(EM_DIAGRAM):   end;
203141    +   end;
MPRINT(EM_DIAGRAM):   end;
203142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203143    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
203144    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
203145    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203146    +      end;
MPRINT(EM_DIAGRAM):   end;
203147    +      else do;
MPRINT(EM_DIAGRAM):   else do;
203148    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
203149    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
203150    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
203151    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
203152    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
203153    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203154    +         end;
MPRINT(EM_DIAGRAM):   end;
203155    +      end;
MPRINT(EM_DIAGRAM):   end;
203156    +   end;
MPRINT(EM_DIAGRAM):   end;
203157    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
203158    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
203159    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
203160    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
203161    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
203162    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203163    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203164    +   end;
MPRINT(EM_DIAGRAM):   end;
203165    +end;
MPRINT(EM_DIAGRAM):   end;
203166    +
203167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203168    +*** Checking missing input Interval
203169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
203170    +
203171    +IF NMISS(
203172    +   Income ,
203173    +   Kidhome ,
203174    +   MntFishProducts ,
203175    +   MntFruits ,
203176    +   MntGoldProds ,
203177    +   MntMeatProducts ,
203178    +   MntSweetProducts ,
203179    +   MntWines ,
203180    +   NumCatalogPurchases ,
203181    +   NumDealsPurchases ,
203182    +   NumStorePurchases ,
203183    +   NumWebPurchases ,
203184    +   NumWebVisitsMonth ,
203185    +   Recency ,
203186    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
203187    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
203188    +
203189    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203190    +END;
MPRINT(EM_DIAGRAM):   END;
203191    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203192    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
203193    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203194    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203195    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
203196    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
203197    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
203198    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
203199    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
203200    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
203201    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
203202    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
203203    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
203204    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
203205    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
203206    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
203207    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
203208    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
203209    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
203210    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
203211    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
203212    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
203213    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
203214    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
203215    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
203216    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
203217    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
203218    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
203219    +END;
MPRINT(EM_DIAGRAM):   END;
203220    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203221    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
203222    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
203223    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
203224    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
203225    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
203226    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
203227    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
203228    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
203229    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
203230    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
203231    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
203232    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
203233    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
203234    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
203235    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
203236    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
203237    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
203238    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
203239    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
203240    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
203241    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
203242    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
203243    +   ELSE S_NumCatalogPurchases
203244    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
203245    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
203246    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
203247    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
203248    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
203249    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
203250    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
203251    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
203252    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
203253    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
203254    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
203255    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
203256    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
203257    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
203258    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
203259    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
203260    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
203261    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
203262    +END;
MPRINT(EM_DIAGRAM):   END;
203263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203264    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
203265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203267    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
203268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203270    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
203271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203272    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203273    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
203274    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
203275    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
203276    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
203277    +          +    -0.05146617403327 * S_MntSweetProducts
203278    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
203279    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
203280    +          +     0.62863110938217 * S_NumStorePurchases
203281    +          +    -0.38696149667878 * S_NumWebPurchases
203282    +          +    -0.64969312889347 * S_NumWebVisitsMonth
203283    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
203284    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome +
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 *
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 *
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency +
-0.14927581282921 * S_Teenhome ;
203285    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
203286    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
203287    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
203288    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
203289    +          +     -0.2837867994991 * S_MntSweetProducts
203290    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
203291    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
203292    +          +    -0.54369381190341 * S_NumStorePurchases
203293    +          +     0.67406669261545 * S_NumWebPurchases
203294    +          +     0.33996696883368 * S_NumWebVisitsMonth
203295    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
203296    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome +
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 *
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases +
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases +
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth +
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
203297    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
203298    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
203299    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
203300    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
203301    +          +    -0.03465749764322 * S_MntSweetProducts
203302    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
203303    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
203304    +          +      0.4404265130137 * S_NumStorePurchases
203305    +          +     0.34042541893429 * S_NumWebPurchases
203306    +          +    -1.21549916758761 * S_NumWebVisitsMonth
203307    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
203308    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome +
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 *
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 *
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases +
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth +
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
203309    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
203310    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
203311    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
203312    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
203313    +          +    -0.00464679492565 * S_MntSweetProducts
203314    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
203315    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
203316    +          +     1.15839307615364 * S_NumStorePurchases
203317    +          +     0.62831972126136 * S_NumWebPurchases
203318    +          +    -1.61962107597882 * S_NumWebVisitsMonth
203319    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
203320    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome +
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 *
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 *
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases +
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth +
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
203321    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
203322    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
203323    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
203324    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
203325    +          +    -0.31125451894603 * S_MntSweetProducts
203326    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
203327    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
203328    +          +    -1.44151914398807 * S_NumStorePurchases
203329    +          +     -0.5455286038748 * S_NumWebPurchases
203330    +          +     0.92543573664002 * S_NumWebVisitsMonth
203331    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
203332    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome +
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 *
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 *
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency +
0.12419848895477 * S_Teenhome ;
203333    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
203334    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
203335    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
203336    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
203337    +          +    -0.44310159680843 * S_MntSweetProducts
203338    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
203339    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
203340    +          +    -0.06648303760561 * S_NumStorePurchases
203341    +          +    -0.65122349287903 * S_NumWebPurchases
203342    +          +     1.83555427093429 * S_NumWebVisitsMonth
203343    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
203344    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome +
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 *
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 *
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency +
-0.96168611481099 * S_Teenhome ;
203345    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
203346    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
203347    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
203348    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
203349    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 *
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 +
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
203350    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
203351    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
203352    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
203353    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
203354    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 *
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 +
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
203355    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
203356    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
203357    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
203358    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
203359    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 *
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 +
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
203360    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
203361    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
203362    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
203363    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
203364    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 *
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 +
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
203365    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
203366    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
203367    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
203368    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
203369    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 +
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
203370    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
203371    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
203372    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
203373    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
203374    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 +
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
203375    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
203376    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
203377    +        EducationGraduation  +     0.15082660839612 * EducationMaster
203378    +          +    -0.86711066227375 * Marital_StatusDivorced
203379    +          +     0.40837974583757 * Marital_StatusMarried
203380    +          +    -0.36026722115525 * Marital_StatusSingle
203381    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle +
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation +
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced +
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle +
0.79004200065113 * Marital_StatusTogether ;
203382    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
203383    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
203384    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
203385    +          +     0.32215787204894 * Marital_StatusDivorced
203386    +          +    -0.56445035445224 * Marital_StatusMarried
203387    +          +    -0.19089062631475 * Marital_StatusSingle
203388    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle +
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation +
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced +
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle +
-0.05879603306331 * Marital_StatusTogether ;
203389    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
203390    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
203391    +        EducationGraduation  +     0.08569631133746 * EducationMaster
203392    +          +      0.0333599428728 * Marital_StatusDivorced
203393    +          +      0.2536992094527 * Marital_StatusMarried
203394    +          +     0.28814962122223 * Marital_StatusSingle
203395    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle +
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 *
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 *
Marital_StatusTogether ;
203396    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
203397    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
203398    +        EducationGraduation  +     0.67447448653035 * EducationMaster
203399    +          +    -0.47992692297474 * Marital_StatusDivorced
203400    +          +     1.37810632485566 * Marital_StatusMarried
203401    +          +    -1.37561982457408 * Marital_StatusSingle
203402    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle +
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 *
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 *
Marital_StatusTogether ;
203403    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
203404    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
203405    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
203406    +          +     0.19162417091995 * Marital_StatusDivorced
203407    +          +    -0.36068364824761 * Marital_StatusMarried
203408    +          +    -0.12710669526743 * Marital_StatusSingle
203409    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle +
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation +
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced +
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle +
-0.01019314244777 * Marital_StatusTogether ;
203410    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
203411    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
203412    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
203413    +          +     0.23760271729717 * Marital_StatusDivorced
203414    +          +    -1.21454188572959 * Marital_StatusMarried
203415    +          +     1.24284947007232 * Marital_StatusSingle
203416    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle +
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation +
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced +
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle +
-1.39754167839201 * Marital_StatusTogether ;
203417    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
203418    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
203419    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
203420    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
203421    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
203422    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
203423    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
203424    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
203425    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
203426    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
203427    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
203428    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
203429    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
203430    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
203431    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
203432    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
203433    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
203434    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
203435    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
203436    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
203437    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
203438    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
203439    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
203440    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
203441    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
203442    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
203443    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
203444    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
203445    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
203446    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
203447    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
203448    +END;
MPRINT(EM_DIAGRAM):   END;
203449    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203450    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
203451    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
203452    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
203453    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
203454    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
203455    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
203456    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
203457    +END;
MPRINT(EM_DIAGRAM):   END;
203458    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203459    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
203460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203461    +
203462    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
203463    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
203464    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
203465    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
203466    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
203467    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203468    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
203469    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
203470    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
203471    +end;
MPRINT(EM_DIAGRAM):   end;
203472    +else do;
MPRINT(EM_DIAGRAM):   else do;
203473    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
203474    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
203475    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
203476    +   end;
MPRINT(EM_DIAGRAM):   end;
203477    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
203478    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
203479    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
203480    +   end;
MPRINT(EM_DIAGRAM):   end;
203481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203482    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
203483    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
203484    +   end;
MPRINT(EM_DIAGRAM):   end;
203485    +end;
MPRINT(EM_DIAGRAM):   end;
203486    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203487    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
203488    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
203489    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
203490    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 +
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 +
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
203491    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
203492    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
203493    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
203494    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
203495    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
203496    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
203497    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
203498    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
203499    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
203500    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
203501    +END;
MPRINT(EM_DIAGRAM):   END;
203502    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203503    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
203504    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
203505    +END;
MPRINT(EM_DIAGRAM):   END;
203506    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
203507    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
203508    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
203509    +END;
MPRINT(EM_DIAGRAM):   END;
203510    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
203511    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
203512    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
203513    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
203514    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
203515    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
203516    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
203517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203518    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
203519    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203520    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
203521    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
203522    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
203523    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
203524    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
203525    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
203526    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
203527    +END;
MPRINT(EM_DIAGRAM):   END;
203528    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203529    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
203530    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203531    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
203532    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
203533    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203534    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
203535    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203536    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
203537    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
203538    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
203539    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
203540    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203541    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
203542    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203543    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
203544    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
203545    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
203546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203547    +* Ensmbl58: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 3 of 7;
203548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203549    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203550    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
203551    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
203552    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
203553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203554    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203555    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203556    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203557    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203558    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203559    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203560    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203561    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203562    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203563    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203564    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203565    +LENGTH _WARN_ $4
203566    +      F_DepVar  $ 12
203567    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
203568    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
203569    +
203570    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
203571    +
203572    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
203573    +
203574    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
203575    +
203576    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
203577    +
203578    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
203579    +
203580    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
203581    +
203582    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
203583    +
203584    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
203585    +
203586    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
203587    +
203588    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
203589    +
203590    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
203591    +
203592    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
203593    +
203594    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
203595    +
203596    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
203597    +
203598    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
203599    +
203600    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
203601    +
203602    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
203603    +
203604    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
203605    +
203606    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
203607    +
203608    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
203609    +
203610    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
203611    +
203612    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
203613    +
203614    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
203615    +
203616    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
203617    +
203618    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
203619    +
203620    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
203621    +
203622    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
203623    +
203624    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
203625    +
203626    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
203627    +
203628    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
203629    +
203630    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
203631    +
203632    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
203633    +
203634    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
203635    +
203636    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
203637    +
203638    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
203639    +
203640    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
203641    +
203642    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
203643    +
203644    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
203645    +
203646    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
203647    +
203648    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
203649    +
203650    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
203651    +
203652    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203653    +
203654    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
203655    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
203656    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
203657    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
203658    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203659    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203660    +end;
MPRINT(EM_DIAGRAM):   end;
203661    +else do;
MPRINT(EM_DIAGRAM):   else do;
203662    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203663    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
203664    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203665    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203666    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
203667    +   end;
MPRINT(EM_DIAGRAM):   end;
203668    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203669    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
203670    +   end;
MPRINT(EM_DIAGRAM):   end;
203671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203672    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
203673    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203674    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203675    +   end;
MPRINT(EM_DIAGRAM):   end;
203676    +end;
MPRINT(EM_DIAGRAM):   end;
203677    +
203678    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
203679    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
203680    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
203681    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
203682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203684    +end;
MPRINT(EM_DIAGRAM):   end;
203685    +else do;
MPRINT(EM_DIAGRAM):   else do;
203686    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203687    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
203688    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203689    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203690    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
203691    +   end;
MPRINT(EM_DIAGRAM):   end;
203692    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203693    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
203694    +   end;
MPRINT(EM_DIAGRAM):   end;
203695    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203696    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
203697    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203698    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203699    +   end;
MPRINT(EM_DIAGRAM):   end;
203700    +end;
MPRINT(EM_DIAGRAM):   end;
203701    +
203702    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
203703    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
203704    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
203705    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
203706    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203707    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203708    +end;
MPRINT(EM_DIAGRAM):   end;
203709    +else do;
MPRINT(EM_DIAGRAM):   else do;
203710    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203711    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
203712    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203713    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203714    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
203715    +   end;
MPRINT(EM_DIAGRAM):   end;
203716    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203717    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
203718    +   end;
MPRINT(EM_DIAGRAM):   end;
203719    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203720    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
203721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203723    +   end;
MPRINT(EM_DIAGRAM):   end;
203724    +end;
MPRINT(EM_DIAGRAM):   end;
203725    +
203726    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
203727    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
203728    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
203729    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
203730    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203731    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203732    +end;
MPRINT(EM_DIAGRAM):   end;
203733    +else do;
MPRINT(EM_DIAGRAM):   else do;
203734    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203735    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
203736    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203737    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203738    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
203739    +   end;
MPRINT(EM_DIAGRAM):   end;
203740    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203741    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
203742    +   end;
MPRINT(EM_DIAGRAM):   end;
203743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203744    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
203745    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203746    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203747    +   end;
MPRINT(EM_DIAGRAM):   end;
203748    +end;
MPRINT(EM_DIAGRAM):   end;
203749    +
203750    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
203751    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
203752    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
203753    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
203754    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203755    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203756    +end;
MPRINT(EM_DIAGRAM):   end;
203757    +else do;
MPRINT(EM_DIAGRAM):   else do;
203758    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203759    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
203760    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203761    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203762    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
203763    +   end;
MPRINT(EM_DIAGRAM):   end;
203764    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203765    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
203766    +   end;
MPRINT(EM_DIAGRAM):   end;
203767    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203768    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
203769    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203770    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203771    +   end;
MPRINT(EM_DIAGRAM):   end;
203772    +end;
MPRINT(EM_DIAGRAM):   end;
203773    +
203774    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
203775    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
203776    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
203777    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
203778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203780    +end;
MPRINT(EM_DIAGRAM):   end;
203781    +else do;
MPRINT(EM_DIAGRAM):   else do;
203782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203783    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
203784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203785    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
203786    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
203787    +   end;
MPRINT(EM_DIAGRAM):   end;
203788    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
203789    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
203790    +   end;
MPRINT(EM_DIAGRAM):   end;
203791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203792    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
203793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203795    +   end;
MPRINT(EM_DIAGRAM):   end;
203796    +end;
MPRINT(EM_DIAGRAM):   end;
203797    +
203798    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
203799    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
203800    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203801    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
203802    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
203803    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
203804    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
203805    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
203806    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
203807    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
203808    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
203809    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
203810    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203811    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203812    +end;
MPRINT(EM_DIAGRAM):   end;
203813    +else do;
MPRINT(EM_DIAGRAM):   else do;
203814    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
203815    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
203816    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203817    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
203818    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
203819    +   end;
MPRINT(EM_DIAGRAM):   end;
203820    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
203821    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
203822    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
203823    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
203824    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
203825    +   end;
MPRINT(EM_DIAGRAM):   end;
203826    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
203827    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
203828    +   end;
MPRINT(EM_DIAGRAM):   end;
203829    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
203830    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
203831    +   end;
MPRINT(EM_DIAGRAM):   end;
203832    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
203833    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
203834    +   end;
MPRINT(EM_DIAGRAM):   end;
203835    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203836    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
203837    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
203838    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
203839    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
203840    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203841    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203842    +   end;
MPRINT(EM_DIAGRAM):   end;
203843    +end;
MPRINT(EM_DIAGRAM):   end;
203844    +
203845    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
203846    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
203847    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
203848    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203849    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
203850    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
203851    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
203852    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
203853    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
203854    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
203855    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
203856    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
203857    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
203858    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203859    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203860    +end;
MPRINT(EM_DIAGRAM):   end;
203861    +else do;
MPRINT(EM_DIAGRAM):   else do;
203862    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
203863    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
203864    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203865    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
203866    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
203867    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
203868    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
203869    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
203870    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203871    +         end;
MPRINT(EM_DIAGRAM):   end;
203872    +         else do;
MPRINT(EM_DIAGRAM):   else do;
203873    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
203874    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
203875    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203876    +            end;
MPRINT(EM_DIAGRAM):   end;
203877    +         end;
MPRINT(EM_DIAGRAM):   end;
203878    +      end;
MPRINT(EM_DIAGRAM):   end;
203879    +      else do;
MPRINT(EM_DIAGRAM):   else do;
203880    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
203881    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
203882    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203883    +         end;
MPRINT(EM_DIAGRAM):   end;
203884    +      end;
MPRINT(EM_DIAGRAM):   end;
203885    +   end;
MPRINT(EM_DIAGRAM):   end;
203886    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203887    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
203888    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
203889    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203890    +      end;
MPRINT(EM_DIAGRAM):   end;
203891    +      else do;
MPRINT(EM_DIAGRAM):   else do;
203892    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
203893    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
203894    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
203895    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
203896    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
203897    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
203898    +         end;
MPRINT(EM_DIAGRAM):   end;
203899    +      end;
MPRINT(EM_DIAGRAM):   end;
203900    +   end;
MPRINT(EM_DIAGRAM):   end;
203901    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
203902    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
203903    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
203904    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
203905    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
203906    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203907    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203908    +   end;
MPRINT(EM_DIAGRAM):   end;
203909    +end;
MPRINT(EM_DIAGRAM):   end;
203910    +
203911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203912    +*** Checking missing input Interval
203913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
203914    +
203915    +IF NMISS(
203916    +   Income ,
203917    +   Kidhome ,
203918    +   MntFishProducts ,
203919    +   MntFruits ,
203920    +   MntGoldProds ,
203921    +   MntMeatProducts ,
203922    +   MntSweetProducts ,
203923    +   MntWines ,
203924    +   NumCatalogPurchases ,
203925    +   NumDealsPurchases ,
203926    +   NumStorePurchases ,
203927    +   NumWebPurchases ,
203928    +   NumWebVisitsMonth ,
203929    +   Recency ,
203930    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
203931    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
203932    +
203933    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203934    +END;
MPRINT(EM_DIAGRAM):   END;
203935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203936    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
203937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203938    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203939    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
203940    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
203941    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
203942    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
203943    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
203944    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
203945    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
203946    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
203947    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
203948    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
203949    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
203950    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
203951    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
203952    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
203953    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
203954    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
203955    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
203956    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
203957    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
203958    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
203959    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
203960    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
203961    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
203962    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
203963    +END;
MPRINT(EM_DIAGRAM):   END;
203964    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203965    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
203966    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
203967    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
203968    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
203969    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
203970    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
203971    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
203972    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
203973    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
203974    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
203975    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
203976    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
203977    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
203978    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
203979    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
203980    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
203981    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
203982    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
203983    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
203984    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
203985    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
203986    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
203987    +   ELSE S_NumCatalogPurchases
203988    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
203989    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
203990    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
203991    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
203992    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
203993    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
203994    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
203995    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
203996    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
203997    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
203998    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
203999    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
204000    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
204001    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
204002    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
204003    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
204004    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
204005    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
204006    +END;
MPRINT(EM_DIAGRAM):   END;
204007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204008    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
204009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204011    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
204012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204014    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
204015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204016    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204017    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
204018    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
204019    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
204020    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
204021    +          +     0.13203247258141 * S_MntSweetProducts
204022    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
204023    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
204024    +          +     1.48881174203434 * S_NumStorePurchases
204025    +          +     2.06403591844726 * S_NumWebPurchases
204026    +          +    -0.09535558759694 * S_NumWebVisitsMonth
204027    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
204028    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
204029    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
204030    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
204031    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
204032    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
204033    +          +      0.3852767951223 * S_MntSweetProducts
204034    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
204035    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
204036    +          +     0.87686526091024 * S_NumStorePurchases
204037    +          +     0.48807967312664 * S_NumWebPurchases
204038    +          +     2.42770807785792 * S_NumWebVisitsMonth
204039    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
204040    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
204041    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
204042    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
204043    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
204044    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
204045    +          +      0.4461192743946 * S_MntSweetProducts
204046    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
204047    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
204048    +          +     1.26831094932108 * S_NumStorePurchases
204049    +          +     0.50819627174451 * S_NumWebPurchases
204050    +          +      0.5463426309003 * S_NumWebVisitsMonth
204051    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
204052    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
204053    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
204054    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
204055    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
204056    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
204057    +          +     0.73630834236265 * S_MntSweetProducts
204058    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
204059    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
204060    +          +     2.08815797619397 * S_NumStorePurchases
204061    +          +     1.47250122683369 * S_NumWebPurchases
204062    +          +    -1.95745344341946 * S_NumWebVisitsMonth
204063    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
204064    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
204065    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
204066    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
204067    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
204068    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
204069    +          +    -0.23438993753342 * S_MntSweetProducts
204070    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
204071    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
204072    +          +    -0.49697408067153 * S_NumStorePurchases
204073    +          +     0.41091736049576 * S_NumWebPurchases
204074    +          +     1.61180593172142 * S_NumWebVisitsMonth
204075    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
204076    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
204077    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
204078    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
204079    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
204080    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
204081    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
204082    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
204083    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
204084    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
204085    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
204086    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
204087    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
204088    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
204089    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
204090    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
204091    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
204092    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
204093    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
204094    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
204095    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
204096    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
204097    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
204098    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
204099    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
204100    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
204101    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
204102    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
204103    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
204104    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
204105    +          +    -0.14951932081311 * Marital_StatusDivorced
204106    +          +     0.08343648358981 * Marital_StatusMarried
204107    +          +    -0.52143432598374 * Marital_StatusSingle
204108    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
204109    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
204110    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
204111    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
204112    +          +    -0.34495973695408 * Marital_StatusDivorced
204113    +          +    -0.30910829853532 * Marital_StatusMarried
204114    +          +     0.14431404541055 * Marital_StatusSingle
204115    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
204116    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
204117    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
204118    +        EducationGraduation  +     0.05582780345024 * EducationMaster
204119    +          +     0.81191732290197 * Marital_StatusDivorced
204120    +          +    -2.53108753227171 * Marital_StatusMarried
204121    +          +     2.21769123178832 * Marital_StatusSingle
204122    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
204123    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
204124    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
204125    +        EducationGraduation  +     0.52527957409681 * EducationMaster
204126    +          +    -1.26246836163545 * Marital_StatusDivorced
204127    +          +     0.73147045162506 * Marital_StatusMarried
204128    +          +     0.04252836823306 * Marital_StatusSingle
204129    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
204130    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
204131    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
204132    +        EducationGraduation  +      0.0979905405754 * EducationMaster
204133    +          +    -0.25571808514992 * Marital_StatusDivorced
204134    +          +     0.20684027342845 * Marital_StatusMarried
204135    +          +    -0.36983627747986 * Marital_StatusSingle
204136    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
204137    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
204138    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
204139    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
204140    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
204141    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
204142    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
204143    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
204144    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
204145    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
204146    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
204147    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
204148    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
204149    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
204150    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
204151    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
204152    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
204153    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
204154    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
204155    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
204156    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
204157    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
204158    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
204159    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
204160    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
204161    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
204162    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
204163    +END;
MPRINT(EM_DIAGRAM):   END;
204164    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204165    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
204166    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
204167    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
204168    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
204169    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
204170    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
204171    +END;
MPRINT(EM_DIAGRAM):   END;
204172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204173    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
204174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204175    +
204176    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
204177    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
204178    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
204179    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
204180    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
204181    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204182    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
204183    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
204184    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
204185    +end;
MPRINT(EM_DIAGRAM):   end;
204186    +else do;
MPRINT(EM_DIAGRAM):   else do;
204187    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
204188    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
204189    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
204190    +   end;
MPRINT(EM_DIAGRAM):   end;
204191    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
204192    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
204193    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
204194    +   end;
MPRINT(EM_DIAGRAM):   end;
204195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204196    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
204197    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
204198    +   end;
MPRINT(EM_DIAGRAM):   end;
204199    +end;
MPRINT(EM_DIAGRAM):   end;
204200    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204201    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
204202    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
204203    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
204204    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
204205    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
204206    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
204207    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
204208    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
204209    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
204210    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
204211    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
204212    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
204213    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
204214    +END;
MPRINT(EM_DIAGRAM):   END;
204215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204216    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
204217    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
204218    +END;
MPRINT(EM_DIAGRAM):   END;
204219    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
204220    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
204221    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
204222    +END;
MPRINT(EM_DIAGRAM):   END;
204223    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
204224    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
204225    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
204226    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
204227    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
204228    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
204229    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
204230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204231    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
204232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204233    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
204234    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
204235    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
204236    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
204237    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
204238    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
204239    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
204240    +END;
MPRINT(EM_DIAGRAM):   END;
204241    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204242    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
204243    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204244    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
204245    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
204246    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204247    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
204248    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204249    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
204250    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
204251    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
204252    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
204253    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204254    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
204255    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204256    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
204257    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
204258    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
204259    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204260    +* Ensmbl58: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 4 of 7;
204261    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204262    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204263    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
204264    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
204265    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
204266    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204267    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
204268    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
204269    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
204270    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
204271    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
204272    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
204273    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
204274    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
204275    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
204276    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
204277    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
204278    +LENGTH _WARN_ $4
204279    +      F_DepVar  $ 12
204280    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
204281    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
204282    +
204283    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
204284    +
204285    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
204286    +
204287    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
204288    +
204289    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
204290    +
204291    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
204292    +
204293    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
204294    +
204295    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
204296    +
204297    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
204298    +
204299    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
204300    +
204301    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
204302    +
204303    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
204304    +
204305    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
204306    +
204307    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
204308    +
204309    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
204310    +
204311    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
204312    +
204313    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
204314    +
204315    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
204316    +
204317    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
204318    +
204319    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
204320    +
204321    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
204322    +
204323    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
204324    +
204325    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
204326    +
204327    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
204328    +
204329    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
204330    +
204331    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
204332    +
204333    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
204334    +
204335    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
204336    +
204337    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
204338    +
204339    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
204340    +
204341    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
204342    +
204343    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
204344    +
204345    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
204346    +
204347    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
204348    +
204349    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
204350    +
204351    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
204352    +
204353    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
204354    +
204355    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
204356    +
204357    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
204358    +
204359    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
204360    +
204361    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
204362    +
204363    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
204364    +
204365    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
204366    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
204367    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
204368    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
204369    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204370    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204371    +end;
MPRINT(EM_DIAGRAM):   end;
204372    +else do;
MPRINT(EM_DIAGRAM):   else do;
204373    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204374    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
204375    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204376    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
204377    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
204378    +   end;
MPRINT(EM_DIAGRAM):   end;
204379    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
204380    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
204381    +   end;
MPRINT(EM_DIAGRAM):   end;
204382    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204383    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
204384    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204385    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204386    +   end;
MPRINT(EM_DIAGRAM):   end;
204387    +end;
MPRINT(EM_DIAGRAM):   end;
204388    +
204389    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
204390    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
204391    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
204392    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
204393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204395    +end;
MPRINT(EM_DIAGRAM):   end;
204396    +else do;
MPRINT(EM_DIAGRAM):   else do;
204397    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204398    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
204399    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204400    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
204401    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
204402    +   end;
MPRINT(EM_DIAGRAM):   end;
204403    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
204404    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
204405    +   end;
MPRINT(EM_DIAGRAM):   end;
204406    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204407    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
204408    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204409    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204410    +   end;
MPRINT(EM_DIAGRAM):   end;
204411    +end;
MPRINT(EM_DIAGRAM):   end;
204412    +
204413    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
204414    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
204415    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
204416    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
204417    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204418    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204419    +end;
MPRINT(EM_DIAGRAM):   end;
204420    +else do;
MPRINT(EM_DIAGRAM):   else do;
204421    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204422    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
204423    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204424    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
204425    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
204426    +   end;
MPRINT(EM_DIAGRAM):   end;
204427    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
204428    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
204429    +   end;
MPRINT(EM_DIAGRAM):   end;
204430    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204431    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
204432    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204433    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204434    +   end;
MPRINT(EM_DIAGRAM):   end;
204435    +end;
MPRINT(EM_DIAGRAM):   end;
204436    +
204437    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
204438    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
204439    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
204440    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
204441    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204442    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204443    +end;
MPRINT(EM_DIAGRAM):   end;
204444    +else do;
MPRINT(EM_DIAGRAM):   else do;
204445    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204446    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
204447    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204448    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
204449    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
204450    +   end;
MPRINT(EM_DIAGRAM):   end;
204451    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
204452    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
204453    +   end;
MPRINT(EM_DIAGRAM):   end;
204454    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204455    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
204456    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204457    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204458    +   end;
MPRINT(EM_DIAGRAM):   end;
204459    +end;
MPRINT(EM_DIAGRAM):   end;
204460    +
204461    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
204462    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
204463    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
204464    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
204465    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204467    +end;
MPRINT(EM_DIAGRAM):   end;
204468    +else do;
MPRINT(EM_DIAGRAM):   else do;
204469    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204470    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
204471    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204472    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
204473    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
204474    +   end;
MPRINT(EM_DIAGRAM):   end;
204475    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
204476    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
204477    +   end;
MPRINT(EM_DIAGRAM):   end;
204478    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204479    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
204480    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204481    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204482    +   end;
MPRINT(EM_DIAGRAM):   end;
204483    +end;
MPRINT(EM_DIAGRAM):   end;
204484    +
204485    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
204486    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
204487    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
204488    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
204489    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204491    +end;
MPRINT(EM_DIAGRAM):   end;
204492    +else do;
MPRINT(EM_DIAGRAM):   else do;
204493    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204494    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
204495    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204496    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
204497    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
204498    +   end;
MPRINT(EM_DIAGRAM):   end;
204499    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
204500    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
204501    +   end;
MPRINT(EM_DIAGRAM):   end;
204502    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204503    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
204504    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204505    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204506    +   end;
MPRINT(EM_DIAGRAM):   end;
204507    +end;
MPRINT(EM_DIAGRAM):   end;
204508    +
204509    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
204510    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
204511    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
204512    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
204513    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
204514    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
204515    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
204516    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
204517    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
204518    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
204519    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
204520    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
204521    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204522    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204523    +end;
MPRINT(EM_DIAGRAM):   end;
204524    +else do;
MPRINT(EM_DIAGRAM):   else do;
204525    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
204526    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
204527    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204528    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
204529    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
204530    +   end;
MPRINT(EM_DIAGRAM):   end;
204531    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
204532    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
204533    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
204534    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
204535    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
204536    +   end;
MPRINT(EM_DIAGRAM):   end;
204537    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
204538    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
204539    +   end;
MPRINT(EM_DIAGRAM):   end;
204540    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
204541    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
204542    +   end;
MPRINT(EM_DIAGRAM):   end;
204543    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
204544    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
204545    +   end;
MPRINT(EM_DIAGRAM):   end;
204546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204547    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
204548    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
204549    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
204550    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
204551    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204552    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204553    +   end;
MPRINT(EM_DIAGRAM):   end;
204554    +end;
MPRINT(EM_DIAGRAM):   end;
204555    +
204556    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
204557    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
204558    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
204559    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
204560    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
204561    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
204562    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
204563    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
204564    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
204565    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
204566    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
204567    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
204568    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
204569    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204570    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204571    +end;
MPRINT(EM_DIAGRAM):   end;
204572    +else do;
MPRINT(EM_DIAGRAM):   else do;
204573    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
204574    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
204575    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204576    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
204577    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
204578    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
204579    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
204580    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
204581    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
204582    +         end;
MPRINT(EM_DIAGRAM):   end;
204583    +         else do;
MPRINT(EM_DIAGRAM):   else do;
204584    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
204585    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
204586    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
204587    +            end;
MPRINT(EM_DIAGRAM):   end;
204588    +         end;
MPRINT(EM_DIAGRAM):   end;
204589    +      end;
MPRINT(EM_DIAGRAM):   end;
204590    +      else do;
MPRINT(EM_DIAGRAM):   else do;
204591    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
204592    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
204593    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
204594    +         end;
MPRINT(EM_DIAGRAM):   end;
204595    +      end;
MPRINT(EM_DIAGRAM):   end;
204596    +   end;
MPRINT(EM_DIAGRAM):   end;
204597    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204598    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
204599    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
204600    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
204601    +      end;
MPRINT(EM_DIAGRAM):   end;
204602    +      else do;
MPRINT(EM_DIAGRAM):   else do;
204603    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
204604    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
204605    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
204606    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
204607    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
204608    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
204609    +         end;
MPRINT(EM_DIAGRAM):   end;
204610    +      end;
MPRINT(EM_DIAGRAM):   end;
204611    +   end;
MPRINT(EM_DIAGRAM):   end;
204612    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
204613    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
204614    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
204615    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
204616    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
204617    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204618    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204619    +   end;
MPRINT(EM_DIAGRAM):   end;
204620    +end;
MPRINT(EM_DIAGRAM):   end;
204621    +
204622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204623    +*** Checking missing input Interval
204624    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
204625    +
204626    +IF NMISS(
204627    +   Income ,
204628    +   Kidhome ,
204629    +   MntFishProducts ,
204630    +   MntFruits ,
204631    +   MntGoldProds ,
204632    +   MntMeatProducts ,
204633    +   MntSweetProducts ,
204634    +   MntWines ,
204635    +   NumCatalogPurchases ,
204636    +   NumDealsPurchases ,
204637    +   NumStorePurchases ,
204638    +   NumWebPurchases ,
204639    +   NumWebVisitsMonth ,
204640    +   Recency ,
204641    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
204642    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
204643    +
204644    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204645    +END;
MPRINT(EM_DIAGRAM):   END;
204646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204647    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
204648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204649    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204650    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
204651    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
204652    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
204653    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
204654    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
204655    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
204656    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
204657    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
204658    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
204659    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
204660    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
204661    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
204662    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
204663    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
204664    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
204665    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
204666    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
204667    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
204668    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
204669    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
204670    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
204671    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
204672    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
204673    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
204674    +END;
MPRINT(EM_DIAGRAM):   END;
204675    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204676    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
204677    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
204678    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
204679    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
204680    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
204681    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
204682    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
204683    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
204684    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
204685    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
204686    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
204687    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
204688    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
204689    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
204690    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
204691    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
204692    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
204693    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
204694    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
204695    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
204696    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
204697    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
204698    +   ELSE S_NumCatalogPurchases
204699    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
204700    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
204701    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
204702    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
204703    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
204704    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
204705    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
204706    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
204707    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
204708    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
204709    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
204710    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
204711    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
204712    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
204713    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
204714    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
204715    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
204716    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
204717    +END;
MPRINT(EM_DIAGRAM):   END;
204718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204719    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
204720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204722    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
204723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204725    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
204726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204727    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204728    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
204729    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
204730    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
204731    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
204732    +          +     -0.2030617183738 * S_MntSweetProducts
204733    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
204734    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
204735    +          +    -2.67074303965293 * S_NumStorePurchases
204736    +          +    -0.84694619593676 * S_NumWebPurchases
204737    +          +     1.78464945757548 * S_NumWebVisitsMonth
204738    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
204739    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome +
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 *
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts +
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 *
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 *
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency +
0.12484193160086 * S_Teenhome ;
204740    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
204741    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
204742    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
204743    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
204744    +          +    -0.48853587268985 * S_MntSweetProducts
204745    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
204746    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
204747    +          +    -1.10593499185395 * S_NumStorePurchases
204748    +          +     -1.3003228821842 * S_NumWebPurchases
204749    +          +     2.87047131261901 * S_NumWebVisitsMonth
204750    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
204751    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome +
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 *
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 *
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 *
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency +
-1.2351049603093 * S_Teenhome ;
204752    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
204753    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
204754    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
204755    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
204756    +          +    -0.27795094909244 * S_MntSweetProducts
204757    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
204758    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
204759    +          +    -0.41332499072246 * S_NumStorePurchases
204760    +          +     0.76626053410817 * S_NumWebPurchases
204761    +          +     0.81795211037296 * S_NumWebVisitsMonth
204762    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
204763    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome +
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 *
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 *
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases +
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth +
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
204764    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
204765    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
204766    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
204767    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
204768    +          +    -0.08285620819867 * S_MntSweetProducts
204769    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
204770    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
204771    +          +    -0.17691098721908 * S_NumStorePurchases
204772    +          +     0.46246892093576 * S_NumWebPurchases
204773    +          +     2.06272832836908 * S_NumWebVisitsMonth
204774    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
204775    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome +
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 *
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases +
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases +
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth +
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
204776    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
204777    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
204778    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
204779    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
204780    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 +
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
204781    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
204782    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
204783    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
204784    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
204785    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 +
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
204786    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
204787    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
204788    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
204789    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
204790    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 *
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 +
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
204791    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
204792    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
204793    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
204794    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
204795    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 *
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 +
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
204796    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
204797    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
204798    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
204799    +          +     1.59526812226707 * Marital_StatusDivorced
204800    +          +    -0.74331656724296 * Marital_StatusMarried
204801    +          +     0.74316614019998 * Marital_StatusSingle
204802    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle +
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation +
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced +
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle +
-1.36761487171479 * Marital_StatusTogether ;
204803    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
204804    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
204805    +        EducationGraduation  +     0.07596142730184 * EducationMaster
204806    +          +     0.94291322065497 * Marital_StatusDivorced
204807    +          +    -1.64331597630127 * Marital_StatusMarried
204808    +          +     2.21526196736604 * Marital_StatusSingle
204809    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle +
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 *
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 *
Marital_StatusTogether ;
204810    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
204811    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
204812    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
204813    +          +     1.63906979191221 * Marital_StatusDivorced
204814    +          +    -1.00497354965718 * Marital_StatusMarried
204815    +          +     0.70485207953497 * Marital_StatusSingle
204816    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle +
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation +
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced +
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle +
-1.55917756143873 * Marital_StatusTogether ;
204817    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
204818    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
204819    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
204820    +          +     0.75038128420756 * Marital_StatusDivorced
204821    +          +    -1.93055855198469 * Marital_StatusMarried
204822    +          +     0.73816798380254 * Marital_StatusSingle
204823    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle +
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 *
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 *
Marital_StatusTogether ;
204824    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
204825    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
204826    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
204827    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
204828    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
204829    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
204830    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
204831    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
204832    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
204833    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
204834    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
204835    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
204836    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
204837    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
204838    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
204839    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
204840    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
204841    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
204842    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
204843    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
204844    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
204845    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
204846    +END;
MPRINT(EM_DIAGRAM):   END;
204847    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204848    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
204849    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
204850    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
204851    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
204852    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
204853    +END;
MPRINT(EM_DIAGRAM):   END;
204854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204855    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
204856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204857    +
204858    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
204859    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
204860    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
204861    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
204862    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
204863    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204864    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
204865    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
204866    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
204867    +end;
MPRINT(EM_DIAGRAM):   end;
204868    +else do;
MPRINT(EM_DIAGRAM):   else do;
204869    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
204870    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
204871    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
204872    +   end;
MPRINT(EM_DIAGRAM):   end;
204873    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
204874    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
204875    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
204876    +   end;
MPRINT(EM_DIAGRAM):   end;
204877    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204878    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
204879    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
204880    +   end;
MPRINT(EM_DIAGRAM):   end;
204881    +end;
MPRINT(EM_DIAGRAM):   end;
204882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204883    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
204884    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
204885    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 +
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
204886    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
204887    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
204888    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
204889    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
204890    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
204891    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
204892    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
204893    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
204894    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
204895    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
204896    +END;
MPRINT(EM_DIAGRAM):   END;
204897    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204898    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
204899    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
204900    +END;
MPRINT(EM_DIAGRAM):   END;
204901    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
204902    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
204903    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
204904    +END;
MPRINT(EM_DIAGRAM):   END;
204905    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
204906    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
204907    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
204908    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
204909    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
204910    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
204911    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
204912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204913    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
204914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204915    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
204916    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
204917    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
204918    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
204919    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
204920    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
204921    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
204922    +END;
MPRINT(EM_DIAGRAM):   END;
204923    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204924    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
204925    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204926    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
204927    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
204928    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204929    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
204930    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204931    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
204932    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
204933    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
204934    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
204935    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204936    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
204937    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204938    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
204939    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
204940    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
204941    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204942    +* Ensmbl58: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 5 of 7;
204943    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204945    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
204946    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
204947    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
204948    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204949    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
204950    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
204951    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
204952    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
204953    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
204954    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
204955    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
204956    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
204957    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
204958    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
204959    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
204960    +LENGTH _WARN_ $4
204961    +      F_DepVar  $ 12
204962    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
204963    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
204964    +
204965    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
204966    +
204967    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
204968    +
204969    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
204970    +
204971    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
204972    +
204973    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
204974    +
204975    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
204976    +
204977    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
204978    +
204979    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
204980    +
204981    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
204982    +
204983    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
204984    +
204985    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
204986    +
204987    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
204988    +
204989    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
204990    +
204991    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
204992    +
204993    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
204994    +
204995    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
204996    +
204997    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
204998    +
204999    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
205000    +
205001    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
205002    +
205003    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
205004    +
205005    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
205006    +
205007    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
205008    +
205009    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
205010    +
205011    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
205012    +
205013    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
205014    +
205015    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
205016    +
205017    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
205018    +
205019    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
205020    +
205021    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
205022    +
205023    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
205024    +
205025    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
The SAS System
 
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
205026    +
205027    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
205028    +
205029    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
205030    +
205031    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
205032    +
205033    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
205034    +
205035    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
205036    +
205037    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
205038    +
205039    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
205040    +
205041    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
205042    +
205043    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
205044    +
205045    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
205046    +
205047    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
205048    +
205049    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
205050    +
205051    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
205052    +
205053    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
205054    +
205055    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
205056    +
205057    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
205058    +
205059    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
205060    +
205061    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
205062    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
205063    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
205064    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
205065    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205066    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205067    +end;
MPRINT(EM_DIAGRAM):   end;
205068    +else do;
MPRINT(EM_DIAGRAM):   else do;
205069    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205070    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
205071    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205072    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205073    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
205074    +   end;
MPRINT(EM_DIAGRAM):   end;
205075    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205076    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
205077    +   end;
MPRINT(EM_DIAGRAM):   end;
205078    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205079    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
205080    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205081    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205082    +   end;
MPRINT(EM_DIAGRAM):   end;
205083    +end;
MPRINT(EM_DIAGRAM):   end;
205084    +
205085    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
205086    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
205087    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
205088    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
205089    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205091    +end;
MPRINT(EM_DIAGRAM):   end;
205092    +else do;
MPRINT(EM_DIAGRAM):   else do;
205093    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205094    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
205095    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205096    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205097    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
205098    +   end;
MPRINT(EM_DIAGRAM):   end;
205099    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205100    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
205101    +   end;
MPRINT(EM_DIAGRAM):   end;
205102    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205103    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
205104    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205105    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205106    +   end;
MPRINT(EM_DIAGRAM):   end;
205107    +end;
MPRINT(EM_DIAGRAM):   end;
205108    +
205109    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
205110    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
205111    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
205112    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
205113    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205114    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205115    +end;
MPRINT(EM_DIAGRAM):   end;
205116    +else do;
MPRINT(EM_DIAGRAM):   else do;
205117    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205118    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
205119    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205120    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205121    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
205122    +   end;
MPRINT(EM_DIAGRAM):   end;
205123    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205124    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
205125    +   end;
MPRINT(EM_DIAGRAM):   end;
205126    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205127    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
205128    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205129    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205130    +   end;
MPRINT(EM_DIAGRAM):   end;
205131    +end;
MPRINT(EM_DIAGRAM):   end;
205132    +
205133    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
205134    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
205135    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
205136    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
205137    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205138    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205139    +end;
MPRINT(EM_DIAGRAM):   end;
205140    +else do;
MPRINT(EM_DIAGRAM):   else do;
205141    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205142    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
205143    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205144    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205145    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
205146    +   end;
MPRINT(EM_DIAGRAM):   end;
205147    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205148    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
205149    +   end;
MPRINT(EM_DIAGRAM):   end;
205150    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205151    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
205152    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205153    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205154    +   end;
MPRINT(EM_DIAGRAM):   end;
205155    +end;
MPRINT(EM_DIAGRAM):   end;
205156    +
205157    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
205158    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
205159    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
205160    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
205161    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205162    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205163    +end;
MPRINT(EM_DIAGRAM):   end;
205164    +else do;
MPRINT(EM_DIAGRAM):   else do;
205165    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205166    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
205167    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205168    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205169    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
205170    +   end;
MPRINT(EM_DIAGRAM):   end;
205171    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205172    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
205173    +   end;
MPRINT(EM_DIAGRAM):   end;
205174    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205175    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
205176    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205177    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205178    +   end;
MPRINT(EM_DIAGRAM):   end;
205179    +end;
MPRINT(EM_DIAGRAM):   end;
205180    +
205181    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
205182    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
205183    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
205184    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
205185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205187    +end;
MPRINT(EM_DIAGRAM):   end;
205188    +else do;
MPRINT(EM_DIAGRAM):   else do;
205189    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205190    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
205191    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205192    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205193    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
205194    +   end;
MPRINT(EM_DIAGRAM):   end;
205195    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205196    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
205197    +   end;
MPRINT(EM_DIAGRAM):   end;
205198    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205199    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
205200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205202    +   end;
MPRINT(EM_DIAGRAM):   end;
205203    +end;
MPRINT(EM_DIAGRAM):   end;
205204    +
205205    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
205206    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
205207    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
205208    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
205209    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
205210    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
205211    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
205212    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
205213    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
205214    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
205215    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
205216    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
205217    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205218    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205219    +end;
MPRINT(EM_DIAGRAM):   end;
205220    +else do;
MPRINT(EM_DIAGRAM):   else do;
205221    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
205222    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
205223    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205224    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
205225    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
205226    +   end;
MPRINT(EM_DIAGRAM):   end;
205227    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
205228    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
205229    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
205230    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
205231    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
205232    +   end;
MPRINT(EM_DIAGRAM):   end;
205233    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
205234    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
205235    +   end;
MPRINT(EM_DIAGRAM):   end;
205236    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
205237    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
205238    +   end;
MPRINT(EM_DIAGRAM):   end;
205239    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
205240    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
205241    +   end;
MPRINT(EM_DIAGRAM):   end;
205242    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205243    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
205244    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
205245    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
205246    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
205247    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205248    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205249    +   end;
MPRINT(EM_DIAGRAM):   end;
205250    +end;
MPRINT(EM_DIAGRAM):   end;
205251    +
205252    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
205253    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
205254    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
205255    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
205256    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
205257    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
205258    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
205259    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
205260    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
205261    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
205262    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
205263    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
205264    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
205265    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205266    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205267    +end;
MPRINT(EM_DIAGRAM):   end;
205268    +else do;
MPRINT(EM_DIAGRAM):   else do;
205269    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
205270    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
205271    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205272    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
205273    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
205274    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
205275    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
205276    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
205277    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
205278    +         end;
MPRINT(EM_DIAGRAM):   end;
205279    +         else do;
MPRINT(EM_DIAGRAM):   else do;
205280    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
205281    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
205282    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
205283    +            end;
MPRINT(EM_DIAGRAM):   end;
205284    +         end;
MPRINT(EM_DIAGRAM):   end;
205285    +      end;
MPRINT(EM_DIAGRAM):   end;
205286    +      else do;
MPRINT(EM_DIAGRAM):   else do;
205287    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
205288    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
205289    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
205290    +         end;
MPRINT(EM_DIAGRAM):   end;
205291    +      end;
MPRINT(EM_DIAGRAM):   end;
205292    +   end;
MPRINT(EM_DIAGRAM):   end;
205293    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205294    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
205295    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
205296    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
205297    +      end;
MPRINT(EM_DIAGRAM):   end;
205298    +      else do;
MPRINT(EM_DIAGRAM):   else do;
205299    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
205300    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
205301    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
205302    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
205303    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
205304    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
205305    +         end;
MPRINT(EM_DIAGRAM):   end;
205306    +      end;
MPRINT(EM_DIAGRAM):   end;
205307    +   end;
MPRINT(EM_DIAGRAM):   end;
205308    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
205309    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
205310    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
205311    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
205312    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
205313    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205314    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205315    +   end;
MPRINT(EM_DIAGRAM):   end;
205316    +end;
MPRINT(EM_DIAGRAM):   end;
205317    +
205318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205319    +*** Checking missing input Interval
205320    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
205321    +
205322    +IF NMISS(
205323    +   Income ,
205324    +   Kidhome ,
205325    +   MntFishProducts ,
205326    +   MntFruits ,
205327    +   MntGoldProds ,
205328    +   MntMeatProducts ,
205329    +   MntSweetProducts ,
205330    +   MntWines ,
205331    +   NumCatalogPurchases ,
205332    +   NumDealsPurchases ,
205333    +   NumStorePurchases ,
205334    +   NumWebPurchases ,
205335    +   NumWebVisitsMonth ,
205336    +   Recency ,
205337    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
205338    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
205339    +
205340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205341    +END;
MPRINT(EM_DIAGRAM):   END;
205342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205343    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
205344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205346    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
205347    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
205348    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
205349    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
205350    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
205351    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
205352    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
205353    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
205354    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
205355    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
205356    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
205357    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
205358    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
205359    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
205360    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
205361    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
205362    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
205363    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
205364    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
205365    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
205366    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
205367    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
205368    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
205369    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
205370    +END;
MPRINT(EM_DIAGRAM):   END;
205371    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205372    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
205373    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
205374    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
205375    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
205376    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
205377    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
205378    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
205379    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
205380    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
205381    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
205382    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
205383    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
205384    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
205385    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
205386    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
205387    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
205388    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
205389    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
205390    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
205391    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
205392    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
205393    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
205394    +   ELSE S_NumCatalogPurchases
205395    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
205396    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
205397    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
205398    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
205399    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
205400    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
205401    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
205402    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
205403    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
205404    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
205405    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
205406    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
205407    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
205408    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
205409    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
205410    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
205411    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
205412    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
205413    +END;
MPRINT(EM_DIAGRAM):   END;
205414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205415    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
205416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205418    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
205419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205421    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
205422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205423    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205424    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
205425    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
205426    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
205427    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
205428    +          +    -2.37073629008864 * S_MntSweetProducts
205429    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
205430    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
205431    +          +    -1.29021742502316 * S_NumStorePurchases
205432    +          +    -0.00949168969466 * S_NumWebPurchases
205433    +          +    -0.32248137192321 * S_NumWebVisitsMonth
205434    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
205435    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
205436    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
205437    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
205438    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
205439    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
205440    +          +     0.41126087093412 * S_MntSweetProducts
205441    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
205442    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
205443    +          +      0.2319226227964 * S_NumStorePurchases
205444    +          +     0.31190969795517 * S_NumWebPurchases
205445    +          +      -1.987305550542 * S_NumWebVisitsMonth
205446    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
205447    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
205448    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
205449    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
205450    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
205451    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
205452    +          +    -0.73991431726966 * S_MntSweetProducts
205453    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
205454    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
205455    +          +    -2.50826402419251 * S_NumStorePurchases
205456    +          +    -0.30764477738015 * S_NumWebPurchases
205457    +          +     1.21240794582671 * S_NumWebVisitsMonth
205458    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
205459    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
205460    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
205461    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
205462    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
205463    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
205464    +          +     1.07674028011002 * S_MntSweetProducts
205465    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
205466    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
205467    +          +    -0.47776935727231 * S_NumStorePurchases
205468    +          +     -0.5890810666834 * S_NumWebPurchases
205469    +          +      1.3845716796855 * S_NumWebVisitsMonth
205470    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
205471    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
205472    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
205473    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
205474    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
205475    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
205476    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
205477    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
205478    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
205479    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
205480    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
205481    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
205482    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
205483    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
205484    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
205485    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
205486    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
205487    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
205488    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
205489    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
205490    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
205491    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
205492    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
205493    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
205494    +        EducationGraduation  +     0.68592368666749 * EducationMaster
205495    +          +     0.38999748028122 * Marital_StatusDivorced
205496    +          +     0.44180844463279 * Marital_StatusMarried
205497    +          +     0.63824884669155 * Marital_StatusSingle
205498    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
205499    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
205500    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
205501    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
205502    +          +    -0.95537871859519 * Marital_StatusDivorced
205503    +          +     2.55061153921286 * Marital_StatusMarried
205504    +          +    -1.78007154396711 * Marital_StatusSingle
205505    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
205506    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
205507    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
205508    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
205509    +          +     1.29930912124343 * Marital_StatusDivorced
205510    +          +    -1.63037830924789 * Marital_StatusMarried
205511    +          +     0.19040732776086 * Marital_StatusSingle
205512    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
205513    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
205514    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
205515    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
205516    +          +     -0.3129003025095 * Marital_StatusDivorced
205517    +          +     0.00843550425239 * Marital_StatusMarried
205518    +          +    -0.20416436114776 * Marital_StatusSingle
205519    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
205520    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
205521    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
205522    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
205523    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
205524    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
205525    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
205526    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
205527    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
205528    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
205529    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
205530    +END;
MPRINT(EM_DIAGRAM):   END;
205531    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205532    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
205533    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
205534    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
205535    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
205536    +END;
MPRINT(EM_DIAGRAM):   END;
205537    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205538    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
205539    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205540    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205541    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
205542    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
205543    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
205544    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
205545    +          +    -0.90866858123806 * S_MntSweetProducts
205546    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
205547    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
205548    +          +     1.45805686107789 * S_NumStorePurchases
205549    +          +     1.48794767642409 * S_NumWebPurchases
205550    +          +    -1.24357395997191 * S_NumWebVisitsMonth
205551    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
205552    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
205553    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
205554    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
205555    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
205556    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
205557    +          +     1.05010358762976 * S_MntSweetProducts
205558    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
205559    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
205560    +          +    -2.04318529474165 * S_NumStorePurchases
205561    +          +     1.64478964728594 * S_NumWebPurchases
205562    +          +    -0.74790322980646 * S_NumWebVisitsMonth
205563    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
205564    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
205565    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
205566    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
205567    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
205568    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
205569    +          +     0.39974532423377 * S_MntSweetProducts
205570    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
205571    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
205572    +          +     0.70805557348415 * S_NumStorePurchases
205573    +          +     2.40362900277228 * S_NumWebPurchases
205574    +          +    -0.84521247676043 * S_NumWebVisitsMonth
205575    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
205576    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
205577    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
205578    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
205579    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
205580    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
205581    +          +     1.67907268159197 * S_MntSweetProducts
205582    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
205583    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
205584    +          +      0.0818178054474 * S_NumStorePurchases
205585    +          +     0.21533198164279 * S_NumWebPurchases
205586    +          +     2.13590425604302 * S_NumWebVisitsMonth
205587    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
205588    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
205589    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
205590    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
205591    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
205592    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
205593    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
205594    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
205595    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
205596    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
205597    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
205598    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
205599    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
205600    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
205601    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
205602    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
205603    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
205604    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
205605    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
205606    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
205607    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
205608    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
205609    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
205610    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
205611    +        EducationGraduation  +     0.78238700450794 * EducationMaster
205612    +          +     0.09735596304222 * Marital_StatusDivorced
205613    +          +    -0.41892050812825 * Marital_StatusMarried
205614    +          +    -1.42753782654911 * Marital_StatusSingle
205615    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
205616    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
205617    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
205618    +        EducationGraduation  +     1.03407121736627 * EducationMaster
205619    +          +    -0.32415267410507 * Marital_StatusDivorced
205620    +          +     0.49045578856782 * Marital_StatusMarried
205621    +          +    -1.95612005933176 * Marital_StatusSingle
205622    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
205623    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
205624    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
205625    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
205626    +          +    -1.25715350788627 * Marital_StatusDivorced
205627    +          +     0.74269511935299 * Marital_StatusMarried
205628    +          +    -0.27394822792771 * Marital_StatusSingle
205629    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
205630    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
205631    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
205632    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
205633    +          +    -1.42754006114782 * Marital_StatusDivorced
205634    +          +    -0.13979120103654 * Marital_StatusMarried
205635    +          +    -1.66244370644258 * Marital_StatusSingle
205636    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
205637    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
205638    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
205639    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
205640    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
205641    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
205642    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
205643    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
205644    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
205645    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
205646    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
205647    +END;
MPRINT(EM_DIAGRAM):   END;
205648    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205649    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
205650    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
205651    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
205652    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
205653    +END;
MPRINT(EM_DIAGRAM):   END;
205654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205655    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
205656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205657    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205658    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
205659    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
205660    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
205661    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
205662    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
205663    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
205664    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
205665    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
205666    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
205667    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
205668    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
205669    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
205670    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
205671    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
205672    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
205673    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
205674    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
205675    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
205676    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
205677    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
205678    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
205679    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
205680    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
205681    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
205682    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
205683    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
205684    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
205685    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
205686    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
205687    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
205688    +END;
MPRINT(EM_DIAGRAM):   END;
205689    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205690    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
205691    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
205692    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
205693    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
205694    +END;
MPRINT(EM_DIAGRAM):   END;
205695    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205696    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
205697    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205698    +
205699    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
205700    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
205701    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
205702    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
205703    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
205704    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205705    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
205706    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
205707    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
205708    +end;
MPRINT(EM_DIAGRAM):   end;
205709    +else do;
MPRINT(EM_DIAGRAM):   else do;
205710    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
205711    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
205712    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
205713    +   end;
MPRINT(EM_DIAGRAM):   end;
205714    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
205715    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
205716    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
205717    +   end;
MPRINT(EM_DIAGRAM):   end;
205718    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205719    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
205720    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
205721    +   end;
MPRINT(EM_DIAGRAM):   end;
205722    +end;
MPRINT(EM_DIAGRAM):   end;
205723    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205724    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
205725    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
205726    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
205727    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
205728    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
205729    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
205730    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
205731    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
205732    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
205733    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
205734    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
205735    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
205736    +END;
MPRINT(EM_DIAGRAM):   END;
205737    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205738    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
205739    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
205740    +END;
MPRINT(EM_DIAGRAM):   END;
205741    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
205742    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
205743    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
205744    +END;
MPRINT(EM_DIAGRAM):   END;
205745    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
205746    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
205747    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
205748    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
205749    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
205750    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
205751    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
205752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205753    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
205754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205755    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
205756    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
205757    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
205758    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
205759    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
205760    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
205761    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
205762    +END;
MPRINT(EM_DIAGRAM):   END;
205763    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
205764    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
205765    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
205766    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
205767    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
205768    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205769    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
205770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205771    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
205772    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
205773    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
205774    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
205775    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205776    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
205777    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205778    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
205779    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
205780    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
205781    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205782    +* Ensmbl58: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 6 of 7;
205783    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205784    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205785    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
205786    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
205787    +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
205788    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205789    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
205790    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
205791    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
205792    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
205793    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
205794    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
205795    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
205796    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
205797    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
205798    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
205799    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
205800    +LENGTH _WARN_ $4
205801    +      F_DepVar  $ 12
205802    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
205803    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
205804    +
205805    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
205806    +
205807    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
205808    +
205809    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
205810    +
205811    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
205812    +
205813    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
205814    +
205815    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
205816    +
205817    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
205818    +
205819    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
205820    +
205821    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
205822    +
205823    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
205824    +
205825    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
205826    +
205827    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
205828    +
205829    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
205830    +
205831    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
205832    +
205833    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
205834    +
205835    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
205836    +
205837    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
205838    +
205839    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
205840    +
205841    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
205842    +
205843    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
205844    +
205845    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
205846    +
205847    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
205848    +
205849    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
205850    +
205851    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
205852    +
205853    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
205854    +
205855    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
205856    +
205857    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
205858    +
205859    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
205860    +
205861    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
205862    +
205863    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
205864    +
205865    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
205866    +
205867    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
205868    +
205869    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
205870    +
205871    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
205872    +
205873    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
205874    +
205875    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
205876    +
205877    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
205878    +
205879    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
205880    +
205881    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
205882    +
205883    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
205884    +
205885    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
205886    +
205887    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
205888    +
205889    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
205890    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
205891    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
205892    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
205893    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205895    +end;
MPRINT(EM_DIAGRAM):   end;
205896    +else do;
MPRINT(EM_DIAGRAM):   else do;
205897    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205898    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
205899    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205900    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205901    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
205902    +   end;
MPRINT(EM_DIAGRAM):   end;
205903    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205904    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
205905    +   end;
MPRINT(EM_DIAGRAM):   end;
205906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205907    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
205908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205910    +   end;
MPRINT(EM_DIAGRAM):   end;
205911    +end;
MPRINT(EM_DIAGRAM):   end;
205912    +
205913    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
205914    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
205915    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
205916    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
205917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205919    +end;
MPRINT(EM_DIAGRAM):   end;
205920    +else do;
MPRINT(EM_DIAGRAM):   else do;
205921    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205922    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
205923    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205924    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205925    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
205926    +   end;
MPRINT(EM_DIAGRAM):   end;
205927    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205928    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
205929    +   end;
MPRINT(EM_DIAGRAM):   end;
205930    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205931    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
205932    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205933    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205934    +   end;
MPRINT(EM_DIAGRAM):   end;
205935    +end;
MPRINT(EM_DIAGRAM):   end;
205936    +
205937    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
205938    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
205939    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
205940    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
205941    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205943    +end;
MPRINT(EM_DIAGRAM):   end;
205944    +else do;
MPRINT(EM_DIAGRAM):   else do;
205945    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205946    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
205947    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205948    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205949    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
205950    +   end;
MPRINT(EM_DIAGRAM):   end;
205951    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205952    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
205953    +   end;
MPRINT(EM_DIAGRAM):   end;
205954    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205955    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
205956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205958    +   end;
MPRINT(EM_DIAGRAM):   end;
205959    +end;
MPRINT(EM_DIAGRAM):   end;
205960    +
205961    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
205962    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
205963    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
205964    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
205965    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205966    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205967    +end;
MPRINT(EM_DIAGRAM):   end;
205968    +else do;
MPRINT(EM_DIAGRAM):   else do;
205969    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205970    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
205971    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205972    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205973    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
205974    +   end;
MPRINT(EM_DIAGRAM):   end;
205975    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
205976    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
205977    +   end;
MPRINT(EM_DIAGRAM):   end;
205978    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205979    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
205980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205982    +   end;
MPRINT(EM_DIAGRAM):   end;
205983    +end;
MPRINT(EM_DIAGRAM):   end;
205984    +
205985    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
205986    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
205987    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
205988    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
205989    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205991    +end;
MPRINT(EM_DIAGRAM):   end;
205992    +else do;
MPRINT(EM_DIAGRAM):   else do;
205993    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205994    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
205995    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205996    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
205997    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
205998    +   end;
MPRINT(EM_DIAGRAM):   end;
205999    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206000    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
206001    +   end;
MPRINT(EM_DIAGRAM):   end;
206002    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206003    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
206004    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206005    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206006    +   end;
MPRINT(EM_DIAGRAM):   end;
206007    +end;
MPRINT(EM_DIAGRAM):   end;
206008    +
206009    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
206010    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
206011    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
206012    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
206013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206015    +end;
MPRINT(EM_DIAGRAM):   end;
206016    +else do;
MPRINT(EM_DIAGRAM):   else do;
206017    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206018    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
206019    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206020    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206021    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
206022    +   end;
MPRINT(EM_DIAGRAM):   end;
206023    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206024    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
206025    +   end;
MPRINT(EM_DIAGRAM):   end;
206026    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206027    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
206028    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206029    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206030    +   end;
MPRINT(EM_DIAGRAM):   end;
206031    +end;
MPRINT(EM_DIAGRAM):   end;
206032    +
206033    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
206034    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
206035    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
206036    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
206037    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
206038    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
206039    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
206040    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
206041    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
206042    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
206043    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
206044    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
206045    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206047    +end;
MPRINT(EM_DIAGRAM):   end;
206048    +else do;
MPRINT(EM_DIAGRAM):   else do;
206049    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
206050    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
206051    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206052    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
206053    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
206054    +   end;
MPRINT(EM_DIAGRAM):   end;
206055    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
206056    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
206057    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
206058    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
206059    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
206060    +   end;
MPRINT(EM_DIAGRAM):   end;
206061    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
206062    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
206063    +   end;
MPRINT(EM_DIAGRAM):   end;
206064    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
206065    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
206066    +   end;
MPRINT(EM_DIAGRAM):   end;
206067    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
206068    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
206069    +   end;
MPRINT(EM_DIAGRAM):   end;
206070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206071    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
206072    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
206073    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
206074    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
206075    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206076    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206077    +   end;
MPRINT(EM_DIAGRAM):   end;
206078    +end;
MPRINT(EM_DIAGRAM):   end;
206079    +
206080    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
206081    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
206082    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
206083    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
206084    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
206085    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
206086    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
206087    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
206088    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
206089    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
206090    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
206091    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
206092    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
206093    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206094    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206095    +end;
MPRINT(EM_DIAGRAM):   end;
206096    +else do;
MPRINT(EM_DIAGRAM):   else do;
206097    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
206098    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
206099    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206100    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
206101    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
206102    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
206103    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
206104    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
206105    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206106    +         end;
MPRINT(EM_DIAGRAM):   end;
206107    +         else do;
MPRINT(EM_DIAGRAM):   else do;
206108    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
206109    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
206110    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206111    +            end;
MPRINT(EM_DIAGRAM):   end;
206112    +         end;
MPRINT(EM_DIAGRAM):   end;
206113    +      end;
MPRINT(EM_DIAGRAM):   end;
206114    +      else do;
MPRINT(EM_DIAGRAM):   else do;
206115    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
206116    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
206117    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206118    +         end;
MPRINT(EM_DIAGRAM):   end;
206119    +      end;
MPRINT(EM_DIAGRAM):   end;
206120    +   end;
MPRINT(EM_DIAGRAM):   end;
206121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206122    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
206123    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
206124    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206125    +      end;
MPRINT(EM_DIAGRAM):   end;
206126    +      else do;
MPRINT(EM_DIAGRAM):   else do;
206127    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
206128    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
206129    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
206130    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
206131    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
206132    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206133    +         end;
MPRINT(EM_DIAGRAM):   end;
206134    +      end;
MPRINT(EM_DIAGRAM):   end;
206135    +   end;
MPRINT(EM_DIAGRAM):   end;
206136    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
206137    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
206138    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
206139    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
206140    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
206141    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206142    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206143    +   end;
MPRINT(EM_DIAGRAM):   end;
206144    +end;
MPRINT(EM_DIAGRAM):   end;
206145    +
206146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206147    +*** Checking missing input Interval
206148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
206149    +
206150    +IF NMISS(
206151    +   Income ,
206152    +   Kidhome ,
206153    +   MntFishProducts ,
206154    +   MntFruits ,
206155    +   MntGoldProds ,
206156    +   MntMeatProducts ,
206157    +   MntSweetProducts ,
206158    +   MntWines ,
206159    +   NumCatalogPurchases ,
206160    +   NumDealsPurchases ,
206161    +   NumStorePurchases ,
206162    +   NumWebPurchases ,
206163    +   NumWebVisitsMonth ,
206164    +   Recency ,
206165    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
206166    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
206167    +
206168    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206169    +END;
MPRINT(EM_DIAGRAM):   END;
206170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206171    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
206172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206173    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206174    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
206175    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
206176    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
206177    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
206178    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
206179    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
206180    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
206181    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
206182    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
206183    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
206184    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
206185    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
206186    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
206187    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
206188    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
206189    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
206190    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
206191    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
206192    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
206193    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
206194    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
206195    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
206196    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
206197    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
206198    +END;
MPRINT(EM_DIAGRAM):   END;
206199    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206200    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
206201    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
206202    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
206203    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
206204    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
206205    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
206206    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
206207    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
206208    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
206209    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
206210    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
206211    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
206212    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
206213    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
206214    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
206215    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
206216    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
206217    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
206218    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
206219    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
206220    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
206221    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
206222    +   ELSE S_NumCatalogPurchases
206223    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
206224    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
206225    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
206226    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
206227    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
206228    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
206229    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
206230    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
206231    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
206232    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
206233    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
206234    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
206235    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
206236    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
206237    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
206238    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
206239    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
206240    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
206241    +END;
MPRINT(EM_DIAGRAM):   END;
206242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206243    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
206244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206246    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
206247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206248    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206249    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
206250    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206251    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206252    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
206253    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
206254    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
206255    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
206256    +          +    -0.44570165516063 * S_MntSweetProducts
206257    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
206258    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
206259    +          +    -1.76291210288234 * S_NumStorePurchases
206260    +          +    -2.02392782824649 * S_NumWebPurchases
206261    +          +     1.28490910676992 * S_NumWebVisitsMonth
206262    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
206263    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome +
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 *
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts +
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 *
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 *
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency +
-0.59235237740193 * S_Teenhome ;
206264    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
206265    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
206266    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
206267    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
206268    +          +     0.29239311560831 * S_MntSweetProducts
206269    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
206270    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
206271    +          +     0.94246962588327 * S_NumStorePurchases
206272    +          +      0.9680353780544 * S_NumWebPurchases
206273    +          +    -2.21882487627334 * S_NumWebVisitsMonth
206274    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
206275    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome +
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 *
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 *
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency +
0.6539185986418 * S_Teenhome ;
206276    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
206277    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
206278    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
206279    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
206280    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 +
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
206281    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
206282    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
206283    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
206284    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
206285    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 *
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 +
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
206286    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
206287    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
206288    +        EducationGraduation  +     0.44122744485667 * EducationMaster
206289    +          +    -0.37907342816265 * Marital_StatusDivorced
206290    +          +     0.12610640291685 * Marital_StatusMarried
206291    +          +     0.51984913420219 * Marital_StatusSingle
206292    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle +
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 *
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 *
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 *
Marital_StatusTogether ;
206293    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
206294    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
206295    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
206296    +          +    -1.03351623479699 * Marital_StatusDivorced
206297    +          +     1.44541386522162 * Marital_StatusMarried
206298    +          +    -1.03636573521294 * Marital_StatusSingle
206299    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle +
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation +
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced +
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle +
1.72091885709893 * Marital_StatusTogether ;
206300    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
206301    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
206302    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
206303    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
206304    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
206305    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
206306    +END;
MPRINT(EM_DIAGRAM):   END;
206307    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206308    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
206309    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
206310    +END;
MPRINT(EM_DIAGRAM):   END;
206311    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206312    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
206313    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206314    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206315    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
206316    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
206317    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
206318    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
206319    +          +    -0.56491281055157 * S_MntSweetProducts
206320    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
206321    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
206322    +          +    -0.90340706582786 * S_NumStorePurchases
206323    +          +    -1.91501626179453 * S_NumWebPurchases
206324    +          +     0.10121028558369 * S_NumWebVisitsMonth
206325    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
206326    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome +
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 *
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases +
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases +
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth +
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
206327    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
206328    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
206329    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
206330    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
206331    +          +    -0.23001625322332 * S_MntSweetProducts
206332    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
206333    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
206334    +          +    -2.13716920911877 * S_NumStorePurchases
206335    +          +    -0.33508808117738 * S_NumWebPurchases
206336    +          +     -2.0809737926136 * S_NumWebVisitsMonth
206337    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
206338    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome +
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 *
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 *
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases +
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth +
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
206339    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
206340    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
206341    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
206342    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
206343    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 *
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 +
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
206344    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
206345    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
206346    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
206347    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
206348    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 +
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
206349    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
206350    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
206351    +        EducationGraduation  +     0.48964474451872 * EducationMaster
206352    +          +     1.22462877499103 * Marital_StatusDivorced
206353    +          +     0.55976057621985 * Marital_StatusMarried
206354    +          +     -0.3198252517086 * Marital_StatusSingle
206355    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle +
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 *
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 *
Marital_StatusTogether ;
206356    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
206357    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
206358    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
206359    +          +     0.32730811728353 * Marital_StatusDivorced
206360    +          +     1.61519773132998 * Marital_StatusMarried
206361    +          +    -1.42728303824254 * Marital_StatusSingle
206362    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle +
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation +
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced +
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle +
1.39334432128351 * Marital_StatusTogether ;
206363    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
206364    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
206365    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
206366    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
206367    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
206368    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
206369    +END;
MPRINT(EM_DIAGRAM):   END;
206370    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206371    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
206372    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
206373    +END;
MPRINT(EM_DIAGRAM):   END;
206374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206375    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
206376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206377    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206378    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
206379    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
206380    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
206381    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2
;
206382    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
206383    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
206384    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
206385    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
206386    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
206387    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
206388    +END;
MPRINT(EM_DIAGRAM):   END;
206389    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206390    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
206391    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
206392    +END;
MPRINT(EM_DIAGRAM):   END;
206393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206394    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
206395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206396    +
206397    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
206398    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
206399    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
206400    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
206401    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
206402    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206403    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
206404    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
206405    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
206406    +end;
MPRINT(EM_DIAGRAM):   end;
206407    +else do;
MPRINT(EM_DIAGRAM):   else do;
206408    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
206409    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
206410    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
206411    +   end;
MPRINT(EM_DIAGRAM):   end;
206412    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
206413    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
206414    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
206415    +   end;
MPRINT(EM_DIAGRAM):   end;
206416    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206417    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
206418    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
206419    +   end;
MPRINT(EM_DIAGRAM):   end;
206420    +end;
MPRINT(EM_DIAGRAM):   end;
206421    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206422    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
206423    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
206424    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
206425    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
206426    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
206427    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
206428    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
206429    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
206430    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
206431    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
206432    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
206433    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
206434    +END;
MPRINT(EM_DIAGRAM):   END;
206435    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206436    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
206437    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
206438    +END;
MPRINT(EM_DIAGRAM):   END;
206439    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
206440    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
206441    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
206442    +END;
MPRINT(EM_DIAGRAM):   END;
206443    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
206444    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
206445    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
206446    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
206447    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
206448    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
206449    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
206450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206451    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
206452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206453    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
206454    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
206455    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
206456    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
206457    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
206458    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
206459    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
206460    +END;
MPRINT(EM_DIAGRAM):   END;
206461    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
206462    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
206463    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
206464    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
206465    +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
206466    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206467    +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
206468    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206469    +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
206470    +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
206471    +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
206472    +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
206473    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206474    +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
206475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206476    +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
206477    +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
206478    +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
206479    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206480    +* Ensmbl58: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 7 of 7;
206481    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206482    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206483    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
206484    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
206485    +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
206486    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206487    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
206488    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
206489    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
206490    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
206491    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
206492    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
206493    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
206494    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
206495    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
206496    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
206497    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
206498    +LENGTH _WARN_ $4
206499    +      F_DepVar  $ 12
206500    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
206501    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
206502    +
206503    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
206504    +
206505    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
206506    +
206507    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
206508    +
206509    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
206510    +
206511    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
206512    +
206513    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
206514    +
206515    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
206516    +
206517    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
206518    +
206519    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
206520    +
206521    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
206522    +
206523    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
206524    +
206525    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
206526    +
206527    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
206528    +
206529    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
206530    +
206531    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
206532    +
206533    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
206534    +
206535    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
206536    +
206537    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
206538    +
206539    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
206540    +
206541    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
206542    +
206543    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
206544    +
206545    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
206546    +
206547    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
206548    +
206549    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
206550    +
206551    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
206552    +
206553    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
206554    +
206555    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
206556    +
206557    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
206558    +
206559    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
206560    +
206561    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
206562    +
206563    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
206564    +
206565    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
206566    +
206567    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
206568    +
206569    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
206570    +
206571    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
206572    +
206573    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
206574    +
206575    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
206576    +
206577    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
206578    +
206579    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
206580    +
206581    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
206582    +
206583    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
206584    +
206585    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
206586    +
206587    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
206588    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
206589    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
206590    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
206591    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206593    +end;
MPRINT(EM_DIAGRAM):   end;
206594    +else do;
MPRINT(EM_DIAGRAM):   else do;
206595    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206596    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
206597    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206598    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206599    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
206600    +   end;
MPRINT(EM_DIAGRAM):   end;
206601    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206602    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
206603    +   end;
MPRINT(EM_DIAGRAM):   end;
206604    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206605    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
206606    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206607    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206608    +   end;
MPRINT(EM_DIAGRAM):   end;
206609    +end;
MPRINT(EM_DIAGRAM):   end;
206610    +
206611    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
206612    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
206613    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
206614    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
206615    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206616    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206617    +end;
MPRINT(EM_DIAGRAM):   end;
206618    +else do;
MPRINT(EM_DIAGRAM):   else do;
206619    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206620    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
206621    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206622    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206623    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
206624    +   end;
MPRINT(EM_DIAGRAM):   end;
206625    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206626    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
206627    +   end;
MPRINT(EM_DIAGRAM):   end;
206628    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206629    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
206630    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206631    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206632    +   end;
MPRINT(EM_DIAGRAM):   end;
206633    +end;
MPRINT(EM_DIAGRAM):   end;
206634    +
206635    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
206636    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
206637    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
206638    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
206639    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206640    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206641    +end;
MPRINT(EM_DIAGRAM):   end;
206642    +else do;
MPRINT(EM_DIAGRAM):   else do;
206643    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206644    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
206645    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206646    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206647    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
206648    +   end;
MPRINT(EM_DIAGRAM):   end;
206649    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206650    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
206651    +   end;
MPRINT(EM_DIAGRAM):   end;
206652    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206653    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
206654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206656    +   end;
MPRINT(EM_DIAGRAM):   end;
206657    +end;
MPRINT(EM_DIAGRAM):   end;
206658    +
206659    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
206660    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
206661    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
206662    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
206663    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206664    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206665    +end;
MPRINT(EM_DIAGRAM):   end;
206666    +else do;
MPRINT(EM_DIAGRAM):   else do;
206667    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206668    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
206669    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206670    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206671    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
206672    +   end;
MPRINT(EM_DIAGRAM):   end;
206673    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206674    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
206675    +   end;
MPRINT(EM_DIAGRAM):   end;
206676    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206677    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
206678    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206679    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206680    +   end;
MPRINT(EM_DIAGRAM):   end;
206681    +end;
MPRINT(EM_DIAGRAM):   end;
206682    +
206683    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
206684    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
206685    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
206686    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
206687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206689    +end;
MPRINT(EM_DIAGRAM):   end;
206690    +else do;
MPRINT(EM_DIAGRAM):   else do;
206691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206692    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
206693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206694    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206695    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
206696    +   end;
MPRINT(EM_DIAGRAM):   end;
206697    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206698    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
206699    +   end;
MPRINT(EM_DIAGRAM):   end;
206700    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206701    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
206702    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206703    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206704    +   end;
MPRINT(EM_DIAGRAM):   end;
206705    +end;
MPRINT(EM_DIAGRAM):   end;
206706    +
206707    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
206708    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
206709    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
206710    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
206711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206713    +end;
MPRINT(EM_DIAGRAM):   end;
206714    +else do;
MPRINT(EM_DIAGRAM):   else do;
206715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206716    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
206717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206718    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206719    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
206720    +   end;
MPRINT(EM_DIAGRAM):   end;
206721    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206722    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
206723    +   end;
MPRINT(EM_DIAGRAM):   end;
206724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206725    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
206726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206728    +   end;
MPRINT(EM_DIAGRAM):   end;
206729    +end;
MPRINT(EM_DIAGRAM):   end;
206730    +
206731    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
206732    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
206733    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
206734    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
206735    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
206736    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
206737    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
206738    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
206739    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
206740    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
206741    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
206742    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
206743    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206744    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206745    +end;
MPRINT(EM_DIAGRAM):   end;
206746    +else do;
MPRINT(EM_DIAGRAM):   else do;
206747    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
206748    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
206749    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206750    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
206751    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
206752    +   end;
MPRINT(EM_DIAGRAM):   end;
206753    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
206754    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
206755    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
206756    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
206757    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
206758    +   end;
MPRINT(EM_DIAGRAM):   end;
206759    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
206760    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
206761    +   end;
MPRINT(EM_DIAGRAM):   end;
206762    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
206763    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
206764    +   end;
MPRINT(EM_DIAGRAM):   end;
206765    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
206766    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
206767    +   end;
MPRINT(EM_DIAGRAM):   end;
206768    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206769    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
206770    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
206771    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
206772    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
206773    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206774    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206775    +   end;
MPRINT(EM_DIAGRAM):   end;
206776    +end;
MPRINT(EM_DIAGRAM):   end;
206777    +
206778    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
206779    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
206780    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
206781    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
206782    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
206783    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
206784    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
206785    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
206786    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
206787    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
206788    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
206789    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
206790    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
206791    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206792    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206793    +end;
MPRINT(EM_DIAGRAM):   end;
206794    +else do;
MPRINT(EM_DIAGRAM):   else do;
206795    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
206796    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
206797    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206798    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
206799    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
206800    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
206801    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
206802    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
206803    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206804    +         end;
MPRINT(EM_DIAGRAM):   end;
206805    +         else do;
MPRINT(EM_DIAGRAM):   else do;
206806    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
206807    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
206808    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206809    +            end;
MPRINT(EM_DIAGRAM):   end;
206810    +         end;
MPRINT(EM_DIAGRAM):   end;
206811    +      end;
MPRINT(EM_DIAGRAM):   end;
206812    +      else do;
MPRINT(EM_DIAGRAM):   else do;
206813    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
206814    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
206815    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206816    +         end;
MPRINT(EM_DIAGRAM):   end;
206817    +      end;
MPRINT(EM_DIAGRAM):   end;
206818    +   end;
MPRINT(EM_DIAGRAM):   end;
206819    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206820    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
206821    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
206822    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206823    +      end;
MPRINT(EM_DIAGRAM):   end;
206824    +      else do;
MPRINT(EM_DIAGRAM):   else do;
206825    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
206826    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
206827    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
206828    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
206829    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
206830    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
206831    +         end;
MPRINT(EM_DIAGRAM):   end;
206832    +      end;
MPRINT(EM_DIAGRAM):   end;
206833    +   end;
MPRINT(EM_DIAGRAM):   end;
206834    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
206835    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
206836    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
206837    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
206838    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
206839    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206840    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206841    +   end;
MPRINT(EM_DIAGRAM):   end;
206842    +end;
MPRINT(EM_DIAGRAM):   end;
206843    +
206844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206845    +*** Checking missing input Interval
206846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
206847    +
206848    +IF NMISS(
206849    +   Income ,
206850    +   Kidhome ,
206851    +   MntFishProducts ,
206852    +   MntFruits ,
206853    +   MntGoldProds ,
206854    +   MntMeatProducts ,
206855    +   MntSweetProducts ,
206856    +   MntWines ,
206857    +   NumCatalogPurchases ,
206858    +   NumDealsPurchases ,
206859    +   NumStorePurchases ,
206860    +   NumWebPurchases ,
206861    +   NumWebVisitsMonth ,
206862    +   Recency ,
206863    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
206864    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
206865    +
206866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206867    +END;
MPRINT(EM_DIAGRAM):   END;
206868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206869    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
206870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206871    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206872    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
206873    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
206874    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
206875    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
206876    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
206877    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
206878    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
206879    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
206880    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
206881    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
206882    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
206883    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
206884    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
206885    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
206886    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
206887    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
206888    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
206889    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
206890    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
206891    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
206892    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
206893    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
206894    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
206895    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
206896    +END;
MPRINT(EM_DIAGRAM):   END;
206897    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206898    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
206899    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
206900    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
206901    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
206902    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
206903    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
206904    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
206905    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
206906    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
206907    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
206908    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
206909    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
206910    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
206911    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
206912    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
206913    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
206914    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
206915    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
206916    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
206917    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
206918    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
206919    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
206920    +   ELSE S_NumCatalogPurchases
206921    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
206922    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
206923    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
206924    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
206925    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
206926    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
206927    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
206928    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
206929    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
206930    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
206931    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
206932    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
206933    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
206934    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
206935    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
206936    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
206937    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
206938    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
206939    +END;
MPRINT(EM_DIAGRAM):   END;
206940    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206941    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
206942    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206944    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
206945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206947    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
206948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206949    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206950    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
206951    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
206952    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
206953    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
206954    +          +     2.41993296129914 * S_MntSweetProducts
206955    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
206956    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
206957    +          +     7.59231492380468 * S_NumStorePurchases
206958    +          +    -0.47095655313121 * S_NumWebPurchases
206959    +          +     2.65669932372712 * S_NumWebVisitsMonth
206960    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
206961    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome +
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 *
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases +
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases +
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth +
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
206962    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
206963    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
206964    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
206965    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
206966    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 *
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 +
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
206967    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
206968    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
206969    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
206970    +          +     0.44728218776544 * Marital_StatusDivorced
206971    +          +    -1.62458831276183 * Marital_StatusMarried
206972    +          +    -0.42858616367237 * Marital_StatusSingle
206973    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle +
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation +
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced +
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle +
-0.29553796445711 * Marital_StatusTogether ;
206974    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
206975    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
206976    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
206977    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
206978    +END;
MPRINT(EM_DIAGRAM):   END;
206979    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206980    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
206981    +END;
MPRINT(EM_DIAGRAM):   END;
206982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206983    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
206984    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206985    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206986    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
206987    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
206988    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
206989    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
206990    +          +    -1.37098390846164 * S_MntSweetProducts
206991    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
206992    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
206993    +          +     0.58246769316602 * S_NumStorePurchases
206994    +          +     2.72780243156581 * S_NumWebPurchases
206995    +          +    -1.73896446530763 * S_NumWebVisitsMonth
206996    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
206997    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome +
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 *
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 *
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 *
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 *
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 *
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
206998    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
206999    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
207000    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
207001    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
207002    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 *
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 +
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
207003    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
207004    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
207005    +        EducationGraduation  +     1.01072132252596 * EducationMaster
207006    +          +     0.08221095774854 * Marital_StatusDivorced
207007    +          +    -0.13062113450086 * Marital_StatusMarried
207008    +          +      0.1912119500185 * Marital_StatusSingle
207009    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle +
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 *
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 *
Marital_StatusTogether ;
207010    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
207011    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
207012    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
207013    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
207014    +END;
MPRINT(EM_DIAGRAM):   END;
207015    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207016    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
207017    +END;
MPRINT(EM_DIAGRAM):   END;
207018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207019    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
207020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207021    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207022    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
207023    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
207024    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
207025    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
207026    +          +     -0.4771357321143 * S_MntSweetProducts
207027    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
207028    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
207029    +          +     0.38755002642582 * S_NumStorePurchases
207030    +          +     0.65178643881164 * S_NumWebPurchases
207031    +          +    -0.83170832622452 * S_NumWebVisitsMonth
207032    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
207033    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome +
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 *
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 *
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency +
1.27228948382376 * S_Teenhome ;
207034    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
207035    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
207036    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
207037    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
207038    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 *
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 +
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
207039    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
207040    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
207041    +        EducationGraduation  +      0.9696976240987 * EducationMaster
207042    +          +    -0.13574340372484 * Marital_StatusDivorced
207043    +          +     1.26001446384238 * Marital_StatusMarried
207044    +          +    -0.16294618258246 * Marital_StatusSingle
207045    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle +
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 *
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 *
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 *
Marital_StatusTogether ;
207046    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
207047    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
207048    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
207049    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
207050    +END;
MPRINT(EM_DIAGRAM):   END;
207051    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207052    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
207053    +END;
MPRINT(EM_DIAGRAM):   END;
207054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207055    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
207056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207057    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207058    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
207059    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
207060    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
207061    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
207062    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
207063    +END;
MPRINT(EM_DIAGRAM):   END;
207064    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207065    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
207066    +END;
MPRINT(EM_DIAGRAM):   END;
207067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207068    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
207069    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207070    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207071    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
207072    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
207073    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
207074    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
207075    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
207076    +END;
MPRINT(EM_DIAGRAM):   END;
207077    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207078    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
207079    +END;
MPRINT(EM_DIAGRAM):   END;
207080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207081    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
207082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207083    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207084    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
207085    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
207086    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
207087    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
207088    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
207089    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
207090    +END;
MPRINT(EM_DIAGRAM):   END;
207091    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207092    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
207093    +END;
MPRINT(EM_DIAGRAM):   END;
207094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207095    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
207096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207097    +
207098    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
207099    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
207100    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
207101    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
207102    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
207103    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207104    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
207105    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
207106    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
207107    +end;
MPRINT(EM_DIAGRAM):   end;
207108    +else do;
MPRINT(EM_DIAGRAM):   else do;
207109    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
207110    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
207111    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
207112    +   end;
MPRINT(EM_DIAGRAM):   end;
207113    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
207114    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
207115    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
207116    +   end;
MPRINT(EM_DIAGRAM):   end;
207117    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207118    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
207119    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
207120    +   end;
MPRINT(EM_DIAGRAM):   end;
207121    +end;
MPRINT(EM_DIAGRAM):   end;
207122    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207123    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
207124    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
207125    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
207126    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
207127    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
207128    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
207129    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
207130    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
207131    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
207132    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
207133    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
207134    +END;
MPRINT(EM_DIAGRAM):   END;
207135    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207136    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
207137    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
207138    +END;
MPRINT(EM_DIAGRAM):   END;
207139    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
207140    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
207141    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
207142    +END;
MPRINT(EM_DIAGRAM):   END;
207143    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
207144    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
207145    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
207146    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
207147    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
207148    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
207149    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
207150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207151    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
207152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207153    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
207154    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
207155    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
207156    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
207157    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
207158    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
207159    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
207160    +END;
MPRINT(EM_DIAGRAM):   END;
207161    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
207162    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
207163    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
207164    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
207165    +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
207166    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207167    +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
207168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207169    +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
207170    +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
207171    +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
207172    +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
207173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207174    +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
207175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207176    +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
207177    +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
207178    +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
207179    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207180    +* Ensmbl58: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Maximum Posteriors of 7 models;
207181    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207182    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
207183    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
207184    +P_DepVar1 = max(
207185    +AutoNeural46_P_DepVar1 ,
207186    +AutoNeural43_P_DepVar1 ,
207187    +AutoNeural42_P_DepVar1 ,
207188    +AutoNeural41_P_DepVar1 ,
207189    +AutoNeural47_P_DepVar1 ,
207190    +AutoNeural45_P_DepVar1 ,
207191    +AutoNeural44_P_DepVar1
207192    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural46_P_DepVar1 , AutoNeural43_P_DepVar1 ,
AutoNeural42_P_DepVar1 , AutoNeural41_P_DepVar1 , AutoNeural47_P_DepVar1 ,
AutoNeural45_P_DepVar1 , AutoNeural44_P_DepVar1 );
207193    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
207194    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
207195    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
207196    +end;
MPRINT(EM_DIAGRAM):   end;
207197    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
207198    +P_DepVar0 = max(
207199    +AutoNeural46_P_DepVar0 ,
207200    +AutoNeural43_P_DepVar0 ,
207201    +AutoNeural42_P_DepVar0 ,
207202    +AutoNeural41_P_DepVar0 ,
207203    +AutoNeural47_P_DepVar0 ,
207204    +AutoNeural45_P_DepVar0 ,
207205    +AutoNeural44_P_DepVar0
207206    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural46_P_DepVar0 , AutoNeural43_P_DepVar0 ,
AutoNeural42_P_DepVar0 , AutoNeural41_P_DepVar0 , AutoNeural47_P_DepVar0 ,
AutoNeural45_P_DepVar0 , AutoNeural44_P_DepVar0 );
207207    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
207208    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
207209    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
207210    +end;
MPRINT(EM_DIAGRAM):   end;
207211    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
207212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207213    +* Ensmbl58: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Classification Vars;
207214    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207215    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
207216    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
207217    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
207218    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
207219    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
207220    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
207221    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
207222    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
207223    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
207224    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
207225    +end;
MPRINT(EM_DIAGRAM):   end;
207226    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
207227    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
207228    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
207229    +end;
MPRINT(EM_DIAGRAM):   end;
207230    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
207231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207232    +* Ensmbl58: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Producing Unformatted variable;
207233    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207234    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
207235    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
207236    +else
207237    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
207238    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207239    +* Ensmbl58: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing _WARN_ Variable;
207240    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207241    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
207242    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
207243    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
207244    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
207244   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
207245    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
207245   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
207246    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
207246   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
207247    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
207247   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
207248    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
207248   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
207249    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
207249   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
207250    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
207250   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
207251    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
207251   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
207252    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
207252   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
207253    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
207253   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
207254    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
207254   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
207255    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
207255   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
207256    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
207256   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
207257    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
207257   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
207258    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
207258   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
207259    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
207259   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
207260    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
207260   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
207261    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
207261   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
207262    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
207262   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
207263    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
207263   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
207264    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
207264   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
207265    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
207265   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
207266    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
207266   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
207267    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
207267   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
207268    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
207268   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
207269    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
207269   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
207270    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
207270   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
207271    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
207271   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
207272    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207273    +* Ensmbl58: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Residual Vars;
207274    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207275    +if
207276    +F_DepVar NE '1'
207277    +AND F_DepVar NE '0'
207278    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
207279    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
207280    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
207281    +end;
MPRINT(EM_DIAGRAM):   end;
207282    +else do;
MPRINT(EM_DIAGRAM):   else do;
207283    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
207284    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
207285    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
207286    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
207287    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
207288    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
207289    +END;
MPRINT(EM_DIAGRAM):   END;
207290    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
207291     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL58_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
207292     quit;
207293     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
207294     filename emflow
207294   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring AUTONEURAL46_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207295     *------------------------------------------------------------*;
207296     * Ensmbl58: Scoring AUTONEURAL46_VALIDATE data;
207297     *------------------------------------------------------------*;
207298     data EMWS8.Ensmbl58_VALIDATE
207299     / view=EMWS8.Ensmbl58_VALIDATE
207300     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_VALIDATE / view=EMWS8.Ensmbl58_VALIDATE ;
207301     set EMWS8.AutoNeural46_VALIDATE
207302     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_VALIDATE ;
207303     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMFLOWSCORE.sas.
207304    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207305    +* Ensmbl58: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Combine model for DepVar;
207306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207307    +* Ensmbl58: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 1 of 7;
207308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207309    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207310    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
207311    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
207312    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
207313    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207314    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207315    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
207316    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
207317    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
207318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207319    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207320    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
207321    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
207322    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
207323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207324    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207325    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
207326    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
207327    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
207328    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207329    +
207330    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
207331    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
207331   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
207332    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
207333    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
207334    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
207335    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
207336    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
207337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207338    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
207339    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
207340    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
207341    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207342    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207343    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
207344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207345    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
207346    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
207347    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
207348    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207349    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
207350    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
207351    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
207352    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207353    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207354    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
207355    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
207356    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
207357    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207359    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
207360    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
207361    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
207362    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207363    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
207364    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
207365    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
207366    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
207367    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
207368    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
207369    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
207370    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
207371    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
207372    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
207373    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
207374    +LENGTH _WARN_ $4
207375    +      F_DepVar  $ 12
207376    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
207377    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
207378    +
207379    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
207380    +
207381    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
207382    +
207383    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
207384    +
207385    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
207386    +
207387    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
207388    +
207389    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
207390    +
207391    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
207392    +
207393    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
207394    +
207395    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
207396    +
207397    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
207398    +
207399    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
207400    +
207401    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
207402    +
207403    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
207404    +
207405    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
207406    +
207407    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
207408    +
207409    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
207410    +
207411    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
207412    +
207413    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
207414    +
207415    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
207416    +
207417    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
207418    +
207419    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
207420    +
207421    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
207422    +
207423    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
207424    +
207425    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
207426    +
207427    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
207428    +
207429    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
207430    +
207431    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
207432    +
207433    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
207434    +
207435    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
207436    +
207437    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
207438    +
207439    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
207440    +
207441    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
207442    +
207443    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
207444    +
207445    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
207446    +
207447    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
207448    +
207449    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
207450    +
207451    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
207452    +
207453    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
207454    +
207455    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
207456    +
207457    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
207458    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
207459    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
207460    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
207461    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207462    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207463    +end;
MPRINT(EM_DIAGRAM):   end;
207464    +else do;
MPRINT(EM_DIAGRAM):   else do;
207465    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207466    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
207467    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207468    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207469    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
207470    +   end;
MPRINT(EM_DIAGRAM):   end;
207471    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207472    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
207473    +   end;
MPRINT(EM_DIAGRAM):   end;
207474    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207475    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
207476    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207477    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207478    +   end;
MPRINT(EM_DIAGRAM):   end;
207479    +end;
MPRINT(EM_DIAGRAM):   end;
207480    +
207481    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
207482    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
207483    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
207484    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
207485    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207486    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207487    +end;
MPRINT(EM_DIAGRAM):   end;
207488    +else do;
MPRINT(EM_DIAGRAM):   else do;
207489    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207490    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
207491    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207492    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207493    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
207494    +   end;
MPRINT(EM_DIAGRAM):   end;
207495    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207496    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
207497    +   end;
MPRINT(EM_DIAGRAM):   end;
207498    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207499    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
207500    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207501    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207502    +   end;
MPRINT(EM_DIAGRAM):   end;
207503    +end;
MPRINT(EM_DIAGRAM):   end;
207504    +
207505    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
207506    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
207507    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
207508    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
207509    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207510    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207511    +end;
MPRINT(EM_DIAGRAM):   end;
207512    +else do;
MPRINT(EM_DIAGRAM):   else do;
207513    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207514    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
207515    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207516    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207517    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
207518    +   end;
MPRINT(EM_DIAGRAM):   end;
207519    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207520    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
207521    +   end;
MPRINT(EM_DIAGRAM):   end;
207522    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207523    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
207524    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207525    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207526    +   end;
MPRINT(EM_DIAGRAM):   end;
207527    +end;
MPRINT(EM_DIAGRAM):   end;
207528    +
207529    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
207530    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
207531    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
207532    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
207533    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207534    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207535    +end;
MPRINT(EM_DIAGRAM):   end;
207536    +else do;
MPRINT(EM_DIAGRAM):   else do;
207537    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207538    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
207539    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207540    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207541    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
207542    +   end;
MPRINT(EM_DIAGRAM):   end;
207543    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207544    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
207545    +   end;
MPRINT(EM_DIAGRAM):   end;
207546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207547    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
207548    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207549    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207550    +   end;
MPRINT(EM_DIAGRAM):   end;
207551    +end;
MPRINT(EM_DIAGRAM):   end;
207552    +
207553    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
207554    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
207555    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
207556    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
207557    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207558    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207559    +end;
MPRINT(EM_DIAGRAM):   end;
207560    +else do;
MPRINT(EM_DIAGRAM):   else do;
207561    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207562    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
207563    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207564    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207565    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
207566    +   end;
MPRINT(EM_DIAGRAM):   end;
207567    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207568    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
207569    +   end;
MPRINT(EM_DIAGRAM):   end;
207570    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207571    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
207572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207574    +   end;
MPRINT(EM_DIAGRAM):   end;
207575    +end;
MPRINT(EM_DIAGRAM):   end;
207576    +
207577    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
207578    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
207579    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
207580    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
207581    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207583    +end;
MPRINT(EM_DIAGRAM):   end;
207584    +else do;
MPRINT(EM_DIAGRAM):   else do;
207585    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207586    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
207587    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207588    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207589    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
207590    +   end;
MPRINT(EM_DIAGRAM):   end;
207591    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207592    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
207593    +   end;
MPRINT(EM_DIAGRAM):   end;
207594    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207595    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
207596    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207597    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207598    +   end;
MPRINT(EM_DIAGRAM):   end;
207599    +end;
MPRINT(EM_DIAGRAM):   end;
207600    +
207601    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
207602    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
207603    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
207604    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
207605    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
207606    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
207607    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
207608    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
207609    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
207610    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
207611    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
207612    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
207613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207615    +end;
MPRINT(EM_DIAGRAM):   end;
207616    +else do;
MPRINT(EM_DIAGRAM):   else do;
207617    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
207618    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
207619    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207620    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
207621    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
207622    +   end;
MPRINT(EM_DIAGRAM):   end;
207623    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
207624    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
207625    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
207626    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
207627    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
207628    +   end;
MPRINT(EM_DIAGRAM):   end;
207629    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
207630    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
207631    +   end;
MPRINT(EM_DIAGRAM):   end;
207632    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
207633    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
207634    +   end;
MPRINT(EM_DIAGRAM):   end;
207635    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
207636    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
207637    +   end;
MPRINT(EM_DIAGRAM):   end;
207638    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207639    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
207640    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
207641    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
207642    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
207643    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207644    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207645    +   end;
MPRINT(EM_DIAGRAM):   end;
207646    +end;
MPRINT(EM_DIAGRAM):   end;
207647    +
207648    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
207649    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
207650    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
207651    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
207652    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
207653    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
207654    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
207655    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
207656    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
207657    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
207658    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
207659    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
207660    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
207661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207663    +end;
MPRINT(EM_DIAGRAM):   end;
207664    +else do;
MPRINT(EM_DIAGRAM):   else do;
207665    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
207666    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
207667    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207668    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
207669    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
207670    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
207671    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
207672    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
207673    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207674    +         end;
MPRINT(EM_DIAGRAM):   end;
207675    +         else do;
MPRINT(EM_DIAGRAM):   else do;
207676    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
207677    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
207678    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207679    +            end;
MPRINT(EM_DIAGRAM):   end;
207680    +         end;
MPRINT(EM_DIAGRAM):   end;
207681    +      end;
MPRINT(EM_DIAGRAM):   end;
207682    +      else do;
MPRINT(EM_DIAGRAM):   else do;
207683    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
207684    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
207685    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207686    +         end;
MPRINT(EM_DIAGRAM):   end;
207687    +      end;
MPRINT(EM_DIAGRAM):   end;
207688    +   end;
MPRINT(EM_DIAGRAM):   end;
207689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207690    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
207691    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
207692    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207693    +      end;
MPRINT(EM_DIAGRAM):   end;
207694    +      else do;
MPRINT(EM_DIAGRAM):   else do;
207695    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
207696    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
207697    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
207698    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
207699    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
207700    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207701    +         end;
MPRINT(EM_DIAGRAM):   end;
207702    +      end;
MPRINT(EM_DIAGRAM):   end;
207703    +   end;
MPRINT(EM_DIAGRAM):   end;
207704    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
207705    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
207706    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
207707    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
207708    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
207709    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207710    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207711    +   end;
MPRINT(EM_DIAGRAM):   end;
207712    +end;
MPRINT(EM_DIAGRAM):   end;
207713    +
207714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207715    +*** Checking missing input Interval
207716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
207717    +
207718    +IF NMISS(
207719    +   Income ,
207720    +   Kidhome ,
207721    +   MntFishProducts ,
207722    +   MntFruits ,
207723    +   MntGoldProds ,
207724    +   MntMeatProducts ,
207725    +   MntSweetProducts ,
207726    +   MntWines ,
207727    +   NumCatalogPurchases ,
207728    +   NumDealsPurchases ,
207729    +   NumStorePurchases ,
207730    +   NumWebPurchases ,
207731    +   NumWebVisitsMonth ,
207732    +   Recency ,
207733    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
207734    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
207735    +
207736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207737    +END;
MPRINT(EM_DIAGRAM):   END;
207738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207739    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
207740    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207741    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207742    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
207743    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
207744    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
207745    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
207746    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
207747    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
207748    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
207749    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
207750    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
207751    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
207752    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
207753    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
207754    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
207755    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
207756    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
207757    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
207758    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
207759    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
207760    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
207761    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
207762    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
207763    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
207764    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
207765    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
207766    +END;
MPRINT(EM_DIAGRAM):   END;
207767    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207768    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
207769    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
207770    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
207771    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
207772    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
207773    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
207774    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
207775    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
207776    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
207777    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
207778    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
207779    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
207780    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
207781    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
207782    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
207783    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
207784    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
207785    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
207786    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
207787    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
207788    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
207789    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
207790    +   ELSE S_NumCatalogPurchases
207791    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
207792    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
207793    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
207794    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
207795    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
207796    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
207797    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
207798    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
207799    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
207800    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
207801    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
207802    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
207803    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
207804    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
207805    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
207806    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
207807    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
207808    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
207809    +END;
MPRINT(EM_DIAGRAM):   END;
207810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207811    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
207812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207814    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
207815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207817    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
207818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207820    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
207821    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
207822    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
207823    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
207824    +          +      0.0311909552218 * S_MntSweetProducts
207825    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
207826    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
207827    +          +     0.12294876865087 * S_NumStorePurchases
207828    +          +     0.11602382379314 * S_NumWebPurchases
207829    +          +    -0.23519567542635 * S_NumWebVisitsMonth
207830    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
207831    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
207832    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
207833    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
207834    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
207835    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
207836    +          +     0.00133400054994 * S_MntSweetProducts
207837    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
207838    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
207839    +          +    -0.49595472235036 * S_NumStorePurchases
207840    +          +    -0.24747548015204 * S_NumWebPurchases
207841    +          +     0.12326047694811 * S_NumWebVisitsMonth
207842    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
207843    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
207844    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
207845    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
207846    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
207847    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
207848    +          +    -0.03908755288099 * S_MntSweetProducts
207849    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
207850    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
207851    +          +    -0.20634630081435 * S_NumStorePurchases
207852    +          +    -0.06734935798888 * S_NumWebPurchases
207853    +          +     0.32288250215418 * S_NumWebVisitsMonth
207854    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
207855    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
207856    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
207857    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
207858    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
207859    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
207860    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
207861    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
207862    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
207863    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
207864    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
207865    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
207866    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
207867    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
207868    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
207869    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
207870    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
207871    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
207872    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
207873    +        EducationGraduation  +     0.07475697967073 * EducationMaster
207874    +          +    -0.04265434587882 * Marital_StatusDivorced
207875    +          +     0.17114014094758 * Marital_StatusMarried
207876    +          +     -0.1537035921296 * Marital_StatusSingle
207877    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
207878    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
207879    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
207880    +        EducationGraduation  +     0.04507684017588 * EducationMaster
207881    +          +     0.25534272809394 * Marital_StatusDivorced
207882    +          +     0.20034903346804 * Marital_StatusMarried
207883    +          +    -0.38348393943797 * Marital_StatusSingle
207884    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
207885    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
207886    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
207887    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
207888    +          +      0.1988416043876 * Marital_StatusDivorced
207889    +          +    -0.21663959478684 * Marital_StatusMarried
207890    +          +     0.06591480171547 * Marital_StatusSingle
207891    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
207892    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
207893    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
207894    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
207895    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
207896    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
207897    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
207898    +END;
MPRINT(EM_DIAGRAM):   END;
207899    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207900    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
207901    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
207902    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
207903    +END;
MPRINT(EM_DIAGRAM):   END;
207904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207905    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
207906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207907    +
207908    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
207909    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
207910    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
207911    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
207912    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
207913    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207914    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
207915    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
207916    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
207917    +end;
MPRINT(EM_DIAGRAM):   end;
207918    +else do;
MPRINT(EM_DIAGRAM):   else do;
207919    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
207920    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
207921    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
207922    +   end;
MPRINT(EM_DIAGRAM):   end;
207923    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
207924    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
207925    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
207926    +   end;
MPRINT(EM_DIAGRAM):   end;
207927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207928    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
207929    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
207930    +   end;
MPRINT(EM_DIAGRAM):   end;
207931    +end;
MPRINT(EM_DIAGRAM):   end;
207932    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207933    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
207934    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
207935    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
207936    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
207937    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
207938    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
207939    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
207940    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
207941    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
207942    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
207943    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
207944    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
207945    +END;
MPRINT(EM_DIAGRAM):   END;
207946    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207947    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
207948    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
207949    +END;
MPRINT(EM_DIAGRAM):   END;
207950    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
207951    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
207952    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
207953    +END;
MPRINT(EM_DIAGRAM):   END;
207954    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
207955    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
207956    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
207957    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
207958    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
207959    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
207960    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
207961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207962    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
207963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207964    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
207965    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
207966    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
207967    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
207968    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
207969    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
207970    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
207971    +END;
MPRINT(EM_DIAGRAM):   END;
207972    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
207973    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
207974    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
207975    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
207976    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
207977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207978    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
207979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207980    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
207981    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
207982    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
207983    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
207984    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207985    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
207986    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207987    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
207988    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
207989    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
207990    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207991    +* Ensmbl58: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 2 of 7;
207992    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207993    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207994    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
207995    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
207996    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
207997    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207998    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
207999    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
208000    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
208001    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
208002    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
208003    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
208004    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
208005    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
208006    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
208007    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
208008    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
208009    +LENGTH _WARN_ $4
208010    +      F_DepVar  $ 12
208011    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
208012    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
208013    +
208014    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
208015    +
208016    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
208017    +
208018    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
208019    +
208020    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
208021    +
208022    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
208023    +
208024    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
208025    +
208026    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
208027    +
208028    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
208029    +
208030    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
208031    +
208032    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
208033    +
208034    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
208035    +
208036    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
208037    +
208038    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
208039    +
208040    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
208041    +
208042    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
208043    +
208044    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
208045    +
208046    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
208047    +
208048    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
208049    +
208050    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
208051    +
208052    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
208053    +
208054    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
208055    +
208056    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
208057    +
208058    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
208059    +
208060    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
208061    +
208062    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
208063    +
208064    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
208065    +
208066    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
208067    +
208068    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
208069    +
208070    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
208071    +
208072    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
208073    +
208074    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
208075    +
208076    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
208077    +
208078    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
208079    +
208080    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
208081    +
208082    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
208083    +
208084    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
208085    +
208086    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
208087    +
208088    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
208089    +
208090    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
208091    +
208092    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
208093    +
208094    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
208095    +
208096    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
208097    +
208098    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
208099    +
208100    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
208101    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
208102    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
208103    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
208104    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208105    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208106    +end;
MPRINT(EM_DIAGRAM):   end;
208107    +else do;
MPRINT(EM_DIAGRAM):   else do;
208108    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208109    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
208110    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208111    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208112    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
208113    +   end;
MPRINT(EM_DIAGRAM):   end;
208114    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208115    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
208116    +   end;
MPRINT(EM_DIAGRAM):   end;
208117    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208118    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
208119    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208120    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208121    +   end;
MPRINT(EM_DIAGRAM):   end;
208122    +end;
MPRINT(EM_DIAGRAM):   end;
208123    +
208124    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
208125    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
208126    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
208127    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
208128    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208129    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208130    +end;
MPRINT(EM_DIAGRAM):   end;
208131    +else do;
MPRINT(EM_DIAGRAM):   else do;
208132    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208133    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
208134    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208135    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208136    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
208137    +   end;
MPRINT(EM_DIAGRAM):   end;
208138    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208139    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
208140    +   end;
MPRINT(EM_DIAGRAM):   end;
208141    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208142    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
208143    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208144    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208145    +   end;
MPRINT(EM_DIAGRAM):   end;
208146    +end;
MPRINT(EM_DIAGRAM):   end;
208147    +
208148    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
208149    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
208150    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
208151    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
208152    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208153    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208154    +end;
MPRINT(EM_DIAGRAM):   end;
208155    +else do;
MPRINT(EM_DIAGRAM):   else do;
208156    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208157    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
208158    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208159    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208160    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
208161    +   end;
MPRINT(EM_DIAGRAM):   end;
208162    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208163    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
208164    +   end;
MPRINT(EM_DIAGRAM):   end;
208165    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208166    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
208167    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208168    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208169    +   end;
MPRINT(EM_DIAGRAM):   end;
208170    +end;
MPRINT(EM_DIAGRAM):   end;
208171    +
208172    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
208173    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
208174    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
208175    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
208176    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208177    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208178    +end;
MPRINT(EM_DIAGRAM):   end;
208179    +else do;
MPRINT(EM_DIAGRAM):   else do;
208180    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208181    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
208182    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208183    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208184    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
208185    +   end;
MPRINT(EM_DIAGRAM):   end;
208186    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208187    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
208188    +   end;
MPRINT(EM_DIAGRAM):   end;
208189    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208190    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
208191    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208192    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208193    +   end;
MPRINT(EM_DIAGRAM):   end;
208194    +end;
MPRINT(EM_DIAGRAM):   end;
208195    +
208196    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
208197    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
208198    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
208199    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
208200    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208201    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208202    +end;
MPRINT(EM_DIAGRAM):   end;
208203    +else do;
MPRINT(EM_DIAGRAM):   else do;
208204    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208205    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
208206    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208207    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208208    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
208209    +   end;
MPRINT(EM_DIAGRAM):   end;
208210    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208211    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
208212    +   end;
MPRINT(EM_DIAGRAM):   end;
208213    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208214    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
208215    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208216    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208217    +   end;
MPRINT(EM_DIAGRAM):   end;
208218    +end;
MPRINT(EM_DIAGRAM):   end;
208219    +
208220    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
208221    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
208222    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
208223    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
208224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208226    +end;
MPRINT(EM_DIAGRAM):   end;
208227    +else do;
MPRINT(EM_DIAGRAM):   else do;
208228    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208229    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
208230    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208231    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208232    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
208233    +   end;
MPRINT(EM_DIAGRAM):   end;
208234    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208235    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
208236    +   end;
MPRINT(EM_DIAGRAM):   end;
208237    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208238    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
208239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208241    +   end;
MPRINT(EM_DIAGRAM):   end;
208242    +end;
MPRINT(EM_DIAGRAM):   end;
208243    +
208244    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
208245    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
208246    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
208247    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
208248    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
208249    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
208250    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
208251    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
208252    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
208253    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
208254    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
208255    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
208256    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208257    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208258    +end;
MPRINT(EM_DIAGRAM):   end;
208259    +else do;
MPRINT(EM_DIAGRAM):   else do;
208260    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
208261    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
208262    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208263    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
208264    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
208265    +   end;
MPRINT(EM_DIAGRAM):   end;
208266    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
208267    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
208268    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
208269    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
208270    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
208271    +   end;
MPRINT(EM_DIAGRAM):   end;
208272    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
208273    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
208274    +   end;
MPRINT(EM_DIAGRAM):   end;
208275    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
208276    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
208277    +   end;
MPRINT(EM_DIAGRAM):   end;
208278    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
208279    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
208280    +   end;
MPRINT(EM_DIAGRAM):   end;
208281    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208282    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
208283    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
208284    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
208285    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
208286    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208287    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208288    +   end;
MPRINT(EM_DIAGRAM):   end;
208289    +end;
MPRINT(EM_DIAGRAM):   end;
208290    +
208291    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
208292    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
208293    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
208294    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
208295    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
208296    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
208297    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
208298    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
208299    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
208300    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
208301    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
208302    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
208303    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
208304    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208305    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208306    +end;
MPRINT(EM_DIAGRAM):   end;
208307    +else do;
MPRINT(EM_DIAGRAM):   else do;
208308    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
208309    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
208310    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208311    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
208312    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
208313    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
208314    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
208315    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
208316    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
208317    +         end;
MPRINT(EM_DIAGRAM):   end;
208318    +         else do;
MPRINT(EM_DIAGRAM):   else do;
208319    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
208320    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
208321    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
208322    +            end;
MPRINT(EM_DIAGRAM):   end;
208323    +         end;
MPRINT(EM_DIAGRAM):   end;
208324    +      end;
MPRINT(EM_DIAGRAM):   end;
208325    +      else do;
MPRINT(EM_DIAGRAM):   else do;
208326    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
208327    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
208328    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
208329    +         end;
MPRINT(EM_DIAGRAM):   end;
208330    +      end;
MPRINT(EM_DIAGRAM):   end;
208331    +   end;
MPRINT(EM_DIAGRAM):   end;
208332    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208333    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
208334    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
208335    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
208336    +      end;
MPRINT(EM_DIAGRAM):   end;
208337    +      else do;
MPRINT(EM_DIAGRAM):   else do;
208338    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
208339    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
208340    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
208341    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
208342    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
208343    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
208344    +         end;
MPRINT(EM_DIAGRAM):   end;
208345    +      end;
MPRINT(EM_DIAGRAM):   end;
208346    +   end;
MPRINT(EM_DIAGRAM):   end;
208347    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
208348    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
208349    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
208350    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
208351    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
208352    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208353    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208354    +   end;
MPRINT(EM_DIAGRAM):   end;
208355    +end;
MPRINT(EM_DIAGRAM):   end;
208356    +
208357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208358    +*** Checking missing input Interval
208359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
208360    +
208361    +IF NMISS(
208362    +   Income ,
208363    +   Kidhome ,
208364    +   MntFishProducts ,
208365    +   MntFruits ,
208366    +   MntGoldProds ,
208367    +   MntMeatProducts ,
208368    +   MntSweetProducts ,
208369    +   MntWines ,
208370    +   NumCatalogPurchases ,
208371    +   NumDealsPurchases ,
208372    +   NumStorePurchases ,
208373    +   NumWebPurchases ,
208374    +   NumWebVisitsMonth ,
208375    +   Recency ,
208376    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
208377    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
208378    +
208379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208380    +END;
MPRINT(EM_DIAGRAM):   END;
208381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208382    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
208383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208384    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208385    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
208386    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
208387    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
208388    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
208389    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
208390    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
208391    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
208392    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
208393    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
208394    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
208395    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
208396    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
208397    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
208398    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
208399    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
208400    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
208401    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
208402    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
208403    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
208404    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
208405    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
208406    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
208407    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
208408    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
208409    +END;
MPRINT(EM_DIAGRAM):   END;
208410    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208411    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
208412    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
208413    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
208414    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
208415    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
208416    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
208417    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
208418    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
208419    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
208420    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
208421    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
208422    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
208423    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
208424    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
208425    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
208426    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
208427    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
208428    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
208429    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
208430    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
208431    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
208432    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
208433    +   ELSE S_NumCatalogPurchases
208434    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
208435    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
208436    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
208437    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
208438    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
208439    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
208440    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
208441    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
208442    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
208443    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
208444    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
208445    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
208446    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
208447    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
208448    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
208449    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
208450    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
208451    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
208452    +END;
MPRINT(EM_DIAGRAM):   END;
208453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208454    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
208455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208457    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
208458    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208460    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
208461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208462    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208463    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
208464    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
208465    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
208466    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
208467    +          +    -0.05146617403327 * S_MntSweetProducts
208468    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
208469    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
208470    +          +     0.62863110938217 * S_NumStorePurchases
208471    +          +    -0.38696149667878 * S_NumWebPurchases
208472    +          +    -0.64969312889347 * S_NumWebVisitsMonth
208473    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
208474    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome +
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 *
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 *
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency +
-0.14927581282921 * S_Teenhome ;
208475    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
208476    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
208477    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
208478    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
208479    +          +     -0.2837867994991 * S_MntSweetProducts
208480    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
208481    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
208482    +          +    -0.54369381190341 * S_NumStorePurchases
208483    +          +     0.67406669261545 * S_NumWebPurchases
208484    +          +     0.33996696883368 * S_NumWebVisitsMonth
208485    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
208486    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome +
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 *
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases +
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases +
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth +
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
208487    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
208488    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
208489    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
208490    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
208491    +          +    -0.03465749764322 * S_MntSweetProducts
208492    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
208493    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
208494    +          +      0.4404265130137 * S_NumStorePurchases
208495    +          +     0.34042541893429 * S_NumWebPurchases
208496    +          +    -1.21549916758761 * S_NumWebVisitsMonth
208497    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
208498    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome +
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 *
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 *
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases +
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth +
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
208499    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
208500    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
208501    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
208502    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
208503    +          +    -0.00464679492565 * S_MntSweetProducts
208504    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
208505    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
208506    +          +     1.15839307615364 * S_NumStorePurchases
208507    +          +     0.62831972126136 * S_NumWebPurchases
208508    +          +    -1.61962107597882 * S_NumWebVisitsMonth
208509    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
208510    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome +
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 *
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 *
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases +
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth +
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
208511    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
208512    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
208513    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
208514    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
208515    +          +    -0.31125451894603 * S_MntSweetProducts
208516    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
208517    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
208518    +          +    -1.44151914398807 * S_NumStorePurchases
208519    +          +     -0.5455286038748 * S_NumWebPurchases
208520    +          +     0.92543573664002 * S_NumWebVisitsMonth
208521    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
208522    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome +
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 *
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 *
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency +
0.12419848895477 * S_Teenhome ;
208523    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
208524    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
208525    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
208526    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
208527    +          +    -0.44310159680843 * S_MntSweetProducts
208528    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
208529    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
208530    +          +    -0.06648303760561 * S_NumStorePurchases
208531    +          +    -0.65122349287903 * S_NumWebPurchases
208532    +          +     1.83555427093429 * S_NumWebVisitsMonth
208533    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
208534    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome +
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 *
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 *
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency +
-0.96168611481099 * S_Teenhome ;
208535    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
208536    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
208537    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
208538    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
208539    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 *
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 +
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
208540    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
208541    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
208542    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
208543    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
208544    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 *
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 +
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
208545    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
208546    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
208547    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
208548    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
208549    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 *
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 +
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
208550    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
208551    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
208552    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
208553    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
208554    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 *
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 +
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
208555    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
208556    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
208557    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
208558    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
208559    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 +
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
208560    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
208561    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
208562    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
208563    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
208564    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 +
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
208565    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
208566    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
208567    +        EducationGraduation  +     0.15082660839612 * EducationMaster
208568    +          +    -0.86711066227375 * Marital_StatusDivorced
208569    +          +     0.40837974583757 * Marital_StatusMarried
208570    +          +    -0.36026722115525 * Marital_StatusSingle
208571    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle +
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation +
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced +
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle +
0.79004200065113 * Marital_StatusTogether ;
208572    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
208573    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
208574    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
208575    +          +     0.32215787204894 * Marital_StatusDivorced
208576    +          +    -0.56445035445224 * Marital_StatusMarried
208577    +          +    -0.19089062631475 * Marital_StatusSingle
208578    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle +
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation +
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced +
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle +
-0.05879603306331 * Marital_StatusTogether ;
208579    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
208580    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
208581    +        EducationGraduation  +     0.08569631133746 * EducationMaster
208582    +          +      0.0333599428728 * Marital_StatusDivorced
208583    +          +      0.2536992094527 * Marital_StatusMarried
208584    +          +     0.28814962122223 * Marital_StatusSingle
208585    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle +
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 *
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 *
Marital_StatusTogether ;
208586    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
208587    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
208588    +        EducationGraduation  +     0.67447448653035 * EducationMaster
208589    +          +    -0.47992692297474 * Marital_StatusDivorced
208590    +          +     1.37810632485566 * Marital_StatusMarried
208591    +          +    -1.37561982457408 * Marital_StatusSingle
208592    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle +
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 *
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 *
Marital_StatusTogether ;
208593    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
208594    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
208595    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
208596    +          +     0.19162417091995 * Marital_StatusDivorced
208597    +          +    -0.36068364824761 * Marital_StatusMarried
208598    +          +    -0.12710669526743 * Marital_StatusSingle
208599    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle +
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation +
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced +
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle +
-0.01019314244777 * Marital_StatusTogether ;
208600    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
208601    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
208602    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
208603    +          +     0.23760271729717 * Marital_StatusDivorced
208604    +          +    -1.21454188572959 * Marital_StatusMarried
208605    +          +     1.24284947007232 * Marital_StatusSingle
208606    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle +
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation +
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced +
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle +
-1.39754167839201 * Marital_StatusTogether ;
208607    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
208608    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
208609    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
208610    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
208611    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
208612    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
208613    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
208614    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
208615    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
208616    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
208617    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
208618    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
208619    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
208620    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
208621    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
208622    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
208623    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
208624    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
208625    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
208626    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
208627    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
208628    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
208629    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
208630    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
208631    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
208632    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
208633    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
208634    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
208635    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
208636    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
208637    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
208638    +END;
MPRINT(EM_DIAGRAM):   END;
208639    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208640    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
208641    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
208642    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
208643    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
208644    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
208645    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
208646    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
208647    +END;
MPRINT(EM_DIAGRAM):   END;
208648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208649    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
208650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208651    +
208652    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
208653    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
208654    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
208655    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
208656    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
208657    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208658    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
208659    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
208660    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
208661    +end;
MPRINT(EM_DIAGRAM):   end;
208662    +else do;
MPRINT(EM_DIAGRAM):   else do;
208663    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
208664    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
208665    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
208666    +   end;
MPRINT(EM_DIAGRAM):   end;
208667    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
208668    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
208669    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
208670    +   end;
MPRINT(EM_DIAGRAM):   end;
208671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208672    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
208673    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
208674    +   end;
MPRINT(EM_DIAGRAM):   end;
208675    +end;
MPRINT(EM_DIAGRAM):   end;
208676    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208677    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
208678    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
208679    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
208680    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 +
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 +
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
208681    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
208682    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
208683    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
208684    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
208685    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
208686    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
208687    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
208688    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
208689    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
208690    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
208691    +END;
MPRINT(EM_DIAGRAM):   END;
208692    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208693    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
208694    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
208695    +END;
MPRINT(EM_DIAGRAM):   END;
208696    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
208697    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
208698    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
208699    +END;
MPRINT(EM_DIAGRAM):   END;
208700    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
208701    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
208702    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
208703    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
208704    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
208705    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
208706    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
208707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208708    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
208709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208710    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
208711    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
208712    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
208713    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
208714    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
208715    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
208716    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
208717    +END;
MPRINT(EM_DIAGRAM):   END;
208718    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
208719    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
208720    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
208721    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
208722    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
208723    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208724    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
208725    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208726    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
208727    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
208728    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
208729    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
208730    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208731    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
208732    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208733    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
208734    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
208735    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
208736    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208737    +* Ensmbl58: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 3 of 7;
208738    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208740    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
208741    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
208742    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
208743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208744    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
208745    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
208746    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
208747    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
208748    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
208749    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
208750    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
208751    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
208752    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
208753    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
208754    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
208755    +LENGTH _WARN_ $4
208756    +      F_DepVar  $ 12
208757    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
208758    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
208759    +
208760    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
208761    +
208762    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
208763    +
208764    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
208765    +
208766    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
208767    +
208768    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
208769    +
208770    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
208771    +
208772    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
208773    +
208774    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
208775    +
208776    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
208777    +
208778    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
208779    +
208780    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
208781    +
208782    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
208783    +
208784    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
208785    +
208786    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
208787    +
208788    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
208789    +
208790    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
208791    +
208792    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
208793    +
208794    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
208795    +
208796    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
208797    +
208798    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
208799    +
208800    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
208801    +
208802    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
208803    +
208804    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
208805    +
208806    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
208807    +
208808    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
208809    +
208810    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
208811    +
208812    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
208813    +
208814    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
208815    +
208816    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
208817    +
208818    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
208819    +
208820    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
208821    +
208822    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
208823    +
208824    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
208825    +
208826    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
208827    +
208828    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
208829    +
208830    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
208831    +
208832    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
208833    +
208834    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
208835    +
208836    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
208837    +
208838    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
208839    +
208840    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
208841    +
208842    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
208843    +
208844    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
208845    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
208846    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
208847    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
208848    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208849    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208850    +end;
MPRINT(EM_DIAGRAM):   end;
208851    +else do;
MPRINT(EM_DIAGRAM):   else do;
208852    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208853    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
208854    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208855    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208856    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
208857    +   end;
MPRINT(EM_DIAGRAM):   end;
208858    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208859    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
208860    +   end;
MPRINT(EM_DIAGRAM):   end;
208861    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208862    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
208863    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208864    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208865    +   end;
MPRINT(EM_DIAGRAM):   end;
208866    +end;
MPRINT(EM_DIAGRAM):   end;
208867    +
208868    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
208869    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
208870    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
208871    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
208872    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208873    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208874    +end;
MPRINT(EM_DIAGRAM):   end;
208875    +else do;
MPRINT(EM_DIAGRAM):   else do;
208876    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208877    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
208878    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208879    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208880    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
208881    +   end;
MPRINT(EM_DIAGRAM):   end;
208882    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208883    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
208884    +   end;
MPRINT(EM_DIAGRAM):   end;
208885    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208886    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
208887    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208888    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208889    +   end;
MPRINT(EM_DIAGRAM):   end;
208890    +end;
MPRINT(EM_DIAGRAM):   end;
208891    +
208892    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
208893    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
208894    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
208895    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
208896    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208897    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208898    +end;
MPRINT(EM_DIAGRAM):   end;
208899    +else do;
MPRINT(EM_DIAGRAM):   else do;
208900    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208901    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
208902    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208903    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208904    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
208905    +   end;
MPRINT(EM_DIAGRAM):   end;
208906    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208907    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
208908    +   end;
MPRINT(EM_DIAGRAM):   end;
208909    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208910    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
208911    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208912    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208913    +   end;
MPRINT(EM_DIAGRAM):   end;
208914    +end;
MPRINT(EM_DIAGRAM):   end;
208915    +
208916    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
208917    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
208918    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
208919    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
208920    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208921    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208922    +end;
MPRINT(EM_DIAGRAM):   end;
208923    +else do;
MPRINT(EM_DIAGRAM):   else do;
208924    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208925    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
208926    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208927    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208928    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
208929    +   end;
MPRINT(EM_DIAGRAM):   end;
208930    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208931    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
208932    +   end;
MPRINT(EM_DIAGRAM):   end;
208933    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208934    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
208935    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208936    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208937    +   end;
MPRINT(EM_DIAGRAM):   end;
208938    +end;
MPRINT(EM_DIAGRAM):   end;
208939    +
208940    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
208941    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
208942    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
208943    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
208944    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208945    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208946    +end;
MPRINT(EM_DIAGRAM):   end;
208947    +else do;
MPRINT(EM_DIAGRAM):   else do;
208948    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208949    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
208950    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208951    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208952    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
208953    +   end;
MPRINT(EM_DIAGRAM):   end;
208954    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208955    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
208956    +   end;
MPRINT(EM_DIAGRAM):   end;
208957    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208958    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
208959    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208960    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208961    +   end;
MPRINT(EM_DIAGRAM):   end;
208962    +end;
MPRINT(EM_DIAGRAM):   end;
208963    +
208964    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
208965    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
208966    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
208967    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
208968    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208969    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208970    +end;
MPRINT(EM_DIAGRAM):   end;
208971    +else do;
MPRINT(EM_DIAGRAM):   else do;
208972    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208973    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
208974    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208975    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
208976    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
208977    +   end;
MPRINT(EM_DIAGRAM):   end;
208978    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
208979    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
208980    +   end;
MPRINT(EM_DIAGRAM):   end;
208981    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208982    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
208983    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208984    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208985    +   end;
MPRINT(EM_DIAGRAM):   end;
208986    +end;
MPRINT(EM_DIAGRAM):   end;
208987    +
208988    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
208989    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
208990    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
208991    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
208992    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
208993    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
208994    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
208995    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
208996    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
208997    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
208998    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
208999    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
209000    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209002    +end;
MPRINT(EM_DIAGRAM):   end;
209003    +else do;
MPRINT(EM_DIAGRAM):   else do;
209004    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
209005    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
209006    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209007    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
209008    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
209009    +   end;
MPRINT(EM_DIAGRAM):   end;
209010    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
209011    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
209012    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
209013    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
209014    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
209015    +   end;
MPRINT(EM_DIAGRAM):   end;
209016    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
209017    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
209018    +   end;
MPRINT(EM_DIAGRAM):   end;
209019    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
209020    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
209021    +   end;
MPRINT(EM_DIAGRAM):   end;
209022    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
209023    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
209024    +   end;
MPRINT(EM_DIAGRAM):   end;
209025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209026    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
209027    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
209028    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
209029    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
209030    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209031    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209032    +   end;
MPRINT(EM_DIAGRAM):   end;
209033    +end;
MPRINT(EM_DIAGRAM):   end;
209034    +
209035    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
209036    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
209037    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
209038    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
209039    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
209040    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
209041    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
209042    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
209043    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
209044    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
209045    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
209046    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
209047    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
209048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209050    +end;
MPRINT(EM_DIAGRAM):   end;
209051    +else do;
MPRINT(EM_DIAGRAM):   else do;
209052    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
209053    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
209054    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209055    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
209056    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
209057    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
209058    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
209059    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
209060    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209061    +         end;
MPRINT(EM_DIAGRAM):   end;
209062    +         else do;
MPRINT(EM_DIAGRAM):   else do;
209063    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
209064    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
209065    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209066    +            end;
MPRINT(EM_DIAGRAM):   end;
209067    +         end;
MPRINT(EM_DIAGRAM):   end;
209068    +      end;
MPRINT(EM_DIAGRAM):   end;
209069    +      else do;
MPRINT(EM_DIAGRAM):   else do;
209070    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
209071    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
209072    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209073    +         end;
MPRINT(EM_DIAGRAM):   end;
209074    +      end;
MPRINT(EM_DIAGRAM):   end;
209075    +   end;
MPRINT(EM_DIAGRAM):   end;
209076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209077    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
209078    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
209079    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209080    +      end;
MPRINT(EM_DIAGRAM):   end;
209081    +      else do;
MPRINT(EM_DIAGRAM):   else do;
209082    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
209083    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
209084    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
209085    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
209086    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
209087    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209088    +         end;
MPRINT(EM_DIAGRAM):   end;
209089    +      end;
MPRINT(EM_DIAGRAM):   end;
209090    +   end;
MPRINT(EM_DIAGRAM):   end;
209091    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
209092    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
209093    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
209094    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
209095    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
209096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209098    +   end;
MPRINT(EM_DIAGRAM):   end;
209099    +end;
MPRINT(EM_DIAGRAM):   end;
209100    +
209101    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209102    +*** Checking missing input Interval
209103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
209104    +
209105    +IF NMISS(
209106    +   Income ,
209107    +   Kidhome ,
209108    +   MntFishProducts ,
209109    +   MntFruits ,
209110    +   MntGoldProds ,
209111    +   MntMeatProducts ,
209112    +   MntSweetProducts ,
209113    +   MntWines ,
209114    +   NumCatalogPurchases ,
209115    +   NumDealsPurchases ,
209116    +   NumStorePurchases ,
209117    +   NumWebPurchases ,
209118    +   NumWebVisitsMonth ,
209119    +   Recency ,
209120    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
209121    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
209122    +
209123    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209124    +END;
MPRINT(EM_DIAGRAM):   END;
209125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209126    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
209127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209128    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
209129    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
209130    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
209131    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
209132    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
209133    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
209134    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
209135    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
209136    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
209137    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
209138    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
209139    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
209140    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
209141    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
209142    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
209143    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
209144    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
209145    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
209146    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
209147    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
209148    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
209149    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
209150    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
209151    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
209152    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
209153    +END;
MPRINT(EM_DIAGRAM):   END;
209154    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
209155    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
209156    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
209157    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
209158    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
209159    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
209160    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
209161    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
209162    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
209163    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
209164    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
209165    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
209166    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
209167    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
209168    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
209169    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
209170    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
209171    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
209172    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
209173    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
209174    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
209175    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
209176    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
209177    +   ELSE S_NumCatalogPurchases
209178    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
209179    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
209180    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
209181    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
209182    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
209183    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
209184    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
209185    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
209186    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
209187    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
209188    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
209189    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
209190    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
209191    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
209192    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
209193    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
209194    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
209195    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
209196    +END;
MPRINT(EM_DIAGRAM):   END;
209197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209198    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
209199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209201    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
209202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209204    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
209205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209206    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
209207    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
209208    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
209209    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
209210    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
209211    +          +     0.13203247258141 * S_MntSweetProducts
209212    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
209213    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
209214    +          +     1.48881174203434 * S_NumStorePurchases
209215    +          +     2.06403591844726 * S_NumWebPurchases
209216    +          +    -0.09535558759694 * S_NumWebVisitsMonth
209217    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
209218    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
209219    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
209220    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
209221    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
209222    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
209223    +          +      0.3852767951223 * S_MntSweetProducts
209224    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
209225    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
209226    +          +     0.87686526091024 * S_NumStorePurchases
209227    +          +     0.48807967312664 * S_NumWebPurchases
209228    +          +     2.42770807785792 * S_NumWebVisitsMonth
209229    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
209230    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
209231    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
209232    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
209233    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
209234    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
209235    +          +      0.4461192743946 * S_MntSweetProducts
209236    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
209237    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
209238    +          +     1.26831094932108 * S_NumStorePurchases
209239    +          +     0.50819627174451 * S_NumWebPurchases
209240    +          +      0.5463426309003 * S_NumWebVisitsMonth
209241    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
209242    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
209243    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
209244    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
209245    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
209246    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
209247    +          +     0.73630834236265 * S_MntSweetProducts
209248    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
209249    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
209250    +          +     2.08815797619397 * S_NumStorePurchases
209251    +          +     1.47250122683369 * S_NumWebPurchases
209252    +          +    -1.95745344341946 * S_NumWebVisitsMonth
209253    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
209254    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
209255    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
209256    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
209257    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
209258    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
209259    +          +    -0.23438993753342 * S_MntSweetProducts
209260    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
209261    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
209262    +          +    -0.49697408067153 * S_NumStorePurchases
209263    +          +     0.41091736049576 * S_NumWebPurchases
209264    +          +     1.61180593172142 * S_NumWebVisitsMonth
209265    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
209266    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
209267    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
209268    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
209269    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
209270    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
209271    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
209272    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
209273    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
209274    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
209275    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
209276    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
209277    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
209278    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
209279    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
209280    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
209281    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
209282    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
209283    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
209284    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
209285    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
209286    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
209287    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
209288    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
209289    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
209290    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
209291    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
209292    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
209293    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
209294    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
209295    +          +    -0.14951932081311 * Marital_StatusDivorced
209296    +          +     0.08343648358981 * Marital_StatusMarried
209297    +          +    -0.52143432598374 * Marital_StatusSingle
209298    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
209299    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
209300    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
209301    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
209302    +          +    -0.34495973695408 * Marital_StatusDivorced
209303    +          +    -0.30910829853532 * Marital_StatusMarried
209304    +          +     0.14431404541055 * Marital_StatusSingle
209305    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
209306    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
209307    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
209308    +        EducationGraduation  +     0.05582780345024 * EducationMaster
209309    +          +     0.81191732290197 * Marital_StatusDivorced
209310    +          +    -2.53108753227171 * Marital_StatusMarried
209311    +          +     2.21769123178832 * Marital_StatusSingle
209312    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
209313    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
209314    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
209315    +        EducationGraduation  +     0.52527957409681 * EducationMaster
209316    +          +    -1.26246836163545 * Marital_StatusDivorced
209317    +          +     0.73147045162506 * Marital_StatusMarried
209318    +          +     0.04252836823306 * Marital_StatusSingle
209319    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
209320    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
209321    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
209322    +        EducationGraduation  +      0.0979905405754 * EducationMaster
209323    +          +    -0.25571808514992 * Marital_StatusDivorced
209324    +          +     0.20684027342845 * Marital_StatusMarried
209325    +          +    -0.36983627747986 * Marital_StatusSingle
209326    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
209327    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
209328    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
209329    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
209330    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
209331    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
209332    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
209333    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
209334    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
209335    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
209336    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
209337    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
209338    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
209339    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
209340    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
209341    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
209342    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
209343    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
209344    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
209345    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
209346    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
209347    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
209348    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
209349    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
209350    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
209351    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
209352    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
209353    +END;
MPRINT(EM_DIAGRAM):   END;
209354    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
209355    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
209356    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
209357    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
209358    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
209359    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
209360    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
209361    +END;
MPRINT(EM_DIAGRAM):   END;
209362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209363    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
209364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209365    +
209366    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
209367    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
209368    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
209369    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
209370    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
209371    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209372    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
209373    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
209374    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
209375    +end;
MPRINT(EM_DIAGRAM):   end;
209376    +else do;
MPRINT(EM_DIAGRAM):   else do;
209377    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
209378    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
209379    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
209380    +   end;
MPRINT(EM_DIAGRAM):   end;
209381    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
209382    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
209383    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
209384    +   end;
MPRINT(EM_DIAGRAM):   end;
209385    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209386    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
209387    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
209388    +   end;
MPRINT(EM_DIAGRAM):   end;
209389    +end;
MPRINT(EM_DIAGRAM):   end;
209390    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
209391    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
209392    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
209393    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
209394    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
209395    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
209396    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
209397    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
209398    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
209399    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
209400    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
209401    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
209402    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
209403    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
209404    +END;
MPRINT(EM_DIAGRAM):   END;
209405    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
209406    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
209407    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
209408    +END;
MPRINT(EM_DIAGRAM):   END;
209409    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
209410    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
209411    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
209412    +END;
MPRINT(EM_DIAGRAM):   END;
209413    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
209414    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
209415    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
209416    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
209417    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
209418    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
209419    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
209420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209421    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
209422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209423    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
209424    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
209425    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
209426    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
209427    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
209428    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
209429    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
209430    +END;
MPRINT(EM_DIAGRAM):   END;
209431    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
209432    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
209433    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
209434    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
209435    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
209436    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209437    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
209438    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209439    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
209440    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
209441    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
209442    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
209443    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209444    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
209445    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209446    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
209447    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
209448    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
209449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209450    +* Ensmbl58: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 4 of 7;
209451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209452    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209453    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
209454    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
209455    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
209456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209457    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
209458    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
209459    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
209460    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
209461    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
209462    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
209463    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
209464    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
209465    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
209466    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
209467    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
209468    +LENGTH _WARN_ $4
209469    +      F_DepVar  $ 12
209470    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
209471    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
209472    +
209473    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
209474    +
209475    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
209476    +
209477    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
209478    +
209479    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
209480    +
209481    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
209482    +
209483    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
209484    +
209485    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
209486    +
209487    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
209488    +
209489    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
209490    +
209491    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
209492    +
209493    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
209494    +
209495    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
209496    +
209497    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
209498    +
209499    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
209500    +
209501    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
209502    +
209503    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
209504    +
209505    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
209506    +
209507    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
209508    +
209509    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
209510    +
209511    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
209512    +
209513    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
209514    +
209515    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
209516    +
209517    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
209518    +
209519    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
209520    +
209521    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
209522    +
209523    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
209524    +
209525    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
209526    +
209527    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
209528    +
209529    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
209530    +
209531    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
209532    +
209533    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
209534    +
209535    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
209536    +
209537    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
209538    +
209539    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
209540    +
209541    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
209542    +
209543    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
209544    +
209545    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
209546    +
209547    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
209548    +
209549    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
209550    +
209551    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
209552    +
209553    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
209554    +
209555    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
209556    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
209557    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
209558    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
209559    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209560    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209561    +end;
MPRINT(EM_DIAGRAM):   end;
209562    +else do;
MPRINT(EM_DIAGRAM):   else do;
209563    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209564    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
209565    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209566    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
209567    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
209568    +   end;
MPRINT(EM_DIAGRAM):   end;
209569    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
209570    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
209571    +   end;
MPRINT(EM_DIAGRAM):   end;
209572    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209573    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
209574    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209575    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209576    +   end;
MPRINT(EM_DIAGRAM):   end;
209577    +end;
MPRINT(EM_DIAGRAM):   end;
209578    +
209579    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
209580    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
209581    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
209582    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
209583    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209584    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209585    +end;
MPRINT(EM_DIAGRAM):   end;
209586    +else do;
MPRINT(EM_DIAGRAM):   else do;
209587    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209588    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
209589    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209590    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
209591    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
209592    +   end;
MPRINT(EM_DIAGRAM):   end;
209593    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
209594    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
209595    +   end;
MPRINT(EM_DIAGRAM):   end;
209596    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209597    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
209598    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209599    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209600    +   end;
MPRINT(EM_DIAGRAM):   end;
209601    +end;
MPRINT(EM_DIAGRAM):   end;
209602    +
209603    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
209604    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
209605    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
209606    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
209607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209609    +end;
MPRINT(EM_DIAGRAM):   end;
209610    +else do;
MPRINT(EM_DIAGRAM):   else do;
209611    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209612    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
209613    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209614    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
209615    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
209616    +   end;
MPRINT(EM_DIAGRAM):   end;
209617    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
209618    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
209619    +   end;
MPRINT(EM_DIAGRAM):   end;
209620    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209621    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
209622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209624    +   end;
MPRINT(EM_DIAGRAM):   end;
209625    +end;
MPRINT(EM_DIAGRAM):   end;
209626    +
209627    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
209628    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
209629    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
209630    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
209631    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209632    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209633    +end;
MPRINT(EM_DIAGRAM):   end;
209634    +else do;
MPRINT(EM_DIAGRAM):   else do;
209635    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209636    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
209637    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209638    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
209639    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
209640    +   end;
MPRINT(EM_DIAGRAM):   end;
209641    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
209642    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
209643    +   end;
MPRINT(EM_DIAGRAM):   end;
209644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209645    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
209646    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209647    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209648    +   end;
MPRINT(EM_DIAGRAM):   end;
209649    +end;
MPRINT(EM_DIAGRAM):   end;
209650    +
209651    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
209652    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
209653    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
209654    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
209655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209657    +end;
MPRINT(EM_DIAGRAM):   end;
209658    +else do;
MPRINT(EM_DIAGRAM):   else do;
209659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209660    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
209661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209662    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
209663    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
209664    +   end;
MPRINT(EM_DIAGRAM):   end;
209665    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
209666    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
209667    +   end;
MPRINT(EM_DIAGRAM):   end;
209668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209669    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
209670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209672    +   end;
MPRINT(EM_DIAGRAM):   end;
209673    +end;
MPRINT(EM_DIAGRAM):   end;
209674    +
209675    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
209676    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
209677    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
209678    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
209679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209681    +end;
MPRINT(EM_DIAGRAM):   end;
209682    +else do;
MPRINT(EM_DIAGRAM):   else do;
209683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209684    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
209685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209686    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
209687    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
209688    +   end;
MPRINT(EM_DIAGRAM):   end;
209689    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
209690    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
209691    +   end;
MPRINT(EM_DIAGRAM):   end;
209692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209693    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
209694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209696    +   end;
MPRINT(EM_DIAGRAM):   end;
209697    +end;
MPRINT(EM_DIAGRAM):   end;
209698    +
209699    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
209700    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
209701    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
209702    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
209703    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
209704    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
209705    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
209706    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
209707    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
209708    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
209709    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
209710    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
209711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209713    +end;
MPRINT(EM_DIAGRAM):   end;
209714    +else do;
MPRINT(EM_DIAGRAM):   else do;
209715    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
209716    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
209717    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209718    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
209719    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
209720    +   end;
MPRINT(EM_DIAGRAM):   end;
209721    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
209722    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
209723    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
209724    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
209725    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
209726    +   end;
MPRINT(EM_DIAGRAM):   end;
209727    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
209728    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
209729    +   end;
MPRINT(EM_DIAGRAM):   end;
209730    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
209731    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
209732    +   end;
MPRINT(EM_DIAGRAM):   end;
209733    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
209734    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
209735    +   end;
MPRINT(EM_DIAGRAM):   end;
209736    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209737    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
209738    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
209739    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
209740    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
209741    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209742    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209743    +   end;
MPRINT(EM_DIAGRAM):   end;
209744    +end;
MPRINT(EM_DIAGRAM):   end;
209745    +
209746    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
209747    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
209748    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
209749    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
209750    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
209751    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
209752    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
209753    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
209754    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
209755    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
209756    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
209757    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
209758    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
209759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209761    +end;
MPRINT(EM_DIAGRAM):   end;
209762    +else do;
MPRINT(EM_DIAGRAM):   else do;
209763    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
209764    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
209765    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209766    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
209767    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
209768    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
209769    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
209770    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
209771    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209772    +         end;
MPRINT(EM_DIAGRAM):   end;
209773    +         else do;
MPRINT(EM_DIAGRAM):   else do;
209774    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
209775    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
209776    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209777    +            end;
MPRINT(EM_DIAGRAM):   end;
209778    +         end;
MPRINT(EM_DIAGRAM):   end;
209779    +      end;
MPRINT(EM_DIAGRAM):   end;
209780    +      else do;
MPRINT(EM_DIAGRAM):   else do;
209781    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
209782    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
209783    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209784    +         end;
MPRINT(EM_DIAGRAM):   end;
209785    +      end;
MPRINT(EM_DIAGRAM):   end;
209786    +   end;
MPRINT(EM_DIAGRAM):   end;
209787    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209788    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
209789    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
209790    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209791    +      end;
MPRINT(EM_DIAGRAM):   end;
209792    +      else do;
MPRINT(EM_DIAGRAM):   else do;
209793    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
209794    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
209795    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
209796    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
209797    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
209798    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
209799    +         end;
MPRINT(EM_DIAGRAM):   end;
209800    +      end;
MPRINT(EM_DIAGRAM):   end;
209801    +   end;
MPRINT(EM_DIAGRAM):   end;
209802    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
209803    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
209804    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
209805    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
209806    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
209807    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209808    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209809    +   end;
MPRINT(EM_DIAGRAM):   end;
209810    +end;
MPRINT(EM_DIAGRAM):   end;
209811    +
209812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209813    +*** Checking missing input Interval
209814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
209815    +
209816    +IF NMISS(
209817    +   Income ,
209818    +   Kidhome ,
209819    +   MntFishProducts ,
209820    +   MntFruits ,
209821    +   MntGoldProds ,
209822    +   MntMeatProducts ,
209823    +   MntSweetProducts ,
209824    +   MntWines ,
209825    +   NumCatalogPurchases ,
209826    +   NumDealsPurchases ,
209827    +   NumStorePurchases ,
209828    +   NumWebPurchases ,
209829    +   NumWebVisitsMonth ,
209830    +   Recency ,
209831    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
209832    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
209833    +
209834    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209835    +END;
MPRINT(EM_DIAGRAM):   END;
209836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209837    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
209838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209839    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
209840    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
209841    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
209842    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
209843    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
209844    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
209845    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
209846    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
209847    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
209848    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
209849    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
209850    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
209851    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
209852    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
209853    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
209854    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
209855    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
209856    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
209857    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
209858    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
209859    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
209860    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
209861    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
209862    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
209863    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
209864    +END;
MPRINT(EM_DIAGRAM):   END;
209865    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
209866    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
209867    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
209868    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
209869    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
209870    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
209871    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
209872    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
209873    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
209874    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
209875    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
209876    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
209877    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
209878    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
209879    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
209880    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
209881    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
209882    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
209883    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
209884    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
209885    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
209886    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
209887    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
209888    +   ELSE S_NumCatalogPurchases
209889    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
209890    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
209891    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
209892    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
209893    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
209894    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
209895    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
209896    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
209897    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
209898    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
209899    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
209900    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
209901    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
209902    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
209903    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
209904    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
209905    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
209906    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
209907    +END;
MPRINT(EM_DIAGRAM):   END;
209908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209909    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
209910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209912    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
209913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209915    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
209916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209917    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
209918    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
209919    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
209920    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
209921    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
209922    +          +     -0.2030617183738 * S_MntSweetProducts
209923    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
209924    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
209925    +          +    -2.67074303965293 * S_NumStorePurchases
209926    +          +    -0.84694619593676 * S_NumWebPurchases
209927    +          +     1.78464945757548 * S_NumWebVisitsMonth
209928    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
209929    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome +
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 *
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts +
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 *
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 *
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency +
0.12484193160086 * S_Teenhome ;
209930    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
209931    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
209932    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
209933    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
209934    +          +    -0.48853587268985 * S_MntSweetProducts
209935    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
209936    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
209937    +          +    -1.10593499185395 * S_NumStorePurchases
209938    +          +     -1.3003228821842 * S_NumWebPurchases
209939    +          +     2.87047131261901 * S_NumWebVisitsMonth
209940    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
209941    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome +
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 *
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 *
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 *
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency +
-1.2351049603093 * S_Teenhome ;
209942    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
209943    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
209944    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
209945    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
209946    +          +    -0.27795094909244 * S_MntSweetProducts
209947    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
209948    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
209949    +          +    -0.41332499072246 * S_NumStorePurchases
209950    +          +     0.76626053410817 * S_NumWebPurchases
209951    +          +     0.81795211037296 * S_NumWebVisitsMonth
209952    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
209953    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome +
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 *
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 *
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases +
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth +
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
209954    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
209955    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
209956    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
209957    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
209958    +          +    -0.08285620819867 * S_MntSweetProducts
209959    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
209960    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
209961    +          +    -0.17691098721908 * S_NumStorePurchases
209962    +          +     0.46246892093576 * S_NumWebPurchases
209963    +          +     2.06272832836908 * S_NumWebVisitsMonth
209964    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
209965    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome +
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 *
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases +
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases +
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth +
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
209966    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
209967    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
209968    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
209969    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
209970    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 +
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
209971    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
209972    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
209973    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
209974    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
209975    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 +
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
209976    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
209977    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
209978    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
209979    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
209980    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 *
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 +
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
209981    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
209982    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
209983    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
209984    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
209985    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 *
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 +
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
209986    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
209987    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
209988    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
209989    +          +     1.59526812226707 * Marital_StatusDivorced
209990    +          +    -0.74331656724296 * Marital_StatusMarried
209991    +          +     0.74316614019998 * Marital_StatusSingle
209992    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle +
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation +
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced +
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle +
-1.36761487171479 * Marital_StatusTogether ;
209993    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
209994    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
209995    +        EducationGraduation  +     0.07596142730184 * EducationMaster
209996    +          +     0.94291322065497 * Marital_StatusDivorced
209997    +          +    -1.64331597630127 * Marital_StatusMarried
209998    +          +     2.21526196736604 * Marital_StatusSingle
209999    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle +
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 *
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 *
Marital_StatusTogether ;
210000    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
210001    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
210002    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
210003    +          +     1.63906979191221 * Marital_StatusDivorced
210004    +          +    -1.00497354965718 * Marital_StatusMarried
210005    +          +     0.70485207953497 * Marital_StatusSingle
210006    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle +
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation +
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced +
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle +
-1.55917756143873 * Marital_StatusTogether ;
210007    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
210008    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
210009    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
210010    +          +     0.75038128420756 * Marital_StatusDivorced
210011    +          +    -1.93055855198469 * Marital_StatusMarried
210012    +          +     0.73816798380254 * Marital_StatusSingle
210013    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle +
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 *
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 *
Marital_StatusTogether ;
210014    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
210015    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
210016    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
210017    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
210018    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
210019    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
210020    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
210021    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
210022    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
210023    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
210024    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
210025    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
210026    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
210027    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
210028    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
210029    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
210030    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
210031    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
210032    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
210033    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
210034    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
210035    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
210036    +END;
MPRINT(EM_DIAGRAM):   END;
210037    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210038    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
210039    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
210040    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
210041    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
210042    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
210043    +END;
MPRINT(EM_DIAGRAM):   END;
210044    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210045    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
210046    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210047    +
210048    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
210049    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
210050    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
210051    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
210052    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
210053    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210054    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
210055    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
210056    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
210057    +end;
MPRINT(EM_DIAGRAM):   end;
210058    +else do;
MPRINT(EM_DIAGRAM):   else do;
210059    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
210060    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
210061    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
210062    +   end;
MPRINT(EM_DIAGRAM):   end;
210063    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
210064    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
210065    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
210066    +   end;
MPRINT(EM_DIAGRAM):   end;
210067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210068    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
210069    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
210070    +   end;
MPRINT(EM_DIAGRAM):   end;
210071    +end;
MPRINT(EM_DIAGRAM):   end;
210072    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210073    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
210074    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
210075    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 +
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
210076    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
210077    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
210078    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
210079    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
210080    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
210081    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
210082    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
210083    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
210084    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
210085    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
210086    +END;
MPRINT(EM_DIAGRAM):   END;
210087    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210088    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
210089    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
210090    +END;
MPRINT(EM_DIAGRAM):   END;
210091    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
210092    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
210093    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
210094    +END;
MPRINT(EM_DIAGRAM):   END;
210095    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
210096    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
210097    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
210098    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
210099    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
210100    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
210101    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
210102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210103    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
210104    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210105    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
210106    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
210107    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
210108    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
210109    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
210110    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
210111    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
210112    +END;
MPRINT(EM_DIAGRAM):   END;
210113    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
210114    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
210115    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
210116    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
210117    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
210118    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210119    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
210120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210121    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
210122    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
210123    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
210124    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
210125    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210126    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
210127    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210128    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
210129    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
210130    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
210131    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210132    +* Ensmbl58: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 5 of 7;
210133    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210134    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210135    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
210136    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
210137    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
210138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210139    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
210140    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
210141    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
210142    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
210143    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
210144    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
210145    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
210146    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
210147    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
210148    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
210149    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
210150    +LENGTH _WARN_ $4
210151    +      F_DepVar  $ 12
210152    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
210153    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
210154    +
210155    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
210156    +
210157    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
210158    +
210159    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
210160    +
210161    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
210162    +
210163    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
210164    +
210165    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
210166    +
210167    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
210168    +
210169    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
210170    +
210171    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
210172    +
210173    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
210174    +
210175    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
210176    +
210177    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
210178    +
210179    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
210180    +
210181    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
210182    +
210183    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
210184    +
210185    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
210186    +
210187    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
210188    +
210189    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
210190    +
210191    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
210192    +
210193    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
210194    +
210195    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
210196    +
210197    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
210198    +
210199    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
210200    +
210201    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
210202    +
210203    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
210204    +
210205    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
210206    +
210207    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
210208    +
210209    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
210210    +
210211    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
210212    +
210213    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
210214    +
210215    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
210216    +
210217    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
210218    +
210219    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
210220    +
210221    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
210222    +
210223    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
210224    +
210225    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
210226    +
210227    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
210228    +
210229    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
210230    +
210231    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
210232    +
210233    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
210234    +
210235    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
210236    +
210237    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
210238    +
210239    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
210240    +
210241    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
210242    +
210243    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
210244    +
210245    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
210246    +
210247    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
210248    +
210249    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
210250    +
210251    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
210252    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
210253    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
210254    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
210255    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210256    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210257    +end;
MPRINT(EM_DIAGRAM):   end;
210258    +else do;
MPRINT(EM_DIAGRAM):   else do;
210259    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210260    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
210261    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210262    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
210263    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
210264    +   end;
MPRINT(EM_DIAGRAM):   end;
210265    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
210266    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
210267    +   end;
MPRINT(EM_DIAGRAM):   end;
210268    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210269    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
210270    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210271    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210272    +   end;
MPRINT(EM_DIAGRAM):   end;
210273    +end;
MPRINT(EM_DIAGRAM):   end;
210274    +
210275    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
210276    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
210277    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
210278    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
210279    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210280    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210281    +end;
MPRINT(EM_DIAGRAM):   end;
210282    +else do;
MPRINT(EM_DIAGRAM):   else do;
210283    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210284    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
210285    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210286    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
210287    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
210288    +   end;
MPRINT(EM_DIAGRAM):   end;
210289    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
210290    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
210291    +   end;
MPRINT(EM_DIAGRAM):   end;
210292    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210293    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
210294    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210295    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210296    +   end;
MPRINT(EM_DIAGRAM):   end;
210297    +end;
MPRINT(EM_DIAGRAM):   end;
210298    +
210299    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
210300    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
210301    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
210302    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
210303    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210304    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210305    +end;
MPRINT(EM_DIAGRAM):   end;
210306    +else do;
MPRINT(EM_DIAGRAM):   else do;
210307    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210308    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
210309    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210310    +   if _dm12 = '0'  then do;
The SAS System
 
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
210311    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
210312    +   end;
MPRINT(EM_DIAGRAM):   end;
210313    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
210314    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
210315    +   end;
MPRINT(EM_DIAGRAM):   end;
210316    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210317    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
210318    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210319    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210320    +   end;
MPRINT(EM_DIAGRAM):   end;
210321    +end;
MPRINT(EM_DIAGRAM):   end;
210322    +
210323    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
210324    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
210325    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
210326    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
210327    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210328    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210329    +end;
MPRINT(EM_DIAGRAM):   end;
210330    +else do;
MPRINT(EM_DIAGRAM):   else do;
210331    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210332    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
210333    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210334    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
210335    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
210336    +   end;
MPRINT(EM_DIAGRAM):   end;
210337    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
210338    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
210339    +   end;
MPRINT(EM_DIAGRAM):   end;
210340    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210341    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
210342    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210343    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210344    +   end;
MPRINT(EM_DIAGRAM):   end;
210345    +end;
MPRINT(EM_DIAGRAM):   end;
210346    +
210347    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
210348    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
210349    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
210350    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
210351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210353    +end;
MPRINT(EM_DIAGRAM):   end;
210354    +else do;
MPRINT(EM_DIAGRAM):   else do;
210355    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210356    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
210357    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210358    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
210359    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
210360    +   end;
MPRINT(EM_DIAGRAM):   end;
210361    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
210362    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
210363    +   end;
MPRINT(EM_DIAGRAM):   end;
210364    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210365    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
210366    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210367    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210368    +   end;
MPRINT(EM_DIAGRAM):   end;
210369    +end;
MPRINT(EM_DIAGRAM):   end;
210370    +
210371    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
210372    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
210373    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
210374    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
210375    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210376    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210377    +end;
MPRINT(EM_DIAGRAM):   end;
210378    +else do;
MPRINT(EM_DIAGRAM):   else do;
210379    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210380    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
210381    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210382    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
210383    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
210384    +   end;
MPRINT(EM_DIAGRAM):   end;
210385    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
210386    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
210387    +   end;
MPRINT(EM_DIAGRAM):   end;
210388    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210389    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
210390    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210391    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210392    +   end;
MPRINT(EM_DIAGRAM):   end;
210393    +end;
MPRINT(EM_DIAGRAM):   end;
210394    +
210395    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
210396    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
210397    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
210398    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
210399    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
210400    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
210401    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
210402    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
210403    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
210404    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
210405    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
210406    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
210407    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210408    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210409    +end;
MPRINT(EM_DIAGRAM):   end;
210410    +else do;
MPRINT(EM_DIAGRAM):   else do;
210411    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
210412    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
210413    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210414    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
210415    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
210416    +   end;
MPRINT(EM_DIAGRAM):   end;
210417    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
210418    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
210419    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
210420    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
210421    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
210422    +   end;
MPRINT(EM_DIAGRAM):   end;
210423    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
210424    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
210425    +   end;
MPRINT(EM_DIAGRAM):   end;
210426    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
210427    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
210428    +   end;
MPRINT(EM_DIAGRAM):   end;
210429    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
210430    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
210431    +   end;
MPRINT(EM_DIAGRAM):   end;
210432    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210433    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
210434    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
210435    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
210436    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
210437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210439    +   end;
MPRINT(EM_DIAGRAM):   end;
210440    +end;
MPRINT(EM_DIAGRAM):   end;
210441    +
210442    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
210443    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
210444    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
210445    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
210446    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
210447    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
210448    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
210449    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
210450    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
210451    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
210452    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
210453    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
210454    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
210455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210457    +end;
MPRINT(EM_DIAGRAM):   end;
210458    +else do;
MPRINT(EM_DIAGRAM):   else do;
210459    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
210460    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
210461    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210462    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
210463    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
210464    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
210465    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
210466    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
210467    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
210468    +         end;
MPRINT(EM_DIAGRAM):   end;
210469    +         else do;
MPRINT(EM_DIAGRAM):   else do;
210470    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
210471    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
210472    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
210473    +            end;
MPRINT(EM_DIAGRAM):   end;
210474    +         end;
MPRINT(EM_DIAGRAM):   end;
210475    +      end;
MPRINT(EM_DIAGRAM):   end;
210476    +      else do;
MPRINT(EM_DIAGRAM):   else do;
210477    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
210478    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
210479    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
210480    +         end;
MPRINT(EM_DIAGRAM):   end;
210481    +      end;
MPRINT(EM_DIAGRAM):   end;
210482    +   end;
MPRINT(EM_DIAGRAM):   end;
210483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210484    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
210485    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
210486    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
210487    +      end;
MPRINT(EM_DIAGRAM):   end;
210488    +      else do;
MPRINT(EM_DIAGRAM):   else do;
210489    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
210490    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
210491    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
210492    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
210493    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
210494    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
210495    +         end;
MPRINT(EM_DIAGRAM):   end;
210496    +      end;
MPRINT(EM_DIAGRAM):   end;
210497    +   end;
MPRINT(EM_DIAGRAM):   end;
210498    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
210499    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
210500    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
210501    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
210502    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
210503    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210504    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210505    +   end;
MPRINT(EM_DIAGRAM):   end;
210506    +end;
MPRINT(EM_DIAGRAM):   end;
210507    +
210508    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210509    +*** Checking missing input Interval
210510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
210511    +
210512    +IF NMISS(
210513    +   Income ,
210514    +   Kidhome ,
210515    +   MntFishProducts ,
210516    +   MntFruits ,
210517    +   MntGoldProds ,
210518    +   MntMeatProducts ,
210519    +   MntSweetProducts ,
210520    +   MntWines ,
210521    +   NumCatalogPurchases ,
210522    +   NumDealsPurchases ,
210523    +   NumStorePurchases ,
210524    +   NumWebPurchases ,
210525    +   NumWebVisitsMonth ,
210526    +   Recency ,
210527    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
210528    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
210529    +
210530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210531    +END;
MPRINT(EM_DIAGRAM):   END;
210532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210533    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
210534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210535    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210536    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
210537    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
210538    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
210539    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
210540    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
210541    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
210542    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
210543    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
210544    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
210545    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
210546    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
210547    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
210548    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
210549    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
210550    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
210551    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
210552    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
210553    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
210554    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
210555    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
210556    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
210557    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
210558    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
210559    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
210560    +END;
MPRINT(EM_DIAGRAM):   END;
210561    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210562    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
210563    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
210564    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
210565    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
210566    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
210567    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
210568    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
210569    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
210570    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
210571    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
210572    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
210573    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
210574    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
210575    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
210576    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
210577    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
210578    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
210579    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
210580    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
210581    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
210582    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
210583    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
210584    +   ELSE S_NumCatalogPurchases
210585    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
210586    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
210587    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
210588    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
210589    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
210590    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
210591    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
210592    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
210593    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
210594    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
210595    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
210596    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
210597    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
210598    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
210599    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
210600    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
210601    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
210602    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
210603    +END;
MPRINT(EM_DIAGRAM):   END;
210604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210605    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
210606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210608    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
210609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210611    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
210612    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210613    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210614    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
210615    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
210616    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
210617    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
210618    +          +    -2.37073629008864 * S_MntSweetProducts
210619    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
210620    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
210621    +          +    -1.29021742502316 * S_NumStorePurchases
210622    +          +    -0.00949168969466 * S_NumWebPurchases
210623    +          +    -0.32248137192321 * S_NumWebVisitsMonth
210624    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
210625    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
210626    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
210627    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
210628    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
210629    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
210630    +          +     0.41126087093412 * S_MntSweetProducts
210631    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
210632    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
210633    +          +      0.2319226227964 * S_NumStorePurchases
210634    +          +     0.31190969795517 * S_NumWebPurchases
210635    +          +      -1.987305550542 * S_NumWebVisitsMonth
210636    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
210637    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
210638    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
210639    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
210640    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
210641    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
210642    +          +    -0.73991431726966 * S_MntSweetProducts
210643    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
210644    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
210645    +          +    -2.50826402419251 * S_NumStorePurchases
210646    +          +    -0.30764477738015 * S_NumWebPurchases
210647    +          +     1.21240794582671 * S_NumWebVisitsMonth
210648    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
210649    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
210650    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
210651    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
210652    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
210653    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
210654    +          +     1.07674028011002 * S_MntSweetProducts
210655    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
210656    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
210657    +          +    -0.47776935727231 * S_NumStorePurchases
210658    +          +     -0.5890810666834 * S_NumWebPurchases
210659    +          +      1.3845716796855 * S_NumWebVisitsMonth
210660    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
210661    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
210662    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
210663    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
210664    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
210665    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
210666    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
210667    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
210668    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
210669    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
210670    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
210671    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
210672    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
210673    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
210674    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
210675    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
210676    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
210677    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
210678    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
210679    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
210680    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
210681    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
210682    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
210683    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
210684    +        EducationGraduation  +     0.68592368666749 * EducationMaster
210685    +          +     0.38999748028122 * Marital_StatusDivorced
210686    +          +     0.44180844463279 * Marital_StatusMarried
210687    +          +     0.63824884669155 * Marital_StatusSingle
210688    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
210689    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
210690    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
210691    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
210692    +          +    -0.95537871859519 * Marital_StatusDivorced
210693    +          +     2.55061153921286 * Marital_StatusMarried
210694    +          +    -1.78007154396711 * Marital_StatusSingle
210695    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
210696    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
210697    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
210698    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
210699    +          +     1.29930912124343 * Marital_StatusDivorced
210700    +          +    -1.63037830924789 * Marital_StatusMarried
210701    +          +     0.19040732776086 * Marital_StatusSingle
210702    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
210703    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
210704    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
210705    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
210706    +          +     -0.3129003025095 * Marital_StatusDivorced
210707    +          +     0.00843550425239 * Marital_StatusMarried
210708    +          +    -0.20416436114776 * Marital_StatusSingle
210709    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
210710    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
210711    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
210712    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
210713    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
210714    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
210715    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
210716    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
210717    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
210718    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
210719    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
210720    +END;
MPRINT(EM_DIAGRAM):   END;
210721    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210722    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
210723    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
210724    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
210725    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
210726    +END;
MPRINT(EM_DIAGRAM):   END;
210727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210728    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
210729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210730    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210731    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
210732    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
210733    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
210734    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
210735    +          +    -0.90866858123806 * S_MntSweetProducts
210736    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
210737    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
210738    +          +     1.45805686107789 * S_NumStorePurchases
210739    +          +     1.48794767642409 * S_NumWebPurchases
210740    +          +    -1.24357395997191 * S_NumWebVisitsMonth
210741    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
210742    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
210743    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
210744    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
210745    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
210746    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
210747    +          +     1.05010358762976 * S_MntSweetProducts
210748    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
210749    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
210750    +          +    -2.04318529474165 * S_NumStorePurchases
210751    +          +     1.64478964728594 * S_NumWebPurchases
210752    +          +    -0.74790322980646 * S_NumWebVisitsMonth
210753    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
210754    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
210755    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
210756    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
210757    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
210758    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
210759    +          +     0.39974532423377 * S_MntSweetProducts
210760    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
210761    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
210762    +          +     0.70805557348415 * S_NumStorePurchases
210763    +          +     2.40362900277228 * S_NumWebPurchases
210764    +          +    -0.84521247676043 * S_NumWebVisitsMonth
210765    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
210766    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
210767    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
210768    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
210769    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
210770    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
210771    +          +     1.67907268159197 * S_MntSweetProducts
210772    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
210773    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
210774    +          +      0.0818178054474 * S_NumStorePurchases
210775    +          +     0.21533198164279 * S_NumWebPurchases
210776    +          +     2.13590425604302 * S_NumWebVisitsMonth
210777    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
210778    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
210779    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
210780    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
210781    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
210782    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
210783    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
210784    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
210785    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
210786    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
210787    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
210788    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
210789    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
210790    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
210791    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
210792    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
210793    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
210794    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
210795    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
210796    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
210797    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
210798    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
210799    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
210800    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
210801    +        EducationGraduation  +     0.78238700450794 * EducationMaster
210802    +          +     0.09735596304222 * Marital_StatusDivorced
210803    +          +    -0.41892050812825 * Marital_StatusMarried
210804    +          +    -1.42753782654911 * Marital_StatusSingle
210805    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
210806    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
210807    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
210808    +        EducationGraduation  +     1.03407121736627 * EducationMaster
210809    +          +    -0.32415267410507 * Marital_StatusDivorced
210810    +          +     0.49045578856782 * Marital_StatusMarried
210811    +          +    -1.95612005933176 * Marital_StatusSingle
210812    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
210813    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
210814    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
210815    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
210816    +          +    -1.25715350788627 * Marital_StatusDivorced
210817    +          +     0.74269511935299 * Marital_StatusMarried
210818    +          +    -0.27394822792771 * Marital_StatusSingle
210819    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
210820    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
210821    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
210822    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
210823    +          +    -1.42754006114782 * Marital_StatusDivorced
210824    +          +    -0.13979120103654 * Marital_StatusMarried
210825    +          +    -1.66244370644258 * Marital_StatusSingle
210826    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
210827    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
210828    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
210829    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
210830    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
210831    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
210832    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
210833    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
210834    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
210835    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
210836    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
210837    +END;
MPRINT(EM_DIAGRAM):   END;
210838    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210839    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
210840    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
210841    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
210842    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
210843    +END;
MPRINT(EM_DIAGRAM):   END;
210844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210845    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
210846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210847    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210848    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
210849    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
210850    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
210851    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
210852    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
210853    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
210854    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
210855    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
210856    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
210857    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
210858    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
210859    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
210860    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
210861    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
210862    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
210863    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
210864    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
210865    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
210866    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
210867    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
210868    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
210869    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
210870    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
210871    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
210872    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
210873    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
210874    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
210875    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
210876    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
210877    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
210878    +END;
MPRINT(EM_DIAGRAM):   END;
210879    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210880    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
210881    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
210882    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
210883    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
210884    +END;
MPRINT(EM_DIAGRAM):   END;
210885    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210886    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
210887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210888    +
210889    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
210890    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
210891    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
210892    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
210893    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
210894    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210895    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
210896    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
210897    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
210898    +end;
MPRINT(EM_DIAGRAM):   end;
210899    +else do;
MPRINT(EM_DIAGRAM):   else do;
210900    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
210901    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
210902    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
210903    +   end;
MPRINT(EM_DIAGRAM):   end;
210904    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
210905    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
210906    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
210907    +   end;
MPRINT(EM_DIAGRAM):   end;
210908    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210909    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
210910    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
210911    +   end;
MPRINT(EM_DIAGRAM):   end;
210912    +end;
MPRINT(EM_DIAGRAM):   end;
210913    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210914    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
210915    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
210916    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
210917    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
210918    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
210919    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
210920    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
210921    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
210922    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
210923    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
210924    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
210925    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
210926    +END;
MPRINT(EM_DIAGRAM):   END;
210927    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210928    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
210929    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
210930    +END;
MPRINT(EM_DIAGRAM):   END;
210931    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
210932    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
210933    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
210934    +END;
MPRINT(EM_DIAGRAM):   END;
210935    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
210936    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
210937    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
210938    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
210939    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
210940    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
210941    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
210942    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210943    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
210944    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210945    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
210946    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
210947    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
210948    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
210949    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
210950    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
210951    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
210952    +END;
MPRINT(EM_DIAGRAM):   END;
210953    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
210954    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
210955    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
210956    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
210957    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
210958    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210959    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
210960    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210961    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
210962    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
210963    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
210964    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
210965    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210966    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
210967    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210968    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
210969    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
210970    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
210971    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210972    +* Ensmbl58: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 6 of 7;
210973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210975    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
210976    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
210977    +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
210978    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210979    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
210980    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
210981    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
210982    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
210983    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
210984    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
210985    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
210986    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
210987    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
210988    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
210989    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
210990    +LENGTH _WARN_ $4
210991    +      F_DepVar  $ 12
210992    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
210993    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
210994    +
210995    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
210996    +
210997    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
210998    +
210999    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
211000    +
211001    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
211002    +
211003    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
211004    +
211005    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
211006    +
211007    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
211008    +
211009    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
211010    +
211011    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
211012    +
211013    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
211014    +
211015    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
211016    +
211017    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
211018    +
211019    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
211020    +
211021    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
211022    +
211023    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
211024    +
211025    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
211026    +
211027    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
211028    +
211029    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
211030    +
211031    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
211032    +
211033    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
211034    +
211035    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
211036    +
211037    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
211038    +
211039    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
211040    +
211041    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
211042    +
211043    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
211044    +
211045    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
211046    +
211047    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
211048    +
211049    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
211050    +
211051    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
211052    +
211053    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
211054    +
211055    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
211056    +
211057    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
211058    +
211059    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
211060    +
211061    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
211062    +
211063    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
211064    +
211065    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
211066    +
211067    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
211068    +
211069    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
211070    +
211071    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
211072    +
211073    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
211074    +
211075    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
211076    +
211077    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
211078    +
211079    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
211080    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
211081    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
211082    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
211083    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211084    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211085    +end;
MPRINT(EM_DIAGRAM):   end;
211086    +else do;
MPRINT(EM_DIAGRAM):   else do;
211087    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211088    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
211089    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211090    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211091    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
211092    +   end;
MPRINT(EM_DIAGRAM):   end;
211093    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211094    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
211095    +   end;
MPRINT(EM_DIAGRAM):   end;
211096    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211097    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
211098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211100    +   end;
MPRINT(EM_DIAGRAM):   end;
211101    +end;
MPRINT(EM_DIAGRAM):   end;
211102    +
211103    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
211104    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
211105    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
211106    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
211107    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211108    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211109    +end;
MPRINT(EM_DIAGRAM):   end;
211110    +else do;
MPRINT(EM_DIAGRAM):   else do;
211111    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211112    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
211113    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211114    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211115    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
211116    +   end;
MPRINT(EM_DIAGRAM):   end;
211117    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211118    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
211119    +   end;
MPRINT(EM_DIAGRAM):   end;
211120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211121    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
211122    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211123    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211124    +   end;
MPRINT(EM_DIAGRAM):   end;
211125    +end;
MPRINT(EM_DIAGRAM):   end;
211126    +
211127    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
211128    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
211129    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
211130    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
211131    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211132    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211133    +end;
MPRINT(EM_DIAGRAM):   end;
211134    +else do;
MPRINT(EM_DIAGRAM):   else do;
211135    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211136    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
211137    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211138    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211139    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
211140    +   end;
MPRINT(EM_DIAGRAM):   end;
211141    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211142    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
211143    +   end;
MPRINT(EM_DIAGRAM):   end;
211144    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211145    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
211146    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211147    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211148    +   end;
MPRINT(EM_DIAGRAM):   end;
211149    +end;
MPRINT(EM_DIAGRAM):   end;
211150    +
211151    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
211152    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
211153    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
211154    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
211155    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211156    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211157    +end;
MPRINT(EM_DIAGRAM):   end;
211158    +else do;
MPRINT(EM_DIAGRAM):   else do;
211159    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211160    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
211161    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211162    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211163    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
211164    +   end;
MPRINT(EM_DIAGRAM):   end;
211165    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211166    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
211167    +   end;
MPRINT(EM_DIAGRAM):   end;
211168    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211169    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
211170    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211171    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211172    +   end;
MPRINT(EM_DIAGRAM):   end;
211173    +end;
MPRINT(EM_DIAGRAM):   end;
211174    +
211175    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
211176    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
211177    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
211178    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
211179    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211180    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211181    +end;
MPRINT(EM_DIAGRAM):   end;
211182    +else do;
MPRINT(EM_DIAGRAM):   else do;
211183    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211184    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
211185    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211186    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211187    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
211188    +   end;
MPRINT(EM_DIAGRAM):   end;
211189    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211190    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
211191    +   end;
MPRINT(EM_DIAGRAM):   end;
211192    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211193    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
211194    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211195    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211196    +   end;
MPRINT(EM_DIAGRAM):   end;
211197    +end;
MPRINT(EM_DIAGRAM):   end;
211198    +
211199    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
211200    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
211201    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
211202    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
211203    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211204    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211205    +end;
MPRINT(EM_DIAGRAM):   end;
211206    +else do;
MPRINT(EM_DIAGRAM):   else do;
211207    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211208    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
211209    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211210    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211211    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
211212    +   end;
MPRINT(EM_DIAGRAM):   end;
211213    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211214    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
211215    +   end;
MPRINT(EM_DIAGRAM):   end;
211216    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211217    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
211218    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211219    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211220    +   end;
MPRINT(EM_DIAGRAM):   end;
211221    +end;
MPRINT(EM_DIAGRAM):   end;
211222    +
211223    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
211224    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
211225    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
211226    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
211227    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
211228    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
211229    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
211230    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
211231    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
211232    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
211233    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
211234    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
211235    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211236    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211237    +end;
MPRINT(EM_DIAGRAM):   end;
211238    +else do;
MPRINT(EM_DIAGRAM):   else do;
211239    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
211240    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
211241    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211242    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
211243    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
211244    +   end;
MPRINT(EM_DIAGRAM):   end;
211245    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
211246    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
211247    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
211248    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
211249    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
211250    +   end;
MPRINT(EM_DIAGRAM):   end;
211251    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
211252    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
211253    +   end;
MPRINT(EM_DIAGRAM):   end;
211254    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
211255    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
211256    +   end;
MPRINT(EM_DIAGRAM):   end;
211257    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
211258    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
211259    +   end;
MPRINT(EM_DIAGRAM):   end;
211260    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211261    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
211262    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
211263    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
211264    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
211265    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211266    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211267    +   end;
MPRINT(EM_DIAGRAM):   end;
211268    +end;
MPRINT(EM_DIAGRAM):   end;
211269    +
211270    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
211271    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
211272    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
211273    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
211274    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
211275    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
211276    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
211277    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
211278    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
211279    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
211280    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
211281    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
211282    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
211283    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211284    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211285    +end;
MPRINT(EM_DIAGRAM):   end;
211286    +else do;
MPRINT(EM_DIAGRAM):   else do;
211287    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
211288    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
211289    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211290    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
211291    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
211292    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
211293    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
211294    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
211295    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
211296    +         end;
MPRINT(EM_DIAGRAM):   end;
211297    +         else do;
MPRINT(EM_DIAGRAM):   else do;
211298    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
211299    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
211300    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
211301    +            end;
MPRINT(EM_DIAGRAM):   end;
211302    +         end;
MPRINT(EM_DIAGRAM):   end;
211303    +      end;
MPRINT(EM_DIAGRAM):   end;
211304    +      else do;
MPRINT(EM_DIAGRAM):   else do;
211305    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
211306    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
211307    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
211308    +         end;
MPRINT(EM_DIAGRAM):   end;
211309    +      end;
MPRINT(EM_DIAGRAM):   end;
211310    +   end;
MPRINT(EM_DIAGRAM):   end;
211311    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211312    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
211313    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
211314    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
211315    +      end;
MPRINT(EM_DIAGRAM):   end;
211316    +      else do;
MPRINT(EM_DIAGRAM):   else do;
211317    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
211318    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
211319    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
211320    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
211321    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
211322    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
211323    +         end;
MPRINT(EM_DIAGRAM):   end;
211324    +      end;
MPRINT(EM_DIAGRAM):   end;
211325    +   end;
MPRINT(EM_DIAGRAM):   end;
211326    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
211327    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
211328    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
211329    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
211330    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
211331    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211332    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211333    +   end;
MPRINT(EM_DIAGRAM):   end;
211334    +end;
MPRINT(EM_DIAGRAM):   end;
211335    +
211336    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211337    +*** Checking missing input Interval
211338    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
211339    +
211340    +IF NMISS(
211341    +   Income ,
211342    +   Kidhome ,
211343    +   MntFishProducts ,
211344    +   MntFruits ,
211345    +   MntGoldProds ,
211346    +   MntMeatProducts ,
211347    +   MntSweetProducts ,
211348    +   MntWines ,
211349    +   NumCatalogPurchases ,
211350    +   NumDealsPurchases ,
211351    +   NumStorePurchases ,
211352    +   NumWebPurchases ,
211353    +   NumWebVisitsMonth ,
211354    +   Recency ,
211355    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
211356    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
211357    +
211358    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211359    +END;
MPRINT(EM_DIAGRAM):   END;
211360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211361    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
211362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211363    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211364    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
211365    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
211366    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
211367    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
211368    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
211369    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
211370    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
211371    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
211372    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
211373    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
211374    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
211375    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
211376    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
211377    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
211378    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
211379    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
211380    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
211381    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
211382    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
211383    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
211384    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
211385    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
211386    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
211387    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
211388    +END;
MPRINT(EM_DIAGRAM):   END;
211389    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211390    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
211391    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
211392    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
211393    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
211394    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
211395    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
211396    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
211397    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
211398    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
211399    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
211400    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
211401    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
211402    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
211403    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
211404    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
211405    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
211406    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
211407    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
211408    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
211409    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
211410    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
211411    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
211412    +   ELSE S_NumCatalogPurchases
211413    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
211414    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
211415    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
211416    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
211417    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
211418    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
211419    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
211420    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
211421    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
211422    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
211423    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
211424    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
211425    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
211426    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
211427    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
211428    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
211429    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
211430    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
211431    +END;
MPRINT(EM_DIAGRAM):   END;
211432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211433    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
211434    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211436    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
211437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211439    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
211440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211441    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211442    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
211443    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
211444    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
211445    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
211446    +          +    -0.44570165516063 * S_MntSweetProducts
211447    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
211448    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
211449    +          +    -1.76291210288234 * S_NumStorePurchases
211450    +          +    -2.02392782824649 * S_NumWebPurchases
211451    +          +     1.28490910676992 * S_NumWebVisitsMonth
211452    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
211453    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome +
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 *
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts +
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 *
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 *
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency +
-0.59235237740193 * S_Teenhome ;
211454    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
211455    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
211456    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
211457    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
211458    +          +     0.29239311560831 * S_MntSweetProducts
211459    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
211460    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
211461    +          +     0.94246962588327 * S_NumStorePurchases
211462    +          +      0.9680353780544 * S_NumWebPurchases
211463    +          +    -2.21882487627334 * S_NumWebVisitsMonth
211464    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
211465    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome +
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 *
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 *
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency +
0.6539185986418 * S_Teenhome ;
211466    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
211467    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
211468    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
211469    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
211470    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 +
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
211471    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
211472    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
211473    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
211474    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
211475    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 *
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 +
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
211476    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
211477    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
211478    +        EducationGraduation  +     0.44122744485667 * EducationMaster
211479    +          +    -0.37907342816265 * Marital_StatusDivorced
211480    +          +     0.12610640291685 * Marital_StatusMarried
211481    +          +     0.51984913420219 * Marital_StatusSingle
211482    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle +
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 *
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 *
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 *
Marital_StatusTogether ;
211483    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
211484    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
211485    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
211486    +          +    -1.03351623479699 * Marital_StatusDivorced
211487    +          +     1.44541386522162 * Marital_StatusMarried
211488    +          +    -1.03636573521294 * Marital_StatusSingle
211489    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle +
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation +
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced +
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle +
1.72091885709893 * Marital_StatusTogether ;
211490    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
211491    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
211492    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
211493    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
211494    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
211495    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
211496    +END;
MPRINT(EM_DIAGRAM):   END;
211497    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211498    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
211499    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
211500    +END;
MPRINT(EM_DIAGRAM):   END;
211501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211502    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
211503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211504    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211505    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
211506    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
211507    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
211508    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
211509    +          +    -0.56491281055157 * S_MntSweetProducts
211510    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
211511    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
211512    +          +    -0.90340706582786 * S_NumStorePurchases
211513    +          +    -1.91501626179453 * S_NumWebPurchases
211514    +          +     0.10121028558369 * S_NumWebVisitsMonth
211515    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
211516    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome +
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 *
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases +
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases +
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth +
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
211517    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
211518    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
211519    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
211520    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
211521    +          +    -0.23001625322332 * S_MntSweetProducts
211522    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
211523    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
211524    +          +    -2.13716920911877 * S_NumStorePurchases
211525    +          +    -0.33508808117738 * S_NumWebPurchases
211526    +          +     -2.0809737926136 * S_NumWebVisitsMonth
211527    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
211528    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome +
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 *
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 *
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases +
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth +
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
211529    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
211530    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
211531    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
211532    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
211533    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 *
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 +
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
211534    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
211535    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
211536    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
211537    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
211538    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 +
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
211539    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
211540    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
211541    +        EducationGraduation  +     0.48964474451872 * EducationMaster
211542    +          +     1.22462877499103 * Marital_StatusDivorced
211543    +          +     0.55976057621985 * Marital_StatusMarried
211544    +          +     -0.3198252517086 * Marital_StatusSingle
211545    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle +
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 *
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 *
Marital_StatusTogether ;
211546    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
211547    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
211548    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
211549    +          +     0.32730811728353 * Marital_StatusDivorced
211550    +          +     1.61519773132998 * Marital_StatusMarried
211551    +          +    -1.42728303824254 * Marital_StatusSingle
211552    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle +
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation +
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced +
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle +
1.39334432128351 * Marital_StatusTogether ;
211553    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
211554    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
211555    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
211556    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
211557    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
211558    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
211559    +END;
MPRINT(EM_DIAGRAM):   END;
211560    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211561    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
211562    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
211563    +END;
MPRINT(EM_DIAGRAM):   END;
211564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211565    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
211566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211567    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211568    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
211569    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
211570    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
211571    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2
;
211572    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
211573    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
211574    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
211575    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
211576    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
211577    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
211578    +END;
MPRINT(EM_DIAGRAM):   END;
211579    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211580    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
211581    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
211582    +END;
MPRINT(EM_DIAGRAM):   END;
211583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211584    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
211585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211586    +
211587    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
211588    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
211589    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
211590    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
211591    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
211592    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211593    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
211594    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
211595    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
211596    +end;
MPRINT(EM_DIAGRAM):   end;
211597    +else do;
MPRINT(EM_DIAGRAM):   else do;
211598    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
211599    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
211600    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
211601    +   end;
MPRINT(EM_DIAGRAM):   end;
211602    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
211603    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
211604    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
211605    +   end;
MPRINT(EM_DIAGRAM):   end;
211606    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211607    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
211608    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
211609    +   end;
MPRINT(EM_DIAGRAM):   end;
211610    +end;
MPRINT(EM_DIAGRAM):   end;
211611    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211612    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
211613    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
211614    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
211615    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
211616    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
211617    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
211618    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
211619    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
211620    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
211621    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
211622    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
211623    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
211624    +END;
MPRINT(EM_DIAGRAM):   END;
211625    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211626    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
211627    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
211628    +END;
MPRINT(EM_DIAGRAM):   END;
211629    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
211630    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
211631    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
211632    +END;
MPRINT(EM_DIAGRAM):   END;
211633    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
211634    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
211635    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
211636    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
211637    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
211638    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
211639    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
211640    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211641    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
211642    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211643    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
211644    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
211645    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
211646    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
211647    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
211648    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
211649    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
211650    +END;
MPRINT(EM_DIAGRAM):   END;
211651    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
211652    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
211653    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
211654    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
211655    +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
211656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211657    +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
211658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211659    +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
211660    +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
211661    +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
211662    +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
211663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211664    +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
211665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211666    +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
211667    +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
211668    +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
211669    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211670    +* Ensmbl58: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Scoring Code of model 7 of 7;
211671    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211672    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211673    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
211674    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
211675    +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
211676    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211677    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
211678    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
211679    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
211680    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
211681    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
211682    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
211683    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
211684    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
211685    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
211686    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
211687    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
211688    +LENGTH _WARN_ $4
211689    +      F_DepVar  $ 12
211690    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
211691    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
211692    +
211693    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
211694    +
211695    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
211696    +
211697    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
211698    +
211699    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
211700    +
211701    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
211702    +
211703    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
211704    +
211705    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
211706    +
211707    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
211708    +
211709    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
211710    +
211711    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
211712    +
211713    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
211714    +
211715    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
211716    +
211717    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
211718    +
211719    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
211720    +
211721    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
211722    +
211723    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
211724    +
211725    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
211726    +
211727    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
211728    +
211729    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
211730    +
211731    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
211732    +
211733    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
211734    +
211735    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
211736    +
211737    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
211738    +
211739    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
211740    +
211741    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
211742    +
211743    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
211744    +
211745    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
211746    +
211747    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
211748    +
211749    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
211750    +
211751    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
211752    +
211753    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
211754    +
211755    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
211756    +
211757    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
211758    +
211759    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
211760    +
211761    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
211762    +
211763    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
211764    +
211765    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
211766    +
211767    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
211768    +
211769    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
211770    +
211771    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
211772    +
211773    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
211774    +
211775    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
211776    +
211777    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
211778    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
211779    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
211780    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
211781    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211782    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211783    +end;
MPRINT(EM_DIAGRAM):   end;
211784    +else do;
MPRINT(EM_DIAGRAM):   else do;
211785    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211786    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
211787    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211788    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211789    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
211790    +   end;
MPRINT(EM_DIAGRAM):   end;
211791    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211792    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
211793    +   end;
MPRINT(EM_DIAGRAM):   end;
211794    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211795    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
211796    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211797    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211798    +   end;
MPRINT(EM_DIAGRAM):   end;
211799    +end;
MPRINT(EM_DIAGRAM):   end;
211800    +
211801    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
211802    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
211803    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
211804    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
211805    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211806    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211807    +end;
MPRINT(EM_DIAGRAM):   end;
211808    +else do;
MPRINT(EM_DIAGRAM):   else do;
211809    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211810    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
211811    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211812    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211813    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
211814    +   end;
MPRINT(EM_DIAGRAM):   end;
211815    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211816    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
211817    +   end;
MPRINT(EM_DIAGRAM):   end;
211818    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211819    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
211820    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211821    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211822    +   end;
MPRINT(EM_DIAGRAM):   end;
211823    +end;
MPRINT(EM_DIAGRAM):   end;
211824    +
211825    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
211826    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
211827    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
211828    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
211829    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211830    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211831    +end;
MPRINT(EM_DIAGRAM):   end;
211832    +else do;
MPRINT(EM_DIAGRAM):   else do;
211833    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211834    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
211835    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211836    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211837    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
211838    +   end;
MPRINT(EM_DIAGRAM):   end;
211839    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211840    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
211841    +   end;
MPRINT(EM_DIAGRAM):   end;
211842    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211843    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
211844    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211845    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211846    +   end;
MPRINT(EM_DIAGRAM):   end;
211847    +end;
MPRINT(EM_DIAGRAM):   end;
211848    +
211849    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
211850    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
211851    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
211852    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
211853    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211854    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211855    +end;
MPRINT(EM_DIAGRAM):   end;
211856    +else do;
MPRINT(EM_DIAGRAM):   else do;
211857    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211858    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
211859    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211860    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211861    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
211862    +   end;
MPRINT(EM_DIAGRAM):   end;
211863    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211864    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
211865    +   end;
MPRINT(EM_DIAGRAM):   end;
211866    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211867    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
211868    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211869    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211870    +   end;
MPRINT(EM_DIAGRAM):   end;
211871    +end;
MPRINT(EM_DIAGRAM):   end;
211872    +
211873    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
211874    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
211875    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
211876    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
211877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211879    +end;
MPRINT(EM_DIAGRAM):   end;
211880    +else do;
MPRINT(EM_DIAGRAM):   else do;
211881    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211882    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
211883    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211884    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211885    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
211886    +   end;
MPRINT(EM_DIAGRAM):   end;
211887    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211888    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
211889    +   end;
MPRINT(EM_DIAGRAM):   end;
211890    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211891    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
211892    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211893    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211894    +   end;
MPRINT(EM_DIAGRAM):   end;
211895    +end;
MPRINT(EM_DIAGRAM):   end;
211896    +
211897    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
211898    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
211899    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
211900    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
211901    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211903    +end;
MPRINT(EM_DIAGRAM):   end;
211904    +else do;
MPRINT(EM_DIAGRAM):   else do;
211905    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211906    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
211907    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211908    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
211909    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
211910    +   end;
MPRINT(EM_DIAGRAM):   end;
211911    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
211912    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
211913    +   end;
MPRINT(EM_DIAGRAM):   end;
211914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211915    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
211916    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211917    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211918    +   end;
MPRINT(EM_DIAGRAM):   end;
211919    +end;
MPRINT(EM_DIAGRAM):   end;
211920    +
211921    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
211922    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
211923    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
211924    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
211925    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
211926    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
211927    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
211928    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
211929    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
211930    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
211931    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
211932    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
211933    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211934    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211935    +end;
MPRINT(EM_DIAGRAM):   end;
211936    +else do;
MPRINT(EM_DIAGRAM):   else do;
211937    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
211938    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
211939    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211940    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
211941    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
211942    +   end;
MPRINT(EM_DIAGRAM):   end;
211943    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
211944    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
211945    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
211946    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
211947    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
211948    +   end;
MPRINT(EM_DIAGRAM):   end;
211949    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
211950    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
211951    +   end;
MPRINT(EM_DIAGRAM):   end;
211952    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
211953    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
211954    +   end;
MPRINT(EM_DIAGRAM):   end;
211955    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
211956    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
211957    +   end;
MPRINT(EM_DIAGRAM):   end;
211958    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211959    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
211960    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
211961    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
211962    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
211963    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211964    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211965    +   end;
MPRINT(EM_DIAGRAM):   end;
211966    +end;
MPRINT(EM_DIAGRAM):   end;
211967    +
211968    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
211969    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
211970    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
211971    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
211972    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
211973    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
211974    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
211975    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
211976    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
211977    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
211978    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
211979    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
211980    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
211981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211983    +end;
MPRINT(EM_DIAGRAM):   end;
211984    +else do;
MPRINT(EM_DIAGRAM):   else do;
211985    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
211986    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
211987    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211988    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
211989    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
211990    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
211991    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
211992    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
211993    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
211994    +         end;
MPRINT(EM_DIAGRAM):   end;
211995    +         else do;
MPRINT(EM_DIAGRAM):   else do;
211996    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
211997    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
211998    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
211999    +            end;
MPRINT(EM_DIAGRAM):   end;
212000    +         end;
MPRINT(EM_DIAGRAM):   end;
212001    +      end;
MPRINT(EM_DIAGRAM):   end;
212002    +      else do;
MPRINT(EM_DIAGRAM):   else do;
212003    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
212004    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
212005    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212006    +         end;
MPRINT(EM_DIAGRAM):   end;
212007    +      end;
MPRINT(EM_DIAGRAM):   end;
212008    +   end;
MPRINT(EM_DIAGRAM):   end;
212009    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212010    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
212011    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
212012    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212013    +      end;
MPRINT(EM_DIAGRAM):   end;
212014    +      else do;
MPRINT(EM_DIAGRAM):   else do;
212015    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
212016    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
212017    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
212018    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
212019    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
212020    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212021    +         end;
MPRINT(EM_DIAGRAM):   end;
212022    +      end;
MPRINT(EM_DIAGRAM):   end;
212023    +   end;
MPRINT(EM_DIAGRAM):   end;
212024    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
212025    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
212026    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
212027    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
212028    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
212029    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212030    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212031    +   end;
MPRINT(EM_DIAGRAM):   end;
212032    +end;
MPRINT(EM_DIAGRAM):   end;
212033    +
212034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212035    +*** Checking missing input Interval
212036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
212037    +
212038    +IF NMISS(
212039    +   Income ,
212040    +   Kidhome ,
212041    +   MntFishProducts ,
212042    +   MntFruits ,
212043    +   MntGoldProds ,
212044    +   MntMeatProducts ,
212045    +   MntSweetProducts ,
212046    +   MntWines ,
212047    +   NumCatalogPurchases ,
212048    +   NumDealsPurchases ,
212049    +   NumStorePurchases ,
212050    +   NumWebPurchases ,
212051    +   NumWebVisitsMonth ,
212052    +   Recency ,
212053    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
212054    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
212055    +
212056    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212057    +END;
MPRINT(EM_DIAGRAM):   END;
212058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212059    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
212060    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212061    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212062    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
212063    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
212064    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
212065    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
212066    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
212067    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
212068    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
212069    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
212070    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
212071    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
212072    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
212073    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
212074    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
212075    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
212076    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
212077    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
212078    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
212079    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
212080    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
212081    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
212082    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
212083    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
212084    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
212085    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
212086    +END;
MPRINT(EM_DIAGRAM):   END;
212087    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212088    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
212089    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
212090    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
212091    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
212092    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
212093    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
212094    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
212095    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
212096    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
212097    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
212098    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
212099    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
212100    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
212101    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
212102    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
212103    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
212104    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
212105    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
212106    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
212107    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
212108    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
212109    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
212110    +   ELSE S_NumCatalogPurchases
212111    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
212112    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
212113    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
212114    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
212115    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
212116    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
212117    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
212118    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
212119    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
212120    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
212121    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
212122    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
212123    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
212124    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
212125    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
212126    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
212127    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
212128    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
212129    +END;
MPRINT(EM_DIAGRAM):   END;
212130    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212131    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
212132    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212134    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
212135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212137    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
212138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212139    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212140    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
212141    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
212142    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
212143    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
212144    +          +     2.41993296129914 * S_MntSweetProducts
212145    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
212146    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
212147    +          +     7.59231492380468 * S_NumStorePurchases
212148    +          +    -0.47095655313121 * S_NumWebPurchases
212149    +          +     2.65669932372712 * S_NumWebVisitsMonth
212150    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
212151    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome +
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 *
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases +
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases +
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth +
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
212152    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
212153    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
212154    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
212155    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
212156    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 *
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 +
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
212157    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
212158    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
212159    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
212160    +          +     0.44728218776544 * Marital_StatusDivorced
212161    +          +    -1.62458831276183 * Marital_StatusMarried
212162    +          +    -0.42858616367237 * Marital_StatusSingle
212163    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle +
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation +
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced +
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle +
-0.29553796445711 * Marital_StatusTogether ;
212164    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
212165    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
212166    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
212167    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
212168    +END;
MPRINT(EM_DIAGRAM):   END;
212169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212170    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
212171    +END;
MPRINT(EM_DIAGRAM):   END;
212172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212173    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
212174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212175    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212176    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
212177    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
212178    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
212179    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
212180    +          +    -1.37098390846164 * S_MntSweetProducts
212181    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
212182    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
212183    +          +     0.58246769316602 * S_NumStorePurchases
212184    +          +     2.72780243156581 * S_NumWebPurchases
212185    +          +    -1.73896446530763 * S_NumWebVisitsMonth
212186    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
212187    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome +
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 *
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 *
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 *
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 *
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 *
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
212188    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
212189    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
212190    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
212191    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
212192    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 *
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 +
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
212193    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
212194    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
212195    +        EducationGraduation  +     1.01072132252596 * EducationMaster
212196    +          +     0.08221095774854 * Marital_StatusDivorced
212197    +          +    -0.13062113450086 * Marital_StatusMarried
212198    +          +      0.1912119500185 * Marital_StatusSingle
212199    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle +
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 *
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 *
Marital_StatusTogether ;
212200    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
212201    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
212202    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
212203    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
212204    +END;
MPRINT(EM_DIAGRAM):   END;
212205    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212206    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
212207    +END;
MPRINT(EM_DIAGRAM):   END;
212208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212209    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
212210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212211    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212212    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
212213    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
212214    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
212215    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
212216    +          +     -0.4771357321143 * S_MntSweetProducts
212217    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
212218    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
212219    +          +     0.38755002642582 * S_NumStorePurchases
212220    +          +     0.65178643881164 * S_NumWebPurchases
212221    +          +    -0.83170832622452 * S_NumWebVisitsMonth
212222    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
212223    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome +
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 *
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 *
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency +
1.27228948382376 * S_Teenhome ;
212224    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
212225    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
212226    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
212227    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
212228    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 *
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 +
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
212229    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
212230    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
212231    +        EducationGraduation  +      0.9696976240987 * EducationMaster
212232    +          +    -0.13574340372484 * Marital_StatusDivorced
212233    +          +     1.26001446384238 * Marital_StatusMarried
212234    +          +    -0.16294618258246 * Marital_StatusSingle
212235    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle +
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 *
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 *
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 *
Marital_StatusTogether ;
212236    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
212237    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
212238    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
212239    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
212240    +END;
MPRINT(EM_DIAGRAM):   END;
212241    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212242    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
212243    +END;
MPRINT(EM_DIAGRAM):   END;
212244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212245    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
212246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212247    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212248    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
212249    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
212250    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
212251    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
212252    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
212253    +END;
MPRINT(EM_DIAGRAM):   END;
212254    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212255    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
212256    +END;
MPRINT(EM_DIAGRAM):   END;
212257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212258    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
212259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212260    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212261    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
212262    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
212263    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
212264    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
212265    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
212266    +END;
MPRINT(EM_DIAGRAM):   END;
212267    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212268    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
212269    +END;
MPRINT(EM_DIAGRAM):   END;
212270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212271    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
212272    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212273    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212274    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
212275    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
212276    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
212277    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
212278    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
212279    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
212280    +END;
MPRINT(EM_DIAGRAM):   END;
212281    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212282    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
212283    +END;
MPRINT(EM_DIAGRAM):   END;
212284    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212285    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
212286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212287    +
212288    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
212289    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
212290    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
212291    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
212292    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
212293    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212294    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
212295    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
212296    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
212297    +end;
MPRINT(EM_DIAGRAM):   end;
212298    +else do;
MPRINT(EM_DIAGRAM):   else do;
212299    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
212300    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
212301    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
212302    +   end;
MPRINT(EM_DIAGRAM):   end;
212303    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
212304    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
212305    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
212306    +   end;
MPRINT(EM_DIAGRAM):   end;
212307    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212308    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
212309    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
212310    +   end;
MPRINT(EM_DIAGRAM):   end;
212311    +end;
MPRINT(EM_DIAGRAM):   end;
212312    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212313    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
212314    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
212315    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
212316    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
212317    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
212318    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
212319    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
212320    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
212321    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
212322    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
212323    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
212324    +END;
MPRINT(EM_DIAGRAM):   END;
212325    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212326    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
212327    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
212328    +END;
MPRINT(EM_DIAGRAM):   END;
212329    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
212330    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
212331    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
212332    +END;
MPRINT(EM_DIAGRAM):   END;
212333    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
212334    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
212335    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
212336    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
212337    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
212338    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
212339    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
212340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212341    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
212342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212343    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
212344    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
212345    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
212346    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
212347    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
212348    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
212349    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
212350    +END;
MPRINT(EM_DIAGRAM):   END;
212351    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
212352    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
212353    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
212354    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
212355    +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
212356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212357    +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
212358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212359    +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
212360    +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
212361    +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
212362    +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
212363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212364    +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
212365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212366    +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
212367    +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
212368    +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
212369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212370    +* Ensmbl58: Maximum Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Maximum Posteriors of 7 models;
212371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212372    +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
212373    +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
212374    +P_DepVar1 = max(
212375    +AutoNeural46_P_DepVar1 ,
212376    +AutoNeural43_P_DepVar1 ,
212377    +AutoNeural42_P_DepVar1 ,
212378    +AutoNeural41_P_DepVar1 ,
212379    +AutoNeural47_P_DepVar1 ,
212380    +AutoNeural45_P_DepVar1 ,
212381    +AutoNeural44_P_DepVar1
212382    +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( AutoNeural46_P_DepVar1 , AutoNeural43_P_DepVar1 ,
AutoNeural42_P_DepVar1 , AutoNeural41_P_DepVar1 , AutoNeural47_P_DepVar1 ,
AutoNeural45_P_DepVar1 , AutoNeural44_P_DepVar1 );
212383    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
212384    +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
212385    +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
212386    +end;
MPRINT(EM_DIAGRAM):   end;
212387    +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
212388    +P_DepVar0 = max(
212389    +AutoNeural46_P_DepVar0 ,
212390    +AutoNeural43_P_DepVar0 ,
212391    +AutoNeural42_P_DepVar0 ,
212392    +AutoNeural41_P_DepVar0 ,
212393    +AutoNeural47_P_DepVar0 ,
212394    +AutoNeural45_P_DepVar0 ,
212395    +AutoNeural44_P_DepVar0
212396    +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( AutoNeural46_P_DepVar0 , AutoNeural43_P_DepVar0 ,
AutoNeural42_P_DepVar0 , AutoNeural41_P_DepVar0 , AutoNeural47_P_DepVar0 ,
AutoNeural45_P_DepVar0 , AutoNeural44_P_DepVar0 );
212397    +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
212398    +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
212399    +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
212400    +end;
MPRINT(EM_DIAGRAM):   end;
212401    +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
212402    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212403    +* Ensmbl58: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Classification Vars;
212404    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212405    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
212406    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
212407    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
212408    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
212409    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
212410    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
212411    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
212412    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
212413    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
212414    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
212415    +end;
MPRINT(EM_DIAGRAM):   end;
212416    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
212417    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
212418    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
212419    +end;
MPRINT(EM_DIAGRAM):   end;
212420    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
212421    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212422    +* Ensmbl58: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Producing Unformatted variable;
212423    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212424    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
212425    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
212426    +else
212427    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
212428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212429    +* Ensmbl58: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing _WARN_ Variable;
212430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212431    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
212432    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
212433    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
212434    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
212434   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
212435    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
212435   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
212436    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
212436   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
212437    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
212437   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
212438    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
212438   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
212439    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
212439   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
212440    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
212440   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
212441    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
212441   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
212442    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
212442   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
212443    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
212443   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
212444    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
212444   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
212445    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
212445   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
212446    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
212446   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
212447    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
212447   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
212448    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
212448   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
212449    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
212449   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
212450    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
212450   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
212451    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
212451   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
212452    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
212452   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
212453    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
212453   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
212454    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
212454   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
212455    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
212455   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
212456    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
212456   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
212457    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
212457   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
212458    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
212458   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
212459    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
212459   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
212460    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
212460   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
212461    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
212461   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
212462    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212463    +* Ensmbl58: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing Residual Vars;
212464    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212465    +if
212466    +F_DepVar NE '1'
212467    +AND F_DepVar NE '0'
212468    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
212469    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
212470    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
212471    +end;
MPRINT(EM_DIAGRAM):   end;
212472    +else do;
MPRINT(EM_DIAGRAM):   else do;
212473    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
212474    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
212475    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
212476    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
212477    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
212478    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
212479    +END;
MPRINT(EM_DIAGRAM):   END;
212480    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
212481     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL58_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL46_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
212482     quit;
212483     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl58_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl58_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl58_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
212543     filename _pref
212543   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
212544     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
212545     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
212546    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
212547    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
212548    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
212549    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
212550    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
212551    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
212552    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
212553    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
212554    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
212555    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
212556    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
212557    +LENGTH _WARN_ $4
212558    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
212559    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
212560    +
212561    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
212562    +
212563    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
212564    +
212565    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
212566    +
212567    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
212568    +
212569    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
212570    +
212571    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
212572    +
212573    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
212574    +
212575    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
212576    +
212577    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
212578    +
212579    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
212580    +
212581    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
212582    +
212583    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
212584    +
212585    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
212586    +
212587    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
212588    +
212589    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
212590    +
212591    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
212592    +
212593    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
212594    +
212595    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
212596    +
212597    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
212598    +
212599    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
212600    +
212601    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
212602    +
212603    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
212604    +
212605    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
212606    +
212607    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
212608    +
212609    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
212610    +
212611    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
212612    +
212613    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
212614    +
212615    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
212616    +
212617    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
212618    +
212619    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
212620    +
212621    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
212622    +
212623    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
212624    +
212625    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
212626    +
212627    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
212628    +
212629    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
212630    +
212631    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
212632    +
212633    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
212634    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
212635    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
212636    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
212637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212639    +end;
MPRINT(EM_DIAGRAM):   end;
212640    +else do;
MPRINT(EM_DIAGRAM):   else do;
212641    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212642    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
212643    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212644    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
212645    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
212646    +   end;
MPRINT(EM_DIAGRAM):   end;
212647    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
212648    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
212649    +   end;
MPRINT(EM_DIAGRAM):   end;
212650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212651    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
212652    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212653    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212654    +   end;
MPRINT(EM_DIAGRAM):   end;
212655    +end;
MPRINT(EM_DIAGRAM):   end;
212656    +
212657    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
212658    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
212659    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
212660    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
212661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212663    +end;
MPRINT(EM_DIAGRAM):   end;
212664    +else do;
MPRINT(EM_DIAGRAM):   else do;
212665    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212666    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
212667    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212668    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
212669    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
212670    +   end;
MPRINT(EM_DIAGRAM):   end;
212671    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
212672    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
212673    +   end;
MPRINT(EM_DIAGRAM):   end;
212674    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212675    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
212676    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212677    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212678    +   end;
MPRINT(EM_DIAGRAM):   end;
212679    +end;
MPRINT(EM_DIAGRAM):   end;
212680    +
212681    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
212682    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
212683    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
212684    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
212685    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212686    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212687    +end;
MPRINT(EM_DIAGRAM):   end;
212688    +else do;
MPRINT(EM_DIAGRAM):   else do;
212689    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212690    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
212691    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212692    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
212693    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
212694    +   end;
MPRINT(EM_DIAGRAM):   end;
212695    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
212696    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
212697    +   end;
MPRINT(EM_DIAGRAM):   end;
212698    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212699    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
212700    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212701    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212702    +   end;
MPRINT(EM_DIAGRAM):   end;
212703    +end;
MPRINT(EM_DIAGRAM):   end;
212704    +
212705    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
212706    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
212707    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
212708    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
212709    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212710    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212711    +end;
MPRINT(EM_DIAGRAM):   end;
212712    +else do;
MPRINT(EM_DIAGRAM):   else do;
212713    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212714    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
212715    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212716    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
212717    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
212718    +   end;
MPRINT(EM_DIAGRAM):   end;
212719    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
212720    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
212721    +   end;
MPRINT(EM_DIAGRAM):   end;
212722    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212723    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
212724    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212725    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212726    +   end;
MPRINT(EM_DIAGRAM):   end;
212727    +end;
MPRINT(EM_DIAGRAM):   end;
212728    +
212729    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
212730    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
212731    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
212732    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
212733    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212734    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212735    +end;
MPRINT(EM_DIAGRAM):   end;
212736    +else do;
MPRINT(EM_DIAGRAM):   else do;
212737    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212738    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
212739    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212740    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
212741    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
212742    +   end;
MPRINT(EM_DIAGRAM):   end;
212743    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
212744    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
212745    +   end;
MPRINT(EM_DIAGRAM):   end;
212746    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212747    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
212748    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212749    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212750    +   end;
MPRINT(EM_DIAGRAM):   end;
212751    +end;
MPRINT(EM_DIAGRAM):   end;
212752    +
212753    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
212754    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
212755    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
212756    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
212757    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212758    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212759    +end;
MPRINT(EM_DIAGRAM):   end;
212760    +else do;
MPRINT(EM_DIAGRAM):   else do;
212761    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212762    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
212763    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212764    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
212765    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
212766    +   end;
MPRINT(EM_DIAGRAM):   end;
212767    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
212768    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
212769    +   end;
MPRINT(EM_DIAGRAM):   end;
212770    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212771    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
212772    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212773    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212774    +   end;
MPRINT(EM_DIAGRAM):   end;
212775    +end;
MPRINT(EM_DIAGRAM):   end;
212776    +
212777    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
212778    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
212779    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
212780    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
212781    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
212782    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
212783    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
212784    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
212785    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
212786    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
212787    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
212788    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
212789    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212790    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212791    +end;
MPRINT(EM_DIAGRAM):   end;
212792    +else do;
MPRINT(EM_DIAGRAM):   else do;
212793    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
212794    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
212795    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212796    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
212797    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
212798    +   end;
MPRINT(EM_DIAGRAM):   end;
212799    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
212800    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
212801    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
212802    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
212803    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
212804    +   end;
MPRINT(EM_DIAGRAM):   end;
212805    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
212806    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
212807    +   end;
MPRINT(EM_DIAGRAM):   end;
212808    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
212809    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
212810    +   end;
MPRINT(EM_DIAGRAM):   end;
212811    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
212812    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
212813    +   end;
MPRINT(EM_DIAGRAM):   end;
212814    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212815    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
212816    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
212817    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
212818    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
212819    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212820    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212821    +   end;
MPRINT(EM_DIAGRAM):   end;
212822    +end;
MPRINT(EM_DIAGRAM):   end;
212823    +
212824    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
212825    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
212826    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
212827    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
212828    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
212829    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
212830    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
212831    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
212832    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
212833    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
212834    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
212835    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
212836    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
212837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212839    +end;
MPRINT(EM_DIAGRAM):   end;
212840    +else do;
MPRINT(EM_DIAGRAM):   else do;
212841    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
212842    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
212843    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212844    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
212845    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
212846    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
212847    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
212848    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
212849    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212850    +         end;
MPRINT(EM_DIAGRAM):   end;
212851    +         else do;
MPRINT(EM_DIAGRAM):   else do;
212852    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
212853    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
212854    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212855    +            end;
MPRINT(EM_DIAGRAM):   end;
212856    +         end;
MPRINT(EM_DIAGRAM):   end;
212857    +      end;
MPRINT(EM_DIAGRAM):   end;
212858    +      else do;
MPRINT(EM_DIAGRAM):   else do;
212859    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
212860    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
212861    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212862    +         end;
MPRINT(EM_DIAGRAM):   end;
212863    +      end;
MPRINT(EM_DIAGRAM):   end;
212864    +   end;
MPRINT(EM_DIAGRAM):   end;
212865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212866    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
212867    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
212868    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212869    +      end;
MPRINT(EM_DIAGRAM):   end;
212870    +      else do;
MPRINT(EM_DIAGRAM):   else do;
212871    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
212872    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
212873    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
212874    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
212875    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
212876    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
212877    +         end;
MPRINT(EM_DIAGRAM):   end;
212878    +      end;
MPRINT(EM_DIAGRAM):   end;
212879    +   end;
MPRINT(EM_DIAGRAM):   end;
212880    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
212881    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
212882    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
212883    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
212884    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
212885    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212886    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212887    +   end;
MPRINT(EM_DIAGRAM):   end;
212888    +end;
MPRINT(EM_DIAGRAM):   end;
212889    +
212890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212891    +*** Checking missing input Interval
212892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
212893    +
212894    +IF NMISS(
212895    +   Income ,
212896    +   Kidhome ,
212897    +   MntFishProducts ,
212898    +   MntFruits ,
212899    +   MntGoldProds ,
212900    +   MntMeatProducts ,
212901    +   MntSweetProducts ,
212902    +   MntWines ,
212903    +   NumCatalogPurchases ,
212904    +   NumDealsPurchases ,
212905    +   NumStorePurchases ,
212906    +   NumWebPurchases ,
212907    +   NumWebVisitsMonth ,
212908    +   Recency ,
212909    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
212910    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
212911    +
212912    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212913    +END;
MPRINT(EM_DIAGRAM):   END;
212914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212915    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
212916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212917    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212918    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
212919    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
212920    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
212921    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
212922    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
212923    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
212924    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
212925    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
212926    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
212927    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
212928    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
212929    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
212930    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
212931    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
212932    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
212933    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
212934    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
212935    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
212936    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
212937    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
212938    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
212939    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
212940    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
212941    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
212942    +END;
MPRINT(EM_DIAGRAM):   END;
212943    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212944    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
212945    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
212946    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
212947    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
212948    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
212949    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
212950    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
212951    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
212952    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
212953    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
212954    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
212955    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
212956    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
212957    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
212958    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
212959    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
212960    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
212961    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
212962    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
212963    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
212964    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
212965    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
212966    +   ELSE S_NumCatalogPurchases
212967    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
212968    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
212969    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
212970    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
212971    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
212972    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
212973    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
212974    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
212975    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
212976    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
212977    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
212978    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
212979    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
212980    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
212981    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
212982    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
212983    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
212984    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
212985    +END;
MPRINT(EM_DIAGRAM):   END;
212986    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212987    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
212988    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212990    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
212991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212993    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
212994    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212996    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
212997    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
212998    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
212999    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
213000    +          +      0.0311909552218 * S_MntSweetProducts
213001    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
213002    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
213003    +          +     0.12294876865087 * S_NumStorePurchases
213004    +          +     0.11602382379314 * S_NumWebPurchases
213005    +          +    -0.23519567542635 * S_NumWebVisitsMonth
213006    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
213007    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
213008    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
213009    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
213010    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
213011    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
213012    +          +     0.00133400054994 * S_MntSweetProducts
213013    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
213014    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
213015    +          +    -0.49595472235036 * S_NumStorePurchases
213016    +          +    -0.24747548015204 * S_NumWebPurchases
213017    +          +     0.12326047694811 * S_NumWebVisitsMonth
213018    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
213019    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
213020    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
213021    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
213022    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
213023    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
213024    +          +    -0.03908755288099 * S_MntSweetProducts
213025    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
213026    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
213027    +          +    -0.20634630081435 * S_NumStorePurchases
213028    +          +    -0.06734935798888 * S_NumWebPurchases
213029    +          +     0.32288250215418 * S_NumWebVisitsMonth
213030    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
213031    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
213032    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
213033    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
213034    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
213035    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
213036    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
213037    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
213038    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
213039    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
213040    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
213041    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
213042    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
213043    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
213044    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
213045    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
213046    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
213047    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
213048    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
213049    +        EducationGraduation  +     0.07475697967073 * EducationMaster
213050    +          +    -0.04265434587882 * Marital_StatusDivorced
213051    +          +     0.17114014094758 * Marital_StatusMarried
213052    +          +     -0.1537035921296 * Marital_StatusSingle
213053    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
213054    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
213055    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
213056    +        EducationGraduation  +     0.04507684017588 * EducationMaster
213057    +          +     0.25534272809394 * Marital_StatusDivorced
213058    +          +     0.20034903346804 * Marital_StatusMarried
213059    +          +    -0.38348393943797 * Marital_StatusSingle
213060    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
213061    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
213062    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
213063    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
213064    +          +      0.1988416043876 * Marital_StatusDivorced
213065    +          +    -0.21663959478684 * Marital_StatusMarried
213066    +          +     0.06591480171547 * Marital_StatusSingle
213067    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
213068    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
213069    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
213070    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
213071    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
213072    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
213073    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
213074    +END;
MPRINT(EM_DIAGRAM):   END;
213075    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
213076    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
213077    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
213078    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
213079    +END;
MPRINT(EM_DIAGRAM):   END;
213080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213081    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
213082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213083    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
213084    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
213085    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
213086    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
213087    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
213088    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
213089    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
213090    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
213091    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
213092    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
213093    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
213094    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
213095    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
213096    +END;
MPRINT(EM_DIAGRAM):   END;
213097    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
213098    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
213099    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
213100    +END;
MPRINT(EM_DIAGRAM):   END;
213101    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
213102    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
213103    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
213104    +END;
MPRINT(EM_DIAGRAM):   END;
213105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213106    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
213107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213108    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
213109    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
213110    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
213111    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
213112    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
213113    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
213114    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
213115    +END;
MPRINT(EM_DIAGRAM):   END;
213116    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
213117    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
213118    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
213119    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213120     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
213121     quit;
213122     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
213123     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
213124     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
213125     retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
213126     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
213127     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213128     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
213129     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213130     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
213131     proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME
CREATOR);
213132     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213133     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213134     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213135     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
213136     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
213137     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213138     proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
213139     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
213140     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
213141     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213142     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213143     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213144     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
213145     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213146     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
213147     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
213148     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
213148   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 868 rows and 5 columns.
 
213149     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213150     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
213151     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 868 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 868 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213152     filename _pref
213152   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
213153     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213154     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
213155    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213156    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
213157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213158    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
213159    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
213160    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213161     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
213162     quit;
213163     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
213164     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
213165     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
213166     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
213167     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
213168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213169     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
213170     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213172     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
213173     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213174     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213175     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213176     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
213177     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
213178     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213179     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
213180     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
213181     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
213182     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213184     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213185     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
213186     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213187     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
213188     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
213189     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
213189   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
213190     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213191     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
213192     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 872 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213193     filename _pref
213193   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
213194     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213195     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
213196    +
213197    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
213198    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
213198   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
213199    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
213200    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
213201    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
213202    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
213203    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213204     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
213205     quit;
213206     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
213207     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
213208     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
213209     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
213210     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
213211     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213212     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
213213     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213214     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
213215     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
213216     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213217     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213218     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213219     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
213220     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
213221     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213222     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
213223     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213224     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
213225     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213226     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213227     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213228     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
213229     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213230     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213231     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
213232     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
213232   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
213233     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213234     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
213235     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 911 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
213236     filename _pref
213236   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
213237     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213238     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
213239    +
213240    +
213241    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
213242    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
213243    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
213244    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
213245    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
213246    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213247    +
213248    +
213249    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
213250    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
213251    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
213252    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
213253    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
213254    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213255    +
213256    +
213257    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
213258    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
213259    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
213260    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
213261    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
213262    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213263    +
213264    +
213265    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
213266    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
213267    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
213268    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
213269    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
213270    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213271    +
213272    +
213273    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
213274    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
213275    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
213276    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
213277    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
213278    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213279    +
213280    +
213281    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
213282    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
213283    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
213284    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
213285    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
213286    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213287    +
213288    +
213289    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
213290    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
213291    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
213292    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
213293    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
213294    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213295    +
213296    +
213297    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
213298    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
213299    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
213300    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
213301    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
213302    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
213303    +if
213304    +_FILTERNORM1 not in ( '.')
213305    + and
213306    +_FILTERNORM2 not in ( '.')
213307    + and
213308    +_FILTERNORM3 not in ( '.')
213309    + and
213310    +_FILTERNORM4 not in ( '.')
213311    + and
213312    +_FILTERNORM5 not in ( '.')
213313    + and
213314    +_FILTERNORM6 not in ( '.')
213315    + and
213316    +_FILTERNORM7 not in ( ' ')
213317    + and
213318    +_FILTERNORM8 not in ( ' ')
213319    +and
213320    +( Dt_Customer ne .)
213321    +and ( Income ne . and (Income<=107000))
213322    +and ( Kidhome ne .)
213323    +and ( MntFishProducts ne .)
213324    +and ( MntFruits ne .)
213325    +and ( MntGoldProds ne .)
213326    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
213327    +and ( MntSweetProducts ne .)
213328    +and ( MntWines ne .)
213329    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
213330    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
213331    +and ( NumStorePurchases ne .)
213332    +and ( NumWebPurchases ne .)
213333    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
213334    +and ( Recency ne .)
213335    +and ( Teenhome ne .)
213336    +and ( Year_Birth ne .)
213337    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
213338    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
213339    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
213340    +end;
MPRINT(EM_DIAGRAM):   end;
213341    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
213342    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
213343     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
213344     quit;
213345     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
213346     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
213347     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
213348     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
213349     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
213350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213351     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
213352     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213354     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
213355     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213356     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
213357     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213358     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
213359     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
213360     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213361     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
213362     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
213363     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
213364     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213365     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213366     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
213367     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
213368     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
213369     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
213370     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
213371     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
213371   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
213372     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213373     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
213374     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 977 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213375     %macro varDept(fcmpdata=,id=);
213376     %global nobs&id scoreFlag&id;
213377     %let scoreFlag&id = 0;
213378     %if &id=1 or ^&fcmpStart %then %do;
213379     proc sort data=&fcmpdata out=_temp&id nodupkey;
213380     by NAME;
213381     where id=&id and LHS in( %let j=1;
213382     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
213383     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
213384     "&var" %let j = %eval(&j+1);
213385     %end;
213386     );
213387     run;
213388     %let dsid = %sysfunc(open(_temp&id));
213389     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
213390     %let dsid = %sysfunc(close(&dsid));
213391     %if &&nobs&id %then %do;
213392     %let scoreFlag&id = 1;
213393     %let fcmpStart = 1;
213394     %end;
213395     %else %let fcmpStart = 0;
213396     %end;
213397     %else %do;
213398     proc sort data=&fcmpdata out=_tempid;
213399     where id=&id;
213400     by LHS;
213401     run;
213402     %let dsid = %sysfunc(open(_tempid));
213403     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
213404     %let dsid = %sysfunc(close(&dsid));
213405     %if ^&&nobs&id %then %do;
213406     proc datasets lib=work nolist;
213407     delete _tempid;
213408     run;
213409     quit;
213410     %end;
213411     %else %do;
213412     data _tempAll;
213413     set %let j=%eval(&id-1);
213414     %do x=1 %to &j;
213415     %if &&nobs&x %then %do;
213416     _temp&x %end;
213417     %end;
213418     ;
213419     run;
213420     proc sql;
213421     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
213421   ! work._tempid p2 where p.name=p2.lhs;
213422     quit;
213423     data _temp&id;
213424     set _temp&id;
213425     where LHS ne '' and NAME ne '' and Node ne '';
213426     run;
213427     proc datasets lib=work nolist;
213428     delete _tempAll;
213429     run;
213430     %let dsid = %sysfunc(open(_temp&id));
213431     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
213432     %let dsid = %sysfunc(close(&dsid));
213433     %if ^&&nobs&id %then %do;
213434     proc datasets lib=work nolist;
213435     delete _temp&id;
213436     run;
213437     quit;
213438     %end;
213439     %else %do;
213440     %let scoreFlag&id = 1;
213441     data _temp&id;
213442     set _temp&id;
213443     where LHS ne NAME and node ne '';
213444     run;
213445     %let dsid = %sysfunc(open(_temp&id));
213446     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
213447     %let dsid = %sysfunc(close(&dsid));
213448     %if ^&&nobs&id %then %do;
213449     proc datasets lib=work nolist;
213450     delete _temp&id;
213451     run;
213452     quit;
213453     %end;
213454     %else %do;
213455     proc sort data=_temp&id nodupkey;
213456     by LHS NAME;
213457     run;
213458     %end;
213459     %end;
213460     %end;
213461     %end;
213462     %mend varDept;
213463     %macro optCode(outdata=fcmpdata);
213464     %global fcmpStart;
213465     %let fcmpStart = 0;
213466     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
213467     %let NumNodes=9;
213468     %do k=1 %to &NumNodes;
213469     %vardept(fcmpdata=&outdata, id=&k);
213470     %end;
213471     %mend optCode;
213472     %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 107 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
213473     filename _pref
213473   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
213474     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
213475     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas.
213476    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
213477    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
213478    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
213479    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
213480    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
213481    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
213482    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
213483    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
213484    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
213485    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
213486    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
213487    +LENGTH _WARN_ $4
213488    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
213489    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
213490    +
213491    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
213492    +
213493    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
213494    +
213495    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
213496    +
213497    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
213498    +
213499    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
213500    +
213501    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
213502    +
213503    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
213504    +
213505    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
213506    +
213507    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
213508    +
213509    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
213510    +
213511    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
213512    +
213513    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
213514    +
213515    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
213516    +
213517    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
213518    +
213519    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
213520    +
213521    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
213522    +
213523    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
213524    +
213525    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
213526    +
213527    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
213528    +
213529    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
213530    +
213531    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
213532    +
213533    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
213534    +
213535    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
213536    +
213537    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
213538    +
213539    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
213540    +
213541    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
213542    +
213543    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
213544    +
213545    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
213546    +
213547    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
213548    +
213549    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
213550    +
213551    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
213552    +
213553    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
213554    +
213555    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
213556    +
213557    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
213558    +
213559    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
213560    +
213561    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
213562    +
213563    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
213564    +
213565    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
213566    +
213567    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
213568    +
213569    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
213570    +
213571    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
213572    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
213573    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
213574    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
213575    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213576    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213577    +end;
MPRINT(EM_DIAGRAM):   end;
213578    +else do;
MPRINT(EM_DIAGRAM):   else do;
213579    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213580    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
213581    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213582    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
213583    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
213584    +   end;
MPRINT(EM_DIAGRAM):   end;
213585    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
213586    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
213587    +   end;
MPRINT(EM_DIAGRAM):   end;
213588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213589    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
213590    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213591    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213592    +   end;
MPRINT(EM_DIAGRAM):   end;
213593    +end;
MPRINT(EM_DIAGRAM):   end;
213594    +
213595    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
213596    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
213597    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
213598    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
213599    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213600    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213601    +end;
MPRINT(EM_DIAGRAM):   end;
213602    +else do;
MPRINT(EM_DIAGRAM):   else do;
213603    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213604    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
213605    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213606    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
213607    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
213608    +   end;
MPRINT(EM_DIAGRAM):   end;
213609    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
213610    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
213611    +   end;
MPRINT(EM_DIAGRAM):   end;
213612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213613    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
213614    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213615    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213616    +   end;
MPRINT(EM_DIAGRAM):   end;
213617    +end;
MPRINT(EM_DIAGRAM):   end;
213618    +
213619    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
213620    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
213621    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
213622    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
213623    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213625    +end;
MPRINT(EM_DIAGRAM):   end;
213626    +else do;
MPRINT(EM_DIAGRAM):   else do;
213627    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213628    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
213629    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213630    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
213631    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
213632    +   end;
MPRINT(EM_DIAGRAM):   end;
213633    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
213634    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
213635    +   end;
MPRINT(EM_DIAGRAM):   end;
213636    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213637    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
213638    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213639    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213640    +   end;
MPRINT(EM_DIAGRAM):   end;
213641    +end;
MPRINT(EM_DIAGRAM):   end;
213642    +
213643    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
213644    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
213645    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
213646    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
213647    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213648    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213649    +end;
MPRINT(EM_DIAGRAM):   end;
213650    +else do;
MPRINT(EM_DIAGRAM):   else do;
213651    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213652    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
213653    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213654    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
213655    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
213656    +   end;
MPRINT(EM_DIAGRAM):   end;
213657    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
213658    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
213659    +   end;
MPRINT(EM_DIAGRAM):   end;
213660    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213661    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
213662    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213663    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213664    +   end;
MPRINT(EM_DIAGRAM):   end;
213665    +end;
MPRINT(EM_DIAGRAM):   end;
213666    +
213667    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
213668    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
213669    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
213670    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
213671    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213672    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213673    +end;
MPRINT(EM_DIAGRAM):   end;
213674    +else do;
MPRINT(EM_DIAGRAM):   else do;
213675    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213676    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
213677    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213678    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
213679    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
213680    +   end;
MPRINT(EM_DIAGRAM):   end;
213681    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
213682    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
213683    +   end;
MPRINT(EM_DIAGRAM):   end;
213684    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213685    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
213686    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213687    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213688    +   end;
MPRINT(EM_DIAGRAM):   end;
213689    +end;
MPRINT(EM_DIAGRAM):   end;
213690    +
213691    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
213692    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
213693    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
213694    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
213695    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213697    +end;
MPRINT(EM_DIAGRAM):   end;
213698    +else do;
MPRINT(EM_DIAGRAM):   else do;
213699    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213700    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
213701    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213702    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
213703    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
213704    +   end;
MPRINT(EM_DIAGRAM):   end;
213705    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
213706    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
213707    +   end;
MPRINT(EM_DIAGRAM):   end;
213708    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213709    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
213710    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213711    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213712    +   end;
MPRINT(EM_DIAGRAM):   end;
213713    +end;
MPRINT(EM_DIAGRAM):   end;
213714    +
213715    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
213716    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
213717    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
213718    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
213719    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
213720    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
213721    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
213722    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
213723    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
213724    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
213725    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
213726    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
213727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213729    +end;
MPRINT(EM_DIAGRAM):   end;
213730    +else do;
MPRINT(EM_DIAGRAM):   else do;
213731    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
213732    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
213733    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213734    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
213735    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
213736    +   end;
MPRINT(EM_DIAGRAM):   end;
213737    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
213738    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
213739    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
213740    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
213741    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
213742    +   end;
MPRINT(EM_DIAGRAM):   end;
213743    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
213744    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
213745    +   end;
MPRINT(EM_DIAGRAM):   end;
213746    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
213747    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
213748    +   end;
MPRINT(EM_DIAGRAM):   end;
213749    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
213750    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
213751    +   end;
MPRINT(EM_DIAGRAM):   end;
213752    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213753    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
213754    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
213755    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
213756    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
213757    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213758    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213759    +   end;
MPRINT(EM_DIAGRAM):   end;
213760    +end;
MPRINT(EM_DIAGRAM):   end;
213761    +
213762    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
213763    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
213764    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
213765    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
213766    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
213767    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
213768    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
213769    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
213770    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
213771    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
213772    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
213773    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
213774    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
213775    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213777    +end;
MPRINT(EM_DIAGRAM):   end;
213778    +else do;
MPRINT(EM_DIAGRAM):   else do;
213779    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
213780    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
213781    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213782    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
213783    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
213784    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
213785    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
213786    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
213787    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
213788    +         end;
MPRINT(EM_DIAGRAM):   end;
213789    +         else do;
MPRINT(EM_DIAGRAM):   else do;
213790    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
213791    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
213792    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
213793    +            end;
MPRINT(EM_DIAGRAM):   end;
213794    +         end;
MPRINT(EM_DIAGRAM):   end;
213795    +      end;
MPRINT(EM_DIAGRAM):   end;
213796    +      else do;
MPRINT(EM_DIAGRAM):   else do;
213797    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
213798    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
213799    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
213800    +         end;
MPRINT(EM_DIAGRAM):   end;
213801    +      end;
MPRINT(EM_DIAGRAM):   end;
213802    +   end;
MPRINT(EM_DIAGRAM):   end;
213803    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213804    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
213805    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
213806    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
213807    +      end;
MPRINT(EM_DIAGRAM):   end;
213808    +      else do;
MPRINT(EM_DIAGRAM):   else do;
213809    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
213810    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
213811    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
213812    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
213813    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
213814    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
213815    +         end;
MPRINT(EM_DIAGRAM):   end;
213816    +      end;
MPRINT(EM_DIAGRAM):   end;
213817    +   end;
MPRINT(EM_DIAGRAM):   end;
213818    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
213819    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
213820    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
213821    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
213822    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
213823    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213824    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213825    +   end;
MPRINT(EM_DIAGRAM):   end;
213826    +end;
MPRINT(EM_DIAGRAM):   end;
213827    +
213828    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213829    +*** Checking missing input Interval
213830    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
213831    +
213832    +IF NMISS(
213833    +   Income ,
213834    +   Kidhome ,
213835    +   MntFishProducts ,
213836    +   MntFruits ,
213837    +   MntGoldProds ,
213838    +   MntMeatProducts ,
213839    +   MntSweetProducts ,
213840    +   MntWines ,
213841    +   NumCatalogPurchases ,
213842    +   NumDealsPurchases ,
213843    +   NumStorePurchases ,
213844    +   NumWebPurchases ,
213845    +   NumWebVisitsMonth ,
213846    +   Recency ,
213847    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
213848    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
213849    +
213850    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213851    +END;
MPRINT(EM_DIAGRAM):   END;
213852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213853    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
213854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213855    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
213856    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
213857    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
213858    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
213859    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
213860    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
213861    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
213862    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
213863    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
213864    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
213865    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
213866    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
213867    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
213868    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
213869    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
213870    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
213871    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
213872    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
213873    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
213874    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
213875    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
213876    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
213877    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
213878    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
213879    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
213880    +END;
MPRINT(EM_DIAGRAM):   END;
213881    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
213882    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
213883    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
213884    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
213885    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
213886    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
213887    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
213888    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
213889    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
213890    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
213891    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
213892    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
213893    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
213894    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
213895    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
213896    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
213897    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
213898    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
213899    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
213900    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
213901    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
213902    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
213903    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
213904    +   ELSE S_NumCatalogPurchases
213905    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
213906    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
213907    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
213908    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
213909    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
213910    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
213911    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
213912    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
213913    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
213914    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
213915    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
213916    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
213917    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
213918    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
213919    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
213920    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
213921    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
213922    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
213923    +END;
MPRINT(EM_DIAGRAM):   END;
213924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213925    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
213926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213927    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213928    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
213929    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213931    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
213932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
213933    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
213934    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
213935    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
213936    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
213937    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
213938    +          +    -0.05146617403327 * S_MntSweetProducts
213939    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
213940    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
213941    +          +     0.62863110938217 * S_NumStorePurchases
213942    +          +    -0.38696149667878 * S_NumWebPurchases
213943    +          +    -0.64969312889347 * S_NumWebVisitsMonth
213944    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
213945    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome +
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 *
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 *
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency +
-0.14927581282921 * S_Teenhome ;
213946    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
213947    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
213948    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
213949    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
213950    +          +     -0.2837867994991 * S_MntSweetProducts
213951    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
213952    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
213953    +          +    -0.54369381190341 * S_NumStorePurchases
213954    +          +     0.67406669261545 * S_NumWebPurchases
213955    +          +     0.33996696883368 * S_NumWebVisitsMonth
213956    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
213957    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome +
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 *
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases +
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases +
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth +
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
213958    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
213959    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
213960    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
213961    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
213962    +          +    -0.03465749764322 * S_MntSweetProducts
213963    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
213964    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
213965    +          +      0.4404265130137 * S_NumStorePurchases
213966    +          +     0.34042541893429 * S_NumWebPurchases
213967    +          +    -1.21549916758761 * S_NumWebVisitsMonth
213968    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
213969    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome +
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 *
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 *
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases +
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth +
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
213970    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
213971    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
213972    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
213973    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
213974    +          +    -0.00464679492565 * S_MntSweetProducts
213975    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
213976    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
213977    +          +     1.15839307615364 * S_NumStorePurchases
213978    +          +     0.62831972126136 * S_NumWebPurchases
213979    +          +    -1.61962107597882 * S_NumWebVisitsMonth
213980    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
213981    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome +
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 *
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 *
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases +
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth +
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
213982    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
213983    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
213984    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
213985    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
213986    +          +    -0.31125451894603 * S_MntSweetProducts
213987    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
213988    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
213989    +          +    -1.44151914398807 * S_NumStorePurchases
213990    +          +     -0.5455286038748 * S_NumWebPurchases
213991    +          +     0.92543573664002 * S_NumWebVisitsMonth
213992    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
213993    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome +
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 *
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 *
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency +
0.12419848895477 * S_Teenhome ;
213994    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
213995    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
213996    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
213997    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
213998    +          +    -0.44310159680843 * S_MntSweetProducts
213999    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
214000    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
214001    +          +    -0.06648303760561 * S_NumStorePurchases
214002    +          +    -0.65122349287903 * S_NumWebPurchases
214003    +          +     1.83555427093429 * S_NumWebVisitsMonth
214004    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
214005    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome +
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 *
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 *
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency +
-0.96168611481099 * S_Teenhome ;
214006    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
214007    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
214008    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
214009    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
214010    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 *
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 +
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
214011    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
214012    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
214013    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
214014    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
214015    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 *
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 +
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
214016    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
214017    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
214018    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
214019    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
214020    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 *
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 +
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
214021    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
214022    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
214023    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
214024    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
214025    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 *
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 +
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
214026    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
214027    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
214028    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
214029    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
214030    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 +
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
214031    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
214032    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
214033    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
214034    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
214035    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 +
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
214036    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
214037    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
214038    +        EducationGraduation  +     0.15082660839612 * EducationMaster
214039    +          +    -0.86711066227375 * Marital_StatusDivorced
214040    +          +     0.40837974583757 * Marital_StatusMarried
214041    +          +    -0.36026722115525 * Marital_StatusSingle
214042    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle +
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation +
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced +
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle +
0.79004200065113 * Marital_StatusTogether ;
214043    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
214044    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
214045    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
214046    +          +     0.32215787204894 * Marital_StatusDivorced
214047    +          +    -0.56445035445224 * Marital_StatusMarried
214048    +          +    -0.19089062631475 * Marital_StatusSingle
214049    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle +
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation +
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced +
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle +
-0.05879603306331 * Marital_StatusTogether ;
214050    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
214051    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
214052    +        EducationGraduation  +     0.08569631133746 * EducationMaster
214053    +          +      0.0333599428728 * Marital_StatusDivorced
214054    +          +      0.2536992094527 * Marital_StatusMarried
214055    +          +     0.28814962122223 * Marital_StatusSingle
214056    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle +
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 *
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 *
Marital_StatusTogether ;
214057    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
214058    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
214059    +        EducationGraduation  +     0.67447448653035 * EducationMaster
214060    +          +    -0.47992692297474 * Marital_StatusDivorced
214061    +          +     1.37810632485566 * Marital_StatusMarried
214062    +          +    -1.37561982457408 * Marital_StatusSingle
214063    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle +
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 *
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 *
Marital_StatusTogether ;
214064    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
214065    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
214066    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
214067    +          +     0.19162417091995 * Marital_StatusDivorced
214068    +          +    -0.36068364824761 * Marital_StatusMarried
214069    +          +    -0.12710669526743 * Marital_StatusSingle
214070    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle +
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation +
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced +
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle +
-0.01019314244777 * Marital_StatusTogether ;
214071    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
214072    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
214073    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
214074    +          +     0.23760271729717 * Marital_StatusDivorced
214075    +          +    -1.21454188572959 * Marital_StatusMarried
214076    +          +     1.24284947007232 * Marital_StatusSingle
214077    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle +
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation +
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced +
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle +
-1.39754167839201 * Marital_StatusTogether ;
214078    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
214079    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
214080    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
214081    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
214082    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
214083    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
214084    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
214085    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
214086    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
214087    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
214088    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
214089    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
214090    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
214091    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
214092    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
214093    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
214094    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
214095    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
214096    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
214097    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
214098    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
214099    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
214100    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
214101    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
214102    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
214103    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
214104    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
214105    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
214106    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
214107    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
214108    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
214109    +END;
MPRINT(EM_DIAGRAM):   END;
214110    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214111    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
214112    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
214113    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
214114    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
214115    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
214116    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
214117    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
214118    +END;
MPRINT(EM_DIAGRAM):   END;
214119    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214120    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
214121    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214122    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
214123    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
214124    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
214125    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
214126    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 +
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 +
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
214127    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
214128    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
214129    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
214130    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
214131    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
214132    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
214133    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
214134    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
214135    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
214136    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
214137    +END;
MPRINT(EM_DIAGRAM):   END;
214138    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214139    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
214140    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
214141    +END;
MPRINT(EM_DIAGRAM):   END;
214142    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
214143    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
214144    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
214145    +END;
MPRINT(EM_DIAGRAM):   END;
214146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214147    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
214148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214149    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
214150    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
214151    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
214152    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
214153    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
214154    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
214155    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
214156    +END;
MPRINT(EM_DIAGRAM):   END;
214157    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
214158    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
214159    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
214160    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
214161     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
214162     quit;
214163     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
214164     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
214165     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
214166     retain ID 2 Node "AutoNeural43";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural43";
214167     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
214168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214169     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
214170     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214172     proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME
CREATOR);
214173     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214174     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214175     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214176     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
214177     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
214178     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214179     proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
214180     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
214181     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
214182     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214184     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214185     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
214186     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214187     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 60 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214188     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
214189     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
214189   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1212 rows and 5 columns.
 
214190     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
214191     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
214192     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1212 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1212 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214193     filename _pref
214193   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
214194     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
214195     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
214196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214197    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
214198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214199    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
214200    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
214201    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
214202     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
214203     quit;
214204     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
214205     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
214206     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
214207     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
214208     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
214209     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214210     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
214211     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214212     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214213     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
214214     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214215     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214216     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214217     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
214218     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
214219     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214220     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
214221     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
214222     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
214223     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214224     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214225     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214226     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
214227     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214228     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
214229     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
214230     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
214230   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
214231     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214232     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
214233     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1216 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214234     filename _pref
214234   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
214235     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
214236     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
214237    +
214238    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
214239    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
214239   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
214240    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
214241    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
214242    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
214243    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
214244    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
214245     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
214246     quit;
214247     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
214248     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
214249     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
214250     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
214251     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
214252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214253     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
214254     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214255     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214256     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
214257     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214258     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214259     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214260     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
214261     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
214262     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214263     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
214264     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214265     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
214266     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214267     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
214268     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214269     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
214270     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214271     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214272     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
214273     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
214273   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
214274     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214275     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
214276     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1255 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214277     filename _pref
214277   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
214278     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
214279     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
214280    +
214281    +
214282    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
214283    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
214284    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
214285    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
214286    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
214287    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214288    +
214289    +
214290    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
214291    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
214292    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
214293    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
214294    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
214295    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214296    +
214297    +
214298    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
214299    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
214300    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
214301    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
214302    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
214303    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214304    +
214305    +
214306    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
214307    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
214308    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
214309    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
214310    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
214311    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214312    +
214313    +
214314    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
214315    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
214316    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
214317    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
214318    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
214319    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214320    +
214321    +
214322    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
214323    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
214324    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
214325    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
214326    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
214327    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214328    +
214329    +
214330    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
214331    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
214332    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
214333    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
214334    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
214335    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214336    +
214337    +
214338    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
214339    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
214340    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
214341    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
214342    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
214343    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
214344    +if
214345    +_FILTERNORM1 not in ( '.')
214346    + and
214347    +_FILTERNORM2 not in ( '.')
214348    + and
214349    +_FILTERNORM3 not in ( '.')
214350    + and
214351    +_FILTERNORM4 not in ( '.')
214352    + and
214353    +_FILTERNORM5 not in ( '.')
214354    + and
214355    +_FILTERNORM6 not in ( '.')
214356    + and
214357    +_FILTERNORM7 not in ( ' ')
214358    + and
214359    +_FILTERNORM8 not in ( ' ')
214360    +and
214361    +( Dt_Customer ne .)
214362    +and ( Income ne . and (Income<=107000))
214363    +and ( Kidhome ne .)
214364    +and ( MntFishProducts ne .)
214365    +and ( MntFruits ne .)
214366    +and ( MntGoldProds ne .)
214367    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
214368    +and ( MntSweetProducts ne .)
214369    +and ( MntWines ne .)
214370    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
214371    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
214372    +and ( NumStorePurchases ne .)
214373    +and ( NumWebPurchases ne .)
214374    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
214375    +and ( Recency ne .)
214376    +and ( Teenhome ne .)
214377    +and ( Year_Birth ne .)
214378    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
214379    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
214380    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
214381    +end;
MPRINT(EM_DIAGRAM):   end;
214382    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
214383    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
214384     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
214385     quit;
214386     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
214387     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
214388     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
214389     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
214390     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
214391     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214392     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
214393     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214394     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214395     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
214396     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214397     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214398     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214399     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
214400     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
214401     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214402     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
214403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
214404     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
214405     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
214407     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
214408     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
214409     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
214410     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214411     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
214412     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
214412   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
214413     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
214414     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
214415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1321 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
214416     %macro varDept(fcmpdata=,id=);
214417     %global nobs&id scoreFlag&id;
214418     %let scoreFlag&id = 0;
214419     %if &id=1 or ^&fcmpStart %then %do;
214420     proc sort data=&fcmpdata out=_temp&id nodupkey;
214421     by NAME;
214422     where id=&id and LHS in( %let j=1;
214423     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
214424     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
214425     "&var" %let j = %eval(&j+1);
214426     %end;
214427     );
214428     run;
214429     %let dsid = %sysfunc(open(_temp&id));
214430     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214431     %let dsid = %sysfunc(close(&dsid));
214432     %if &&nobs&id %then %do;
214433     %let scoreFlag&id = 1;
214434     %let fcmpStart = 1;
214435     %end;
214436     %else %let fcmpStart = 0;
214437     %end;
214438     %else %do;
214439     proc sort data=&fcmpdata out=_tempid;
214440     where id=&id;
214441     by LHS;
214442     run;
214443     %let dsid = %sysfunc(open(_tempid));
214444     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214445     %let dsid = %sysfunc(close(&dsid));
214446     %if ^&&nobs&id %then %do;
214447     proc datasets lib=work nolist;
214448     delete _tempid;
214449     run;
214450     quit;
214451     %end;
214452     %else %do;
214453     data _tempAll;
214454     set %let j=%eval(&id-1);
214455     %do x=1 %to &j;
214456     %if &&nobs&x %then %do;
214457     _temp&x %end;
214458     %end;
214459     ;
214460     run;
214461     proc sql;
214462     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
214462   ! work._tempid p2 where p.name=p2.lhs;
214463     quit;
214464     data _temp&id;
214465     set _temp&id;
214466     where LHS ne '' and NAME ne '' and Node ne '';
214467     run;
214468     proc datasets lib=work nolist;
214469     delete _tempAll;
214470     run;
214471     %let dsid = %sysfunc(open(_temp&id));
214472     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214473     %let dsid = %sysfunc(close(&dsid));
214474     %if ^&&nobs&id %then %do;
214475     proc datasets lib=work nolist;
214476     delete _temp&id;
214477     run;
214478     quit;
214479     %end;
214480     %else %do;
214481     %let scoreFlag&id = 1;
214482     data _temp&id;
214483     set _temp&id;
214484     where LHS ne NAME and node ne '';
214485     run;
214486     %let dsid = %sysfunc(open(_temp&id));
214487     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
214488     %let dsid = %sysfunc(close(&dsid));
214489     %if ^&&nobs&id %then %do;
214490     proc datasets lib=work nolist;
214491     delete _temp&id;
214492     run;
214493     quit;
214494     %end;
214495     %else %do;
214496     proc sort data=_temp&id nodupkey;
214497     by LHS NAME;
214498     run;
214499     %end;
214500     %end;
214501     %end;
214502     %end;
214503     %mend varDept;
214504     %macro optCode(outdata=fcmpdata);
214505     %global fcmpStart;
214506     %let fcmpStart = 0;
214507     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
214508     %let NumNodes=9;
214509     %do k=1 %to &NumNodes;
214510     %vardept(fcmpdata=&outdata, id=&k);
214511     %end;
214512     %mend optCode;
214513     %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 119 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 87 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
214514     filename _pref
214514   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
214515     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
214516     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
214517    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
214518    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
214519    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
214520    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
214521    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
214522    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
214523    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
214524    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
214525    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
214526    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
214527    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
214528    +LENGTH _WARN_ $4
214529    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
214530    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
214531    +
214532    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
214533    +
214534    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
214535    +
214536    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
214537    +
214538    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
214539    +
214540    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
214541    +
214542    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
214543    +
214544    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
214545    +
214546    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
214547    +
214548    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
214549    +
214550    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
214551    +
214552    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
214553    +
214554    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
214555    +
214556    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
214557    +
214558    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
214559    +
214560    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
214561    +
214562    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
214563    +
214564    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
214565    +
214566    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
214567    +
214568    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
214569    +
214570    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
214571    +
214572    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
214573    +
214574    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
214575    +
214576    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
214577    +
214578    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
214579    +
214580    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
214581    +
214582    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
214583    +
214584    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
214585    +
214586    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
214587    +
214588    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
214589    +
214590    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
214591    +
214592    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
214593    +
214594    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
214595    +
214596    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
214597    +
214598    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
214599    +
214600    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
214601    +
214602    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
214603    +
214604    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
214605    +
214606    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
214607    +
214608    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
214609    +
214610    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
214611    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
214612    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
214613    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
214614    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214615    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214616    +end;
MPRINT(EM_DIAGRAM):   end;
214617    +else do;
MPRINT(EM_DIAGRAM):   else do;
214618    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214619    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
214620    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214621    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
214622    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
214623    +   end;
MPRINT(EM_DIAGRAM):   end;
214624    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
214625    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
214626    +   end;
MPRINT(EM_DIAGRAM):   end;
214627    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214628    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
214629    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214630    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214631    +   end;
MPRINT(EM_DIAGRAM):   end;
214632    +end;
MPRINT(EM_DIAGRAM):   end;
214633    +
214634    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
214635    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
214636    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
214637    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
214638    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214639    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214640    +end;
MPRINT(EM_DIAGRAM):   end;
214641    +else do;
MPRINT(EM_DIAGRAM):   else do;
214642    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214643    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
214644    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214645    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
214646    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
214647    +   end;
MPRINT(EM_DIAGRAM):   end;
214648    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
214649    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
214650    +   end;
MPRINT(EM_DIAGRAM):   end;
214651    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214652    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
214653    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214654    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214655    +   end;
MPRINT(EM_DIAGRAM):   end;
214656    +end;
MPRINT(EM_DIAGRAM):   end;
214657    +
214658    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
214659    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
214660    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
214661    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
214662    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214663    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214664    +end;
MPRINT(EM_DIAGRAM):   end;
214665    +else do;
MPRINT(EM_DIAGRAM):   else do;
214666    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214667    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
214668    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214669    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
214670    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
214671    +   end;
MPRINT(EM_DIAGRAM):   end;
214672    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
214673    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
214674    +   end;
MPRINT(EM_DIAGRAM):   end;
214675    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214676    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
214677    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214678    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214679    +   end;
MPRINT(EM_DIAGRAM):   end;
214680    +end;
MPRINT(EM_DIAGRAM):   end;
214681    +
214682    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
214683    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
214684    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
214685    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
214686    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214687    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214688    +end;
MPRINT(EM_DIAGRAM):   end;
214689    +else do;
MPRINT(EM_DIAGRAM):   else do;
214690    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214691    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
214692    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214693    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
214694    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
214695    +   end;
MPRINT(EM_DIAGRAM):   end;
214696    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
214697    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
214698    +   end;
MPRINT(EM_DIAGRAM):   end;
214699    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214700    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
214701    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214702    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214703    +   end;
MPRINT(EM_DIAGRAM):   end;
214704    +end;
MPRINT(EM_DIAGRAM):   end;
214705    +
214706    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
214707    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
214708    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
214709    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
214710    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214711    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214712    +end;
MPRINT(EM_DIAGRAM):   end;
214713    +else do;
MPRINT(EM_DIAGRAM):   else do;
214714    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214715    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
214716    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214717    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
214718    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
214719    +   end;
MPRINT(EM_DIAGRAM):   end;
214720    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
214721    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
214722    +   end;
MPRINT(EM_DIAGRAM):   end;
214723    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214724    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
214725    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214726    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214727    +   end;
MPRINT(EM_DIAGRAM):   end;
214728    +end;
MPRINT(EM_DIAGRAM):   end;
214729    +
214730    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
214731    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
214732    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
214733    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
214734    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214735    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214736    +end;
MPRINT(EM_DIAGRAM):   end;
214737    +else do;
MPRINT(EM_DIAGRAM):   else do;
214738    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214739    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
214740    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214741    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
214742    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
214743    +   end;
MPRINT(EM_DIAGRAM):   end;
214744    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
214745    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
214746    +   end;
MPRINT(EM_DIAGRAM):   end;
214747    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214748    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
214749    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214750    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214751    +   end;
MPRINT(EM_DIAGRAM):   end;
214752    +end;
MPRINT(EM_DIAGRAM):   end;
214753    +
214754    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
214755    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
214756    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
214757    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
214758    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
214759    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
214760    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
214761    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
214762    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
214763    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
214764    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
214765    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
214766    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214767    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214768    +end;
MPRINT(EM_DIAGRAM):   end;
214769    +else do;
MPRINT(EM_DIAGRAM):   else do;
214770    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
214771    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
214772    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214773    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
214774    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
214775    +   end;
MPRINT(EM_DIAGRAM):   end;
214776    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
214777    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
214778    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
214779    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
214780    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
214781    +   end;
MPRINT(EM_DIAGRAM):   end;
214782    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
214783    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
214784    +   end;
MPRINT(EM_DIAGRAM):   end;
214785    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
214786    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
214787    +   end;
MPRINT(EM_DIAGRAM):   end;
214788    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
214789    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
214790    +   end;
MPRINT(EM_DIAGRAM):   end;
214791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214792    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
214793    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
214794    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
214795    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
214796    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214797    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214798    +   end;
MPRINT(EM_DIAGRAM):   end;
214799    +end;
MPRINT(EM_DIAGRAM):   end;
214800    +
214801    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
214802    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
214803    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
214804    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
214805    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
214806    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
214807    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
214808    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
214809    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
214810    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
214811    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
214812    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
214813    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
214814    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214815    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214816    +end;
MPRINT(EM_DIAGRAM):   end;
214817    +else do;
MPRINT(EM_DIAGRAM):   else do;
214818    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
214819    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
214820    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214821    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
214822    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
214823    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
214824    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
214825    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
214826    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
214827    +         end;
MPRINT(EM_DIAGRAM):   end;
214828    +         else do;
MPRINT(EM_DIAGRAM):   else do;
214829    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
214830    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
214831    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
214832    +            end;
MPRINT(EM_DIAGRAM):   end;
214833    +         end;
MPRINT(EM_DIAGRAM):   end;
214834    +      end;
MPRINT(EM_DIAGRAM):   end;
214835    +      else do;
MPRINT(EM_DIAGRAM):   else do;
214836    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
214837    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
214838    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
214839    +         end;
MPRINT(EM_DIAGRAM):   end;
214840    +      end;
MPRINT(EM_DIAGRAM):   end;
214841    +   end;
MPRINT(EM_DIAGRAM):   end;
214842    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214843    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
214844    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
214845    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
214846    +      end;
MPRINT(EM_DIAGRAM):   end;
214847    +      else do;
MPRINT(EM_DIAGRAM):   else do;
214848    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
214849    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
214850    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
214851    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
214852    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
214853    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
214854    +         end;
MPRINT(EM_DIAGRAM):   end;
214855    +      end;
MPRINT(EM_DIAGRAM):   end;
214856    +   end;
MPRINT(EM_DIAGRAM):   end;
214857    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
214858    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
214859    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
214860    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
214861    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
214862    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214863    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214864    +   end;
MPRINT(EM_DIAGRAM):   end;
214865    +end;
MPRINT(EM_DIAGRAM):   end;
214866    +
214867    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214868    +*** Checking missing input Interval
214869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
214870    +
214871    +IF NMISS(
214872    +   Income ,
214873    +   Kidhome ,
214874    +   MntFishProducts ,
214875    +   MntFruits ,
214876    +   MntGoldProds ,
214877    +   MntMeatProducts ,
214878    +   MntSweetProducts ,
214879    +   MntWines ,
214880    +   NumCatalogPurchases ,
214881    +   NumDealsPurchases ,
214882    +   NumStorePurchases ,
214883    +   NumWebPurchases ,
214884    +   NumWebVisitsMonth ,
214885    +   Recency ,
214886    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
214887    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
214888    +
214889    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214890    +END;
MPRINT(EM_DIAGRAM):   END;
214891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214892    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
214893    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214894    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
214895    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
214896    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
214897    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
214898    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
214899    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
214900    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
214901    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
214902    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
214903    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
The SAS System
 
214904    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
214905    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
214906    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
214907    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
214908    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
214909    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
214910    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
214911    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
214912    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
214913    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
214914    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
214915    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
214916    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
214917    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
214918    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
214919    +END;
MPRINT(EM_DIAGRAM):   END;
214920    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214921    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
214922    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
214923    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
214924    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
214925    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
214926    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
214927    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
214928    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
214929    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
214930    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
214931    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
214932    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
214933    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
214934    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
214935    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
214936    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
214937    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
214938    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
214939    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
214940    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
214941    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
214942    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
214943    +   ELSE S_NumCatalogPurchases
214944    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
214945    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
214946    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
214947    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
214948    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
214949    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
214950    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
214951    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
214952    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
214953    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
214954    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
214955    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
214956    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
214957    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
214958    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
214959    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
214960    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
214961    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
214962    +END;
MPRINT(EM_DIAGRAM):   END;
214963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214964    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
214965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214967    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
214968    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214970    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
214971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214972    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
214973    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
214974    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
214975    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
214976    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
214977    +          +     0.13203247258141 * S_MntSweetProducts
214978    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
214979    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
214980    +          +     1.48881174203434 * S_NumStorePurchases
214981    +          +     2.06403591844726 * S_NumWebPurchases
214982    +          +    -0.09535558759694 * S_NumWebVisitsMonth
214983    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
214984    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
214985    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
214986    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
214987    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
214988    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
214989    +          +      0.3852767951223 * S_MntSweetProducts
214990    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
214991    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
214992    +          +     0.87686526091024 * S_NumStorePurchases
214993    +          +     0.48807967312664 * S_NumWebPurchases
214994    +          +     2.42770807785792 * S_NumWebVisitsMonth
214995    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
214996    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
214997    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
214998    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
214999    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
215000    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
215001    +          +      0.4461192743946 * S_MntSweetProducts
215002    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
215003    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
215004    +          +     1.26831094932108 * S_NumStorePurchases
215005    +          +     0.50819627174451 * S_NumWebPurchases
215006    +          +      0.5463426309003 * S_NumWebVisitsMonth
215007    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
215008    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
215009    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
215010    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
215011    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
215012    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
215013    +          +     0.73630834236265 * S_MntSweetProducts
215014    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
215015    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
215016    +          +     2.08815797619397 * S_NumStorePurchases
215017    +          +     1.47250122683369 * S_NumWebPurchases
215018    +          +    -1.95745344341946 * S_NumWebVisitsMonth
215019    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
215020    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
215021    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
215022    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
215023    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
215024    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
215025    +          +    -0.23438993753342 * S_MntSweetProducts
215026    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
215027    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
215028    +          +    -0.49697408067153 * S_NumStorePurchases
215029    +          +     0.41091736049576 * S_NumWebPurchases
215030    +          +     1.61180593172142 * S_NumWebVisitsMonth
215031    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
215032    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
215033    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
215034    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
215035    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
215036    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
215037    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
215038    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
215039    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
215040    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
215041    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
215042    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
215043    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
215044    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
215045    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
215046    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
215047    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
215048    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
215049    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
215050    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
215051    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
215052    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
215053    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
215054    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
215055    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
215056    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
215057    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
215058    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
215059    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
215060    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
215061    +          +    -0.14951932081311 * Marital_StatusDivorced
215062    +          +     0.08343648358981 * Marital_StatusMarried
215063    +          +    -0.52143432598374 * Marital_StatusSingle
215064    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
215065    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
215066    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
215067    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
215068    +          +    -0.34495973695408 * Marital_StatusDivorced
215069    +          +    -0.30910829853532 * Marital_StatusMarried
215070    +          +     0.14431404541055 * Marital_StatusSingle
215071    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
215072    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
215073    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
215074    +        EducationGraduation  +     0.05582780345024 * EducationMaster
215075    +          +     0.81191732290197 * Marital_StatusDivorced
215076    +          +    -2.53108753227171 * Marital_StatusMarried
215077    +          +     2.21769123178832 * Marital_StatusSingle
215078    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
215079    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
215080    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
215081    +        EducationGraduation  +     0.52527957409681 * EducationMaster
215082    +          +    -1.26246836163545 * Marital_StatusDivorced
215083    +          +     0.73147045162506 * Marital_StatusMarried
215084    +          +     0.04252836823306 * Marital_StatusSingle
215085    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
215086    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
215087    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
215088    +        EducationGraduation  +      0.0979905405754 * EducationMaster
215089    +          +    -0.25571808514992 * Marital_StatusDivorced
215090    +          +     0.20684027342845 * Marital_StatusMarried
215091    +          +    -0.36983627747986 * Marital_StatusSingle
215092    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
215093    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
215094    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
215095    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
215096    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
215097    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
215098    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
215099    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
215100    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
215101    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
215102    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
215103    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
215104    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
215105    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
215106    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
215107    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
215108    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
215109    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
215110    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
215111    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
215112    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
215113    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
215114    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
215115    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
215116    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
215117    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
215118    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
215119    +END;
MPRINT(EM_DIAGRAM):   END;
215120    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
215121    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
215122    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
215123    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
215124    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
215125    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
215126    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
215127    +END;
MPRINT(EM_DIAGRAM):   END;
215128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215129    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
215130    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215131    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
215132    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
215133    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
215134    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
215135    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
215136    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
215137    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
215138    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
215139    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
215140    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
215141    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
215142    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
215143    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
215144    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
215145    +END;
MPRINT(EM_DIAGRAM):   END;
215146    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
215147    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
215148    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
215149    +END;
MPRINT(EM_DIAGRAM):   END;
215150    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
215151    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
215152    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
215153    +END;
MPRINT(EM_DIAGRAM):   END;
215154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215155    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
215156    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215157    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
215158    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
215159    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
215160    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
215161    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
215162    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
215163    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
215164    +END;
MPRINT(EM_DIAGRAM):   END;
215165    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
215166    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
215167    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
215168    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
215169     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
215170     quit;
215171     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
215172     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
215173     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
215174     retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
215175     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
215176     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215177     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
215178     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215179     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215180     proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME
CREATOR);
215181     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215182     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215183     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215184     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
215185     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
215186     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215187     proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
215188     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215189     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
215190     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215191     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215192     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215193     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
215194     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215195     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215196     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
215197     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
215197   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1126 rows and 5 columns.
 
215198     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215199     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
215200     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1126 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1126 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215201     filename _pref
215201   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
215202     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
215203     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
215204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215205    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
215206    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215207    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
215208    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
215209    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
215210     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
215211     quit;
215212     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
215213     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
215214     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
215215     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
215216     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
215217     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215218     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
215219     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215220     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215221     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
215222     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215223     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215224     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215225     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
215226     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
215227     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215228     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
215229     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215230     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
215231     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215232     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
215233     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215234     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
215235     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215236     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215237     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
215238     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
215238   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
215239     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215240     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
215241     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215242     filename _pref
215242   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
215243     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
215244     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
215245    +
215246    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
215247    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
215247   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
215248    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
215249    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
215250    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
215251    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
215252    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
215253     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
215254     quit;
215255     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
215256     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
215257     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
215258     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
215259     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
215260     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215261     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
215262     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215263     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215264     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
215265     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215266     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215267     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215268     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
215269     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
215270     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215271     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
215272     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215273     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
215274     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215275     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215276     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215277     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
215278     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215279     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
215280     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
215281     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
215281   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
215282     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215283     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
215284     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1169 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215285     filename _pref
215285   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
215286     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
215287     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
215288    +
215289    +
215290    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
215291    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
215292    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
215293    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
215294    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
215295    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215296    +
215297    +
215298    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
215299    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
215300    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
215301    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
215302    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
215303    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215304    +
215305    +
215306    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
215307    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
215308    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
215309    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
215310    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
215311    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215312    +
215313    +
215314    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
215315    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
215316    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
215317    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
215318    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
215319    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215320    +
215321    +
215322    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
215323    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
215324    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
215325    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
215326    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
215327    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215328    +
215329    +
215330    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
215331    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
215332    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
215333    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
215334    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
215335    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215336    +
215337    +
215338    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
215339    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
215340    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
215341    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
215342    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
215343    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215344    +
215345    +
215346    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
215347    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
215348    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
215349    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
215350    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
215351    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215352    +if
215353    +_FILTERNORM1 not in ( '.')
215354    + and
215355    +_FILTERNORM2 not in ( '.')
215356    + and
215357    +_FILTERNORM3 not in ( '.')
215358    + and
215359    +_FILTERNORM4 not in ( '.')
215360    + and
215361    +_FILTERNORM5 not in ( '.')
215362    + and
215363    +_FILTERNORM6 not in ( '.')
215364    + and
215365    +_FILTERNORM7 not in ( ' ')
215366    + and
215367    +_FILTERNORM8 not in ( ' ')
215368    +and
215369    +( Dt_Customer ne .)
215370    +and ( Income ne . and (Income<=107000))
215371    +and ( Kidhome ne .)
215372    +and ( MntFishProducts ne .)
215373    +and ( MntFruits ne .)
215374    +and ( MntGoldProds ne .)
215375    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
215376    +and ( MntSweetProducts ne .)
215377    +and ( MntWines ne .)
215378    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
215379    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
215380    +and ( NumStorePurchases ne .)
215381    +and ( NumWebPurchases ne .)
215382    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
215383    +and ( Recency ne .)
215384    +and ( Teenhome ne .)
215385    +and ( Year_Birth ne .)
215386    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
215387    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
215388    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
215389    +end;
MPRINT(EM_DIAGRAM):   end;
215390    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
215391    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
215392     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
215393     quit;
215394     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
215395     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
215396     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
215397     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
215398     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
215399     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215400     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
215401     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215402     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215403     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
215404     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215405     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215406     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215407     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
215408     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
215409     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215410     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
215411     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
215412     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
215413     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215414     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215415     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
215416     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
215417     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
215418     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
215419     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
215420     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
215420   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
215421     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215422     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
215423     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1235 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
215424     %macro varDept(fcmpdata=,id=);
215425     %global nobs&id scoreFlag&id;
215426     %let scoreFlag&id = 0;
215427     %if &id=1 or ^&fcmpStart %then %do;
215428     proc sort data=&fcmpdata out=_temp&id nodupkey;
215429     by NAME;
215430     where id=&id and LHS in( %let j=1;
215431     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
215432     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
215433     "&var" %let j = %eval(&j+1);
215434     %end;
215435     );
215436     run;
215437     %let dsid = %sysfunc(open(_temp&id));
215438     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
215439     %let dsid = %sysfunc(close(&dsid));
215440     %if &&nobs&id %then %do;
215441     %let scoreFlag&id = 1;
215442     %let fcmpStart = 1;
215443     %end;
215444     %else %let fcmpStart = 0;
215445     %end;
215446     %else %do;
215447     proc sort data=&fcmpdata out=_tempid;
215448     where id=&id;
215449     by LHS;
215450     run;
215451     %let dsid = %sysfunc(open(_tempid));
215452     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
215453     %let dsid = %sysfunc(close(&dsid));
215454     %if ^&&nobs&id %then %do;
215455     proc datasets lib=work nolist;
215456     delete _tempid;
215457     run;
215458     quit;
215459     %end;
215460     %else %do;
215461     data _tempAll;
215462     set %let j=%eval(&id-1);
215463     %do x=1 %to &j;
215464     %if &&nobs&x %then %do;
215465     _temp&x %end;
215466     %end;
215467     ;
215468     run;
215469     proc sql;
215470     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
215470   ! work._tempid p2 where p.name=p2.lhs;
215471     quit;
215472     data _temp&id;
215473     set _temp&id;
215474     where LHS ne '' and NAME ne '' and Node ne '';
215475     run;
215476     proc datasets lib=work nolist;
215477     delete _tempAll;
215478     run;
215479     %let dsid = %sysfunc(open(_temp&id));
215480     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
215481     %let dsid = %sysfunc(close(&dsid));
215482     %if ^&&nobs&id %then %do;
215483     proc datasets lib=work nolist;
215484     delete _temp&id;
215485     run;
215486     quit;
215487     %end;
215488     %else %do;
215489     %let scoreFlag&id = 1;
215490     data _temp&id;
215491     set _temp&id;
215492     where LHS ne NAME and node ne '';
215493     run;
215494     %let dsid = %sysfunc(open(_temp&id));
215495     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
215496     %let dsid = %sysfunc(close(&dsid));
215497     %if ^&&nobs&id %then %do;
215498     proc datasets lib=work nolist;
215499     delete _temp&id;
215500     run;
215501     quit;
215502     %end;
215503     %else %do;
215504     proc sort data=_temp&id nodupkey;
215505     by LHS NAME;
215506     run;
215507     %end;
215508     %end;
215509     %end;
215510     %end;
215511     %mend varDept;
215512     %macro optCode(outdata=fcmpdata);
215513     %global fcmpStart;
215514     %let fcmpStart = 0;
215515     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
215516     %let NumNodes=9;
215517     %do k=1 %to &NumNodes;
215518     %vardept(fcmpdata=&outdata, id=&k);
215519     %end;
215520     %mend optCode;
215521     %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
215522     filename _pref
215522   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
215523     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
215524     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas.
215525    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
215526    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
215527    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
215528    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
215529    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
215530    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
215531    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
215532    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
215533    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
215534    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
215535    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
215536    +LENGTH _WARN_ $4
215537    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
215538    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
215539    +
215540    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
215541    +
215542    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
215543    +
215544    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
215545    +
215546    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
215547    +
215548    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
215549    +
215550    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
215551    +
215552    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
215553    +
215554    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
215555    +
215556    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
215557    +
215558    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
215559    +
215560    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
215561    +
215562    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
215563    +
215564    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
215565    +
215566    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
215567    +
215568    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
215569    +
215570    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
215571    +
215572    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
215573    +
215574    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
215575    +
215576    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
215577    +
215578    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
215579    +
215580    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
215581    +
215582    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
215583    +
215584    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
215585    +
215586    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
215587    +
215588    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
215589    +
215590    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
215591    +
215592    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
215593    +
215594    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
215595    +
215596    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
215597    +
215598    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
215599    +
215600    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
215601    +
215602    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
215603    +
215604    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
215605    +
215606    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
215607    +
215608    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
215609    +
215610    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
215611    +
215612    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
215613    +
215614    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
215615    +
215616    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
215617    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
215618    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
215619    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
215620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215622    +end;
MPRINT(EM_DIAGRAM):   end;
215623    +else do;
MPRINT(EM_DIAGRAM):   else do;
215624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215625    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
215626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215627    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
215628    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
215629    +   end;
MPRINT(EM_DIAGRAM):   end;
215630    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
215631    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
215632    +   end;
MPRINT(EM_DIAGRAM):   end;
215633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215634    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
215635    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215636    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215637    +   end;
MPRINT(EM_DIAGRAM):   end;
215638    +end;
MPRINT(EM_DIAGRAM):   end;
215639    +
215640    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
215641    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
215642    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
215643    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
215644    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215645    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215646    +end;
MPRINT(EM_DIAGRAM):   end;
215647    +else do;
MPRINT(EM_DIAGRAM):   else do;
215648    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215649    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
215650    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215651    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
215652    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
215653    +   end;
MPRINT(EM_DIAGRAM):   end;
215654    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
215655    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
215656    +   end;
MPRINT(EM_DIAGRAM):   end;
215657    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215658    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
215659    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215660    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215661    +   end;
MPRINT(EM_DIAGRAM):   end;
215662    +end;
MPRINT(EM_DIAGRAM):   end;
215663    +
215664    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
215665    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
215666    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
215667    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
215668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215670    +end;
MPRINT(EM_DIAGRAM):   end;
215671    +else do;
MPRINT(EM_DIAGRAM):   else do;
215672    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215673    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
215674    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215675    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
215676    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
215677    +   end;
MPRINT(EM_DIAGRAM):   end;
215678    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
215679    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
215680    +   end;
MPRINT(EM_DIAGRAM):   end;
215681    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215682    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
215683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215685    +   end;
MPRINT(EM_DIAGRAM):   end;
215686    +end;
MPRINT(EM_DIAGRAM):   end;
215687    +
215688    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
215689    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
215690    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
215691    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
215692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215694    +end;
MPRINT(EM_DIAGRAM):   end;
215695    +else do;
MPRINT(EM_DIAGRAM):   else do;
215696    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215697    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
215698    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215699    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
215700    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
215701    +   end;
MPRINT(EM_DIAGRAM):   end;
215702    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
215703    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
215704    +   end;
MPRINT(EM_DIAGRAM):   end;
215705    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215706    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
215707    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215708    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215709    +   end;
MPRINT(EM_DIAGRAM):   end;
215710    +end;
MPRINT(EM_DIAGRAM):   end;
215711    +
215712    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
215713    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
215714    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
215715    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
215716    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215717    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215718    +end;
MPRINT(EM_DIAGRAM):   end;
215719    +else do;
MPRINT(EM_DIAGRAM):   else do;
215720    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215721    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
215722    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215723    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
215724    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
215725    +   end;
MPRINT(EM_DIAGRAM):   end;
215726    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
215727    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
215728    +   end;
MPRINT(EM_DIAGRAM):   end;
215729    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215730    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
215731    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215732    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215733    +   end;
MPRINT(EM_DIAGRAM):   end;
215734    +end;
MPRINT(EM_DIAGRAM):   end;
215735    +
215736    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
215737    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
215738    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
215739    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
215740    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215741    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215742    +end;
MPRINT(EM_DIAGRAM):   end;
215743    +else do;
MPRINT(EM_DIAGRAM):   else do;
215744    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215745    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
215746    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215747    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
215748    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
215749    +   end;
MPRINT(EM_DIAGRAM):   end;
215750    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
215751    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
215752    +   end;
MPRINT(EM_DIAGRAM):   end;
215753    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215754    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
215755    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215756    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215757    +   end;
MPRINT(EM_DIAGRAM):   end;
215758    +end;
MPRINT(EM_DIAGRAM):   end;
215759    +
215760    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
215761    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
215762    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
215763    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
215764    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
215765    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
215766    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
215767    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
215768    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
215769    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
215770    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
215771    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
215772    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215773    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215774    +end;
MPRINT(EM_DIAGRAM):   end;
215775    +else do;
MPRINT(EM_DIAGRAM):   else do;
215776    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
215777    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
215778    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215779    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
215780    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
215781    +   end;
MPRINT(EM_DIAGRAM):   end;
215782    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
215783    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
215784    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
215785    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
215786    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
215787    +   end;
MPRINT(EM_DIAGRAM):   end;
215788    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
215789    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
215790    +   end;
MPRINT(EM_DIAGRAM):   end;
215791    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
215792    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
215793    +   end;
MPRINT(EM_DIAGRAM):   end;
215794    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
215795    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
215796    +   end;
MPRINT(EM_DIAGRAM):   end;
215797    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215798    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
215799    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
215800    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
215801    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
215802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215804    +   end;
MPRINT(EM_DIAGRAM):   end;
215805    +end;
MPRINT(EM_DIAGRAM):   end;
215806    +
215807    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
215808    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
215809    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
215810    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
215811    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
215812    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
215813    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
215814    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
215815    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
215816    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
215817    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
215818    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
215819    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
215820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215822    +end;
MPRINT(EM_DIAGRAM):   end;
215823    +else do;
MPRINT(EM_DIAGRAM):   else do;
215824    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
215825    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
215826    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215827    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
215828    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
215829    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
215830    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
215831    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
215832    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
215833    +         end;
MPRINT(EM_DIAGRAM):   end;
215834    +         else do;
MPRINT(EM_DIAGRAM):   else do;
215835    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
215836    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
215837    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
215838    +            end;
MPRINT(EM_DIAGRAM):   end;
215839    +         end;
MPRINT(EM_DIAGRAM):   end;
215840    +      end;
MPRINT(EM_DIAGRAM):   end;
215841    +      else do;
MPRINT(EM_DIAGRAM):   else do;
215842    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
215843    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
215844    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
215845    +         end;
MPRINT(EM_DIAGRAM):   end;
215846    +      end;
MPRINT(EM_DIAGRAM):   end;
215847    +   end;
MPRINT(EM_DIAGRAM):   end;
215848    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215849    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
215850    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
215851    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
215852    +      end;
MPRINT(EM_DIAGRAM):   end;
215853    +      else do;
MPRINT(EM_DIAGRAM):   else do;
215854    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
215855    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
215856    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
215857    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
215858    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
215859    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
215860    +         end;
MPRINT(EM_DIAGRAM):   end;
215861    +      end;
MPRINT(EM_DIAGRAM):   end;
215862    +   end;
MPRINT(EM_DIAGRAM):   end;
215863    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
215864    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
215865    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
215866    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
215867    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
215868    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215869    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215870    +   end;
MPRINT(EM_DIAGRAM):   end;
215871    +end;
MPRINT(EM_DIAGRAM):   end;
215872    +
215873    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215874    +*** Checking missing input Interval
215875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
215876    +
215877    +IF NMISS(
215878    +   Income ,
215879    +   Kidhome ,
215880    +   MntFishProducts ,
215881    +   MntFruits ,
215882    +   MntGoldProds ,
215883    +   MntMeatProducts ,
215884    +   MntSweetProducts ,
215885    +   MntWines ,
215886    +   NumCatalogPurchases ,
215887    +   NumDealsPurchases ,
215888    +   NumStorePurchases ,
215889    +   NumWebPurchases ,
215890    +   NumWebVisitsMonth ,
215891    +   Recency ,
215892    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
215893    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
215894    +
215895    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215896    +END;
MPRINT(EM_DIAGRAM):   END;
215897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215898    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
215899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215900    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
215901    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
215902    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
215903    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
215904    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
215905    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
215906    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
215907    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
215908    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
215909    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
215910    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
215911    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
215912    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
215913    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
215914    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
215915    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
215916    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
215917    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
215918    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
215919    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
215920    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
215921    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
215922    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
215923    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
215924    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
215925    +END;
MPRINT(EM_DIAGRAM):   END;
215926    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
215927    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
215928    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
215929    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
215930    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
215931    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
215932    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
215933    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
215934    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
215935    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
215936    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
215937    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
215938    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
215939    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
215940    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
215941    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
215942    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
215943    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
215944    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
215945    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
215946    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
215947    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
215948    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
215949    +   ELSE S_NumCatalogPurchases
215950    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
215951    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
215952    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
215953    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
215954    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
215955    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
215956    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
215957    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
215958    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
215959    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
215960    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
215961    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
215962    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
215963    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
215964    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
215965    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
215966    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
215967    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
215968    +END;
MPRINT(EM_DIAGRAM):   END;
215969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215970    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
215971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215973    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
215974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215976    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
215977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215978    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
215979    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
215980    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
215981    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
215982    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
215983    +          +     -0.2030617183738 * S_MntSweetProducts
215984    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
215985    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
215986    +          +    -2.67074303965293 * S_NumStorePurchases
215987    +          +    -0.84694619593676 * S_NumWebPurchases
215988    +          +     1.78464945757548 * S_NumWebVisitsMonth
215989    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
215990    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome +
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 *
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts +
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 *
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 *
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency +
0.12484193160086 * S_Teenhome ;
215991    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
215992    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
215993    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
215994    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
215995    +          +    -0.48853587268985 * S_MntSweetProducts
215996    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
215997    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
215998    +          +    -1.10593499185395 * S_NumStorePurchases
215999    +          +     -1.3003228821842 * S_NumWebPurchases
216000    +          +     2.87047131261901 * S_NumWebVisitsMonth
216001    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
216002    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome +
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 *
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 *
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 *
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency +
-1.2351049603093 * S_Teenhome ;
216003    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
216004    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
216005    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
216006    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
216007    +          +    -0.27795094909244 * S_MntSweetProducts
216008    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
216009    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
216010    +          +    -0.41332499072246 * S_NumStorePurchases
216011    +          +     0.76626053410817 * S_NumWebPurchases
216012    +          +     0.81795211037296 * S_NumWebVisitsMonth
216013    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
216014    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome +
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 *
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 *
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases +
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth +
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
216015    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
216016    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
216017    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
216018    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
216019    +          +    -0.08285620819867 * S_MntSweetProducts
216020    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
216021    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
216022    +          +    -0.17691098721908 * S_NumStorePurchases
216023    +          +     0.46246892093576 * S_NumWebPurchases
216024    +          +     2.06272832836908 * S_NumWebVisitsMonth
216025    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
216026    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome +
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 *
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases +
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases +
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth +
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
216027    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
216028    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
216029    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
216030    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
216031    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 +
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
216032    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
216033    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
216034    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
216035    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
216036    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 +
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
216037    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
216038    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
216039    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
216040    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
216041    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 *
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 +
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
216042    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
216043    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
216044    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
216045    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
216046    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 *
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 +
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
216047    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
216048    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
216049    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
216050    +          +     1.59526812226707 * Marital_StatusDivorced
216051    +          +    -0.74331656724296 * Marital_StatusMarried
216052    +          +     0.74316614019998 * Marital_StatusSingle
216053    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle +
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation +
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced +
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle +
-1.36761487171479 * Marital_StatusTogether ;
216054    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
216055    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
216056    +        EducationGraduation  +     0.07596142730184 * EducationMaster
216057    +          +     0.94291322065497 * Marital_StatusDivorced
216058    +          +    -1.64331597630127 * Marital_StatusMarried
216059    +          +     2.21526196736604 * Marital_StatusSingle
216060    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle +
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 *
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 *
Marital_StatusTogether ;
216061    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
216062    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
216063    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
216064    +          +     1.63906979191221 * Marital_StatusDivorced
216065    +          +    -1.00497354965718 * Marital_StatusMarried
216066    +          +     0.70485207953497 * Marital_StatusSingle
216067    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle +
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation +
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced +
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle +
-1.55917756143873 * Marital_StatusTogether ;
216068    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
216069    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
216070    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
216071    +          +     0.75038128420756 * Marital_StatusDivorced
216072    +          +    -1.93055855198469 * Marital_StatusMarried
216073    +          +     0.73816798380254 * Marital_StatusSingle
216074    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle +
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 *
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 *
Marital_StatusTogether ;
216075    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
216076    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
216077    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
216078    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
216079    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
216080    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
216081    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
216082    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
216083    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
216084    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
216085    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
216086    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
216087    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
216088    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
216089    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
216090    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
216091    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
216092    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
216093    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
216094    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
216095    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
216096    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
216097    +END;
MPRINT(EM_DIAGRAM):   END;
216098    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
216099    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
216100    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
216101    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
216102    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
216103    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
216104    +END;
MPRINT(EM_DIAGRAM):   END;
216105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216106    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
216107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216108    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
216109    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
216110    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
216111    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 +
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
216112    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
216113    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
216114    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
216115    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
216116    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
216117    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
216118    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
216119    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
216120    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
216121    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
216122    +END;
MPRINT(EM_DIAGRAM):   END;
216123    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
216124    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
216125    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
216126    +END;
MPRINT(EM_DIAGRAM):   END;
216127    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
216128    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
216129    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
216130    +END;
MPRINT(EM_DIAGRAM):   END;
216131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216132    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
216133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216134    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
216135    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
216136    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
216137    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
216138    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
216139    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
216140    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
216141    +END;
MPRINT(EM_DIAGRAM):   END;
216142    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
216143    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
216144    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
216145    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
216146     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
216147     quit;
216148     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
216149     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
216150     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
216151     retain ID 2 Node "AutoNeural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural41";
216152     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
216153     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2028 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2028 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216154     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
216155     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216156     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2028 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2028 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216157     proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME
CREATOR);
216158     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216159     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216160     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216161     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
216162     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
216163     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216164     proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
216165     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
216166     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
216167     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216169     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216170     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
216171     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216172     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216173     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
216174     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
216174   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1044 rows and 5 columns.
 
216175     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216176     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
216177     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1044 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1044 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216178     filename _pref
216178   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
216179     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
216180     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
216181    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216182    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
216183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216184    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
216185    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
216186    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
216187     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
216188     quit;
216189     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
216190     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
216191     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
216192     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
216193     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
216194     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216195     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
216196     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216197     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216198     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
216199     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216200     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216201     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216202     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
216203     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
216204     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216205     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
216206     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
216207     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
216208     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216209     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216210     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216211     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
216212     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216213     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216214     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
216215     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
216215   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
216216     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216217     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
216218     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1048 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216219     filename _pref
216219   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
216220     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
216221     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
216222    +
216223    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
216224    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
216224   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
216225    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
216226    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
216227    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
216228    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
216229    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
216230     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
216231     quit;
216232     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
216233     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
216234     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
216235     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
216236     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
216237     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216238     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
216239     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216240     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216241     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
216242     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216243     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216244     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216245     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
216246     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
216247     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216248     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
216249     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216250     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
216251     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216253     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216254     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
216255     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216256     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216257     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
216258     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
216258   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
216259     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216260     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
216261     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216262     filename _pref
216262   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
216263     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
216264     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
216265    +
216266    +
216267    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
216268    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
216269    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
216270    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
216271    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
216272    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216273    +
216274    +
216275    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
216276    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
216277    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
216278    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
216279    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
216280    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216281    +
216282    +
216283    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
216284    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
216285    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
216286    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
216287    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
216288    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216289    +
216290    +
216291    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
216292    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
216293    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
216294    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
216295    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
216296    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216297    +
216298    +
216299    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
216300    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
216301    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
216302    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
216303    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
216304    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216305    +
216306    +
216307    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
216308    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
216309    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
216310    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
216311    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
216312    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216313    +
216314    +
216315    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
216316    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
216317    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
216318    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
216319    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
216320    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216321    +
216322    +
216323    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
216324    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
216325    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
216326    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
216327    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
216328    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
216329    +if
216330    +_FILTERNORM1 not in ( '.')
216331    + and
216332    +_FILTERNORM2 not in ( '.')
216333    + and
216334    +_FILTERNORM3 not in ( '.')
216335    + and
216336    +_FILTERNORM4 not in ( '.')
216337    + and
216338    +_FILTERNORM5 not in ( '.')
216339    + and
216340    +_FILTERNORM6 not in ( '.')
216341    + and
216342    +_FILTERNORM7 not in ( ' ')
216343    + and
216344    +_FILTERNORM8 not in ( ' ')
216345    +and
216346    +( Dt_Customer ne .)
216347    +and ( Income ne . and (Income<=107000))
216348    +and ( Kidhome ne .)
216349    +and ( MntFishProducts ne .)
216350    +and ( MntFruits ne .)
216351    +and ( MntGoldProds ne .)
216352    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
216353    +and ( MntSweetProducts ne .)
216354    +and ( MntWines ne .)
216355    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
216356    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
216357    +and ( NumStorePurchases ne .)
216358    +and ( NumWebPurchases ne .)
216359    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
216360    +and ( Recency ne .)
216361    +and ( Teenhome ne .)
216362    +and ( Year_Birth ne .)
216363    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
216364    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
216365    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
216366    +end;
MPRINT(EM_DIAGRAM):   end;
216367    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
216368    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
216369     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
216370     quit;
216371     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
216372     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
216373     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
216374     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
216375     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
216376     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216377     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
216378     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216379     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216380     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
216381     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216382     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216383     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216384     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
216385     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
216386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216387     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
216388     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216389     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
216390     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216391     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216392     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216393     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
216394     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216395     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216396     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
216397     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
216397   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
216398     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216399     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
216400     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1153 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216401     %macro varDept(fcmpdata=,id=);
216402     %global nobs&id scoreFlag&id;
216403     %let scoreFlag&id = 0;
216404     %if &id=1 or ^&fcmpStart %then %do;
216405     proc sort data=&fcmpdata out=_temp&id nodupkey;
216406     by NAME;
216407     where id=&id and LHS in( %let j=1;
216408     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
216409     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
216410     "&var" %let j = %eval(&j+1);
216411     %end;
216412     );
216413     run;
216414     %let dsid = %sysfunc(open(_temp&id));
216415     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
216416     %let dsid = %sysfunc(close(&dsid));
216417     %if &&nobs&id %then %do;
216418     %let scoreFlag&id = 1;
216419     %let fcmpStart = 1;
216420     %end;
216421     %else %let fcmpStart = 0;
216422     %end;
216423     %else %do;
216424     proc sort data=&fcmpdata out=_tempid;
216425     where id=&id;
216426     by LHS;
216427     run;
216428     %let dsid = %sysfunc(open(_tempid));
216429     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
216430     %let dsid = %sysfunc(close(&dsid));
216431     %if ^&&nobs&id %then %do;
216432     proc datasets lib=work nolist;
216433     delete _tempid;
216434     run;
216435     quit;
216436     %end;
216437     %else %do;
216438     data _tempAll;
216439     set %let j=%eval(&id-1);
216440     %do x=1 %to &j;
216441     %if &&nobs&x %then %do;
216442     _temp&x %end;
216443     %end;
216444     ;
216445     run;
216446     proc sql;
216447     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
216447   ! work._tempid p2 where p.name=p2.lhs;
216448     quit;
216449     data _temp&id;
216450     set _temp&id;
216451     where LHS ne '' and NAME ne '' and Node ne '';
216452     run;
216453     proc datasets lib=work nolist;
216454     delete _tempAll;
216455     run;
216456     %let dsid = %sysfunc(open(_temp&id));
216457     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
216458     %let dsid = %sysfunc(close(&dsid));
216459     %if ^&&nobs&id %then %do;
216460     proc datasets lib=work nolist;
216461     delete _temp&id;
216462     run;
216463     quit;
216464     %end;
216465     %else %do;
216466     %let scoreFlag&id = 1;
216467     data _temp&id;
216468     set _temp&id;
216469     where LHS ne NAME and node ne '';
216470     run;
216471     %let dsid = %sysfunc(open(_temp&id));
216472     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
216473     %let dsid = %sysfunc(close(&dsid));
216474     %if ^&&nobs&id %then %do;
216475     proc datasets lib=work nolist;
216476     delete _temp&id;
216477     run;
216478     quit;
216479     %end;
216480     %else %do;
216481     proc sort data=_temp&id nodupkey;
216482     by LHS NAME;
216483     run;
216484     %end;
216485     %end;
216486     %end;
216487     %end;
216488     %mend varDept;
216489     %macro optCode(outdata=fcmpdata);
216490     %global fcmpStart;
216491     %let fcmpStart = 0;
216492     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
216493     %let NumNodes=9;
216494     %do k=1 %to &NumNodes;
216495     %vardept(fcmpdata=&outdata, id=&k);
216496     %end;
216497     %mend optCode;
216498     %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 113 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
216499     filename _pref
216499   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
216500     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
216501     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
216502    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
216503    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
216504    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
216505    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
216506    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
216507    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
216508    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
216509    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
216510    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
216511    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
216512    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
216513    +LENGTH _WARN_ $4
216514    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
216515    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
216516    +
216517    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
216518    +
216519    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
216520    +
216521    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
216522    +
216523    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
216524    +
216525    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
216526    +
216527    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
216528    +
216529    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
216530    +
216531    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
216532    +
216533    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
216534    +
216535    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
216536    +
216537    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
216538    +
216539    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
216540    +
216541    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
216542    +
216543    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
216544    +
216545    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
216546    +
216547    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
216548    +
216549    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
216550    +
216551    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
216552    +
216553    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
216554    +
216555    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
216556    +
216557    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
216558    +
216559    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
216560    +
216561    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
216562    +
216563    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
216564    +
216565    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
216566    +
216567    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
216568    +
216569    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
216570    +
216571    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
216572    +
216573    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
216574    +
216575    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
216576    +
216577    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
216578    +
216579    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
216580    +
216581    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
216582    +
216583    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
216584    +
216585    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
216586    +
216587    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
216588    +
216589    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
216590    +
216591    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
216592    +
216593    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
216594    +
216595    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
216596    +
216597    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
216598    +
216599    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
216600    +
216601    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
216602    +
216603    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
216604    +
216605    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
216606    +
216607    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
216608    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
216609    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
216610    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
216611    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216612    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216613    +end;
MPRINT(EM_DIAGRAM):   end;
216614    +else do;
MPRINT(EM_DIAGRAM):   else do;
216615    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216616    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
216617    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216618    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
216619    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
216620    +   end;
MPRINT(EM_DIAGRAM):   end;
216621    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
216622    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
216623    +   end;
MPRINT(EM_DIAGRAM):   end;
216624    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216625    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
216626    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216627    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216628    +   end;
MPRINT(EM_DIAGRAM):   end;
216629    +end;
MPRINT(EM_DIAGRAM):   end;
216630    +
216631    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
216632    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
216633    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
216634    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
216635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216637    +end;
MPRINT(EM_DIAGRAM):   end;
216638    +else do;
MPRINT(EM_DIAGRAM):   else do;
216639    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216640    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
216641    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216642    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
216643    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
216644    +   end;
MPRINT(EM_DIAGRAM):   end;
216645    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
216646    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
216647    +   end;
MPRINT(EM_DIAGRAM):   end;
216648    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216649    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
216650    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216651    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216652    +   end;
MPRINT(EM_DIAGRAM):   end;
216653    +end;
MPRINT(EM_DIAGRAM):   end;
216654    +
216655    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
216656    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
216657    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
216658    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
216659    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216660    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216661    +end;
MPRINT(EM_DIAGRAM):   end;
216662    +else do;
MPRINT(EM_DIAGRAM):   else do;
216663    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216664    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
216665    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216666    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
216667    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
216668    +   end;
MPRINT(EM_DIAGRAM):   end;
216669    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
216670    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
216671    +   end;
MPRINT(EM_DIAGRAM):   end;
216672    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216673    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
216674    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216675    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216676    +   end;
MPRINT(EM_DIAGRAM):   end;
216677    +end;
MPRINT(EM_DIAGRAM):   end;
216678    +
216679    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
216680    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
216681    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
216682    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
216683    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216684    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216685    +end;
MPRINT(EM_DIAGRAM):   end;
216686    +else do;
MPRINT(EM_DIAGRAM):   else do;
216687    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216688    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
216689    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216690    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
216691    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
216692    +   end;
MPRINT(EM_DIAGRAM):   end;
216693    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
216694    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
216695    +   end;
MPRINT(EM_DIAGRAM):   end;
216696    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216697    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
216698    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216699    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216700    +   end;
MPRINT(EM_DIAGRAM):   end;
216701    +end;
MPRINT(EM_DIAGRAM):   end;
216702    +
216703    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
216704    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
216705    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
216706    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
216707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216709    +end;
MPRINT(EM_DIAGRAM):   end;
216710    +else do;
MPRINT(EM_DIAGRAM):   else do;
216711    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216712    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
216713    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216714    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
216715    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
216716    +   end;
MPRINT(EM_DIAGRAM):   end;
216717    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
216718    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
216719    +   end;
MPRINT(EM_DIAGRAM):   end;
216720    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216721    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
216722    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216723    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216724    +   end;
MPRINT(EM_DIAGRAM):   end;
216725    +end;
MPRINT(EM_DIAGRAM):   end;
216726    +
216727    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
216728    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
216729    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
216730    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
216731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216733    +end;
MPRINT(EM_DIAGRAM):   end;
216734    +else do;
MPRINT(EM_DIAGRAM):   else do;
216735    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216736    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
216737    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216738    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
216739    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
216740    +   end;
MPRINT(EM_DIAGRAM):   end;
216741    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
216742    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
216743    +   end;
MPRINT(EM_DIAGRAM):   end;
216744    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216745    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
216746    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216747    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216748    +   end;
MPRINT(EM_DIAGRAM):   end;
216749    +end;
MPRINT(EM_DIAGRAM):   end;
216750    +
216751    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
216752    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
216753    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
216754    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
216755    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
216756    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
216757    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
216758    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
216759    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
216760    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
216761    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
216762    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
216763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216765    +end;
MPRINT(EM_DIAGRAM):   end;
216766    +else do;
MPRINT(EM_DIAGRAM):   else do;
216767    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
216768    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
216769    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216770    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
216771    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
216772    +   end;
MPRINT(EM_DIAGRAM):   end;
216773    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
216774    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
216775    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
216776    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
216777    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
216778    +   end;
MPRINT(EM_DIAGRAM):   end;
216779    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
216780    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
216781    +   end;
MPRINT(EM_DIAGRAM):   end;
216782    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
216783    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
216784    +   end;
MPRINT(EM_DIAGRAM):   end;
216785    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
216786    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
216787    +   end;
MPRINT(EM_DIAGRAM):   end;
216788    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216789    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
216790    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
216791    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
216792    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
216793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216795    +   end;
MPRINT(EM_DIAGRAM):   end;
216796    +end;
MPRINT(EM_DIAGRAM):   end;
216797    +
216798    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
216799    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
216800    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
216801    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
216802    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
216803    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
216804    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
216805    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
216806    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
216807    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
216808    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
216809    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
216810    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
216811    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216812    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216813    +end;
MPRINT(EM_DIAGRAM):   end;
216814    +else do;
MPRINT(EM_DIAGRAM):   else do;
216815    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
216816    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
216817    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216818    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
216819    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
216820    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
216821    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
216822    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
216823    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
216824    +         end;
MPRINT(EM_DIAGRAM):   end;
216825    +         else do;
MPRINT(EM_DIAGRAM):   else do;
216826    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
216827    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
216828    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
216829    +            end;
MPRINT(EM_DIAGRAM):   end;
216830    +         end;
MPRINT(EM_DIAGRAM):   end;
216831    +      end;
MPRINT(EM_DIAGRAM):   end;
216832    +      else do;
MPRINT(EM_DIAGRAM):   else do;
216833    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
216834    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
216835    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
216836    +         end;
MPRINT(EM_DIAGRAM):   end;
216837    +      end;
MPRINT(EM_DIAGRAM):   end;
216838    +   end;
MPRINT(EM_DIAGRAM):   end;
216839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216840    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
216841    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
216842    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
216843    +      end;
MPRINT(EM_DIAGRAM):   end;
216844    +      else do;
MPRINT(EM_DIAGRAM):   else do;
216845    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
216846    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
216847    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
216848    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
216849    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
216850    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
216851    +         end;
MPRINT(EM_DIAGRAM):   end;
216852    +      end;
MPRINT(EM_DIAGRAM):   end;
216853    +   end;
MPRINT(EM_DIAGRAM):   end;
216854    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
216855    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
216856    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
216857    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
216858    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
216859    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216860    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216861    +   end;
MPRINT(EM_DIAGRAM):   end;
216862    +end;
MPRINT(EM_DIAGRAM):   end;
216863    +
216864    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216865    +*** Checking missing input Interval
216866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
216867    +
216868    +IF NMISS(
216869    +   Income ,
216870    +   Kidhome ,
216871    +   MntFishProducts ,
216872    +   MntFruits ,
216873    +   MntGoldProds ,
216874    +   MntMeatProducts ,
216875    +   MntSweetProducts ,
216876    +   MntWines ,
216877    +   NumCatalogPurchases ,
216878    +   NumDealsPurchases ,
216879    +   NumStorePurchases ,
216880    +   NumWebPurchases ,
216881    +   NumWebVisitsMonth ,
216882    +   Recency ,
216883    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
216884    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
216885    +
216886    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216887    +END;
MPRINT(EM_DIAGRAM):   END;
216888    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216889    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
216890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216891    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
216892    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
216893    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
216894    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
216895    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
216896    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
216897    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
216898    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
216899    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
216900    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
216901    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
216902    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
216903    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
216904    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
216905    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
216906    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
216907    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
216908    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
216909    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
216910    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
216911    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
216912    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
216913    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
216914    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
216915    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
216916    +END;
MPRINT(EM_DIAGRAM):   END;
216917    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
216918    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
216919    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
216920    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
216921    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
216922    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
216923    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
216924    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
216925    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
216926    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
216927    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
216928    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
216929    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
216930    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
216931    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
216932    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
216933    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
216934    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
216935    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
216936    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
216937    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
216938    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
216939    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
216940    +   ELSE S_NumCatalogPurchases
216941    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
216942    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
216943    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
216944    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
216945    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
216946    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
216947    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
216948    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
216949    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
216950    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
216951    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
216952    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
216953    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
216954    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
216955    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
216956    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
216957    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
216958    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
216959    +END;
MPRINT(EM_DIAGRAM):   END;
216960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216961    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
216962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216964    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
216965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216967    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
216968    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216969    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
216970    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
216971    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
216972    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
216973    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
216974    +          +    -2.37073629008864 * S_MntSweetProducts
216975    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
216976    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
216977    +          +    -1.29021742502316 * S_NumStorePurchases
216978    +          +    -0.00949168969466 * S_NumWebPurchases
216979    +          +    -0.32248137192321 * S_NumWebVisitsMonth
216980    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
216981    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
216982    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
216983    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
216984    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
216985    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
216986    +          +     0.41126087093412 * S_MntSweetProducts
216987    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
216988    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
216989    +          +      0.2319226227964 * S_NumStorePurchases
216990    +          +     0.31190969795517 * S_NumWebPurchases
216991    +          +      -1.987305550542 * S_NumWebVisitsMonth
216992    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
216993    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
216994    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
216995    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
216996    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
216997    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
216998    +          +    -0.73991431726966 * S_MntSweetProducts
216999    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
217000    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
217001    +          +    -2.50826402419251 * S_NumStorePurchases
217002    +          +    -0.30764477738015 * S_NumWebPurchases
217003    +          +     1.21240794582671 * S_NumWebVisitsMonth
217004    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
217005    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
217006    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
217007    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
217008    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
217009    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
217010    +          +     1.07674028011002 * S_MntSweetProducts
217011    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
217012    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
217013    +          +    -0.47776935727231 * S_NumStorePurchases
217014    +          +     -0.5890810666834 * S_NumWebPurchases
217015    +          +      1.3845716796855 * S_NumWebVisitsMonth
217016    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
217017    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
217018    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
217019    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
217020    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
217021    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
217022    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
217023    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
217024    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
217025    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
217026    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
217027    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
217028    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
217029    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
217030    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
217031    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
217032    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
217033    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
217034    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
217035    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
217036    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
217037    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
217038    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
217039    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
217040    +        EducationGraduation  +     0.68592368666749 * EducationMaster
217041    +          +     0.38999748028122 * Marital_StatusDivorced
217042    +          +     0.44180844463279 * Marital_StatusMarried
217043    +          +     0.63824884669155 * Marital_StatusSingle
217044    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
217045    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
217046    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
217047    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
217048    +          +    -0.95537871859519 * Marital_StatusDivorced
217049    +          +     2.55061153921286 * Marital_StatusMarried
217050    +          +    -1.78007154396711 * Marital_StatusSingle
217051    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
217052    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
217053    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
217054    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
217055    +          +     1.29930912124343 * Marital_StatusDivorced
217056    +          +    -1.63037830924789 * Marital_StatusMarried
217057    +          +     0.19040732776086 * Marital_StatusSingle
217058    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
217059    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
217060    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
217061    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
217062    +          +     -0.3129003025095 * Marital_StatusDivorced
217063    +          +     0.00843550425239 * Marital_StatusMarried
217064    +          +    -0.20416436114776 * Marital_StatusSingle
217065    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
217066    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
217067    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
217068    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
217069    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
217070    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
217071    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
217072    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
217073    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
217074    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
217075    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
217076    +END;
MPRINT(EM_DIAGRAM):   END;
217077    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
217078    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
217079    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
217080    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
217081    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
217082    +END;
MPRINT(EM_DIAGRAM):   END;
217083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217084    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
217085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217086    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
217087    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
217088    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
217089    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
217090    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
217091    +          +    -0.90866858123806 * S_MntSweetProducts
217092    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
217093    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
217094    +          +     1.45805686107789 * S_NumStorePurchases
217095    +          +     1.48794767642409 * S_NumWebPurchases
217096    +          +    -1.24357395997191 * S_NumWebVisitsMonth
217097    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
217098    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
217099    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
217100    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
217101    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
217102    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
217103    +          +     1.05010358762976 * S_MntSweetProducts
217104    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
217105    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
217106    +          +    -2.04318529474165 * S_NumStorePurchases
217107    +          +     1.64478964728594 * S_NumWebPurchases
217108    +          +    -0.74790322980646 * S_NumWebVisitsMonth
217109    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
217110    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
217111    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
217112    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
217113    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
217114    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
217115    +          +     0.39974532423377 * S_MntSweetProducts
217116    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
217117    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
217118    +          +     0.70805557348415 * S_NumStorePurchases
217119    +          +     2.40362900277228 * S_NumWebPurchases
217120    +          +    -0.84521247676043 * S_NumWebVisitsMonth
217121    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
217122    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
217123    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
217124    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
217125    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
217126    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
217127    +          +     1.67907268159197 * S_MntSweetProducts
217128    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
217129    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
217130    +          +      0.0818178054474 * S_NumStorePurchases
217131    +          +     0.21533198164279 * S_NumWebPurchases
217132    +          +     2.13590425604302 * S_NumWebVisitsMonth
217133    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
217134    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
217135    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
217136    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
217137    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
217138    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
217139    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
217140    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
217141    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
217142    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
217143    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
217144    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
217145    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
217146    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
217147    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
217148    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
217149    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
217150    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
217151    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
217152    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
217153    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
217154    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
217155    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
217156    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
217157    +        EducationGraduation  +     0.78238700450794 * EducationMaster
217158    +          +     0.09735596304222 * Marital_StatusDivorced
217159    +          +    -0.41892050812825 * Marital_StatusMarried
217160    +          +    -1.42753782654911 * Marital_StatusSingle
217161    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
217162    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
217163    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
217164    +        EducationGraduation  +     1.03407121736627 * EducationMaster
217165    +          +    -0.32415267410507 * Marital_StatusDivorced
217166    +          +     0.49045578856782 * Marital_StatusMarried
217167    +          +    -1.95612005933176 * Marital_StatusSingle
217168    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
217169    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
217170    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
217171    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
217172    +          +    -1.25715350788627 * Marital_StatusDivorced
217173    +          +     0.74269511935299 * Marital_StatusMarried
217174    +          +    -0.27394822792771 * Marital_StatusSingle
217175    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
217176    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
217177    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
217178    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
217179    +          +    -1.42754006114782 * Marital_StatusDivorced
217180    +          +    -0.13979120103654 * Marital_StatusMarried
217181    +          +    -1.66244370644258 * Marital_StatusSingle
217182    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
217183    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
217184    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
217185    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
217186    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
217187    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
217188    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
217189    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
217190    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
217191    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
217192    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
217193    +END;
MPRINT(EM_DIAGRAM):   END;
217194    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
217195    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
217196    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
217197    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
217198    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
217199    +END;
MPRINT(EM_DIAGRAM):   END;
217200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217201    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
217202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217203    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
217204    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
217205    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
217206    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
217207    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
217208    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
217209    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
217210    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
217211    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
217212    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
217213    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
217214    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
217215    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
217216    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
217217    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
217218    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
217219    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
217220    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
217221    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
217222    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
217223    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
217224    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
217225    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
217226    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
217227    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
217228    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
217229    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
217230    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
217231    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
217232    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
217233    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
217234    +END;
MPRINT(EM_DIAGRAM):   END;
217235    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
217236    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
217237    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
217238    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
217239    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
217240    +END;
MPRINT(EM_DIAGRAM):   END;
217241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217242    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
217243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217244    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
217245    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
217246    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
217247    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
217248    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
217249    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
217250    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
217251    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
217252    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
217253    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
217254    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
217255    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
217256    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
217257    +END;
MPRINT(EM_DIAGRAM):   END;
217258    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
217259    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
217260    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
217261    +END;
MPRINT(EM_DIAGRAM):   END;
217262    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
217263    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
217264    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
217265    +END;
MPRINT(EM_DIAGRAM):   END;
217266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217267    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
217268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217269    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
217270    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
217271    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
217272    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
217273    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
217274    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
217275    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
217276    +END;
MPRINT(EM_DIAGRAM):   END;
217277    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
217278    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
217279    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
217280    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217281     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217282     quit;
217283     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217284     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217285     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217286     retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
217287     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217288     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217289     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217290     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217292     proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME
CREATOR);
217293     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217294     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217295     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217296     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217297     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217298     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217299     proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
217300     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
217301     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217302     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217303     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217304     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217305     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217306     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217307     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 65 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217308     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217309     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217309   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1477 rows and 5 columns.
 
217310     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217311     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
217312     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1477 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1477 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217313     filename _pref
217313   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
217314     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217315     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
217316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217317    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
217318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217319    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
217320    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
217321    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217322     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217323     quit;
217324     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217325     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217326     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217327     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
217328     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217330     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217332     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217333     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
217334     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217335     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217336     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217337     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217338     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217339     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217340     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
217341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
217342     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217343     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217344     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217345     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217346     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217347     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217348     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217349     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217350     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217350   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
217351     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217352     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
217353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1481 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217354     filename _pref
217354   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
217355     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217356     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
217357    +
217358    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
217359    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
217359   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
217360    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
217361    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
217362    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
217363    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
217364    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217365     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217366     quit;
217367     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217368     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217369     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217370     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
217371     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217372     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217373     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217374     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217376     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
217377     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217378     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217379     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217380     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217381     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217382     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
217383     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
217384     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217385     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217386     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217387     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217388     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217389     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217390     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217391     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217392     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217393     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217393   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
217394     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217395     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
217396     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217397     filename _pref
217397   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
217398     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217399     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
217400    +
217401    +
217402    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
217403    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
217404    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
217405    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
217406    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
217407    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217408    +
217409    +
217410    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
217411    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
217412    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
217413    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
217414    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
217415    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217416    +
217417    +
217418    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
217419    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
217420    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
217421    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
217422    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
217423    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217424    +
217425    +
217426    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
217427    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
217428    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
217429    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
217430    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
217431    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217432    +
217433    +
217434    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
217435    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
217436    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
217437    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
217438    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
217439    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217440    +
217441    +
217442    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
217443    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
217444    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
217445    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
217446    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
217447    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217448    +
217449    +
217450    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
217451    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
217452    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
217453    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
217454    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
217455    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217456    +
217457    +
217458    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
217459    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
217460    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
217461    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
217462    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
217463    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217464    +if
217465    +_FILTERNORM1 not in ( '.')
217466    + and
217467    +_FILTERNORM2 not in ( '.')
217468    + and
217469    +_FILTERNORM3 not in ( '.')
217470    + and
217471    +_FILTERNORM4 not in ( '.')
217472    + and
217473    +_FILTERNORM5 not in ( '.')
217474    + and
217475    +_FILTERNORM6 not in ( '.')
217476    + and
217477    +_FILTERNORM7 not in ( ' ')
217478    + and
217479    +_FILTERNORM8 not in ( ' ')
217480    +and
217481    +( Dt_Customer ne .)
217482    +and ( Income ne . and (Income<=107000))
217483    +and ( Kidhome ne .)
217484    +and ( MntFishProducts ne .)
217485    +and ( MntFruits ne .)
217486    +and ( MntGoldProds ne .)
217487    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
217488    +and ( MntSweetProducts ne .)
217489    +and ( MntWines ne .)
217490    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
217491    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
217492    +and ( NumStorePurchases ne .)
217493    +and ( NumWebPurchases ne .)
217494    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
217495    +and ( Recency ne .)
217496    +and ( Teenhome ne .)
217497    +and ( Year_Birth ne .)
217498    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
217499    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
217500    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
217501    +end;
MPRINT(EM_DIAGRAM):   end;
217502    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
217503    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217504     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217505     quit;
217506     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217507     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217508     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217509     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
217510     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217511     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
217512     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217514     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217515     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
217516     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217517     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217518     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217519     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217520     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217521     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
217522     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
217523     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217524     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217525     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217526     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217527     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217528     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217529     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217530     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217531     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217532     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217532   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
217533     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217534     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
217535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1586 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217536     %macro varDept(fcmpdata=,id=);
217537     %global nobs&id scoreFlag&id;
217538     %let scoreFlag&id = 0;
217539     %if &id=1 or ^&fcmpStart %then %do;
217540     proc sort data=&fcmpdata out=_temp&id nodupkey;
217541     by NAME;
217542     where id=&id and LHS in( %let j=1;
217543     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
217544     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
217545     "&var" %let j = %eval(&j+1);
217546     %end;
217547     );
217548     run;
217549     %let dsid = %sysfunc(open(_temp&id));
217550     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217551     %let dsid = %sysfunc(close(&dsid));
217552     %if &&nobs&id %then %do;
217553     %let scoreFlag&id = 1;
217554     %let fcmpStart = 1;
217555     %end;
217556     %else %let fcmpStart = 0;
217557     %end;
217558     %else %do;
217559     proc sort data=&fcmpdata out=_tempid;
217560     where id=&id;
217561     by LHS;
217562     run;
217563     %let dsid = %sysfunc(open(_tempid));
217564     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217565     %let dsid = %sysfunc(close(&dsid));
217566     %if ^&&nobs&id %then %do;
217567     proc datasets lib=work nolist;
217568     delete _tempid;
217569     run;
217570     quit;
217571     %end;
217572     %else %do;
217573     data _tempAll;
217574     set %let j=%eval(&id-1);
217575     %do x=1 %to &j;
217576     %if &&nobs&x %then %do;
217577     _temp&x %end;
217578     %end;
217579     ;
217580     run;
217581     proc sql;
217582     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
217582   ! work._tempid p2 where p.name=p2.lhs;
217583     quit;
217584     data _temp&id;
217585     set _temp&id;
217586     where LHS ne '' and NAME ne '' and Node ne '';
217587     run;
217588     proc datasets lib=work nolist;
217589     delete _tempAll;
217590     run;
217591     %let dsid = %sysfunc(open(_temp&id));
217592     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217593     %let dsid = %sysfunc(close(&dsid));
217594     %if ^&&nobs&id %then %do;
217595     proc datasets lib=work nolist;
217596     delete _temp&id;
217597     run;
217598     quit;
217599     %end;
217600     %else %do;
217601     %let scoreFlag&id = 1;
217602     data _temp&id;
217603     set _temp&id;
217604     where LHS ne NAME and node ne '';
217605     run;
217606     %let dsid = %sysfunc(open(_temp&id));
217607     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217608     %let dsid = %sysfunc(close(&dsid));
217609     %if ^&&nobs&id %then %do;
217610     proc datasets lib=work nolist;
217611     delete _temp&id;
217612     run;
217613     quit;
217614     %end;
217615     %else %do;
217616     proc sort data=_temp&id nodupkey;
217617     by LHS NAME;
217618     run;
217619     %end;
217620     %end;
217621     %end;
217622     %end;
217623     %mend varDept;
217624     %macro optCode(outdata=fcmpdata);
217625     %global fcmpStart;
217626     %let fcmpStart = 0;
217627     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
217628     %let NumNodes=9;
217629     %do k=1 %to &NumNodes;
217630     %vardept(fcmpdata=&outdata, id=&k);
217631     %end;
217632     %mend optCode;
217633     %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 97 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
217634     filename _pref
217634   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
217635     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217636     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas.
217637    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
217638    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
217639    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
217640    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
217641    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
217642    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
217643    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
217644    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
217645    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
217646    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
217647    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
217648    +LENGTH _WARN_ $4
217649    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
217650    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
217651    +
217652    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
217653    +
217654    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
217655    +
217656    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
217657    +
217658    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
217659    +
217660    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
217661    +
217662    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
217663    +
217664    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
217665    +
217666    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
217667    +
217668    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
217669    +
217670    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
217671    +
217672    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
217673    +
217674    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
217675    +
217676    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
217677    +
217678    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
217679    +
217680    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
217681    +
217682    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
217683    +
217684    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
217685    +
217686    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
217687    +
217688    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
217689    +
217690    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
217691    +
217692    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
217693    +
217694    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
217695    +
217696    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
217697    +
217698    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
217699    +
217700    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
217701    +
217702    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
217703    +
217704    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
217705    +
217706    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
217707    +
217708    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
217709    +
217710    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
217711    +
217712    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
217713    +
217714    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
217715    +
217716    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
217717    +
217718    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
217719    +
217720    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
217721    +
217722    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
217723    +
217724    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
217725    +
217726    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
217727    +
217728    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
217729    +
217730    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
217731    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
217732    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
217733    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
217734    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217735    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217736    +end;
MPRINT(EM_DIAGRAM):   end;
217737    +else do;
MPRINT(EM_DIAGRAM):   else do;
217738    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217739    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
217740    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217741    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
217742    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
217743    +   end;
MPRINT(EM_DIAGRAM):   end;
217744    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
217745    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
217746    +   end;
MPRINT(EM_DIAGRAM):   end;
217747    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217748    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
217749    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217750    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217751    +   end;
MPRINT(EM_DIAGRAM):   end;
217752    +end;
MPRINT(EM_DIAGRAM):   end;
217753    +
217754    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
217755    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
217756    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
217757    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
217758    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217759    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217760    +end;
MPRINT(EM_DIAGRAM):   end;
217761    +else do;
MPRINT(EM_DIAGRAM):   else do;
217762    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217763    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
217764    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217765    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
217766    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
217767    +   end;
MPRINT(EM_DIAGRAM):   end;
217768    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
217769    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
217770    +   end;
MPRINT(EM_DIAGRAM):   end;
217771    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217772    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
217773    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217774    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217775    +   end;
MPRINT(EM_DIAGRAM):   end;
217776    +end;
MPRINT(EM_DIAGRAM):   end;
217777    +
217778    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
217779    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
217780    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
217781    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
217782    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217783    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217784    +end;
MPRINT(EM_DIAGRAM):   end;
217785    +else do;
MPRINT(EM_DIAGRAM):   else do;
217786    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217787    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
217788    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217789    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
217790    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
217791    +   end;
MPRINT(EM_DIAGRAM):   end;
217792    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
217793    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
217794    +   end;
MPRINT(EM_DIAGRAM):   end;
217795    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217796    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
217797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217799    +   end;
MPRINT(EM_DIAGRAM):   end;
217800    +end;
MPRINT(EM_DIAGRAM):   end;
217801    +
217802    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
217803    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
217804    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
217805    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
217806    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217807    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217808    +end;
MPRINT(EM_DIAGRAM):   end;
217809    +else do;
MPRINT(EM_DIAGRAM):   else do;
217810    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217811    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
217812    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217813    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
217814    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
217815    +   end;
MPRINT(EM_DIAGRAM):   end;
217816    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
217817    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
217818    +   end;
MPRINT(EM_DIAGRAM):   end;
217819    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217820    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
217821    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217822    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217823    +   end;
MPRINT(EM_DIAGRAM):   end;
217824    +end;
MPRINT(EM_DIAGRAM):   end;
217825    +
217826    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
217827    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
217828    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
217829    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
217830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217832    +end;
MPRINT(EM_DIAGRAM):   end;
217833    +else do;
MPRINT(EM_DIAGRAM):   else do;
217834    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217835    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
217836    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217837    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
217838    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
217839    +   end;
MPRINT(EM_DIAGRAM):   end;
217840    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
217841    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
217842    +   end;
MPRINT(EM_DIAGRAM):   end;
217843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217844    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
217845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217847    +   end;
MPRINT(EM_DIAGRAM):   end;
217848    +end;
MPRINT(EM_DIAGRAM):   end;
217849    +
217850    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
217851    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
217852    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
217853    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
217854    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217855    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217856    +end;
MPRINT(EM_DIAGRAM):   end;
217857    +else do;
MPRINT(EM_DIAGRAM):   else do;
217858    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217859    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
217860    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217861    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
217862    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
217863    +   end;
MPRINT(EM_DIAGRAM):   end;
217864    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
217865    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
217866    +   end;
MPRINT(EM_DIAGRAM):   end;
217867    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217868    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
217869    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217870    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217871    +   end;
MPRINT(EM_DIAGRAM):   end;
217872    +end;
MPRINT(EM_DIAGRAM):   end;
217873    +
217874    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
217875    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
217876    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
217877    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
217878    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
217879    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
217880    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
217881    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
217882    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
217883    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
217884    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
217885    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
217886    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217887    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217888    +end;
MPRINT(EM_DIAGRAM):   end;
217889    +else do;
MPRINT(EM_DIAGRAM):   else do;
217890    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
217891    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
217892    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217893    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
217894    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
217895    +   end;
MPRINT(EM_DIAGRAM):   end;
217896    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
217897    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
217898    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
217899    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
217900    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
217901    +   end;
MPRINT(EM_DIAGRAM):   end;
217902    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
217903    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
217904    +   end;
MPRINT(EM_DIAGRAM):   end;
217905    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
217906    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
217907    +   end;
MPRINT(EM_DIAGRAM):   end;
217908    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
217909    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
217910    +   end;
MPRINT(EM_DIAGRAM):   end;
217911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217912    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
217913    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
217914    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
217915    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
217916    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217917    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217918    +   end;
MPRINT(EM_DIAGRAM):   end;
217919    +end;
MPRINT(EM_DIAGRAM):   end;
217920    +
217921    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
217922    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
217923    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
217924    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
217925    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
217926    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
217927    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
217928    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
217929    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
217930    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
217931    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
217932    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
217933    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
217934    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217936    +end;
MPRINT(EM_DIAGRAM):   end;
217937    +else do;
MPRINT(EM_DIAGRAM):   else do;
217938    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
217939    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
217940    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217941    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
217942    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
217943    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
217944    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
217945    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
217946    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
217947    +         end;
MPRINT(EM_DIAGRAM):   end;
217948    +         else do;
MPRINT(EM_DIAGRAM):   else do;
217949    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
217950    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
217951    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
217952    +            end;
MPRINT(EM_DIAGRAM):   end;
217953    +         end;
MPRINT(EM_DIAGRAM):   end;
217954    +      end;
MPRINT(EM_DIAGRAM):   end;
217955    +      else do;
MPRINT(EM_DIAGRAM):   else do;
217956    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
217957    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
217958    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
217959    +         end;
MPRINT(EM_DIAGRAM):   end;
217960    +      end;
MPRINT(EM_DIAGRAM):   end;
217961    +   end;
MPRINT(EM_DIAGRAM):   end;
217962    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217963    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
217964    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
217965    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
217966    +      end;
MPRINT(EM_DIAGRAM):   end;
217967    +      else do;
MPRINT(EM_DIAGRAM):   else do;
217968    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
217969    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
217970    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
217971    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
217972    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
217973    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
217974    +         end;
MPRINT(EM_DIAGRAM):   end;
217975    +      end;
MPRINT(EM_DIAGRAM):   end;
217976    +   end;
MPRINT(EM_DIAGRAM):   end;
217977    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
217978    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
217979    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
217980    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
217981    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
217982    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217983    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217984    +   end;
MPRINT(EM_DIAGRAM):   end;
217985    +end;
MPRINT(EM_DIAGRAM):   end;
217986    +
217987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
217988    +*** Checking missing input Interval
217989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
217990    +
217991    +IF NMISS(
217992    +   Income ,
217993    +   Kidhome ,
217994    +   MntFishProducts ,
217995    +   MntFruits ,
217996    +   MntGoldProds ,
217997    +   MntMeatProducts ,
217998    +   MntSweetProducts ,
217999    +   MntWines ,
218000    +   NumCatalogPurchases ,
218001    +   NumDealsPurchases ,
218002    +   NumStorePurchases ,
218003    +   NumWebPurchases ,
218004    +   NumWebVisitsMonth ,
218005    +   Recency ,
218006    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
218007    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
218008    +
218009    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218010    +END;
MPRINT(EM_DIAGRAM):   END;
218011    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218012    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
218013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218014    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218015    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
218016    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
218017    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
218018    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
218019    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
218020    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
218021    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
218022    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
218023    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
218024    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
218025    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
218026    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
218027    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
218028    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
218029    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
218030    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
218031    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
218032    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
218033    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
218034    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
218035    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
218036    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
218037    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
218038    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
218039    +END;
MPRINT(EM_DIAGRAM):   END;
218040    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218041    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
218042    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
218043    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
218044    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
218045    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
218046    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
218047    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
218048    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
218049    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
218050    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
218051    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
218052    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
218053    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
218054    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
218055    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
218056    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
218057    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
218058    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
218059    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
218060    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
218061    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
218062    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
218063    +   ELSE S_NumCatalogPurchases
218064    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
218065    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
218066    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
218067    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
218068    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
218069    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
218070    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
218071    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
218072    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
218073    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
218074    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
218075    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
218076    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
218077    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
218078    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
218079    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
218080    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
218081    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
218082    +END;
MPRINT(EM_DIAGRAM):   END;
218083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218084    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
218085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218087    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
218088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218090    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
218091    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218092    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218093    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
218094    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
218095    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
218096    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
218097    +          +    -0.44570165516063 * S_MntSweetProducts
218098    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
218099    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
218100    +          +    -1.76291210288234 * S_NumStorePurchases
218101    +          +    -2.02392782824649 * S_NumWebPurchases
218102    +          +     1.28490910676992 * S_NumWebVisitsMonth
218103    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
218104    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome +
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 *
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts +
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 *
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 *
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency +
-0.59235237740193 * S_Teenhome ;
218105    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
218106    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
218107    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
218108    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
218109    +          +     0.29239311560831 * S_MntSweetProducts
218110    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
218111    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
218112    +          +     0.94246962588327 * S_NumStorePurchases
218113    +          +      0.9680353780544 * S_NumWebPurchases
218114    +          +    -2.21882487627334 * S_NumWebVisitsMonth
218115    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
218116    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome +
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 *
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 *
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency +
0.6539185986418 * S_Teenhome ;
218117    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
218118    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
218119    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
218120    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
218121    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 +
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
218122    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
218123    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
218124    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
218125    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
218126    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 *
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 +
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
218127    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
218128    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
218129    +        EducationGraduation  +     0.44122744485667 * EducationMaster
218130    +          +    -0.37907342816265 * Marital_StatusDivorced
218131    +          +     0.12610640291685 * Marital_StatusMarried
218132    +          +     0.51984913420219 * Marital_StatusSingle
218133    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle +
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 *
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 *
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 *
Marital_StatusTogether ;
218134    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
218135    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
218136    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
218137    +          +    -1.03351623479699 * Marital_StatusDivorced
218138    +          +     1.44541386522162 * Marital_StatusMarried
218139    +          +    -1.03636573521294 * Marital_StatusSingle
218140    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle +
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation +
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced +
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle +
1.72091885709893 * Marital_StatusTogether ;
218141    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
218142    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
218143    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
218144    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
218145    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
218146    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
218147    +END;
MPRINT(EM_DIAGRAM):   END;
218148    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218149    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
218150    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
218151    +END;
MPRINT(EM_DIAGRAM):   END;
218152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218153    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
218154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218155    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218156    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
218157    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
218158    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
218159    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
218160    +          +    -0.56491281055157 * S_MntSweetProducts
218161    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
218162    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
218163    +          +    -0.90340706582786 * S_NumStorePurchases
218164    +          +    -1.91501626179453 * S_NumWebPurchases
218165    +          +     0.10121028558369 * S_NumWebVisitsMonth
218166    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
218167    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome +
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 *
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases +
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases +
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth +
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
218168    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
218169    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
218170    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
218171    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
218172    +          +    -0.23001625322332 * S_MntSweetProducts
218173    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
218174    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
218175    +          +    -2.13716920911877 * S_NumStorePurchases
218176    +          +    -0.33508808117738 * S_NumWebPurchases
218177    +          +     -2.0809737926136 * S_NumWebVisitsMonth
218178    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
218179    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome +
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 *
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 *
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases +
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth +
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
218180    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
218181    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
218182    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
218183    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
218184    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 *
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 +
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
218185    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
218186    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
218187    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
218188    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
218189    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 +
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
218190    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
218191    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
218192    +        EducationGraduation  +     0.48964474451872 * EducationMaster
218193    +          +     1.22462877499103 * Marital_StatusDivorced
218194    +          +     0.55976057621985 * Marital_StatusMarried
218195    +          +     -0.3198252517086 * Marital_StatusSingle
218196    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle +
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 *
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 *
Marital_StatusTogether ;
218197    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
218198    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
218199    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
218200    +          +     0.32730811728353 * Marital_StatusDivorced
218201    +          +     1.61519773132998 * Marital_StatusMarried
218202    +          +    -1.42728303824254 * Marital_StatusSingle
218203    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle +
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation +
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced +
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle +
1.39334432128351 * Marital_StatusTogether ;
218204    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
218205    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
218206    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
218207    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
218208    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
218209    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
218210    +END;
MPRINT(EM_DIAGRAM):   END;
218211    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218212    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
218213    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
218214    +END;
MPRINT(EM_DIAGRAM):   END;
218215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218216    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
218217    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218218    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218219    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
218220    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
218221    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
218222    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2
;
218223    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
218224    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
218225    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
218226    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
218227    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
218228    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
218229    +END;
MPRINT(EM_DIAGRAM):   END;
218230    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218231    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
218232    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
218233    +END;
MPRINT(EM_DIAGRAM):   END;
218234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218235    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
218236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218237    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218238    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
218239    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
218240    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
218241    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
218242    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
218243    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
218244    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
218245    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
218246    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
218247    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
218248    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
218249    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
218250    +END;
MPRINT(EM_DIAGRAM):   END;
218251    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218252    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
218253    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
218254    +END;
MPRINT(EM_DIAGRAM):   END;
218255    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
218256    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
218257    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
218258    +END;
MPRINT(EM_DIAGRAM):   END;
218259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218260    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
218261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218262    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
218263    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
218264    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
218265    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
218266    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
218267    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
218268    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
218269    +END;
MPRINT(EM_DIAGRAM):   END;
218270    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
218271    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
218272    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
218273    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218274     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218275     quit;
218276     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218277     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218278     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218279     retain ID 2 Node "AutoNeural45";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural45";
218280     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218281     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2098 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2098 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218282     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218283     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218284     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2098 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2098 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218285     proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME
CREATOR);
218286     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218287     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL45_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218288     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218289     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218290     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218292     proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
218293     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218294     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218295     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218296     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218297     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218298     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218299     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218300     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218301     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218302     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218302   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1081 rows and 5 columns.
 
218303     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218304     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
218305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1081 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1081 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218306     filename _pref
218306   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
218307     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218308     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
218309    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218310    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
218311    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218312    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
218313    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
218314    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218315     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218316     quit;
218317     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218318     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218319     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218320     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
218321     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218322     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218323     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218324     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218326     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
218327     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218329     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218330     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218331     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218332     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218333     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
218334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218335     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218336     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218337     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218338     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218339     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218340     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218341     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218342     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218343     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218343   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
218344     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218345     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
218346     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1085 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218347     filename _pref
218347   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
218348     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218349     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
218350    +
218351    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
218352    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
218352   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
218353    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
218354    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
218355    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
218356    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
218357    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218358     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218359     quit;
218360     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218361     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218362     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218363     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
218364     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218365     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218366     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218367     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218368     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
218369     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
218370     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218371     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218372     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218373     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218374     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218376     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
218377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218378     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218379     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218380     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218381     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218382     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218383     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218384     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218385     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218386     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218386   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
218387     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218388     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
218389     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1124 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218390     filename _pref
218390   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
218391     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218392     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
218393    +
218394    +
218395    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
218396    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
218397    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
218398    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
218399    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
218400    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218401    +
218402    +
218403    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
218404    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
218405    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
218406    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
218407    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
218408    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218409    +
218410    +
218411    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
218412    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
218413    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
218414    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
218415    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
218416    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218417    +
218418    +
218419    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
218420    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
218421    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
218422    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
218423    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
218424    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218425    +
218426    +
218427    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
218428    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
218429    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
218430    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
218431    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
218432    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218433    +
218434    +
218435    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
218436    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
218437    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
218438    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
218439    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
218440    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218441    +
218442    +
218443    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
218444    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
218445    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
218446    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
218447    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
218448    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218449    +
218450    +
218451    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
218452    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
218453    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
218454    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
218455    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
218456    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218457    +if
218458    +_FILTERNORM1 not in ( '.')
218459    + and
218460    +_FILTERNORM2 not in ( '.')
218461    + and
218462    +_FILTERNORM3 not in ( '.')
218463    + and
218464    +_FILTERNORM4 not in ( '.')
218465    + and
218466    +_FILTERNORM5 not in ( '.')
218467    + and
218468    +_FILTERNORM6 not in ( '.')
218469    + and
218470    +_FILTERNORM7 not in ( ' ')
218471    + and
218472    +_FILTERNORM8 not in ( ' ')
218473    +and
218474    +( Dt_Customer ne .)
218475    +and ( Income ne . and (Income<=107000))
218476    +and ( Kidhome ne .)
218477    +and ( MntFishProducts ne .)
218478    +and ( MntFruits ne .)
218479    +and ( MntGoldProds ne .)
218480    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
218481    +and ( MntSweetProducts ne .)
218482    +and ( MntWines ne .)
218483    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
218484    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
218485    +and ( NumStorePurchases ne .)
218486    +and ( NumWebPurchases ne .)
218487    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
218488    +and ( Recency ne .)
218489    +and ( Teenhome ne .)
218490    +and ( Year_Birth ne .)
218491    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
218492    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
218493    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
218494    +end;
MPRINT(EM_DIAGRAM):   end;
218495    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
218496    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218497     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218498     quit;
218499     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218500     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218501     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218502     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
218503     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.00 seconds
 
 
218505     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218506     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218507     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218508     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
218509     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218510     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218511     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218512     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218513     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218514     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218515     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
218516     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
218517     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218518     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218520     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218521     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218522     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218523     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218524     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218525     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218525   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
218526     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218527     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
218528     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1190 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218529     %macro varDept(fcmpdata=,id=);
218530     %global nobs&id scoreFlag&id;
218531     %let scoreFlag&id = 0;
218532     %if &id=1 or ^&fcmpStart %then %do;
218533     proc sort data=&fcmpdata out=_temp&id nodupkey;
218534     by NAME;
218535     where id=&id and LHS in( %let j=1;
218536     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
218537     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
218538     "&var" %let j = %eval(&j+1);
218539     %end;
218540     );
218541     run;
218542     %let dsid = %sysfunc(open(_temp&id));
218543     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
218544     %let dsid = %sysfunc(close(&dsid));
218545     %if &&nobs&id %then %do;
218546     %let scoreFlag&id = 1;
218547     %let fcmpStart = 1;
218548     %end;
218549     %else %let fcmpStart = 0;
218550     %end;
218551     %else %do;
218552     proc sort data=&fcmpdata out=_tempid;
218553     where id=&id;
218554     by LHS;
218555     run;
218556     %let dsid = %sysfunc(open(_tempid));
218557     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
218558     %let dsid = %sysfunc(close(&dsid));
218559     %if ^&&nobs&id %then %do;
218560     proc datasets lib=work nolist;
218561     delete _tempid;
218562     run;
218563     quit;
218564     %end;
218565     %else %do;
218566     data _tempAll;
218567     set %let j=%eval(&id-1);
218568     %do x=1 %to &j;
218569     %if &&nobs&x %then %do;
218570     _temp&x %end;
218571     %end;
218572     ;
218573     run;
218574     proc sql;
218575     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
218575   ! work._tempid p2 where p.name=p2.lhs;
218576     quit;
218577     data _temp&id;
218578     set _temp&id;
218579     where LHS ne '' and NAME ne '' and Node ne '';
218580     run;
218581     proc datasets lib=work nolist;
218582     delete _tempAll;
218583     run;
218584     %let dsid = %sysfunc(open(_temp&id));
218585     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
218586     %let dsid = %sysfunc(close(&dsid));
218587     %if ^&&nobs&id %then %do;
218588     proc datasets lib=work nolist;
218589     delete _temp&id;
218590     run;
218591     quit;
218592     %end;
218593     %else %do;
218594     %let scoreFlag&id = 1;
218595     data _temp&id;
218596     set _temp&id;
218597     where LHS ne NAME and node ne '';
218598     run;
218599     %let dsid = %sysfunc(open(_temp&id));
218600     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
218601     %let dsid = %sysfunc(close(&dsid));
218602     %if ^&&nobs&id %then %do;
218603     proc datasets lib=work nolist;
218604     delete _temp&id;
218605     run;
218606     quit;
218607     %end;
218608     %else %do;
218609     proc sort data=_temp&id nodupkey;
218610     by LHS NAME;
218611     run;
218612     %end;
218613     %end;
218614     %end;
218615     %end;
218616     %mend varDept;
218617     %macro optCode(outdata=fcmpdata);
218618     %global fcmpStart;
218619     %let fcmpStart = 0;
218620     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
218621     %let NumNodes=9;
218622     %do k=1 %to &NumNodes;
218623     %vardept(fcmpdata=&outdata, id=&k);
218624     %end;
218625     %mend optCode;
218626     %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
218627     filename _pref
218627   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
218628     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218629     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas.
218630    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
218631    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
218632    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
218633    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
218634    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
218635    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
218636    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
218637    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
218638    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
218639    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
218640    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
218641    +LENGTH _WARN_ $4
218642    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
218643    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
218644    +
218645    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
218646    +
218647    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
218648    +
218649    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
218650    +
218651    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
218652    +
218653    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
218654    +
218655    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
218656    +
218657    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
218658    +
218659    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
218660    +
218661    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
218662    +
218663    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
218664    +
218665    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
218666    +
218667    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
218668    +
218669    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
218670    +
218671    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
218672    +
218673    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
218674    +
218675    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
218676    +
218677    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
218678    +
218679    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
218680    +
218681    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
218682    +
218683    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
218684    +
218685    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
218686    +
218687    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
218688    +
218689    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
218690    +
218691    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
218692    +
218693    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
218694    +
218695    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
218696    +
218697    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
218698    +
218699    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
218700    +
218701    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
218702    +
218703    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
218704    +
218705    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
218706    +
218707    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
218708    +
218709    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
218710    +
218711    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
218712    +
218713    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
218714    +
218715    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
218716    +
218717    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
218718    +
218719    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
218720    +
218721    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
218722    +
218723    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
218724    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
218725    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
218726    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
218727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218729    +end;
MPRINT(EM_DIAGRAM):   end;
218730    +else do;
MPRINT(EM_DIAGRAM):   else do;
218731    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218732    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
218733    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218734    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
218735    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
218736    +   end;
MPRINT(EM_DIAGRAM):   end;
218737    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
218738    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
218739    +   end;
MPRINT(EM_DIAGRAM):   end;
218740    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218741    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
218742    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218743    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218744    +   end;
MPRINT(EM_DIAGRAM):   end;
218745    +end;
MPRINT(EM_DIAGRAM):   end;
218746    +
218747    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
218748    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
218749    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
218750    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
218751    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218752    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218753    +end;
MPRINT(EM_DIAGRAM):   end;
218754    +else do;
MPRINT(EM_DIAGRAM):   else do;
218755    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218756    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
218757    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218758    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
218759    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
218760    +   end;
MPRINT(EM_DIAGRAM):   end;
218761    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
218762    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
218763    +   end;
MPRINT(EM_DIAGRAM):   end;
218764    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218765    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
218766    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218767    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218768    +   end;
MPRINT(EM_DIAGRAM):   end;
218769    +end;
MPRINT(EM_DIAGRAM):   end;
218770    +
218771    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
218772    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
218773    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
218774    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
218775    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218777    +end;
MPRINT(EM_DIAGRAM):   end;
218778    +else do;
MPRINT(EM_DIAGRAM):   else do;
218779    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218780    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
218781    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218782    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
218783    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
218784    +   end;
MPRINT(EM_DIAGRAM):   end;
218785    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
218786    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
218787    +   end;
MPRINT(EM_DIAGRAM):   end;
218788    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218789    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
218790    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218791    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218792    +   end;
MPRINT(EM_DIAGRAM):   end;
218793    +end;
MPRINT(EM_DIAGRAM):   end;
218794    +
218795    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
218796    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
218797    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
218798    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
218799    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218800    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218801    +end;
MPRINT(EM_DIAGRAM):   end;
218802    +else do;
MPRINT(EM_DIAGRAM):   else do;
218803    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218804    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
218805    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218806    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
218807    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
218808    +   end;
MPRINT(EM_DIAGRAM):   end;
218809    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
218810    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
218811    +   end;
MPRINT(EM_DIAGRAM):   end;
218812    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218813    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
218814    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218815    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218816    +   end;
MPRINT(EM_DIAGRAM):   end;
218817    +end;
MPRINT(EM_DIAGRAM):   end;
218818    +
218819    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
218820    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
218821    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
218822    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
218823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218825    +end;
MPRINT(EM_DIAGRAM):   end;
218826    +else do;
MPRINT(EM_DIAGRAM):   else do;
218827    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218828    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
218829    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218830    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
218831    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
218832    +   end;
MPRINT(EM_DIAGRAM):   end;
218833    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
218834    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
218835    +   end;
MPRINT(EM_DIAGRAM):   end;
218836    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218837    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
218838    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218839    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218840    +   end;
MPRINT(EM_DIAGRAM):   end;
218841    +end;
MPRINT(EM_DIAGRAM):   end;
218842    +
218843    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
218844    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
218845    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
218846    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
218847    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218848    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218849    +end;
MPRINT(EM_DIAGRAM):   end;
218850    +else do;
MPRINT(EM_DIAGRAM):   else do;
218851    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218852    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
218853    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218854    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
218855    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
218856    +   end;
MPRINT(EM_DIAGRAM):   end;
218857    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
218858    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
218859    +   end;
MPRINT(EM_DIAGRAM):   end;
218860    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218861    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
218862    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218863    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218864    +   end;
MPRINT(EM_DIAGRAM):   end;
218865    +end;
MPRINT(EM_DIAGRAM):   end;
218866    +
218867    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
218868    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
218869    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
218870    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
218871    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
218872    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
218873    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
218874    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
218875    +   Education2n_Cycle = .;
The SAS System
 
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
218876    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
218877    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
218878    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
218879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218881    +end;
MPRINT(EM_DIAGRAM):   end;
218882    +else do;
MPRINT(EM_DIAGRAM):   else do;
218883    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
218884    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
218885    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218886    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
218887    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
218888    +   end;
MPRINT(EM_DIAGRAM):   end;
218889    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
218890    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
218891    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
218892    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
218893    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
218894    +   end;
MPRINT(EM_DIAGRAM):   end;
218895    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
218896    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
218897    +   end;
MPRINT(EM_DIAGRAM):   end;
218898    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
218899    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
218900    +   end;
MPRINT(EM_DIAGRAM):   end;
218901    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
218902    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
218903    +   end;
MPRINT(EM_DIAGRAM):   end;
218904    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218905    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
218906    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
218907    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
218908    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
218909    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218910    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218911    +   end;
MPRINT(EM_DIAGRAM):   end;
218912    +end;
MPRINT(EM_DIAGRAM):   end;
218913    +
218914    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
218915    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
218916    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
218917    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
218918    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
218919    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
218920    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
218921    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
218922    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
218923    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
218924    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
218925    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
218926    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
218927    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218928    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218929    +end;
MPRINT(EM_DIAGRAM):   end;
218930    +else do;
MPRINT(EM_DIAGRAM):   else do;
218931    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
218932    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
218933    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218934    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
218935    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
218936    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
218937    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
218938    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
218939    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
218940    +         end;
MPRINT(EM_DIAGRAM):   end;
218941    +         else do;
MPRINT(EM_DIAGRAM):   else do;
218942    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
218943    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
218944    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
218945    +            end;
MPRINT(EM_DIAGRAM):   end;
218946    +         end;
MPRINT(EM_DIAGRAM):   end;
218947    +      end;
MPRINT(EM_DIAGRAM):   end;
218948    +      else do;
MPRINT(EM_DIAGRAM):   else do;
218949    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
218950    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
218951    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
218952    +         end;
MPRINT(EM_DIAGRAM):   end;
218953    +      end;
MPRINT(EM_DIAGRAM):   end;
218954    +   end;
MPRINT(EM_DIAGRAM):   end;
218955    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218956    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
218957    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
218958    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
218959    +      end;
MPRINT(EM_DIAGRAM):   end;
218960    +      else do;
MPRINT(EM_DIAGRAM):   else do;
218961    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
218962    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
218963    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
218964    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
218965    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
218966    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
218967    +         end;
MPRINT(EM_DIAGRAM):   end;
218968    +      end;
MPRINT(EM_DIAGRAM):   end;
218969    +   end;
MPRINT(EM_DIAGRAM):   end;
218970    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
218971    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
218972    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
218973    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
218974    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
218975    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218976    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218977    +   end;
MPRINT(EM_DIAGRAM):   end;
218978    +end;
MPRINT(EM_DIAGRAM):   end;
218979    +
218980    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218981    +*** Checking missing input Interval
218982    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
218983    +
218984    +IF NMISS(
218985    +   Income ,
218986    +   Kidhome ,
218987    +   MntFishProducts ,
218988    +   MntFruits ,
218989    +   MntGoldProds ,
218990    +   MntMeatProducts ,
218991    +   MntSweetProducts ,
218992    +   MntWines ,
218993    +   NumCatalogPurchases ,
218994    +   NumDealsPurchases ,
218995    +   NumStorePurchases ,
218996    +   NumWebPurchases ,
218997    +   NumWebVisitsMonth ,
218998    +   Recency ,
218999    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
219000    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
219001    +
219002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219003    +END;
MPRINT(EM_DIAGRAM):   END;
219004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219005    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
219006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219007    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219008    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
219009    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
219010    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
219011    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
219012    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
219013    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
219014    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
219015    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
219016    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
219017    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
219018    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
219019    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
219020    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
219021    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
219022    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
219023    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
219024    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
219025    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
219026    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
219027    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
219028    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
219029    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
219030    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
219031    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
219032    +END;
MPRINT(EM_DIAGRAM):   END;
219033    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219034    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
219035    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
219036    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
219037    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
219038    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
219039    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
219040    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
219041    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
219042    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
219043    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
219044    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
219045    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
219046    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
219047    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
219048    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
219049    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
219050    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
219051    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
219052    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
219053    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
219054    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
219055    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
219056    +   ELSE S_NumCatalogPurchases
219057    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
219058    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
219059    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
219060    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
219061    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
219062    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
219063    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
219064    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
219065    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
219066    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
219067    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
219068    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
219069    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
219070    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
219071    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
219072    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
219073    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
219074    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
219075    +END;
MPRINT(EM_DIAGRAM):   END;
219076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219077    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
219078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219080    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
219081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219083    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
219084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219085    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219086    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
219087    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
219088    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
219089    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
219090    +          +     2.41993296129914 * S_MntSweetProducts
219091    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
219092    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
219093    +          +     7.59231492380468 * S_NumStorePurchases
219094    +          +    -0.47095655313121 * S_NumWebPurchases
219095    +          +     2.65669932372712 * S_NumWebVisitsMonth
219096    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
219097    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome +
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 *
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases +
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases +
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth +
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
219098    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
219099    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
219100    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
219101    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
219102    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 *
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 +
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
219103    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
219104    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
219105    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
219106    +          +     0.44728218776544 * Marital_StatusDivorced
219107    +          +    -1.62458831276183 * Marital_StatusMarried
219108    +          +    -0.42858616367237 * Marital_StatusSingle
219109    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle +
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation +
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced +
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle +
-0.29553796445711 * Marital_StatusTogether ;
219110    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
219111    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
219112    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
219113    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
219114    +END;
MPRINT(EM_DIAGRAM):   END;
219115    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219116    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
219117    +END;
MPRINT(EM_DIAGRAM):   END;
219118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219119    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
219120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219121    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219122    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
219123    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
219124    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
219125    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
219126    +          +    -1.37098390846164 * S_MntSweetProducts
219127    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
219128    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
219129    +          +     0.58246769316602 * S_NumStorePurchases
219130    +          +     2.72780243156581 * S_NumWebPurchases
219131    +          +    -1.73896446530763 * S_NumWebVisitsMonth
219132    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
219133    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome +
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 *
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 *
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 *
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 *
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 *
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
219134    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
219135    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
219136    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
219137    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
219138    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 *
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 +
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
219139    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
219140    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
219141    +        EducationGraduation  +     1.01072132252596 * EducationMaster
219142    +          +     0.08221095774854 * Marital_StatusDivorced
219143    +          +    -0.13062113450086 * Marital_StatusMarried
219144    +          +      0.1912119500185 * Marital_StatusSingle
219145    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle +
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 *
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 *
Marital_StatusTogether ;
219146    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
219147    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
219148    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
219149    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
219150    +END;
MPRINT(EM_DIAGRAM):   END;
219151    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219152    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
219153    +END;
MPRINT(EM_DIAGRAM):   END;
219154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219155    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
219156    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219157    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219158    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
219159    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
219160    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
219161    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
219162    +          +     -0.4771357321143 * S_MntSweetProducts
219163    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
219164    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
219165    +          +     0.38755002642582 * S_NumStorePurchases
219166    +          +     0.65178643881164 * S_NumWebPurchases
219167    +          +    -0.83170832622452 * S_NumWebVisitsMonth
219168    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
219169    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome +
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 *
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 *
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency +
1.27228948382376 * S_Teenhome ;
219170    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
219171    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
219172    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
219173    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
219174    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 *
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 +
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
219175    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
219176    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
219177    +        EducationGraduation  +      0.9696976240987 * EducationMaster
219178    +          +    -0.13574340372484 * Marital_StatusDivorced
219179    +          +     1.26001446384238 * Marital_StatusMarried
219180    +          +    -0.16294618258246 * Marital_StatusSingle
219181    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle +
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 *
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 *
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 *
Marital_StatusTogether ;
219182    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
219183    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
219184    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
219185    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
219186    +END;
MPRINT(EM_DIAGRAM):   END;
219187    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219188    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
219189    +END;
MPRINT(EM_DIAGRAM):   END;
219190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219191    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
219192    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219193    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219194    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
219195    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
219196    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
219197    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
219198    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
219199    +END;
MPRINT(EM_DIAGRAM):   END;
219200    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219201    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
219202    +END;
MPRINT(EM_DIAGRAM):   END;
219203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219204    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
219205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219206    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219207    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
219208    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
219209    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
219210    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
219211    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
219212    +END;
MPRINT(EM_DIAGRAM):   END;
219213    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219214    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
219215    +END;
MPRINT(EM_DIAGRAM):   END;
219216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219217    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
219218    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219219    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219220    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
219221    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
219222    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
219223    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
219224    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
219225    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
219226    +END;
MPRINT(EM_DIAGRAM):   END;
219227    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219228    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
219229    +END;
MPRINT(EM_DIAGRAM):   END;
219230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219231    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
219232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219233    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219234    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
219235    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
219236    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
219237    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
219238    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
219239    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
219240    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
219241    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
219242    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
219243    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
219244    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
219245    +END;
MPRINT(EM_DIAGRAM):   END;
219246    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219247    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
219248    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
219249    +END;
MPRINT(EM_DIAGRAM):   END;
219250    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
219251    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
219252    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
219253    +END;
MPRINT(EM_DIAGRAM):   END;
219254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219255    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
219256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219257    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
219258    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
219259    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
219260    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
219261    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
219262    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
219263    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
219264    +END;
MPRINT(EM_DIAGRAM):   END;
219265    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
219266    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
219267    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
219268    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
219269     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
219270     quit;
219271     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
219272     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
219273     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
219274     retain ID 2 Node "AutoNeural44";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural44";
219275     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
219276     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219277     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
219278     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219279     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219280     proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME
CREATOR);
219281     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219282     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL44_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219283     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219284     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
219285     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
219286     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219287     proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
219288     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219289     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
219290     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219292     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219293     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
219294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219295     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219296     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
219297     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
219297   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.
 
219298     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219299     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
219300     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219301     filename _pref
219301   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
219302     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
219303     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
219304    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
219305    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
219306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
219307    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
219308    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
219309    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
219310     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
219311     quit;
219312     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
219313     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
219314     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
219315     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
219316     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
219317     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219318     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
219319     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219320     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219321     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
219322     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219323     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219324     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219325     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
219326     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
219327     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
219328     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
219329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219330     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
219331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219332     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219333     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219334     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
219335     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219336     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219337     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
219338     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
219338   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
219339     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219340     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
219341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219342     filename _pref
219342   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
219343     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
219344     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
219345    +
219346    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
219347    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
219347   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
219348    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
219349    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
219350    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
219351    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
219352    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
219353     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
219354     quit;
219355     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
219356     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
219357     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
219358     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
219359     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
219360     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219361     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
219362     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219363     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219364     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
219365     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219366     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219367     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219368     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
219369     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
219370     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219371     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
219372     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219373     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
219374     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219376     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219377     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
219378     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219379     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219380     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
219381     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
219381   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
219382     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219383     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
219384     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219385     filename _pref
219385   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
219386     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
219387     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
219388    +
219389    +
219390    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
219391    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
219392    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
219393    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
219394    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
219395    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219396    +
219397    +
219398    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
219399    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
219400    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
219401    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
219402    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
219403    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219404    +
219405    +
219406    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
219407    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
219408    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
219409    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
219410    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
219411    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219412    +
219413    +
219414    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
219415    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
219416    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
219417    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
219418    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
219419    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219420    +
219421    +
219422    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
219423    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
219424    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
219425    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
219426    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
219427    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219428    +
219429    +
219430    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
219431    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
219432    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
219433    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
219434    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
219435    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219436    +
219437    +
219438    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
219439    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
219440    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
219441    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
219442    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
219443    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219444    +
219445    +
219446    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
219447    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
219448    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
219449    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
219450    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
219451    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
219452    +if
219453    +_FILTERNORM1 not in ( '.')
219454    + and
219455    +_FILTERNORM2 not in ( '.')
219456    + and
219457    +_FILTERNORM3 not in ( '.')
219458    + and
219459    +_FILTERNORM4 not in ( '.')
219460    + and
219461    +_FILTERNORM5 not in ( '.')
219462    + and
219463    +_FILTERNORM6 not in ( '.')
219464    + and
219465    +_FILTERNORM7 not in ( ' ')
219466    + and
219467    +_FILTERNORM8 not in ( ' ')
219468    +and
219469    +( Dt_Customer ne .)
219470    +and ( Income ne . and (Income<=107000))
219471    +and ( Kidhome ne .)
219472    +and ( MntFishProducts ne .)
219473    +and ( MntFruits ne .)
219474    +and ( MntGoldProds ne .)
219475    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
219476    +and ( MntSweetProducts ne .)
219477    +and ( MntWines ne .)
219478    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
219479    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
219480    +and ( NumStorePurchases ne .)
219481    +and ( NumWebPurchases ne .)
219482    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
219483    +and ( Recency ne .)
219484    +and ( Teenhome ne .)
219485    +and ( Year_Birth ne .)
219486    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
219487    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
219488    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
219489    +end;
MPRINT(EM_DIAGRAM):   end;
219490    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
219491    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
219492     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
219493     quit;
219494     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
219495     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
219496     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
219497     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
219498     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
219499     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219500     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
219501     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219502     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219503     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
219504     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219505     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219506     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219507     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
219508     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
219509     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219510     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
219511     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
219512     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
219513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219514     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219515     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
219516     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
219517     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
219518     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219519     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
219520     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
219520   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
219521     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219522     proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl58_FCMP data=_tempx;
219523     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL58_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL58_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219524     %macro varDept(fcmpdata=,id=);
219525     %global nobs&id scoreFlag&id;
219526     %let scoreFlag&id = 0;
219527     %if &id=1 or ^&fcmpStart %then %do;
219528     proc sort data=&fcmpdata out=_temp&id nodupkey;
219529     by NAME;
219530     where id=&id and LHS in( %let j=1;
219531     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
219532     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
219533     "&var" %let j = %eval(&j+1);
219534     %end;
219535     );
219536     run;
219537     %let dsid = %sysfunc(open(_temp&id));
219538     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219539     %let dsid = %sysfunc(close(&dsid));
219540     %if &&nobs&id %then %do;
219541     %let scoreFlag&id = 1;
219542     %let fcmpStart = 1;
219543     %end;
219544     %else %let fcmpStart = 0;
219545     %end;
219546     %else %do;
219547     proc sort data=&fcmpdata out=_tempid;
219548     where id=&id;
219549     by LHS;
219550     run;
219551     %let dsid = %sysfunc(open(_tempid));
219552     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219553     %let dsid = %sysfunc(close(&dsid));
219554     %if ^&&nobs&id %then %do;
219555     proc datasets lib=work nolist;
219556     delete _tempid;
219557     run;
219558     quit;
219559     %end;
219560     %else %do;
219561     data _tempAll;
219562     set %let j=%eval(&id-1);
219563     %do x=1 %to &j;
219564     %if &&nobs&x %then %do;
219565     _temp&x %end;
219566     %end;
219567     ;
219568     run;
219569     proc sql;
219570     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
219570   ! work._tempid p2 where p.name=p2.lhs;
219571     quit;
219572     data _temp&id;
219573     set _temp&id;
219574     where LHS ne '' and NAME ne '' and Node ne '';
219575     run;
219576     proc datasets lib=work nolist;
219577     delete _tempAll;
219578     run;
219579     %let dsid = %sysfunc(open(_temp&id));
219580     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219581     %let dsid = %sysfunc(close(&dsid));
219582     %if ^&&nobs&id %then %do;
219583     proc datasets lib=work nolist;
219584     delete _temp&id;
219585     run;
219586     quit;
219587     %end;
219588     %else %do;
219589     %let scoreFlag&id = 1;
219590     data _temp&id;
219591     set _temp&id;
219592     where LHS ne NAME and node ne '';
219593     run;
219594     %let dsid = %sysfunc(open(_temp&id));
219595     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219596     %let dsid = %sysfunc(close(&dsid));
219597     %if ^&&nobs&id %then %do;
219598     proc datasets lib=work nolist;
219599     delete _temp&id;
219600     run;
219601     quit;
219602     %end;
219603     %else %do;
219604     proc sort data=_temp&id nodupkey;
219605     by LHS NAME;
219606     run;
219607     %end;
219608     %end;
219609     %end;
219610     %end;
219611     %mend varDept;
219612     %macro optCode(outdata=fcmpdata);
219613     %global fcmpStart;
219614     %let fcmpStart = 0;
219615     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
219616     %let NumNodes=9;
219617     %do k=1 %to &NumNodes;
219618     %vardept(fcmpdata=&outdata, id=&k);
219619     %end;
219620     %mend optCode;
219621     %optcode(outData=EMWS8.Ensmbl58_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl58_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
219622     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
219623     * Ensmbl58: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Computing metadata for TRAIN data;
219624     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL58_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl58_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl58_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl58_TRAIN out=WORK.M0HVXVEN noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HVXVEN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HVXVEN(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HVXVEN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HVXVEN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M07KDW8B NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07KDW8B;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M07KDW8B;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2N4JOWN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M07KDW8B;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07KDW8B;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M07KDW8B;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M07KDW8B;
MPRINT(EMADVISECOLUMNS):   set WORK.M07KDW8B;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl58";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl58";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl58: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl58";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
219944     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
219945     set EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMINFO;
219946     where DATA='Ensmbl58' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl58' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
219947     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL58_EMINFO.
      WHERE (DATA='Ensmbl58') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219948     data EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMINFO;
219949     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
219950     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
219951     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
219955     run;
219956     data EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMINFO;
219957     set EMWS8.Ensmbl58_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMINFO WORK.MODELTEMP_INFO;
219958     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL58_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219959     proc sort data = EMWS8.Ensmbl58_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl58_EMINFO NOTHREADS;
219960     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
219961     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL58_EMINFO.
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219962     proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
219963     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
219964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219965     proc sort data = EMWS8.Ensmbl58_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl58_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
219966     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
219967     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL58_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219968     data EMWS8.Ensmbl58_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMINFO;
219969     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
219970     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
219971     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL58_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219972     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
219973     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
219974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
219975     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL58_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL58_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0WK9MT9
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl58\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0WK9MT9 new;
MPRINT(EM_DIAGRAM):   run;
219999     data EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMOUTFIT;
220000     set EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMOUTFIT;
220001     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
220002     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
220002   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
220003     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
220004     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL58_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL58_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220005     proc sort data=EMWS8.Ensmbl58_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl58_EMREPORTFIT nothreads;
220006     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
220007     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL58_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL58_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220008     %let _EMwarndup = 0;
220009     %let _EMtargetdup =;
220010     %let _EMASEtargetdup =;
220011     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
220012     set EMWS8.Ensmbl58_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMOUTFIT;
220013     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
220014     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
220015     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
220016     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
220017     end;
MPRINT(EM_DIAGRAM):   end;
220018     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL58_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220019     proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
220020     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220021     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL43_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 51 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220022     proc sort data=EMWS8.Ensmbl58_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl58_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
220023     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220024     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS8.ENSMBL58_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220025     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
220026     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
220027     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220028     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 41 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 51 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220029     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
220030     set EMWS8.Ensmbl58_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_CMeta_TRAIN;
220031     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
220031   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
220032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL58_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220033     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
220034     set EMWS8.Ensmbl58_TRAIN(keep=
220035     F_DepVar
220036     I_DepVar
220037     P_DepVar0
220038     P_DepVar1
220039     R_DepVar0
220040     R_DepVar1
220041     U_DepVar
220042     _WARN_
220043     DepVar
220044     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
220045     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL58_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL46_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL58_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl58_11OFMB8 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58_11OFMB8;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_11OFMB8(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_11OFMB8;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_11OFMB8;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.5977848852 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
224311     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
224312     set EMWS8.Ensmbl58_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_CMeta_TRAIN;
224313     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
224313   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
224314     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL58_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224315     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
224316     set EMWS8.Ensmbl58_VALIDATE(keep=
224317     F_DepVar
224318     I_DepVar
224319     P_DepVar0
224320     P_DepVar1
224321     R_DepVar0
224322     R_DepVar1
224323     U_DepVar
224324     _WARN_
224325     DepVar
224326     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
224327     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL58_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL46_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL58_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl58_12B8K2L nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl58_12B8K2L;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_12B8K2L(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMCLASSIFICATION WORK.Ensmbl58_12B8K2L;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl58_12B8K2L;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.5977848821 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
228602     %let _cn = %sysfunc(getoption(CENTER));
228603     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
228604     proc print data=EMWS8.Ensmbl58_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMREPORTFIT noobs label;
228605     var STAT LABEL TRAIN
228606     VALIDATE
228607     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
228608     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
228609     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
228610     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
228611     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL58_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 65.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
228612     title10;
MPRINT(EM_DIAGRAM):   title10;
228613     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
228614     proc sort data=EMWS8.Ensmbl58_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl58_EMCLASSIFICATION nothreads;
228615     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
228616     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL58_EMCLASSIFICATION has 4 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
228617     %let _cn = %sysfunc(getoption(CENTER));
228618     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
228619     proc print data=EMWS8.Ensmbl58_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMCLASSIFICATION noobs label;
228620     var from into pct_row pct_col count percent
228621     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
228622     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
228623     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
228624     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
228625     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
228626     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
228627     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
228628     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
228629     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
228630     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
228631     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
228632     run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL58_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 66.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
228633     title9;
MPRINT(EM_DIAGRAM):   title9;
228634     title10;
MPRINT(EM_DIAGRAM):   title10;
228635     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
228636     %let _cn = %sysfunc(getoption(CENTER));
228637     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
228638     data EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl58_EMEVENTREPORT;
228639     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
228639   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
228640     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
228640   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
228640   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
228640   ! FALSEEVENT
228641     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
228641   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
228641   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
228642        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
228643     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
228644     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
228645     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
228646     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
228647     set EMWS8.Ensmbl58_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl58_EMEVENTREPORT;
228648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL58_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL58_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
228649     proc print data=EMWS8.Ensmbl58_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMEVENTREPORT noobs label;
228650     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
228651     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
228652     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
228653     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL58_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 67.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
228654     title10;
MPRINT(EM_DIAGRAM):   title10;
228655     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
228656     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
228657     modify Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl58_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
228658     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
228659     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
228659   ! ;
MPRINT(EM_DIAGRAM):   run;
228660     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL58_EMRANK.DATA.
228661     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
228662     %let _cn = %sysfunc(getoption(CENTER));
228663     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
228664     proc print data=EMWS8.Ensmbl58_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMRANK label noobs;
228665     var
228666     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
228667     by
228668     notsorted DATAROLE
228669     notsorted TARGET
228670     notsorted TARGETLABEL
228671     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
228672     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
228673     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
228674     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL58_EMRANK.
NOTE: The PROCEDURE PRINT printed page 68.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
228675     title10;
MPRINT(EM_DIAGRAM):   title10;
228676     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
228677     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
228678     modify Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl58_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
228679     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
228679   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
228680     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
228680   ! ;
MPRINT(EM_DIAGRAM):   run;
228681     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL58_EMSCOREDIST.DATA.
228682     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl58_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
